

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Thu Jun 23 14:46:31 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   131                           	psect	text114,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134                           	dabs	1,0x400,48,_BDT
   135                           	dabs	1,0x500,64,_cdc_data_tx
   136                           	dabs	1,0x438,8,_CtrlTrfData
   137                           	dabs	1,0x430,8,_SetupPkt
   138                           	dabs	1,0x540,64,_cdc_data_rx
   139  0000                     
   140                           	psect	idataBANK0
   141  004271                     __pidataBANK0:
   142                           	opt stack 0
   143                           
   144                           ;initializer for _selectedFont
   145  004271  95                 	db	low _OledFont0
   146  004272  77                 	db	high _OledFont0
   147                           
   148                           ;initializer for _S1
   149  004273  01                 	db	1
   150                           
   151                           ;initializer for _S2
   152  004274  01                 	db	1
   153                           
   154                           ;initializer for _moteState
   155  004275  01                 	db	1
   156                           
   157                           ;initializer for _prevS1
   158  004276  01                 	db	1
   159                           
   160                           ;initializer for _prevS2
   161  004277  01                 	db	1
   162                           
   163                           	psect	mediumconst
   164  00777A                     __pmediumconst:
   165                           	opt stack 0
   166  00777A  00                 	db	0
   167  00777B                     _dpowers:
   168                           	opt stack 0
   169  00777B  0001               	dw	1
   170  00777D  000A               	dw	10
   171  00777F  0064               	dw	100
   172  007781  03E8               	dw	1000
   173  007783  2710               	dw	10000
   174  007785                     __end_of_dpowers:
   175                           	opt stack 0
   176  007785                     _hexpowers:
   177                           	opt stack 0
   178  007785  0001               	dw	1
   179  007787  0010               	dw	16
   180  007789  0100               	dw	256
   181  00778B  1000               	dw	4096
   182  00778D                     __end_of_hexpowers:
   183                           	opt stack 0
   184  00778D                     _USB_SD_Ptr:
   185                           	opt stack 0
   186  00778D  52                 	db	low _sd000
   187  00778E  7B                 	db	high _sd000
   188  00778F  D8                 	db	low _sd001
   189  007790  7A                 	db	high _sd001
   190  007791  0C                 	db	low _sd002
   191  007792  7B                 	db	high _sd002
   192  007793                     __end_of_USB_SD_Ptr:
   193                           	opt stack 0
   194  007793                     _USB_CD_Ptr:
   195                           	opt stack 0
   196  007793  95                 	db	low _configDescriptor1
   197  007794  7A                 	db	high _configDescriptor1
   198  007795                     __end_of_USB_CD_Ptr:
   199                           	opt stack 0
   200  007795                     _OledFont0:
   201                           	opt stack 0
   202  007795  00                 	db	0
   203  007796  00                 	db	0
   204  007797  00                 	db	0
   205  007798  00                 	db	0
   206  007799  00                 	db	0
   207  00779A  00                 	db	0
   208  00779B  00                 	db	0
   209  00779C  00                 	db	0
   210  00779D  00                 	db	0
   211  00779E  00                 	db	0
   212  00779F  00                 	db	0
   213  0077A0  5F                 	db	95
   214  0077A1  00                 	db	0
   215  0077A2  00                 	db	0
   216  0077A3  00                 	db	0
   217  0077A4  00                 	db	0
   218  0077A5  00                 	db	0
   219  0077A6  00                 	db	0
   220  0077A7  03                 	db	3
   221  0077A8  00                 	db	0
   222  0077A9  03                 	db	3
   223  0077AA  00                 	db	0
   224  0077AB  00                 	db	0
   225  0077AC  00                 	db	0
   226  0077AD  64                 	db	100
   227  0077AE  3C                 	db	60
   228  0077AF  26                 	db	38
   229  0077B0  64                 	db	100
   230  0077B1  3C                 	db	60
   231  0077B2  26                 	db	38
   232  0077B3  24                 	db	36
   233  0077B4  00                 	db	0
   234  0077B5  26                 	db	38
   235  0077B6  49                 	db	73
   236  0077B7  49                 	db	73
   237  0077B8  7F                 	db	127
   238  0077B9  49                 	db	73
   239  0077BA  49                 	db	73
   240  0077BB  32                 	db	50
   241  0077BC  00                 	db	0
   242  0077BD  42                 	db	66
   243  0077BE  25                 	db	37
   244  0077BF  12                 	db	18
   245  0077C0  08                 	db	8
   246  0077C1  24                 	db	36
   247  0077C2  52                 	db	82
   248  0077C3  21                 	db	33
   249  0077C4  00                 	db	0
   250  0077C5  20                 	db	32
   251  0077C6  50                 	db	80
   252  0077C7  4E                 	db	78
   253  0077C8  55                 	db	85
   254  0077C9  22                 	db	34
   255  0077CA  58                 	db	88
   256  0077CB  28                 	db	40
   257  0077CC  00                 	db	0
   258  0077CD  00                 	db	0
   259  0077CE  00                 	db	0
   260  0077CF  00                 	db	0
   261  0077D0  03                 	db	3
   262  0077D1  00                 	db	0
   263  0077D2  00                 	db	0
   264  0077D3  00                 	db	0
   265  0077D4  00                 	db	0
   266  0077D5  00                 	db	0
   267  0077D6  00                 	db	0
   268  0077D7  1C                 	db	28
   269  0077D8  22                 	db	34
   270  0077D9  41                 	db	65
   271  0077DA  00                 	db	0
   272  0077DB  00                 	db	0
   273  0077DC  00                 	db	0
   274  0077DD  00                 	db	0
   275  0077DE  00                 	db	0
   276  0077DF  00                 	db	0
   277  0077E0  41                 	db	65
   278  0077E1  22                 	db	34
   279  0077E2  1C                 	db	28
   280  0077E3  00                 	db	0
   281  0077E4  00                 	db	0
   282  0077E5  00                 	db	0
   283  0077E6  15                 	db	21
   284  0077E7  15                 	db	21
   285  0077E8  0E                 	db	14
   286  0077E9  0E                 	db	14
   287  0077EA  15                 	db	21
   288  0077EB  15                 	db	21
   289  0077EC  00                 	db	0
   290  0077ED  00                 	db	0
   291  0077EE  08                 	db	8
   292  0077EF  08                 	db	8
   293  0077F0  3E                 	db	62
   294  0077F1  08                 	db	8
   295  0077F2  08                 	db	8
   296  0077F3  00                 	db	0
   297  0077F4  00                 	db	0
   298  0077F5  00                 	db	0
   299  0077F6  00                 	db	0
   300  0077F7  00                 	db	0
   301  0077F8  50                 	db	80
   302  0077F9  30                 	db	48
   303  0077FA  00                 	db	0
   304  0077FB  00                 	db	0
   305  0077FC  00                 	db	0
   306  0077FD  00                 	db	0
   307  0077FE  08                 	db	8
   308  0077FF  08                 	db	8
   309  007800  08                 	db	8
   310  007801  08                 	db	8
   311  007802  08                 	db	8
   312  007803  00                 	db	0
   313  007804  00                 	db	0
   314  007805  00                 	db	0
   315  007806  00                 	db	0
   316  007807  00                 	db	0
   317  007808  40                 	db	64
   318  007809  00                 	db	0
   319  00780A  00                 	db	0
   320  00780B  00                 	db	0
   321  00780C  00                 	db	0
   322  00780D  40                 	db	64
   323  00780E  20                 	db	32
   324  00780F  10                 	db	16
   325  007810  08                 	db	8
   326  007811  04                 	db	4
   327  007812  02                 	db	2
   328  007813  01                 	db	1
   329  007814  00                 	db	0
   330  007815  00                 	db	0
   331  007816  3E                 	db	62
   332  007817  41                 	db	65
   333  007818  41                 	db	65
   334  007819  41                 	db	65
   335  00781A  3E                 	db	62
   336  00781B  00                 	db	0
   337  00781C  00                 	db	0
   338  00781D  00                 	db	0
   339  00781E  00                 	db	0
   340  00781F  41                 	db	65
   341  007820  7F                 	db	127
   342  007821  40                 	db	64
   343  007822  00                 	db	0
   344  007823  00                 	db	0
   345  007824  00                 	db	0
   346  007825  00                 	db	0
   347  007826  42                 	db	66
   348  007827  61                 	db	97
   349  007828  51                 	db	81
   350  007829  49                 	db	73
   351  00782A  6E                 	db	110
   352  00782B  00                 	db	0
   353  00782C  00                 	db	0
   354  00782D  00                 	db	0
   355  00782E  22                 	db	34
   356  00782F  41                 	db	65
   357  007830  49                 	db	73
   358  007831  49                 	db	73
   359  007832  36                 	db	54
   360  007833  00                 	db	0
   361  007834  00                 	db	0
   362  007835  00                 	db	0
   363  007836  18                 	db	24
   364  007837  14                 	db	20
   365  007838  12                 	db	18
   366  007839  7F                 	db	127
   367  00783A  10                 	db	16
   368  00783B  00                 	db	0
   369  00783C  00                 	db	0
   370  00783D  00                 	db	0
   371  00783E  27                 	db	39
   372  00783F  49                 	db	73
   373  007840  49                 	db	73
   374  007841  49                 	db	73
   375  007842  71                 	db	113
   376  007843  00                 	db	0
   377  007844  00                 	db	0
   378  007845  00                 	db	0
   379  007846  3C                 	db	60
   380  007847  4A                 	db	74
   381  007848  49                 	db	73
   382  007849  48                 	db	72
   383  00784A  70                 	db	112
   384  00784B  00                 	db	0
   385  00784C  00                 	db	0
   386  00784D  00                 	db	0
   387  00784E  43                 	db	67
   388  00784F  21                 	db	33
   389  007850  11                 	db	17
   390  007851  0D                 	db	13
   391  007852  03                 	db	3
   392  007853  00                 	db	0
   393  007854  00                 	db	0
   394  007855  00                 	db	0
   395  007856  36                 	db	54
   396  007857  49                 	db	73
   397  007858  49                 	db	73
   398  007859  49                 	db	73
   399  00785A  36                 	db	54
   400  00785B  00                 	db	0
   401  00785C  00                 	db	0
   402  00785D  00                 	db	0
   403  00785E  06                 	db	6
   404  00785F  09                 	db	9
   405  007860  49                 	db	73
   406  007861  29                 	db	41
   407  007862  1E                 	db	30
   408  007863  00                 	db	0
   409  007864  00                 	db	0
   410  007865  00                 	db	0
   411  007866  00                 	db	0
   412  007867  00                 	db	0
   413  007868  12                 	db	18
   414  007869  00                 	db	0
   415  00786A  00                 	db	0
   416  00786B  00                 	db	0
   417  00786C  00                 	db	0
   418  00786D  00                 	db	0
   419  00786E  00                 	db	0
   420  00786F  00                 	db	0
   421  007870  52                 	db	82
   422  007871  30                 	db	48
   423  007872  00                 	db	0
   424  007873  00                 	db	0
   425  007874  00                 	db	0
   426  007875  00                 	db	0
   427  007876  00                 	db	0
   428  007877  08                 	db	8
   429  007878  14                 	db	20
   430  007879  14                 	db	20
   431  00787A  22                 	db	34
   432  00787B  00                 	db	0
   433  00787C  00                 	db	0
   434  00787D  00                 	db	0
   435  00787E  14                 	db	20
   436  00787F  14                 	db	20
   437  007880  14                 	db	20
   438  007881  14                 	db	20
   439  007882  14                 	db	20
   440  007883  14                 	db	20
   441  007884  00                 	db	0
   442  007885  00                 	db	0
   443  007886  00                 	db	0
   444  007887  22                 	db	34
   445  007888  14                 	db	20
   446  007889  14                 	db	20
   447  00788A  08                 	db	8
   448  00788B  00                 	db	0
   449  00788C  00                 	db	0
   450  00788D  00                 	db	0
   451  00788E  02                 	db	2
   452  00788F  01                 	db	1
   453  007890  59                 	db	89
   454  007891  05                 	db	5
   455  007892  02                 	db	2
   456  007893  00                 	db	0
   457  007894  00                 	db	0
   458  007895  3E                 	db	62
   459  007896  41                 	db	65
   460  007897  5D                 	db	93
   461  007898  55                 	db	85
   462  007899  4D                 	db	77
   463  00789A  51                 	db	81
   464  00789B  2E                 	db	46
   465  00789C  00                 	db	0
   466  00789D  40                 	db	64
   467  00789E  7C                 	db	124
   468  00789F  4A                 	db	74
   469  0078A0  09                 	db	9
   470  0078A1  4A                 	db	74
   471  0078A2  7C                 	db	124
   472  0078A3  40                 	db	64
   473  0078A4  00                 	db	0
   474  0078A5  41                 	db	65
   475  0078A6  7F                 	db	127
   476  0078A7  49                 	db	73
   477  0078A8  49                 	db	73
   478  0078A9  49                 	db	73
   479  0078AA  49                 	db	73
   480  0078AB  36                 	db	54
   481  0078AC  00                 	db	0
   482  0078AD  1C                 	db	28
   483  0078AE  22                 	db	34
   484  0078AF  41                 	db	65
   485  0078B0  41                 	db	65
   486  0078B1  41                 	db	65
   487  0078B2  41                 	db	65
   488  0078B3  22                 	db	34
   489  0078B4  00                 	db	0
   490  0078B5  41                 	db	65
   491  0078B6  7F                 	db	127
   492  0078B7  41                 	db	65
   493  0078B8  41                 	db	65
   494  0078B9  41                 	db	65
   495  0078BA  22                 	db	34
   496  0078BB  1C                 	db	28
   497  0078BC  00                 	db	0
   498  0078BD  41                 	db	65
   499  0078BE  7F                 	db	127
   500  0078BF  49                 	db	73
   501  0078C0  49                 	db	73
   502  0078C1  5D                 	db	93
   503  0078C2  41                 	db	65
   504  0078C3  63                 	db	99
   505  0078C4  00                 	db	0
   506  0078C5  41                 	db	65
   507  0078C6  7F                 	db	127
   508  0078C7  49                 	db	73
   509  0078C8  09                 	db	9
   510  0078C9  1D                 	db	29
   511  0078CA  01                 	db	1
   512  0078CB  03                 	db	3
   513  0078CC  00                 	db	0
   514  0078CD  1C                 	db	28
   515  0078CE  22                 	db	34
   516  0078CF  41                 	db	65
   517  0078D0  49                 	db	73
   518  0078D1  49                 	db	73
   519  0078D2  3A                 	db	58
   520  0078D3  08                 	db	8
   521  0078D4  00                 	db	0
   522  0078D5  41                 	db	65
   523  0078D6  7F                 	db	127
   524  0078D7  08                 	db	8
   525  0078D8  08                 	db	8
   526  0078D9  08                 	db	8
   527  0078DA  7F                 	db	127
   528  0078DB  41                 	db	65
   529  0078DC  00                 	db	0
   530  0078DD  00                 	db	0
   531  0078DE  41                 	db	65
   532  0078DF  41                 	db	65
   533  0078E0  7F                 	db	127
   534  0078E1  41                 	db	65
   535  0078E2  41                 	db	65
   536  0078E3  00                 	db	0
   537  0078E4  00                 	db	0
   538  0078E5  30                 	db	48
   539  0078E6  40                 	db	64
   540  0078E7  41                 	db	65
   541  0078E8  41                 	db	65
   542  0078E9  3F                 	db	63
   543  0078EA  01                 	db	1
   544  0078EB  01                 	db	1
   545  0078EC  00                 	db	0
   546  0078ED  41                 	db	65
   547  0078EE  7F                 	db	127
   548  0078EF  08                 	db	8
   549  0078F0  0C                 	db	12
   550  0078F1  12                 	db	18
   551  0078F2  61                 	db	97
   552  0078F3  41                 	db	65
   553  0078F4  00                 	db	0
   554  0078F5  41                 	db	65
   555  0078F6  7F                 	db	127
   556  0078F7  41                 	db	65
   557  0078F8  40                 	db	64
   558  0078F9  40                 	db	64
   559  0078FA  40                 	db	64
   560  0078FB  60                 	db	96
   561  0078FC  00                 	db	0
   562  0078FD  41                 	db	65
   563  0078FE  7F                 	db	127
   564  0078FF  42                 	db	66
   565  007900  0C                 	db	12
   566  007901  42                 	db	66
   567  007902  7F                 	db	127
   568  007903  41                 	db	65
   569  007904  00                 	db	0
   570  007905  41                 	db	65
   571  007906  7F                 	db	127
   572  007907  42                 	db	66
   573  007908  0C                 	db	12
   574  007909  11                 	db	17
   575  00790A  7F                 	db	127
   576  00790B  01                 	db	1
   577  00790C  00                 	db	0
   578  00790D  1C                 	db	28
   579  00790E  22                 	db	34
   580  00790F  41                 	db	65
   581  007910  41                 	db	65
   582  007911  41                 	db	65
   583  007912  22                 	db	34
   584  007913  1C                 	db	28
   585  007914  00                 	db	0
   586  007915  41                 	db	65
   587  007916  7F                 	db	127
   588  007917  49                 	db	73
   589  007918  09                 	db	9
   590  007919  09                 	db	9
   591  00791A  09                 	db	9
   592  00791B  06                 	db	6
   593  00791C  00                 	db	0
   594  00791D  0C                 	db	12
   595  00791E  12                 	db	18
   596  00791F  21                 	db	33
   597  007920  21                 	db	33
   598  007921  61                 	db	97
   599  007922  52                 	db	82
   600  007923  4C                 	db	76
   601  007924  00                 	db	0
   602  007925  41                 	db	65
   603  007926  7F                 	db	127
   604  007927  09                 	db	9
   605  007928  09                 	db	9
   606  007929  19                 	db	25
   607  00792A  69                 	db	105
   608  00792B  46                 	db	70
   609  00792C  00                 	db	0
   610  00792D  66                 	db	102
   611  00792E  49                 	db	73
   612  00792F  49                 	db	73
   613  007930  49                 	db	73
   614  007931  49                 	db	73
   615  007932  49                 	db	73
   616  007933  33                 	db	51
   617  007934  00                 	db	0
   618  007935  03                 	db	3
   619  007936  01                 	db	1
   620  007937  41                 	db	65
   621  007938  7F                 	db	127
   622  007939  41                 	db	65
   623  00793A  01                 	db	1
   624  00793B  03                 	db	3
   625  00793C  00                 	db	0
   626  00793D  01                 	db	1
   627  00793E  3F                 	db	63
   628  00793F  41                 	db	65
   629  007940  40                 	db	64
   630  007941  41                 	db	65
   631  007942  3F                 	db	63
   632  007943  01                 	db	1
   633  007944  00                 	db	0
   634  007945  01                 	db	1
   635  007946  0F                 	db	15
   636  007947  31                 	db	49
   637  007948  40                 	db	64
   638  007949  31                 	db	49
   639  00794A  0F                 	db	15
   640  00794B  01                 	db	1
   641  00794C  00                 	db	0
   642  00794D  01                 	db	1
   643  00794E  1F                 	db	31
   644  00794F  61                 	db	97
   645  007950  14                 	db	20
   646  007951  61                 	db	97
   647  007952  1F                 	db	31
   648  007953  01                 	db	1
   649  007954  00                 	db	0
   650  007955  41                 	db	65
   651  007956  41                 	db	65
   652  007957  36                 	db	54
   653  007958  08                 	db	8
   654  007959  36                 	db	54
   655  00795A  41                 	db	65
   656  00795B  41                 	db	65
   657  00795C  00                 	db	0
   658  00795D  01                 	db	1
   659  00795E  03                 	db	3
   660  00795F  44                 	db	68
   661  007960  78                 	db	120
   662  007961  44                 	db	68
   663  007962  03                 	db	3
   664  007963  01                 	db	1
   665  007964  00                 	db	0
   666  007965  43                 	db	67
   667  007966  61                 	db	97
   668  007967  51                 	db	81
   669  007968  49                 	db	73
   670  007969  45                 	db	69
   671  00796A  43                 	db	67
   672  00796B  61                 	db	97
   673  00796C  00                 	db	0
   674  00796D  00                 	db	0
   675  00796E  00                 	db	0
   676  00796F  7F                 	db	127
   677  007970  41                 	db	65
   678  007971  41                 	db	65
   679  007972  00                 	db	0
   680  007973  00                 	db	0
   681  007974  00                 	db	0
   682  007975  01                 	db	1
   683  007976  02                 	db	2
   684  007977  04                 	db	4
   685  007978  08                 	db	8
   686  007979  10                 	db	16
   687  00797A  20                 	db	32
   688  00797B  40                 	db	64
   689  00797C  00                 	db	0
   690  00797D  00                 	db	0
   691  00797E  00                 	db	0
   692  00797F  41                 	db	65
   693  007980  41                 	db	65
   694  007981  7F                 	db	127
   695  007982  00                 	db	0
   696  007983  00                 	db	0
   697  007984  00                 	db	0
   698  007985  00                 	db	0
   699  007986  04                 	db	4
   700  007987  02                 	db	2
   701  007988  01                 	db	1
   702  007989  01                 	db	1
   703  00798A  02                 	db	2
   704  00798B  04                 	db	4
   705  00798C  00                 	db	0
   706  00798D  00                 	db	0
   707  00798E  40                 	db	64
   708  00798F  40                 	db	64
   709  007990  40                 	db	64
   710  007991  40                 	db	64
   711  007992  40                 	db	64
   712  007993  40                 	db	64
   713  007994  00                 	db	0
   714  007995  00                 	db	0
   715  007996  01                 	db	1
   716  007997  02                 	db	2
   717  007998  00                 	db	0
   718  007999  00                 	db	0
   719  00799A  00                 	db	0
   720  00799B  00                 	db	0
   721  00799C  00                 	db	0
   722  00799D  00                 	db	0
   723  00799E  34                 	db	52
   724  00799F  4A                 	db	74
   725  0079A0  4A                 	db	74
   726  0079A1  4A                 	db	74
   727  0079A2  3C                 	db	60
   728  0079A3  40                 	db	64
   729  0079A4  00                 	db	0
   730  0079A5  00                 	db	0
   731  0079A6  41                 	db	65
   732  0079A7  3F                 	db	63
   733  0079A8  48                 	db	72
   734  0079A9  48                 	db	72
   735  0079AA  48                 	db	72
   736  0079AB  30                 	db	48
   737  0079AC  00                 	db	0
   738  0079AD  00                 	db	0
   739  0079AE  3C                 	db	60
   740  0079AF  42                 	db	66
   741  0079B0  42                 	db	66
   742  0079B1  42                 	db	66
   743  0079B2  24                 	db	36
   744  0079B3  00                 	db	0
   745  0079B4  00                 	db	0
   746  0079B5  00                 	db	0
   747  0079B6  30                 	db	48
   748  0079B7  48                 	db	72
   749  0079B8  48                 	db	72
   750  0079B9  49                 	db	73
   751  0079BA  3F                 	db	63
   752  0079BB  40                 	db	64
   753  0079BC  00                 	db	0
   754  0079BD  00                 	db	0
   755  0079BE  3C                 	db	60
   756  0079BF  4A                 	db	74
   757  0079C0  4A                 	db	74
   758  0079C1  4A                 	db	74
   759  0079C2  2C                 	db	44
   760  0079C3  00                 	db	0
   761  0079C4  00                 	db	0
   762  0079C5  00                 	db	0
   763  0079C6  00                 	db	0
   764  0079C7  48                 	db	72
   765  0079C8  7E                 	db	126
   766  0079C9  49                 	db	73
   767  0079CA  09                 	db	9
   768  0079CB  00                 	db	0
   769  0079CC  00                 	db	0
   770  0079CD  00                 	db	0
   771  0079CE  26                 	db	38
   772  0079CF  49                 	db	73
   773  0079D0  49                 	db	73
   774  0079D1  49                 	db	73
   775  0079D2  3F                 	db	63
   776  0079D3  01                 	db	1
   777  0079D4  00                 	db	0
   778  0079D5  41                 	db	65
   779  0079D6  7F                 	db	127
   780  0079D7  48                 	db	72
   781  0079D8  04                 	db	4
   782  0079D9  44                 	db	68
   783  0079DA  78                 	db	120
   784  0079DB  40                 	db	64
   785  0079DC  00                 	db	0
   786  0079DD  00                 	db	0
   787  0079DE  00                 	db	0
   788  0079DF  44                 	db	68
   789  0079E0  7D                 	db	125
   790  0079E1  40                 	db	64
   791  0079E2  00                 	db	0
   792  0079E3  00                 	db	0
   793  0079E4  00                 	db	0
   794  0079E5  00                 	db	0
   795  0079E6  00                 	db	0
   796  0079E7  40                 	db	64
   797  0079E8  44                 	db	68
   798  0079E9  3D                 	db	61
   799  0079EA  00                 	db	0
   800  0079EB  00                 	db	0
   801  0079EC  00                 	db	0
   802  0079ED  41                 	db	65
   803  0079EE  7F                 	db	127
   804  0079EF  10                 	db	16
   805  0079F0  18                 	db	24
   806  0079F1  24                 	db	36
   807  0079F2  42                 	db	66
   808  0079F3  42                 	db	66
   809  0079F4  00                 	db	0
   810  0079F5  00                 	db	0
   811  0079F6  40                 	db	64
   812  0079F7  41                 	db	65
   813  0079F8  7F                 	db	127
   814  0079F9  40                 	db	64
   815  0079FA  40                 	db	64
   816  0079FB  00                 	db	0
   817  0079FC  00                 	db	0
   818  0079FD  42                 	db	66
   819  0079FE  7E                 	db	126
   820  0079FF  02                 	db	2
   821  007A00  7C                 	db	124
   822  007A01  02                 	db	2
   823  007A02  7E                 	db	126
   824  007A03  40                 	db	64
   825  007A04  00                 	db	0
   826  007A05  42                 	db	66
   827  007A06  7E                 	db	126
   828  007A07  44                 	db	68
   829  007A08  02                 	db	2
   830  007A09  42                 	db	66
   831  007A0A  7C                 	db	124
   832  007A0B  40                 	db	64
   833  007A0C  00                 	db	0
   834  007A0D  00                 	db	0
   835  007A0E  3C                 	db	60
   836  007A0F  42                 	db	66
   837  007A10  42                 	db	66
   838  007A11  42                 	db	66
   839  007A12  3C                 	db	60
   840  007A13  00                 	db	0
   841  007A14  00                 	db	0
   842  007A15  00                 	db	0
   843  007A16  41                 	db	65
   844  007A17  7F                 	db	127
   845  007A18  49                 	db	73
   846  007A19  09                 	db	9
   847  007A1A  09                 	db	9
   848  007A1B  06                 	db	6
   849  007A1C  00                 	db	0
   850  007A1D  00                 	db	0
   851  007A1E  06                 	db	6
   852  007A1F  09                 	db	9
   853  007A20  09                 	db	9
   854  007A21  49                 	db	73
   855  007A22  7F                 	db	127
   856  007A23  41                 	db	65
   857  007A24  00                 	db	0
   858  007A25  00                 	db	0
   859  007A26  42                 	db	66
   860  007A27  7E                 	db	126
   861  007A28  44                 	db	68
   862  007A29  02                 	db	2
   863  007A2A  02                 	db	2
   864  007A2B  04                 	db	4
   865  007A2C  00                 	db	0
   866  007A2D  00                 	db	0
   867  007A2E  64                 	db	100
   868  007A2F  4A                 	db	74
   869  007A30  4A                 	db	74
   870  007A31  4A                 	db	74
   871  007A32  36                 	db	54
   872  007A33  00                 	db	0
   873  007A34  00                 	db	0
   874  007A35  00                 	db	0
   875  007A36  04                 	db	4
   876  007A37  3F                 	db	63
   877  007A38  44                 	db	68
   878  007A39  44                 	db	68
   879  007A3A  20                 	db	32
   880  007A3B  00                 	db	0
   881  007A3C  00                 	db	0
   882  007A3D  00                 	db	0
   883  007A3E  02                 	db	2
   884  007A3F  3E                 	db	62
   885  007A40  40                 	db	64
   886  007A41  40                 	db	64
   887  007A42  22                 	db	34
   888  007A43  7E                 	db	126
   889  007A44  40                 	db	64
   890  007A45  02                 	db	2
   891  007A46  0E                 	db	14
   892  007A47  32                 	db	50
   893  007A48  40                 	db	64
   894  007A49  32                 	db	50
   895  007A4A  0E                 	db	14
   896  007A4B  02                 	db	2
   897  007A4C  00                 	db	0
   898  007A4D  02                 	db	2
   899  007A4E  1E                 	db	30
   900  007A4F  62                 	db	98
   901  007A50  18                 	db	24
   902  007A51  62                 	db	98
   903  007A52  1E                 	db	30
   904  007A53  02                 	db	2
   905  007A54  00                 	db	0
   906  007A55  42                 	db	66
   907  007A56  62                 	db	98
   908  007A57  14                 	db	20
   909  007A58  08                 	db	8
   910  007A59  14                 	db	20
   911  007A5A  62                 	db	98
   912  007A5B  42                 	db	66
   913  007A5C  00                 	db	0
   914  007A5D  01                 	db	1
   915  007A5E  43                 	db	67
   916  007A5F  45                 	db	69
   917  007A60  38                 	db	56
   918  007A61  05                 	db	5
   919  007A62  03                 	db	3
   920  007A63  01                 	db	1
   921  007A64  00                 	db	0
   922  007A65  00                 	db	0
   923  007A66  46                 	db	70
   924  007A67  62                 	db	98
   925  007A68  52                 	db	82
   926  007A69  4A                 	db	74
   927  007A6A  46                 	db	70
   928  007A6B  62                 	db	98
   929  007A6C  00                 	db	0
   930  007A6D  00                 	db	0
   931  007A6E  00                 	db	0
   932  007A6F  08                 	db	8
   933  007A70  36                 	db	54
   934  007A71  41                 	db	65
   935  007A72  00                 	db	0
   936  007A73  00                 	db	0
   937  007A74  00                 	db	0
   938  007A75  00                 	db	0
   939  007A76  00                 	db	0
   940  007A77  00                 	db	0
   941  007A78  7F                 	db	127
   942  007A79  00                 	db	0
   943  007A7A  00                 	db	0
   944  007A7B  00                 	db	0
   945  007A7C  00                 	db	0
   946  007A7D  00                 	db	0
   947  007A7E  00                 	db	0
   948  007A7F  00                 	db	0
   949  007A80  41                 	db	65
   950  007A81  36                 	db	54
   951  007A82  08                 	db	8
   952  007A83  00                 	db	0
   953  007A84  00                 	db	0
   954  007A85  00                 	db	0
   955  007A86  18                 	db	24
   956  007A87  08                 	db	8
   957  007A88  08                 	db	8
   958  007A89  10                 	db	16
   959  007A8A  10                 	db	16
   960  007A8B  18                 	db	24
   961  007A8C  00                 	db	0
   962  007A8D  AA                 	db	170
   963  007A8E  55                 	db	85
   964  007A8F  AA                 	db	170
   965  007A90  55                 	db	85
   966  007A91  AA                 	db	170
   967  007A92  55                 	db	85
   968  007A93  AA                 	db	170
   969  007A94  55                 	db	85
   970  007A95                     __end_of_OledFont0:
   971                           	opt stack 0
   972  007A95                     _configDescriptor1:
   973                           	opt stack 0
   974  007A95  09                 	db	9
   975  007A96  02                 	db	2
   976  007A97  43                 	db	67
   977  007A98  00                 	db	0
   978  007A99  02                 	db	2
   979  007A9A  01                 	db	1
   980  007A9B  00                 	db	0
   981  007A9C  C0                 	db	192
   982  007A9D  32                 	db	50
   983  007A9E  09                 	db	9
   984  007A9F  04                 	db	4
   985  007AA0  00                 	db	0
   986  007AA1  00                 	db	0
   987  007AA2  01                 	db	1
   988  007AA3  02                 	db	2
   989  007AA4  02                 	db	2
   990  007AA5  01                 	db	1
   991  007AA6  00                 	db	0
   992  007AA7  05                 	db	5
   993  007AA8  24                 	db	36
   994  007AA9  00                 	db	0
   995  007AAA  10                 	db	16
   996  007AAB  01                 	db	1
   997  007AAC  04                 	db	4
   998  007AAD  24                 	db	36
   999  007AAE  02                 	db	2
  1000  007AAF  02                 	db	2
  1001  007AB0  05                 	db	5
  1002  007AB1  24                 	db	36
  1003  007AB2  06                 	db	6
  1004  007AB3  00                 	db	0
  1005  007AB4  01                 	db	1
  1006  007AB5  05                 	db	5
  1007  007AB6  24                 	db	36
  1008  007AB7  01                 	db	1
  1009  007AB8  00                 	db	0
  1010  007AB9  01                 	db	1
  1011  007ABA  07                 	db	7
  1012  007ABB  05                 	db	5
  1013  007ABC  81                 	db	129
  1014  007ABD  03                 	db	3
  1015  007ABE  08                 	db	8
  1016  007ABF  00                 	db	0
  1017  007AC0  02                 	db	2
  1018  007AC1  09                 	db	9
  1019  007AC2  04                 	db	4
  1020  007AC3  01                 	db	1
  1021  007AC4  00                 	db	0
  1022  007AC5  02                 	db	2
  1023  007AC6  0A                 	db	10
  1024  007AC7  00                 	db	0
  1025  007AC8  00                 	db	0
  1026  007AC9  00                 	db	0
  1027  007ACA  07                 	db	7
  1028  007ACB  05                 	db	5
  1029  007ACC  02                 	db	2
  1030  007ACD  02                 	db	2
  1031  007ACE  40                 	db	64
  1032  007ACF  00                 	db	0
  1033  007AD0  00                 	db	0
  1034  007AD1  07                 	db	7
  1035  007AD2  05                 	db	5
  1036  007AD3  82                 	db	130
  1037  007AD4  02                 	db	2
  1038  007AD5  40                 	db	64
  1039  007AD6  00                 	db	0
  1040  007AD7  00                 	db	0
  1041  007AD8                     __end_of_configDescriptor1:
  1042                           	opt stack 0
  1043  007AD8                     _sd001:
  1044                           	opt stack 0
  1045  007AD8  34                 	db	52
  1046  007AD9  03                 	db	3
  1047  007ADA  004D               	dw	77
  1048  007ADC  0069               	dw	105
  1049  007ADE  0063               	dw	99
  1050  007AE0  0072               	dw	114
  1051  007AE2  006F               	dw	111
  1052  007AE4  0063               	dw	99
  1053  007AE6  0068               	dw	104
  1054  007AE8  0069               	dw	105
  1055  007AEA  0070               	dw	112
  1056  007AEC  0020               	dw	32
  1057  007AEE  0054               	dw	84
  1058  007AF0  0065               	dw	101
  1059  007AF2  0063               	dw	99
  1060  007AF4  0068               	dw	104
  1061  007AF6  006E               	dw	110
  1062  007AF8  006F               	dw	111
  1063  007AFA  006C               	dw	108
  1064  007AFC  006F               	dw	111
  1065  007AFE  0067               	dw	103
  1066  007B00  0079               	dw	121
  1067  007B02  0020               	dw	32
  1068  007B04  0049               	dw	73
  1069  007B06  006E               	dw	110
  1070  007B08  0063               	dw	99
  1071  007B0A  002E               	dw	46
  1072  007B0C                     __end_of_sd001:
  1073                           	opt stack 0
  1074  007B0C                     _sd002:
  1075                           	opt stack 0
  1076  007B0C  34                 	db	52
  1077  007B0D  03                 	db	3
  1078  007B0E  0043               	dw	67
  1079  007B10  0044               	dw	68
  1080  007B12  0043               	dw	67
  1081  007B14  0020               	dw	32
  1082  007B16  0052               	dw	82
  1083  007B18  0053               	dw	83
  1084  007B1A  002D               	dw	45
  1085  007B1C  0032               	dw	50
  1086  007B1E  0033               	dw	51
  1087  007B20  0032               	dw	50
  1088  007B22  0020               	dw	32
  1089  007B24  0045               	dw	69
  1090  007B26  006D               	dw	109
  1091  007B28  0075               	dw	117
  1092  007B2A  006C               	dw	108
  1093  007B2C  0061               	dw	97
  1094  007B2E  0074               	dw	116
  1095  007B30  0069               	dw	105
  1096  007B32  006F               	dw	111
  1097  007B34  006E               	dw	110
  1098  007B36  0020               	dw	32
  1099  007B38  0044               	dw	68
  1100  007B3A  0065               	dw	101
  1101  007B3C  006D               	dw	109
  1102  007B3E  006F               	dw	111
  1103  007B40                     __end_of_sd002:
  1104                           	opt stack 0
  1105  007B40                     _device_dsc:
  1106                           	opt stack 0
  1107  007B40  12                 	db	18
  1108  007B41  01                 	db	1
  1109  007B42  0200               	dw	512
  1110  007B44  02                 	db	2
  1111  007B45  00                 	db	0
  1112  007B46  00                 	db	0
  1113  007B47  08                 	db	8
  1114  007B48  04D8               	dw	1240
  1115  007B4A  000A               	dw	10
  1116  007B4C  0100               	dw	256
  1117  007B4E  01                 	db	1
  1118  007B4F  02                 	db	2
  1119  007B50  00                 	db	0
  1120  007B51  01                 	db	1
  1121  007B52                     __end_of_device_dsc:
  1122                           	opt stack 0
  1123  007B52                     _sd000:
  1124                           	opt stack 0
  1125  007B52  04                 	db	4
  1126  007B53  03                 	db	3
  1127  007B54  0409               	dw	1033
  1128  007B56                     __end_of_sd000:
  1129                           	opt stack 0
  1130  0000                     _ANSELAbits	set	3931
  1131  0000                     _ANSELCbits	set	3933
  1132  0000                     _ACTCON	set	4021
  1133  0000                     _ADCON0	set	4034
  1134  0000                     _ADCON0bits	set	4034
  1135  0000                     _ADCON1	set	4033
  1136  0000                     _ADCON2	set	4032
  1137  0000                     _ADRESH	set	4036
  1138  0000                     _ADRESL	set	4035
  1139  0000                     _BAUDCON	set	4024
  1140  0000                     _CM1CON0	set	3992
  1141  0000                     _CM2CON1bits	set	3994
  1142  0000                     _EEADR	set	4009
  1143  0000                     _EECON1bits	set	4006
  1144  0000                     _EECON2	set	4007
  1145  0000                     _EEDATA	set	4008
  1146  0000                     _INTCONbits	set	4082
  1147  0000                     _IOCCbits	set	3975
  1148  0000                     _IPR3bits	set	4005
  1149  0000                     _LATAbits	set	3977
  1150  0000                     _LATBbits	set	3978
  1151  0000                     _LATCbits	set	3979
  1152  0000                     _OSCCON	set	4051
  1153  0000                     _OSCCON2	set	4050
  1154  0000                     _OSCCON2bits	set	4050
  1155  0000                     _OSCTUNE	set	3995
  1156  0000                     _PIE1bits	set	3997
  1157  0000                     _PIE2bits	set	4000
  1158  0000                     _PIE3bits	set	4003
  1159  0000                     _PIR1bits	set	3998
  1160  0000                     _PIR2bits	set	4001
  1161  0000                     _PIR3bits	set	4004
  1162  0000                     _PORTAbits	set	3968
  1163  0000                     _PORTCbits	set	3970
  1164  0000                     _PR2	set	4027
  1165  0000                     _RCONbits	set	4048
  1166  0000                     _RCREG	set	4014
  1167  0000                     _RCSTA	set	4011
  1168  0000                     _RCSTAbits	set	4011
  1169  0000                     _SPBRG	set	4015
  1170  0000                     _SPBRGH	set	4016
  1171  0000                     _SSP1ADD	set	4040
  1172  0000                     _SSP1CON1	set	4038
  1173  0000                     _SSP1CON1bits	set	4038
  1174  0000                     _SSP1STAT	set	4039
  1175  0000                     _SSP1STATbits	set	4039
  1176  0000                     _SSPBUF	set	4041
  1177  0000                     _T1CON	set	4045
  1178  0000                     _T1CONbits	set	4045
  1179  0000                     _T1GCON	set	4044
  1180  0000                     _T2CON	set	4026
  1181  0000                     _T2CONbits	set	4026
  1182  0000                     _TMR1H	set	4047
  1183  0000                     _TMR1L	set	4046
  1184  0000                     _TMR2	set	4028
  1185  0000                     _TRISAbits	set	3986
  1186  0000                     _TRISBbits	set	3987
  1187  0000                     _TRISCbits	set	3988
  1188  0000                     _TXREG	set	4013
  1189  0000                     _TXSTA	set	4012
  1190  0000                     _TXSTAbits	set	4012
  1191  0000                     _UADDR	set	3939
  1192  0000                     _UCFG	set	3938
  1193  0000                     _UCON	set	3936
  1194  0000                     _UCONbits	set	3936
  1195  0000                     _UEIE	set	3942
  1196  0000                     _UEIR	set	3943
  1197  0000                     _UEP0bits	set	3946
  1198  0000                     _UIE	set	3940
  1199  0000                     _UIEbits	set	3940
  1200  0000                     _UIR	set	3941
  1201  0000                     _UIRbits	set	3941
  1202  0000                     _USTAT	set	3937
  1203  0000                     _VREFCON0	set	3965
  1204  0000                     _UEP0	set	3946
  1205  0000                     _UEP1	set	3947
  1206  0000                     _CKE	set	32318
  1207  0000                     _CKP	set	32308
  1208  0000                     _GIE	set	32663
  1209  0000                     _PEIE	set	32662
  1210  007B56                     STR_38:
  1211  007B56  6D                 	db	109	;'m'
  1212  007B57  61                 	db	97	;'a'
  1213  007B58  63                 	db	99	;'c'
  1214  007B59  20                 	db	32
  1215  007B5A  73                 	db	115	;'s'
  1216  007B5B  65                 	db	101	;'e'
  1217  007B5C  74                 	db	116	;'t'
  1218  007B5D  20                 	db	32
  1219  007B5E  6E                 	db	110	;'n'
  1220  007B5F  77                 	db	119	;'w'
  1221  007B60  6B                 	db	107	;'k'
  1222  007B61  73                 	db	115	;'s'
  1223  007B62  6B                 	db	107	;'k'
  1224  007B63  65                 	db	101	;'e'
  1225  007B64  79                 	db	121	;'y'
  1226  007B65  20                 	db	32
  1227  007B66  32                 	db	50	;'2'
  1228  007B67  42                 	db	66	;'B'
  1229  007B68  37                 	db	55	;'7'
  1230  007B69  45                 	db	69	;'E'
  1231  007B6A  31                 	db	49	;'1'
  1232  007B6B  35                 	db	53	;'5'
  1233  007B6C  31                 	db	49	;'1'
  1234  007B6D  36                 	db	54	;'6'
  1235  007B6E  32                 	db	50	;'2'
  1236  007B6F  38                 	db	56	;'8'
  1237  007B70  41                 	db	65	;'A'
  1238  007B71  45                 	db	69	;'E'
  1239  007B72  44                 	db	68	;'D'
  1240  007B73  32                 	db	50	;'2'
  1241  007B74  41                 	db	65	;'A'
  1242  007B75  36                 	db	54	;'6'
  1243  007B76  41                 	db	65	;'A'
  1244  007B77  42                 	db	66	;'B'
  1245  007B78  46                 	db	70	;'F'
  1246  007B79  37                 	db	55	;'7'
  1247  007B7A  31                 	db	49	;'1'
  1248  007B7B  35                 	db	53	;'5'
  1249  007B7C  38                 	db	56	;'8'
  1250  007B7D  38                 	db	56	;'8'
  1251  007B7E  30                 	db	48	;'0'
  1252  007B7F  39                 	db	57	;'9'
  1253  007B80  43                 	db	67	;'C'
  1254  007B81  46                 	db	70	;'F'
  1255  007B82  34                 	db	52	;'4'
  1256  007B83  46                 	db	70	;'F'
  1257  007B84  33                 	db	51	;'3'
  1258  007B85  43                 	db	67	;'C'
  1259  007B86  00                 	db	0
  1260  007B87                     STR_35:
  1261  007B87  6D                 	db	109	;'m'
  1262  007B88  61                 	db	97	;'a'
  1263  007B89  63                 	db	99	;'c'
  1264  007B8A  20                 	db	32
  1265  007B8B  73                 	db	115	;'s'
  1266  007B8C  65                 	db	101	;'e'
  1267  007B8D  74                 	db	116	;'t'
  1268  007B8E  20                 	db	32
  1269  007B8F  61                 	db	97	;'a'
  1270  007B90  70                 	db	112	;'p'
  1271  007B91  70                 	db	112	;'p'
  1272  007B92  73                 	db	115	;'s'
  1273  007B93  6B                 	db	107	;'k'
  1274  007B94  65                 	db	101	;'e'
  1275  007B95  79                 	db	121	;'y'
  1276  007B96  20                 	db	32
  1277  007B97  32                 	db	50	;'2'
  1278  007B98  42                 	db	66	;'B'
  1279  007B99  37                 	db	55	;'7'
  1280  007B9A  45                 	db	69	;'E'
  1281  007B9B  31                 	db	49	;'1'
  1282  007B9C  35                 	db	53	;'5'
  1283  007B9D  31                 	db	49	;'1'
  1284  007B9E  36                 	db	54	;'6'
  1285  007B9F  32                 	db	50	;'2'
  1286  007BA0  38                 	db	56	;'8'
  1287  007BA1  41                 	db	65	;'A'
  1288  007BA2  45                 	db	69	;'E'
  1289  007BA3  44                 	db	68	;'D'
  1290  007BA4  32                 	db	50	;'2'
  1291  007BA5  41                 	db	65	;'A'
  1292  007BA6  36                 	db	54	;'6'
  1293  007BA7  41                 	db	65	;'A'
  1294  007BA8  42                 	db	66	;'B'
  1295  007BA9  46                 	db	70	;'F'
  1296  007BAA  37                 	db	55	;'7'
  1297  007BAB  31                 	db	49	;'1'
  1298  007BAC  35                 	db	53	;'5'
  1299  007BAD  38                 	db	56	;'8'
  1300  007BAE  38                 	db	56	;'8'
  1301  007BAF  30                 	db	48	;'0'
  1302  007BB0  39                 	db	57	;'9'
  1303  007BB1  43                 	db	67	;'C'
  1304  007BB2  46                 	db	70	;'F'
  1305  007BB3  34                 	db	52	;'4'
  1306  007BB4  46                 	db	70	;'F'
  1307  007BB5  33                 	db	51	;'3'
  1308  007BB6  43                 	db	67	;'C'
  1309  007BB7  00                 	db	0
  1310  007BB8                     STR_107:
  1311  007BB8  73                 	db	115	;'s'
  1312  007BB9  79                 	db	121	;'y'
  1313  007BBA  73                 	db	115	;'s'
  1314  007BBB  20                 	db	32
  1315  007BBC  73                 	db	115	;'s'
  1316  007BBD  65                 	db	101	;'e'
  1317  007BBE  74                 	db	116	;'t'
  1318  007BBF  20                 	db	32
  1319  007BC0  70                 	db	112	;'p'
  1320  007BC1  69                 	db	105	;'i'
  1321  007BC2  6E                 	db	110	;'n'
  1322  007BC3  64                 	db	100	;'d'
  1323  007BC4  69                 	db	105	;'i'
  1324  007BC5  67                 	db	103	;'g'
  1325  007BC6  20                 	db	32
  1326  007BC7  47                 	db	71	;'G'
  1327  007BC8  50                 	db	80	;'P'
  1328  007BC9  49                 	db	73	;'I'
  1329  007BCA  4F                 	db	79	;'O'
  1330  007BCB  31                 	db	49	;'1'
  1331  007BCC  30                 	db	48	;'0'
  1332  007BCD  20                 	db	32
  1333  007BCE  30                 	db	48	;'0'
  1334  007BCF  0D                 	db	13
  1335  007BD0  0A                 	db	10
  1336  007BD1  00                 	db	0
  1337  007BD2  73                 	db	115	;'s'
  1338  007BD3  79                 	db	121	;'y'
  1339  007BD4  73                 	db	115	;'s'
  1340  007BD5  20                 	db	32
  1341  007BD6  73                 	db	115	;'s'
  1342  007BD7  65                 	db	101	;'e'
  1343  007BD8  74                 	db	116	;'t'
  1344  007BD9  20                 	db	32
  1345  007BDA  70                 	db	112	;'p'
  1346  007BDB  69                 	db	105	;'i'
  1347  007BDC  6E                 	db	110	;'n'
  1348  007BDD  64                 	db	100	;'d'
  1349  007BDE  69                 	db	105	;'i'
  1350  007BDF  67                 	db	103	;'g'
  1351  007BE0  20                 	db	32
  1352  007BE1  47                 	db	71	;'G'
  1353  007BE2  50                 	db	80	;'P'
  1354  007BE3  49                 	db	73	;'I'
  1355  007BE4  4F                 	db	79	;'O'
  1356  007BE5  31                 	db	49	;'1'
  1357  007BE6  31                 	db	49	;'1'
  1358  007BE7  20                 	db	32
  1359  007BE8  30                 	db	48	;'0'
  1360  007BE9  0D                 	db	13
  1361  007BEA  0A                 	db	10
  1362  007BEB  00                 	db	0
  1363  007BEC  73                 	db	115	;'s'
  1364  007BED  79                 	db	121	;'y'
  1365  007BEE  73                 	db	115	;'s'
  1366  007BEF  20                 	db	32
  1367  007BF0  73                 	db	115	;'s'
  1368  007BF1  65                 	db	101	;'e'
  1369  007BF2  74                 	db	116	;'t'
  1370  007BF3  20                 	db	32
  1371  007BF4  70                 	db	112	;'p'
  1372  007BF5  69                 	db	105	;'i'
  1373  007BF6  6E                 	db	110	;'n'
  1374  007BF7  64                 	db	100	;'d'
  1375  007BF8  69                 	db	105	;'i'
  1376  007BF9  67                 	db	103	;'g'
  1377  007BFA  20                 	db	32
  1378  007BFB  47                 	db	71	;'G'
  1379  007BFC  50                 	db	80	;'P'
  1380  007BFD  49                 	db	73	;'I'
  1381  007BFE  4F                 	db	79	;'O'
  1382  007BFF  31                 	db	49	;'1'
  1383  007C00  30                 	db	48	;'0'
  1384  007C01  20                 	db	32
  1385  007C02  31                 	db	49	;'1'
  1386  007C03  0D                 	db	13
  1387  007C04  0A                 	db	10
  1388  007C05  00                 	db	0
  1389  007C06  73                 	db	115	;'s'
  1390  007C07  79                 	db	121	;'y'
  1391  007C08  73                 	db	115	;'s'
  1392  007C09  20                 	db	32
  1393  007C0A  73                 	db	115	;'s'
  1394  007C0B  65                 	db	101	;'e'
  1395  007C0C  74                 	db	116	;'t'
  1396  007C0D  20                 	db	32
  1397  007C0E  70                 	db	112	;'p'
  1398  007C0F  69                 	db	105	;'i'
  1399  007C10  6E                 	db	110	;'n'
  1400  007C11  64                 	db	100	;'d'
  1401  007C12  69                 	db	105	;'i'
  1402  007C13  67                 	db	103	;'g'
  1403  007C14  20                 	db	32
  1404  007C15  47                 	db	71	;'G'
  1405  007C16  50                 	db	80	;'P'
  1406  007C17  49                 	db	73	;'I'
  1407  007C18  4F                 	db	79	;'O'
  1408  007C19  31                 	db	49	;'1'
  1409  007C1A  31                 	db	49	;'1'
  1410  007C1B  20                 	db	32
  1411  007C1C  31                 	db	49	;'1'
  1412  007C1D  0D                 	db	13
  1413  007C1E  0A                 	db	10
  1414  007C1F  00                 	db	0
  1415  007C20                     STR_32:
  1416  007C20  6D                 	db	109	;'m'
  1417  007C21  61                 	db	97	;'a'
  1418  007C22  63                 	db	99	;'c'
  1419  007C23  20                 	db	32
  1420  007C24  73                 	db	115	;'s'
  1421  007C25  65                 	db	101	;'e'
  1422  007C26  74                 	db	116	;'t'
  1423  007C27  20                 	db	32
  1424  007C28  64                 	db	100	;'d'
  1425  007C29  65                 	db	101	;'e'
  1426  007C2A  76                 	db	118	;'v'
  1427  007C2B  61                 	db	97	;'a'
  1428  007C2C  64                 	db	100	;'d'
  1429  007C2D  64                 	db	100	;'d'
  1430  007C2E  72                 	db	114	;'r'
  1431  007C2F  20                 	db	32
  1432  007C30  44                 	db	68	;'D'
  1433  007C31  45                 	db	69	;'E'
  1434  007C32  41                 	db	65	;'A'
  1435  007C33  44                 	db	68	;'D'
  1436  007C34  30                 	db	48	;'0'
  1437  007C35  30                 	db	48	;'0'
  1438  007C36  41                 	db	65	;'A'
  1439  007C37  31                 	db	49	;'1'
  1440  007C38  00                 	db	0
  1441  007C39                     STR_60:
  1442  007C39  6D                 	db	109	;'m'
  1443  007C3A  61                 	db	97	;'a'
  1444  007C3B  63                 	db	99	;'c'
  1445  007C3C  20                 	db	32
  1446  007C3D  74                 	db	116	;'t'
  1447  007C3E  78                 	db	120	;'x'
  1448  007C3F  20                 	db	32
  1449  007C40  75                 	db	117	;'u'
  1450  007C41  6E                 	db	110	;'n'
  1451  007C42  63                 	db	99	;'c'
  1452  007C43  6E                 	db	110	;'n'
  1453  007C44  66                 	db	102	;'f'
  1454  007C45  20                 	db	32
  1455  007C46  31                 	db	49	;'1'
  1456  007C47  20                 	db	32
  1457  007C48  30                 	db	48	;'0'
  1458  007C49  30                 	db	48	;'0'
  1459  007C4A  30                 	db	48	;'0'
  1460  007C4B  30                 	db	48	;'0'
  1461  007C4C  30                 	db	48	;'0'
  1462  007C4D  30                 	db	48	;'0'
  1463  007C4E  30                 	db	48	;'0'
  1464  007C4F  30                 	db	48	;'0'
  1465  007C50  00                 	db	0
  1466  007C51                     STR_47:
  1467  007C51  6D                 	db	109	;'m'
  1468  007C52  61                 	db	97	;'a'
  1469  007C53  63                 	db	99	;'c'
  1470  007C54  20                 	db	32
  1471  007C55  73                 	db	115	;'s'
  1472  007C56  65                 	db	101	;'e'
  1473  007C57  74                 	db	116	;'t'
  1474  007C58  20                 	db	32
  1475  007C59  72                 	db	114	;'r'
  1476  007C5A  78                 	db	120	;'x'
  1477  007C5B  32                 	db	50	;'2'
  1478  007C5C  20                 	db	32
  1479  007C5D  38                 	db	56	;'8'
  1480  007C5E  20                 	db	32
  1481  007C5F  39                 	db	57	;'9'
  1482  007C60  32                 	db	50	;'2'
  1483  007C61  33                 	db	51	;'3'
  1484  007C62  33                 	db	51	;'3'
  1485  007C63  30                 	db	48	;'0'
  1486  007C64  30                 	db	48	;'0'
  1487  007C65  30                 	db	48	;'0'
  1488  007C66  30                 	db	48	;'0'
  1489  007C67  30                 	db	48	;'0'
  1490  007C68  00                 	db	0
  1491  007C69                     STR_81:
  1492  007C69  6D                 	db	109	;'m'
  1493  007C6A  61                 	db	97	;'a'
  1494  007C6B  63                 	db	99	;'c'
  1495  007C6C  20                 	db	32
  1496  007C6D  74                 	db	116	;'t'
  1497  007C6E  78                 	db	120	;'x'
  1498  007C6F  20                 	db	32
  1499  007C70  75                 	db	117	;'u'
  1500  007C71  6E                 	db	110	;'n'
  1501  007C72  63                 	db	99	;'c'
  1502  007C73  6E                 	db	110	;'n'
  1503  007C74  66                 	db	102	;'f'
  1504  007C75  20                 	db	32
  1505  007C76  31                 	db	49	;'1'
  1506  007C77  20                 	db	32
  1507  007C78  25                 	db	37
  1508  007C79  30                 	db	48	;'0'
  1509  007C7A  34                 	db	52	;'4'
  1510  007C7B  58                 	db	88	;'X'
  1511  007C7C  25                 	db	37
  1512  007C7D  30                 	db	48	;'0'
  1513  007C7E  34                 	db	52	;'4'
  1514  007C7F  58                 	db	88	;'X'
  1515  007C80  00                 	db	0
  1516  007C81                     STR_50:
  1517  007C81  6D                 	db	109	;'m'
  1518  007C82  61                 	db	97	;'a'
  1519  007C83  63                 	db	99	;'c'
  1520  007C84  20                 	db	32
  1521  007C85  73                 	db	115	;'s'
  1522  007C86  65                 	db	101	;'e'
  1523  007C87  74                 	db	116	;'t'
  1524  007C88  20                 	db	32
  1525  007C89  63                 	db	99	;'c'
  1526  007C8A  68                 	db	104	;'h'
  1527  007C8B  20                 	db	32
  1528  007C8C  73                 	db	115	;'s'
  1529  007C8D  74                 	db	116	;'t'
  1530  007C8E  61                 	db	97	;'a'
  1531  007C8F  74                 	db	116	;'t'
  1532  007C90  75                 	db	117	;'u'
  1533  007C91  73                 	db	115	;'s'
  1534  007C92  20                 	db	32
  1535  007C93  25                 	db	37
  1536  007C94  64                 	db	100	;'d'
  1537  007C95  20                 	db	32
  1538  007C96  25                 	db	37
  1539  007C97  73                 	db	115	;'s'
  1540  007C98  00                 	db	0
  1541  007C99                     STR_22:
  1542  007C99  73                 	db	115	;'s'
  1543  007C9A  79                 	db	121	;'y'
  1544  007C9B  73                 	db	115	;'s'
  1545  007C9C  20                 	db	32
  1546  007C9D  73                 	db	115	;'s'
  1547  007C9E  6C                 	db	108	;'l'
  1548  007C9F  65                 	db	101	;'e'
  1549  007CA0  65                 	db	101	;'e'
  1550  007CA1  70                 	db	112	;'p'
  1551  007CA2  20                 	db	32
  1552  007CA3  39                 	db	57	;'9'
  1553  007CA4  39                 	db	57	;'9'
  1554  007CA5  39                 	db	57	;'9'
  1555  007CA6  39                 	db	57	;'9'
  1556  007CA7  39                 	db	57	;'9'
  1557  007CA8  39                 	db	57	;'9'
  1558  007CA9  39                 	db	57	;'9'
  1559  007CAA  39                 	db	57	;'9'
  1560  007CAB  39                 	db	57	;'9'
  1561  007CAC  00                 	db	0
  1562  007CAD                     STR_113:
  1563  007CAD  30                 	db	48	;'0'
  1564  007CAE  31                 	db	49	;'1'
  1565  007CAF  32                 	db	50	;'2'
  1566  007CB0  33                 	db	51	;'3'
  1567  007CB1  34                 	db	52	;'4'
  1568  007CB2  35                 	db	53	;'5'
  1569  007CB3  36                 	db	54	;'6'
  1570  007CB4  37                 	db	55	;'7'
  1571  007CB5  38                 	db	56	;'8'
  1572  007CB6  39                 	db	57	;'9'
  1573  007CB7  41                 	db	65	;'A'
  1574  007CB8  42                 	db	66	;'B'
  1575  007CB9  43                 	db	67	;'C'
  1576  007CBA  44                 	db	68	;'D'
  1577  007CBB  45                 	db	69	;'E'
  1578  007CBC  46                 	db	70	;'F'
  1579  007CBD  00                 	db	0
  1580  007CBE                     STR_28:
  1581  007CBE  20                 	db	32
  1582  007CBF  28                 	db	40
  1583  007CC0  53                 	db	83	;'S'
  1584  007CC1  31                 	db	49	;'1'
  1585  007CC2  29                 	db	41
  1586  007CC3  20                 	db	32
  1587  007CC4  20                 	db	32
  1588  007CC5  20                 	db	32
  1589  007CC6  20                 	db	32
  1590  007CC7  20                 	db	32
  1591  007CC8  20                 	db	32
  1592  007CC9  28                 	db	40
  1593  007CCA  53                 	db	83	;'S'
  1594  007CCB  32                 	db	50	;'2'
  1595  007CCC  29                 	db	41
  1596  007CCD  20                 	db	32
  1597  007CCE  00                 	db	0
  1598  007CCF                     STR_58:
  1599  007CCF  57                 	db	87	;'W'
  1600  007CD0  61                 	db	97	;'a'
  1601  007CD1  69                 	db	105	;'i'
  1602  007CD2  74                 	db	116	;'t'
  1603  007CD3  20                 	db	32
  1604  007CD4  61                 	db	97	;'a'
  1605  007CD5  63                 	db	99	;'c'
  1606  007CD6  63                 	db	99	;'c'
  1607  007CD7  65                 	db	101	;'e'
  1608  007CD8  70                 	db	112	;'p'
  1609  007CD9  74                 	db	116	;'t'
  1610  007CDA  65                 	db	101	;'e'
  1611  007CDB  64                 	db	100	;'d'
  1612  007CDC  2E                 	db	46
  1613  007CDD  2E                 	db	46
  1614  007CDE  2E                 	db	46
  1615  007CDF  00                 	db	0
  1616  007CE0                     STR_25:
  1617  007CE0  52                 	db	82	;'R'
  1618  007CE1  65                 	db	101	;'e'
  1619  007CE2  52                 	db	82	;'R'
  1620  007CE3  75                 	db	117	;'u'
  1621  007CE4  6E                 	db	110	;'n'
  1622  007CE5  20                 	db	32
  1623  007CE6  50                 	db	80	;'P'
  1624  007CE7  77                 	db	119	;'w'
  1625  007CE8  72                 	db	114	;'r'
  1626  007CE9  54                 	db	84	;'T'
  1627  007CEA  73                 	db	115	;'s'
  1628  007CEB  74                 	db	116	;'t'
  1629  007CEC  3C                 	db	60	;'<'
  1630  007CED  53                 	db	83	;'S'
  1631  007CEE  32                 	db	50	;'2'
  1632  007CEF  3E                 	db	62	;'>'
  1633  007CF0  00                 	db	0
  1634  007CF1                     STR_87:
  1635  007CF1  49                 	db	73	;'I'
  1636  007CF2  73                 	db	115	;'s'
  1637  007CF3  73                 	db	115	;'s'
  1638  007CF4  75                 	db	117	;'u'
  1639  007CF5  65                 	db	101	;'e'
  1640  007CF6  20                 	db	32
  1641  007CF7  50                 	db	80	;'P'
  1642  007CF8  65                 	db	101	;'e'
  1643  007CF9  72                 	db	114	;'r'
  1644  007CFA  6F                 	db	111	;'o'
  1645  007CFB  64                 	db	100	;'d'
  1646  007CFC  69                 	db	105	;'i'
  1647  007CFD  63                 	db	99	;'c'
  1648  007CFE  20                 	db	32
  1649  007CFF  54                 	db	84	;'T'
  1650  007D00  58                 	db	88	;'X'
  1651  007D01  00                 	db	0
  1652  007D02                     STR_62:
  1653  007D02  6D                 	db	109	;'m'
  1654  007D03  6F                 	db	111	;'o'
  1655  007D04  74                 	db	116	;'t'
  1656  007D05  65                 	db	101	;'e'
  1657  007D06  57                 	db	87	;'W'
  1658  007D07  61                 	db	97	;'a'
  1659  007D08  69                 	db	105	;'i'
  1660  007D09  74                 	db	116	;'t'
  1661  007D0A  41                 	db	65	;'A'
  1662  007D0B  63                 	db	99	;'c'
  1663  007D0C  63                 	db	99	;'c'
  1664  007D0D  65                 	db	101	;'e'
  1665  007D0E  70                 	db	112	;'p'
  1666  007D0F  74                 	db	116	;'t'
  1667  007D10  65                 	db	101	;'e'
  1668  007D11  64                 	db	100	;'d'
  1669  007D12  00                 	db	0
  1670  007D13                     STR_70:
  1671  007D13  53                 	db	83	;'S'
  1672  007D14  32                 	db	50	;'2'
  1673  007D15  20                 	db	32
  1674  007D16  3D                 	db	61	;'='
  1675  007D17  20                 	db	32
  1676  007D18  6D                 	db	109	;'m'
  1677  007D19  61                 	db	97	;'a'
  1678  007D1A  6E                 	db	110	;'n'
  1679  007D1B  75                 	db	117	;'u'
  1680  007D1C  61                 	db	97	;'a'
  1681  007D1D  6C                 	db	108	;'l'
  1682  007D1E  20                 	db	32
  1683  007D1F  73                 	db	115	;'s'
  1684  007D20  65                 	db	101	;'e'
  1685  007D21  6E                 	db	110	;'n'
  1686  007D22  64                 	db	100	;'d'
  1687  007D23  00                 	db	0
  1688  007D24                     STR_69:
  1689  007D24  53                 	db	83	;'S'
  1690  007D25  31                 	db	49	;'1'
  1691  007D26  20                 	db	32
  1692  007D27  3D                 	db	61	;'='
  1693  007D28  20                 	db	32
  1694  007D29  61                 	db	97	;'a'
  1695  007D2A  75                 	db	117	;'u'
  1696  007D2B  74                 	db	116	;'t'
  1697  007D2C  6F                 	db	111	;'o'
  1698  007D2D  20                 	db	32
  1699  007D2E  6F                 	db	111	;'o'
  1700  007D2F  6E                 	db	110	;'n'
  1701  007D30  2F                 	db	47
  1702  007D31  6F                 	db	111	;'o'
  1703  007D32  66                 	db	102	;'f'
  1704  007D33  66                 	db	102	;'f'
  1705  007D34  00                 	db	0
  1706  007D35                     STR_26:
  1707  007D35  4D                 	db	77	;'M'
  1708  007D36  6F                 	db	111	;'o'
  1709  007D37  62                 	db	98	;'b'
  1710  007D38  69                 	db	105	;'i'
  1711  007D39  6C                 	db	108	;'l'
  1712  007D3A  65                 	db	101	;'e'
  1713  007D3B  20                 	db	32
  1714  007D3C  4D                 	db	77	;'M'
  1715  007D3D  6F                 	db	111	;'o'
  1716  007D3E  74                 	db	116	;'t'
  1717  007D3F  65                 	db	101	;'e'
  1718  007D40  20                 	db	32
  1719  007D41  2D                 	db	45
  1720  007D42  41                 	db	65	;'A'
  1721  007D43  70                 	db	112	;'p'
  1722  007D44  70                 	db	112	;'p'
  1723  007D45  00                 	db	0
  1724  007D46                     STR_27:
  1725  007D46  4E                 	db	78	;'N'
  1726  007D47  61                 	db	97	;'a'
  1727  007D48  76                 	db	118	;'v'
  1728  007D49  69                 	db	105	;'i'
  1729  007D4A  67                 	db	103	;'g'
  1730  007D4B  61                 	db	97	;'a'
  1731  007D4C  74                 	db	116	;'t'
  1732  007D4D  65                 	db	101	;'e'
  1733  007D4E  20                 	db	32
  1734  007D4F  20                 	db	32
  1735  007D50  53                 	db	83	;'S'
  1736  007D51  65                 	db	101	;'e'
  1737  007D52  6C                 	db	108	;'l'
  1738  007D53  65                 	db	101	;'e'
  1739  007D54  63                 	db	99	;'c'
  1740  007D55  74                 	db	116	;'t'
  1741  007D56  00                 	db	0
  1742  007D57                     STR_90:
  1743  007D57  28                 	db	40
  1744  007D58  4E                 	db	78	;'N'
  1745  007D59  41                 	db	65	;'A'
  1746  007D5A  56                 	db	86	;'V'
  1747  007D5B  29                 	db	41
  1748  007D5C  20                 	db	32
  1749  007D5D  20                 	db	32
  1750  007D5E  20                 	db	32
  1751  007D5F  20                 	db	32
  1752  007D60  28                 	db	40
  1753  007D61  53                 	db	83	;'S'
  1754  007D62  45                 	db	69	;'E'
  1755  007D63  4C                 	db	76	;'L'
  1756  007D64  29                 	db	41
  1757  007D65  20                 	db	32
  1758  007D66  00                 	db	0
  1759  007D67                     STR_44:
  1760  007D67  6D                 	db	109	;'m'
  1761  007D68  61                 	db	97	;'a'
  1762  007D69  63                 	db	99	;'c'
  1763  007D6A  20                 	db	32
  1764  007D6B  73                 	db	115	;'s'
  1765  007D6C  65                 	db	101	;'e'
  1766  007D6D  74                 	db	116	;'t'
  1767  007D6E  20                 	db	32
  1768  007D6F  73                 	db	115	;'s'
  1769  007D70  79                 	db	121	;'y'
  1770  007D71  6E                 	db	110	;'n'
  1771  007D72  63                 	db	99	;'c'
  1772  007D73  20                 	db	32
  1773  007D74  33                 	db	51	;'3'
  1774  007D75  34                 	db	52	;'4'
  1775  007D76  00                 	db	0
  1776  007D77                     STR_41:
  1777  007D77  6D                 	db	109	;'m'
  1778  007D78  61                 	db	97	;'a'
  1779  007D79  63                 	db	99	;'c'
  1780  007D7A  20                 	db	32
  1781  007D7B  73                 	db	115	;'s'
  1782  007D7C  65                 	db	101	;'e'
  1783  007D7D  74                 	db	116	;'t'
  1784  007D7E  20                 	db	32
  1785  007D7F  61                 	db	97	;'a'
  1786  007D80  64                 	db	100	;'d'
  1787  007D81  72                 	db	114	;'r'
  1788  007D82  20                 	db	32
  1789  007D83  6F                 	db	111	;'o'
  1790  007D84  66                 	db	102	;'f'
  1791  007D85  66                 	db	102	;'f'
  1792  007D86  00                 	db	0
  1793  007D87  42                 	db	66	;'B'
  1794  007D88  75                 	db	117	;'u'
  1795  007D89  69                 	db	105	;'i'
  1796  007D8A  6C                 	db	108	;'l'
  1797  007D8B  64                 	db	100	;'d'
  1798  007D8C  20                 	db	32
  1799  007D8D  44                 	db	68	;'D'
  1800  007D8E  61                 	db	97	;'a'
  1801  007D8F  74                 	db	116	;'t'
  1802  007D90  65                 	db	101	;'e'
  1803  007D91  2F                 	db	47
  1804  007D92  54                 	db	84	;'T'
  1805  007D93  69                 	db	105	;'i'
  1806  007D94  6D                 	db	109	;'m'
  1807  007D95  65                 	db	101	;'e'
  1808  007D96  00                 	db	0
  1809  007D97                     STR_3:
  1810  007D97  20                 	db	32
  1811  007D98  20                 	db	32
  1812  007D99  20                 	db	32
  1813  007D9A  62                 	db	98	;'b'
  1814  007D9B  75                 	db	117	;'u'
  1815  007D9C  69                 	db	105	;'i'
  1816  007D9D  6C                 	db	108	;'l'
  1817  007D9E  64                 	db	100	;'d'
  1818  007D9F  20                 	db	32
  1819  007DA0  30                 	db	48	;'0'
  1820  007DA1  31                 	db	49	;'1'
  1821  007DA2  32                 	db	50	;'2'
  1822  007DA3  20                 	db	32
  1823  007DA4  20                 	db	32
  1824  007DA5  20                 	db	32
  1825  007DA6  00                 	db	0
  1826  007DA7                     STR_64:
  1827  007DA7  77                 	db	119	;'w'
  1828  007DA8  61                 	db	97	;'a'
  1829  007DA9  69                 	db	105	;'i'
  1830  007DAA  74                 	db	116	;'t'
  1831  007DAB  20                 	db	32
  1832  007DAC  6D                 	db	109	;'m'
  1833  007DAD  61                 	db	97	;'a'
  1834  007DAE  63                 	db	99	;'c'
  1835  007DAF  5F                 	db	95	;'_'
  1836  007DB0  74                 	db	116	;'t'
  1837  007DB1  78                 	db	120	;'x'
  1838  007DB2  5F                 	db	95	;'_'
  1839  007DB3  6F                 	db	111	;'o'
  1840  007DB4  6B                 	db	107	;'k'
  1841  007DB5  00                 	db	0
  1842  007DB6                     STR_93:
  1843  007DB6  6D                 	db	109	;'m'
  1844  007DB7  61                 	db	97	;'a'
  1845  007DB8  63                 	db	99	;'c'
  1846  007DB9  20                 	db	32
  1847  007DBA  73                 	db	115	;'s'
  1848  007DBB  65                 	db	101	;'e'
  1849  007DBC  74                 	db	116	;'t'
  1850  007DBD  20                 	db	32
  1851  007DBE  61                 	db	97	;'a'
  1852  007DBF  64                 	db	100	;'d'
  1853  007DC0  72                 	db	114	;'r'
  1854  007DC1  20                 	db	32
  1855  007DC2  6F                 	db	111	;'o'
  1856  007DC3  6E                 	db	110	;'n'
  1857  007DC4  00                 	db	0
  1858  007DC5                     STR_84:
  1859  007DC5  6D                 	db	109	;'m'
  1860  007DC6  61                 	db	97	;'a'
  1861  007DC7  63                 	db	99	;'c'
  1862  007DC8  20                 	db	32
  1863  007DC9  73                 	db	115	;'s'
  1864  007DCA  65                 	db	101	;'e'
  1865  007DCB  74                 	db	116	;'t'
  1866  007DCC  20                 	db	32
  1867  007DCD  64                 	db	100	;'d'
  1868  007DCE  72                 	db	114	;'r'
  1869  007DCF  20                 	db	32
  1870  007DD0  25                 	db	37
  1871  007DD1  64                 	db	100	;'d'
  1872  007DD2  00                 	db	0
  1873  007DD3                     STR_89:
  1874  007DD3  4C                 	db	76	;'L'
  1875  007DD4  3A                 	db	58	;':'
  1876  007DD5  20                 	db	32
  1877  007DD6  20                 	db	32
  1878  007DD7  20                 	db	32
  1879  007DD8  20                 	db	32
  1880  007DD9  20                 	db	32
  1881  007DDA  20                 	db	32
  1882  007DDB  20                 	db	32
  1883  007DDC  54                 	db	84	;'T'
  1884  007DDD  3A                 	db	58	;':'
  1885  007DDE  20                 	db	32
  1886  007DDF  00                 	db	0
  1887  007DE0                     STR_95:
  1888  007DE0  6D                 	db	109	;'m'
  1889  007DE1  61                 	db	97	;'a'
  1890  007DE2  63                 	db	99	;'c'
  1891  007DE3  20                 	db	32
  1892  007DE4  73                 	db	115	;'s'
  1893  007DE5  65                 	db	101	;'e'
  1894  007DE6  74                 	db	116	;'t'
  1895  007DE7  20                 	db	32
  1896  007DE8  64                 	db	100	;'d'
  1897  007DE9  72                 	db	114	;'r'
  1898  007DEA  20                 	db	32
  1899  007DEB  30                 	db	48	;'0'
  1900  007DEC  00                 	db	0
  1901  007DED                     STR_96:
  1902  007DED  6D                 	db	109	;'m'
  1903  007DEE  61                 	db	97	;'a'
  1904  007DEF  63                 	db	99	;'c'
  1905  007DF0  20                 	db	32
  1906  007DF1  73                 	db	115	;'s'
  1907  007DF2  65                 	db	101	;'e'
  1908  007DF3  74                 	db	116	;'t'
  1909  007DF4  20                 	db	32
  1910  007DF5  64                 	db	100	;'d'
  1911  007DF6  72                 	db	114	;'r'
  1912  007DF7  20                 	db	32
  1913  007DF8  31                 	db	49	;'1'
  1914  007DF9  00                 	db	0
  1915  007DFA  6D                 	db	109	;'m'
  1916  007DFB  61                 	db	97	;'a'
  1917  007DFC  63                 	db	99	;'c'
  1918  007DFD  20                 	db	32
  1919  007DFE  73                 	db	115	;'s'
  1920  007DFF  65                 	db	101	;'e'
  1921  007E00  74                 	db	116	;'t'
  1922  007E01  20                 	db	32
  1923  007E02  64                 	db	100	;'d'
  1924  007E03  72                 	db	114	;'r'
  1925  007E04  20                 	db	32
  1926  007E05  32                 	db	50	;'2'
  1927  007E06  00                 	db	0
  1928  007E07  6D                 	db	109	;'m'
  1929  007E08  61                 	db	97	;'a'
  1930  007E09  63                 	db	99	;'c'
  1931  007E0A  20                 	db	32
  1932  007E0B  73                 	db	115	;'s'
  1933  007E0C  65                 	db	101	;'e'
  1934  007E0D  74                 	db	116	;'t'
  1935  007E0E  20                 	db	32
  1936  007E0F  64                 	db	100	;'d'
  1937  007E10  72                 	db	114	;'r'
  1938  007E11  20                 	db	32
  1939  007E12  33                 	db	51	;'3'
  1940  007E13  00                 	db	0
  1941  007E14  6D                 	db	109	;'m'
  1942  007E15  61                 	db	97	;'a'
  1943  007E16  63                 	db	99	;'c'
  1944  007E17  20                 	db	32
  1945  007E18  73                 	db	115	;'s'
  1946  007E19  65                 	db	101	;'e'
  1947  007E1A  74                 	db	116	;'t'
  1948  007E1B  20                 	db	32
  1949  007E1C  64                 	db	100	;'d'
  1950  007E1D  72                 	db	114	;'r'
  1951  007E1E  20                 	db	32
  1952  007E1F  34                 	db	52	;'4'
  1953  007E20  00                 	db	0
  1954  007E21  6D                 	db	109	;'m'
  1955  007E22  61                 	db	97	;'a'
  1956  007E23  63                 	db	99	;'c'
  1957  007E24  20                 	db	32
  1958  007E25  73                 	db	115	;'s'
  1959  007E26  65                 	db	101	;'e'
  1960  007E27  74                 	db	116	;'t'
  1961  007E28  20                 	db	32
  1962  007E29  64                 	db	100	;'d'
  1963  007E2A  72                 	db	114	;'r'
  1964  007E2B  20                 	db	32
  1965  007E2C  35                 	db	53	;'5'
  1966  007E2D  00                 	db	0
  1967  007E2E  6D                 	db	109	;'m'
  1968  007E2F  61                 	db	97	;'a'
  1969  007E30  63                 	db	99	;'c'
  1970  007E31  20                 	db	32
  1971  007E32  73                 	db	115	;'s'
  1972  007E33  65                 	db	101	;'e'
  1973  007E34  74                 	db	116	;'t'
  1974  007E35  20                 	db	32
  1975  007E36  64                 	db	100	;'d'
  1976  007E37  72                 	db	114	;'r'
  1977  007E38  20                 	db	32
  1978  007E39  36                 	db	54	;'6'
  1979  007E3A  00                 	db	0
  1980  007E3B  6D                 	db	109	;'m'
  1981  007E3C  61                 	db	97	;'a'
  1982  007E3D  63                 	db	99	;'c'
  1983  007E3E  20                 	db	32
  1984  007E3F  73                 	db	115	;'s'
  1985  007E40  65                 	db	101	;'e'
  1986  007E41  74                 	db	116	;'t'
  1987  007E42  20                 	db	32
  1988  007E43  64                 	db	100	;'d'
  1989  007E44  72                 	db	114	;'r'
  1990  007E45  20                 	db	32
  1991  007E46  37                 	db	55	;'7'
  1992  007E47  00                 	db	0
  1993  007E48                     STR_55:
  1994  007E48  6D                 	db	109	;'m'
  1995  007E49  61                 	db	97	;'a'
  1996  007E4A  63                 	db	99	;'c'
  1997  007E4B  20                 	db	32
  1998  007E4C  6A                 	db	106	;'j'
  1999  007E4D  6F                 	db	111	;'o'
  2000  007E4E  69                 	db	105	;'i'
  2001  007E4F  6E                 	db	110	;'n'
  2002  007E50  20                 	db	32
  2003  007E51  61                 	db	97	;'a'
  2004  007E52  62                 	db	98	;'b'
  2005  007E53  70                 	db	112	;'p'
  2006  007E54  00                 	db	0
  2007  007E55  42                 	db	66	;'B'
  2008  007E56  75                 	db	117	;'u'
  2009  007E57  74                 	db	116	;'t'
  2010  007E58  74                 	db	116	;'t'
  2011  007E59  6F                 	db	111	;'o'
  2012  007E5A  6E                 	db	110	;'n'
  2013  007E5B  20                 	db	32
  2014  007E5C  54                 	db	84	;'T'
  2015  007E5D  65                 	db	101	;'e'
  2016  007E5E  73                 	db	115	;'s'
  2017  007E5F  74                 	db	116	;'t'
  2018  007E60  3A                 	db	58	;':'
  2019  007E61  00                 	db	0
  2020  007E62  42                 	db	66	;'B'
  2021  007E63  75                 	db	117	;'u'
  2022  007E64  74                 	db	116	;'t'
  2023  007E65  74                 	db	116	;'t'
  2024  007E66  6F                 	db	111	;'o'
  2025  007E67  6E                 	db	110	;'n'
  2026  007E68  31                 	db	49	;'1'
  2027  007E69  20                 	db	32
  2028  007E6A  50                 	db	80	;'P'
  2029  007E6B  41                 	db	65	;'A'
  2030  007E6C  53                 	db	83	;'S'
  2031  007E6D  53                 	db	83	;'S'
  2032  007E6E  00                 	db	0
  2033  007E6F  42                 	db	66	;'B'
  2034  007E70  75                 	db	117	;'u'
  2035  007E71  74                 	db	116	;'t'
  2036  007E72  74                 	db	116	;'t'
  2037  007E73  6F                 	db	111	;'o'
  2038  007E74  6E                 	db	110	;'n'
  2039  007E75  32                 	db	50	;'2'
  2040  007E76  20                 	db	32
  2041  007E77  50                 	db	80	;'P'
  2042  007E78  41                 	db	65	;'A'
  2043  007E79  53                 	db	83	;'S'
  2044  007E7A  53                 	db	83	;'S'
  2045  007E7B  00                 	db	0
  2046  007E7C  50                 	db	80	;'P'
  2047  007E7D  72                 	db	114	;'r'
  2048  007E7E  65                 	db	101	;'e'
  2049  007E7F  73                 	db	115	;'s'
  2050  007E80  73                 	db	115	;'s'
  2051  007E81  20                 	db	32
  2052  007E82  42                 	db	66	;'B'
  2053  007E83  75                 	db	117	;'u'
  2054  007E84  74                 	db	116	;'t'
  2055  007E85  74                 	db	116	;'t'
  2056  007E86  6F                 	db	111	;'o'
  2057  007E87  6E                 	db	110	;'n'
  2058  007E88  00                 	db	0
  2059  007E89                     STR_111:
  2060  007E89  55                 	db	85	;'U'
  2061  007E8A  53                 	db	83	;'S'
  2062  007E8B  42                 	db	66	;'B'
  2063  007E8C  20                 	db	32
  2064  007E8D  48                 	db	72	;'H'
  2065  007E8E  61                 	db	97	;'a'
  2066  007E8F  6E                 	db	110	;'n'
  2067  007E90  64                 	db	100	;'d'
  2068  007E91  6C                 	db	108	;'l'
  2069  007E92  65                 	db	101	;'e'
  2070  007E93  72                 	db	114	;'r'
  2071  007E94  00                 	db	0
  2072  007E95                     STR_88:
  2073  007E95  4F                 	db	79	;'O'
  2074  007E96  6E                 	db	110	;'n'
  2075  007E97  20                 	db	32
  2076  007E98  50                 	db	80	;'P'
  2077  007E99  6F                 	db	111	;'o'
  2078  007E9A  72                 	db	114	;'r'
  2079  007E9B  74                 	db	116	;'t'
  2080  007E9C  20                 	db	32
  2081  007E9D  23                 	db	35
  2082  007E9E  3A                 	db	58	;':'
  2083  007E9F  20                 	db	32
  2084  007EA0  00                 	db	0
  2085  007EA1                     STR_33:
  2086  007EA1  73                 	db	115	;'s'
  2087  007EA2  65                 	db	101	;'e'
  2088  007EA3  74                 	db	116	;'t'
  2089  007EA4  20                 	db	32
  2090  007EA5  64                 	db	100	;'d'
  2091  007EA6  65                 	db	101	;'e'
  2092  007EA7  76                 	db	118	;'v'
  2093  007EA8  61                 	db	97	;'a'
  2094  007EA9  64                 	db	100	;'d'
  2095  007EAA  64                 	db	100	;'d'
  2096  007EAB  72                 	db	114	;'r'
  2097  007EAC  00                 	db	0
  2098  007EAD                     STR_29:
  2099  007EAD  73                 	db	115	;'s'
  2100  007EAE  79                 	db	121	;'y'
  2101  007EAF  73                 	db	115	;'s'
  2102  007EB0  20                 	db	32
  2103  007EB1  67                 	db	103	;'g'
  2104  007EB2  65                 	db	101	;'e'
  2105  007EB3  74                 	db	116	;'t'
  2106  007EB4  20                 	db	32
  2107  007EB5  76                 	db	118	;'v'
  2108  007EB6  65                 	db	101	;'e'
  2109  007EB7  72                 	db	114	;'r'
  2110  007EB8  00                 	db	0
  2111  007EB9                     STR_39:
  2112  007EB9  73                 	db	115	;'s'
  2113  007EBA  65                 	db	101	;'e'
  2114  007EBB  74                 	db	116	;'t'
  2115  007EBC  20                 	db	32
  2116  007EBD  6E                 	db	110	;'n'
  2117  007EBE  77                 	db	119	;'w'
  2118  007EBF  6B                 	db	107	;'k'
  2119  007EC0  73                 	db	115	;'s'
  2120  007EC1  6B                 	db	107	;'k'
  2121  007EC2  65                 	db	101	;'e'
  2122  007EC3  79                 	db	121	;'y'
  2123  007EC4  00                 	db	0
  2124  007EC5                     STR_36:
  2125  007EC5  73                 	db	115	;'s'
  2126  007EC6  65                 	db	101	;'e'
  2127  007EC7  74                 	db	116	;'t'
  2128  007EC8  20                 	db	32
  2129  007EC9  61                 	db	97	;'a'
  2130  007ECA  70                 	db	112	;'p'
  2131  007ECB  70                 	db	112	;'p'
  2132  007ECC  73                 	db	115	;'s'
  2133  007ECD  6B                 	db	107	;'k'
  2134  007ECE  65                 	db	101	;'e'
  2135  007ECF  79                 	db	121	;'y'
  2136  007ED0  00                 	db	0
  2137  007ED1  4A                 	db	74	;'J'
  2138  007ED2  75                 	db	117	;'u'
  2139  007ED3  6E                 	db	110	;'n'
  2140  007ED4  20                 	db	32
  2141  007ED5  32                 	db	50	;'2'
  2142  007ED6  33                 	db	51	;'3'
  2143  007ED7  20                 	db	32
  2144  007ED8  32                 	db	50	;'2'
  2145  007ED9  30                 	db	48	;'0'
  2146  007EDA  31                 	db	49	;'1'
  2147  007EDB  36                 	db	54	;'6'
  2148  007EDC  00                 	db	0
  2149  007EDD  42                 	db	66	;'B'
  2150  007EDE  75                 	db	117	;'u'
  2151  007EDF  74                 	db	116	;'t'
  2152  007EE0  74                 	db	116	;'t'
  2153  007EE1  6F                 	db	111	;'o'
  2154  007EE2  6E                 	db	110	;'n'
  2155  007EE3  20                 	db	32
  2156  007EE4  46                 	db	70	;'F'
  2157  007EE5  41                 	db	65	;'A'
  2158  007EE6  49                 	db	73	;'I'
  2159  007EE7  4C                 	db	76	;'L'
  2160  007EE8  00                 	db	0
  2161  007EE9                     STR_1:
  2162  007EE9  4C                 	db	76	;'L'
  2163  007EEA  6F                 	db	111	;'o'
  2164  007EEB  52                 	db	82	;'R'
  2165  007EEC  61                 	db	97	;'a'
  2166  007EED  20                 	db	32
  2167  007EEE  53                 	db	83	;'S'
  2168  007EEF  69                 	db	105	;'i'
  2169  007EF0  67                 	db	103	;'g'
  2170  007EF1  4D                 	db	77	;'M'
  2171  007EF2  61                 	db	97	;'a'
  2172  007EF3  70                 	db	112	;'p'
  2173  007EF4  00                 	db	0
  2174  007EF5  43                 	db	67	;'C'
  2175  007EF6  6F                 	db	111	;'o'
  2176  007EF7  6D                 	db	109	;'m'
  2177  007EF8  6D                 	db	109	;'m'
  2178  007EF9  20                 	db	32
  2179  007EFA  54                 	db	84	;'T'
  2180  007EFB  65                 	db	101	;'e'
  2181  007EFC  73                 	db	115	;'s'
  2182  007EFD  74                 	db	116	;'t'
  2183  007EFE  3A                 	db	58	;':'
  2184  007EFF  00                 	db	0
  2185  007F00                     STR_92:
  2186  007F00  72                 	db	114	;'r'
  2187  007F01  61                 	db	97	;'a'
  2188  007F02  64                 	db	100	;'d'
  2189  007F03  69                 	db	105	;'i'
  2190  007F04  6F                 	db	111	;'o'
  2191  007F05  20                 	db	32
  2192  007F06  74                 	db	116	;'t'
  2193  007F07  78                 	db	120	;'x'
  2194  007F08  20                 	db	32
  2195  007F09  00                 	db	0
  2196  007F0A                     STR_23:
  2197  007F0A  4D                 	db	77	;'M'
  2198  007F0B  4F                 	db	79	;'O'
  2199  007F0C  54                 	db	84	;'T'
  2200  007F0D  45                 	db	69	;'E'
  2201  007F0E  20                 	db	32
  2202  007F0F  4D                 	db	77	;'M'
  2203  007F10  6F                 	db	111	;'o'
  2204  007F11  64                 	db	100	;'d'
  2205  007F12  65                 	db	101	;'e'
  2206  007F13  00                 	db	0
  2207  007F14                     STR_65:
  2208  007F14  6D                 	db	109	;'m'
  2209  007F15  6F                 	db	111	;'o'
  2210  007F16  74                 	db	116	;'t'
  2211  007F17  65                 	db	101	;'e'
  2212  007F18  49                 	db	73	;'I'
  2213  007F19  6E                 	db	110	;'n'
  2214  007F1A  69                 	db	105	;'i'
  2215  007F1B  54                 	db	84	;'T'
  2216  007F1C  78                 	db	120	;'x'
  2217  007F1D  00                 	db	0
  2218  007F1E  4C                 	db	76	;'L'
  2219  007F1F  45                 	db	69	;'E'
  2220  007F20  44                 	db	68	;'D'
  2221  007F21  20                 	db	32
  2222  007F22  54                 	db	84	;'T'
  2223  007F23  65                 	db	101	;'e'
  2224  007F24  73                 	db	115	;'s'
  2225  007F25  74                 	db	116	;'t'
  2226  007F26  3A                 	db	58	;':'
  2227  007F27  00                 	db	0
  2228  007F28                     STR_2:
  2229  007F28  20                 	db	32
  2230  007F29  44                 	db	68	;'D'
  2231  007F2A  65                 	db	101	;'e'
  2232  007F2B  76                 	db	118	;'v'
  2233  007F2C  3A                 	db	58	;':'
  2234  007F2D  20                 	db	32
  2235  007F2E  41                 	db	65	;'A'
  2236  007F2F  31                 	db	49	;'1'
  2237  007F30  20                 	db	32
  2238  007F31  00                 	db	0
  2239  007F32                     STR_109:
  2240  007F32  43                 	db	67	;'C'
  2241  007F33  44                 	db	68	;'D'
  2242  007F34  43                 	db	67	;'C'
  2243  007F35  20                 	db	32
  2244  007F36  4D                 	db	77	;'M'
  2245  007F37  6F                 	db	111	;'o'
  2246  007F38  64                 	db	100	;'d'
  2247  007F39  65                 	db	101	;'e'
  2248  007F3A  00                 	db	0
  2249  007F3B                     STR_45:
  2250  007F3B  73                 	db	115	;'s'
  2251  007F3C  65                 	db	101	;'e'
  2252  007F3D  74                 	db	116	;'t'
  2253  007F3E  20                 	db	32
  2254  007F3F  73                 	db	115	;'s'
  2255  007F40  79                 	db	121	;'y'
  2256  007F41  6E                 	db	110	;'n'
  2257  007F42  63                 	db	99	;'c'
  2258  007F43  00                 	db	0
  2259  007F44                     STR_59:
  2260  007F44  61                 	db	97	;'a'
  2261  007F45  63                 	db	99	;'c'
  2262  007F46  63                 	db	99	;'c'
  2263  007F47  65                 	db	101	;'e'
  2264  007F48  70                 	db	112	;'p'
  2265  007F49  74                 	db	116	;'t'
  2266  007F4A  65                 	db	101	;'e'
  2267  007F4B  64                 	db	100	;'d'
  2268  007F4C  00                 	db	0
  2269  007F4D  6D                 	db	109	;'m'
  2270  007F4E  61                 	db	97	;'a'
  2271  007F4F  63                 	db	99	;'c'
  2272  007F50  20                 	db	32
  2273  007F51  73                 	db	115	;'s'
  2274  007F52  61                 	db	97	;'a'
  2275  007F53  76                 	db	118	;'v'
  2276  007F54  65                 	db	101	;'e'
  2277  007F55  00                 	db	0
  2278  007F56                     STR_24:
  2279  007F56  53                 	db	83	;'S'
  2280  007F57  74                 	db	116	;'t'
  2281  007F58  61                 	db	97	;'a'
  2282  007F59  72                 	db	114	;'r'
  2283  007F5A  74                 	db	116	;'t'
  2284  007F5B  69                 	db	105	;'i'
  2285  007F5C  6E                 	db	110	;'n'
  2286  007F5D  67                 	db	103	;'g'
  2287  007F5E  00                 	db	0
  2288  007F5F  4D                 	db	77	;'M'
  2289  007F60  6F                 	db	111	;'o'
  2290  007F61  54                 	db	84	;'T'
  2291  007F62  65                 	db	101	;'e'
  2292  007F63  20                 	db	32
  2293  007F64  76                 	db	118	;'v'
  2294  007F65  20                 	db	32
  2295  007F66  2E                 	db	46
  2296  007F67  00                 	db	0
  2297  007F68  31                 	db	49	;'1'
  2298  007F69  34                 	db	52	;'4'
  2299  007F6A  3A                 	db	58	;':'
  2300  007F6B  34                 	db	52	;'4'
  2301  007F6C  36                 	db	54	;'6'
  2302  007F6D  3A                 	db	58	;':'
  2303  007F6E  32                 	db	50	;'2'
  2304  007F6F  36                 	db	54	;'6'
  2305  007F70  00                 	db	0
  2306  007F71  52                 	db	82	;'R'
  2307  007F72  46                 	db	70	;'F'
  2308  007F73  20                 	db	32
  2309  007F74  54                 	db	84	;'T'
  2310  007F75  65                 	db	101	;'e'
  2311  007F76  73                 	db	115	;'s'
  2312  007F77  74                 	db	116	;'t'
  2313  007F78  3A                 	db	58	;':'
  2314  007F79  00                 	db	0
  2315  007F7A  41                 	db	65	;'A'
  2316  007F7B  44                 	db	68	;'D'
  2317  007F7C  43                 	db	67	;'C'
  2318  007F7D  20                 	db	32
  2319  007F7E  54                 	db	84	;'T'
  2320  007F7F  65                 	db	101	;'e'
  2321  007F80  73                 	db	115	;'s'
  2322  007F81  74                 	db	116	;'t'
  2323  007F82  00                 	db	0
  2324  007F83                     STR_110:
  2325  007F83  43                 	db	67	;'C'
  2326  007F84  6F                 	db	111	;'o'
  2327  007F85  6D                 	db	109	;'m'
  2328  007F86  6D                 	db	109	;'m'
  2329  007F87  61                 	db	97	;'a'
  2330  007F88  6E                 	db	110	;'n'
  2331  007F89  64                 	db	100	;'d'
  2332  007F8A  00                 	db	0
  2333  007F8B                     STR_48:
  2334  007F8B  73                 	db	115	;'s'
  2335  007F8C  65                 	db	101	;'e'
  2336  007F8D  74                 	db	116	;'t'
  2337  007F8E  20                 	db	32
  2338  007F8F  72                 	db	114	;'r'
  2339  007F90  78                 	db	120	;'x'
  2340  007F91  32                 	db	50	;'2'
  2341  007F92  00                 	db	0
  2342  007F93                     STR_42:
  2343  007F93  73                 	db	115	;'s'
  2344  007F94  65                 	db	101	;'e'
  2345  007F95  74                 	db	116	;'t'
  2346  007F96  20                 	db	32
  2347  007F97  61                 	db	97	;'a'
  2348  007F98  64                 	db	100	;'d'
  2349  007F99  72                 	db	114	;'r'
  2350  007F9A  00                 	db	0
  2351  007F9B  54                 	db	84	;'T'
  2352  007F9C  65                 	db	101	;'e'
  2353  007F9D  6D                 	db	109	;'m'
  2354  007F9E  70                 	db	112	;'p'
  2355  007F9F  20                 	db	32
  2356  007FA0  20                 	db	32
  2357  007FA1  3D                 	db	61	;'='
  2358  007FA2  00                 	db	0
  2359  007FA3  4C                 	db	76	;'L'
  2360  007FA4  69                 	db	105	;'i'
  2361  007FA5  67                 	db	103	;'g'
  2362  007FA6  68                 	db	104	;'h'
  2363  007FA7  74                 	db	116	;'t'
  2364  007FA8  20                 	db	32
  2365  007FA9  3D                 	db	61	;'='
  2366  007FAA  00                 	db	0
  2367  007FAB                     STR_112:
  2368  007FAB  28                 	db	40
  2369  007FAC  6E                 	db	110	;'n'
  2370  007FAD  75                 	db	117	;'u'
  2371  007FAE  6C                 	db	108	;'l'
  2372  007FAF  6C                 	db	108	;'l'
  2373  007FB0  29                 	db	41
  2374  007FB1  00                 	db	0
  2375  007FB2                     STR_67:
  2376  007FB2  41                 	db	65	;'A'
  2377  007FB3  55                 	db	85	;'U'
  2378  007FB4  54                 	db	84	;'T'
  2379  007FB5  4F                 	db	79	;'O'
  2380  007FB6  20                 	db	32
  2381  007FB7  20                 	db	32
  2382  007FB8  00                 	db	0
  2383  007FB9                     STR_66:
  2384  007FB9  4D                 	db	77	;'M'
  2385  007FBA  6F                 	db	111	;'o'
  2386  007FBB  64                 	db	100	;'d'
  2387  007FBC  65                 	db	101	;'e'
  2388  007FBD  3A                 	db	58	;':'
  2389  007FBE  20                 	db	32
  2390  007FBF  00                 	db	0
  2391  007FC0                     STR_78:
  2392  007FC0  54                 	db	84	;'T'
  2393  007FC1  65                 	db	101	;'e'
  2394  007FC2  6D                 	db	109	;'m'
  2395  007FC3  70                 	db	112	;'p'
  2396  007FC4  20                 	db	32
  2397  007FC5  3A                 	db	58	;':'
  2398  007FC6  00                 	db	0
  2399  007FC7                     STR_85:
  2400  007FC7  50                 	db	80	;'P'
  2401  007FC8  6B                 	db	107	;'k'
  2402  007FC9  74                 	db	116	;'t'
  2403  007FCA  73                 	db	115	;'s'
  2404  007FCB  2D                 	db	45
  2405  007FCC  3A                 	db	58	;':'
  2406  007FCD  00                 	db	0
  2407  007FCE                     STR_82:
  2408  007FCE  50                 	db	80	;'P'
  2409  007FCF  6B                 	db	107	;'k'
  2410  007FD0  74                 	db	116	;'t'
  2411  007FD1  73                 	db	115	;'s'
  2412  007FD2  2F                 	db	47
  2413  007FD3  3A                 	db	58	;':'
  2414  007FD4  00                 	db	0
  2415  007FD5                     STR_77:
  2416  007FD5  4C                 	db	76	;'L'
  2417  007FD6  69                 	db	105	;'i'
  2418  007FD7  67                 	db	103	;'g'
  2419  007FD8  68                 	db	104	;'h'
  2420  007FD9  74                 	db	116	;'t'
  2421  007FDA  3A                 	db	58	;':'
  2422  007FDB  00                 	db	0
  2423  007FDC                     STR_80:
  2424  007FDC  50                 	db	80	;'P'
  2425  007FDD  6B                 	db	107	;'k'
  2426  007FDE  74                 	db	116	;'t'
  2427  007FDF  73                 	db	115	;'s'
  2428  007FE0  7C                 	db	124
  2429  007FE1  3A                 	db	58	;':'
  2430  007FE2  00                 	db	0
  2431  007FE3                     STR_68:
  2432  007FE3  4D                 	db	77	;'M'
  2433  007FE4  41                 	db	65	;'A'
  2434  007FE5  4E                 	db	78	;'N'
  2435  007FE6  55                 	db	85	;'U'
  2436  007FE7  41                 	db	65	;'A'
  2437  007FE8  4C                 	db	76	;'L'
  2438  007FE9  00                 	db	0
  2439  007FEA                     STR_53:
  2440  007FEA  73                 	db	115	;'s'
  2441  007FEB  65                 	db	101	;'e'
  2442  007FEC  74                 	db	116	;'t'
  2443  007FED  20                 	db	32
  2444  007FEE  63                 	db	99	;'c'
  2445  007FEF  68                 	db	104	;'h'
  2446  007FF0  00                 	db	0
  2447  007FF1                     STR_61:
  2448  007FF1  69                 	db	105	;'i'
  2449  007FF2  6E                 	db	110	;'n'
  2450  007FF3  69                 	db	105	;'i'
  2451  007FF4  20                 	db	32
  2452  007FF5  74                 	db	116	;'t'
  2453  007FF6  78                 	db	120	;'x'
  2454  007FF7  00                 	db	0
  2455  007FF8                     STR_31:
  2456  007FF8  32                 	db	50	;'2'
  2457  007FF9  39                 	db	57	;'9'
  2458  007FFA  30                 	db	48	;'0'
  2459  007FFB  33                 	db	51	;'3'
  2460  007FFC  00                 	db	0
  2461  007FFD                     STR_21:
  2462  007FFD  7A                 	db	122	;'z'
  2463  007FFE  00                 	db	0
  2464  0000                     
  2465                           ; #config settings
  2466  007FFF  00                 	db	0	; dummy byte at the end
  2467  0000                     
  2468                           	psect	cinit
  2469  004CBE                     __pcinit:
  2470                           	opt stack 0
  2471  004CBE                     start_initialization:
  2472                           	opt stack 0
  2473  004CBE                     __initialization:
  2474                           	opt stack 0
  2475                           
  2476                           ; Clear objects allocated to BANK2 (128 bytes)
  2477  004CBE  EE02  F000         	lfsr	0,__pbssBANK2
  2478  004CC2  0E80               	movlw	128
  2479  004CC4                     clear_0:
  2480  004CC4  6AEE               	clrf	postinc0,c
  2481  004CC6  06E8               	decf	wreg,f,c
  2482  004CC8  E1FD               	bnz	clear_0
  2483                           
  2484                           ; Clear objects allocated to BANK1 (234 bytes)
  2485  004CCA  EE01  F000         	lfsr	0,__pbssBANK1
  2486  004CCE  0EEA               	movlw	234
  2487  004CD0                     clear_1:
  2488  004CD0  6AEE               	clrf	postinc0,c
  2489  004CD2  06E8               	decf	wreg,f,c
  2490  004CD4  E1FD               	bnz	clear_1
  2491                           
  2492                           ; Clear objects allocated to BANK0 (89 bytes)
  2493  004CD6  EE00  F060         	lfsr	0,__pbssBANK0
  2494  004CDA  0E59               	movlw	89
  2495  004CDC                     clear_2:
  2496  004CDC  6AEE               	clrf	postinc0,c
  2497  004CDE  06E8               	decf	wreg,f,c
  2498  004CE0  E1FD               	bnz	clear_2
  2499                           
  2500                           ; Clear objects allocated to COMRAM (45 bytes)
  2501  004CE2  EE00  F001         	lfsr	0,__pbssCOMRAM
  2502  004CE6  0E2D               	movlw	45
  2503  004CE8                     clear_3:
  2504  004CE8  6AEE               	clrf	postinc0,c
  2505  004CEA  06E8               	decf	wreg,f,c
  2506  004CEC  E1FD               	bnz	clear_3
  2507                           
  2508                           ; Initialize objects allocated to BANK0 (7 bytes)
  2509                           ; load TBLPTR registers with __pidataBANK0
  2510  004CEE  0E71               	movlw	low __pidataBANK0
  2511  004CF0  6EF6               	movwf	tblptrl,c
  2512  004CF2  0E42               	movlw	high __pidataBANK0
  2513  004CF4  6EF7               	movwf	tblptrh,c
  2514  004CF6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2515  004CF8  6EF8               	movwf	tblptru,c
  2516  004CFA  EE00  F0F1         	lfsr	0,__pdataBANK0
  2517  004CFE  EE10 F007          	lfsr	1,7
  2518  004D02                     copy_data0:
  2519  004D02  0009               	tblrd		*+
  2520  004D04  CFF5 FFEE          	movff	tablat,postinc0
  2521  004D08  50E5               	movf	postdec1,w,c
  2522  004D0A  50E1               	movf	fsr1l,w,c
  2523  004D0C  E1FA               	bnz	copy_data0
  2524  004D0E                     end_of_initialization:
  2525                           	opt stack 0
  2526  004D0E                     __end_of__initialization:
  2527                           	opt stack 0
  2528  004D0E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2529  004D10  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2530  004D12  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2531  004D14  6EF8               	movwf	tblptru,c
  2532  004D16  0100               	movlb	0
  2533  004D18  EF18  F02C         	goto	_main	;jump to C main() function
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1l	equ	0xFE1
  2542                           
  2543                           	psect	bssCOMRAM
  2544  000001                     __pbssCOMRAM:
  2545                           	opt stack 0
  2546  000001                     _outPipes:
  2547                           	opt stack 0
  2548  000001                     	ds	8
  2549  000009                     _inPipes:
  2550                           	opt stack 0
  2551  000009                     	ds	6
  2552  00000F                     _pBDTEntryIn:
  2553                           	opt stack 0
  2554  00000F                     	ds	6
  2555  000015                     _pBDTEntryEP0OutCurrent:
  2556                           	opt stack 0
  2557  000015                     	ds	2
  2558  000017                     _pBDTEntryEP0OutNext:
  2559                           	opt stack 0
  2560  000017                     	ds	2
  2561  000019                     _LastRS232Out:
  2562                           	opt stack 0
  2563  000019                     	ds	1
  2564  00001A                     _NextUSBOut:
  2565                           	opt stack 0
  2566  00001A                     	ds	1
  2567  00001B                     _RS232_Out_Data_Rdy:
  2568                           	opt stack 0
  2569  00001B                     	ds	1
  2570  00001C                     _RS232cp:
  2571                           	opt stack 0
  2572  00001C                     	ds	1
  2573  00001D                     _RemoteWakeup:
  2574                           	opt stack 0
  2575  00001D                     	ds	1
  2576  00001E                     _USBDeferStatusStagePacket:
  2577                           	opt stack 0
  2578  00001E                     	ds	1
  2579  00001F                     _USBStatusStageTimeoutCounter:
  2580                           	opt stack 0
  2581  00001F                     	ds	1
  2582  000020                     _cdc_trf_state:
  2583                           	opt stack 0
  2584  000020                     	ds	1
  2585  000021                     _controlTransferState:
  2586                           	opt stack 0
  2587  000021                     	ds	1
  2588  000022                     _endpoint_number:
  2589                           	opt stack 0
  2590  000022                     	ds	1
  2591  000023                     _eusartRxCount:
  2592                           	opt stack 0
  2593  000023                     	ds	1
  2594  000024                     _eusartRxHead:
  2595                           	opt stack 0
  2596  000024                     	ds	1
  2597  000025                     _eusartRxTail:
  2598                           	opt stack 0
  2599  000025                     	ds	1
  2600  000026                     _eusartTxBufferRemaining:
  2601                           	opt stack 0
  2602  000026                     	ds	1
  2603  000027                     _eusartTxHead:
  2604                           	opt stack 0
  2605  000027                     	ds	1
  2606  000028                     _eusartTxTail:
  2607                           	opt stack 0
  2608  000028                     	ds	1
  2609  000029                     _modemBufferIndex:
  2610                           	opt stack 0
  2611  000029                     	ds	1
  2612  00002A                     _rxByteFlag:
  2613                           	opt stack 0
  2614  00002A                     	ds	1
  2615  00002B                     _shortPacketStatus:
  2616                           	opt stack 0
  2617  00002B                     	ds	1
  2618  00002C                     _USBActiveConfiguration:
  2619                           	opt stack 0
  2620  00002C                     	ds	1
  2621  00002D                     _USTATcopy:
  2622                           	opt stack 0
  2623  00002D                     	ds	1
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           postdec1	equ	0xFE5
  2631                           fsr1l	equ	0xFE1
  2632                           
  2633                           	psect	bssBANK0
  2634  000060                     __pbssBANK0:
  2635                           	opt stack 0
  2636  000060                     _pBDTEntryOut:
  2637                           	opt stack 0
  2638  000060                     	ds	6
  2639  000066                     service_pushbutton@PB_Timer:
  2640                           	opt stack 0
  2641  000066                     	ds	4
  2642  00006A                     _ep_data_in:
  2643                           	opt stack 0
  2644  00006A                     	ds	3
  2645  00006D                     _ep_data_out:
  2646                           	opt stack 0
  2647  00006D                     	ds	3
  2648  000070                     _pCDCDst:
  2649                           	opt stack 0
  2650  000070                     	ds	3
  2651  000073                     _pCDCSrc:
  2652                           	opt stack 0
  2653  000073                     	ds	3
  2654  000076                     _responsePortNum:
  2655                           	opt stack 0
  2656  000076                     	ds	3
  2657  000079                     _CDCDataInHandle:
  2658                           	opt stack 0
  2659  000079                     	ds	2
  2660  00007B                     _CDCDataOutHandle:
  2661                           	opt stack 0
  2662  00007B                     	ds	2
  2663  00007D                     _light:
  2664                           	opt stack 0
  2665  00007D                     	ds	2
  2666  00007F                     _pDst:
  2667                           	opt stack 0
  2668  00007F                     	ds	2
  2669  000081                     _pkts:
  2670                           	opt stack 0
  2671  000081                     	ds	2
  2672  000083                     _temperature:
  2673                           	opt stack 0
  2674  000083                     	ds	2
  2675  000085                     _timer1ReloadVal:
  2676                           	opt stack 0
  2677  000085                     	ds	2
  2678  000087                     _timerMinTickCount:
  2679                           	opt stack 0
  2680  000087                     	ds	2
  2681  000089                     _timerMsTickCount:
  2682                           	opt stack 0
  2683  000089                     	ds	2
  2684  00008B                     moteJoiningProcess@ch:
  2685                           	opt stack 0
  2686  00008B                     	ds	2
  2687  00008D                     _BothEP0OutUOWNsSet:
  2688                           	opt stack 0
  2689  00008D                     	ds	1
  2690  00008E                     _USBBusIsSuspended:
  2691                           	opt stack 0
  2692  00008E                     	ds	1
  2693  00008F                     _USBDeferINDataStagePackets:
  2694                           	opt stack 0
  2695  00008F                     	ds	1
  2696  000090                     _USBDeferOUTDataStagePackets:
  2697                           	opt stack 0
  2698  000090                     	ds	1
  2699  000091                     _USBDeviceState:
  2700                           	opt stack 0
  2701  000091                     	ds	1
  2702  000092                     _USBStatusStageEnabledFlag1:
  2703                           	opt stack 0
  2704  000092                     	ds	1
  2705  000093                     _USBStatusStageEnabledFlag2:
  2706                           	opt stack 0
  2707  000093                     	ds	1
  2708  000094                     _activeState:
  2709                           	opt stack 0
  2710  000094                     	ds	1
  2711  000095                     _appTimer:
  2712                           	opt stack 0
  2713  000095                     	ds	1
  2714  000096                     _autoMode:
  2715                           	opt stack 0
  2716  000096                     	ds	1
  2717  000097                     _cdc_mem_type:
  2718                           	opt stack 0
  2719  000097                     	ds	1
  2720  000098                     _cdc_rx_len:
  2721                           	opt stack 0
  2722  000098                     	ds	1
  2723  000099                     _cdc_tx_len:
  2724                           	opt stack 0
  2725  000099                     	ds	1
  2726  00009A                     _dr:
  2727                           	opt stack 0
  2728  00009A                     	ds	1
  2729  00009B                     _m10SecTicker:
  2730                           	opt stack 0
  2731  00009B                     	ds	1
  2732  00009C                     _manualTrigger:
  2733                           	opt stack 0
  2734  00009C                     	ds	1
  2735  00009D                     _operationType:
  2736                           	opt stack 0
  2737  00009D                     	ds	1
  2738  00009E                     _randomPortNum:
  2739                           	opt stack 0
  2740  00009E                     	ds	1
  2741  00009F                     _runningState:
  2742                           	opt stack 0
  2743  00009F                     	ds	1
  2744  0000A0                     _secTicker:
  2745                           	opt stack 0
  2746  0000A0                     	ds	1
  2747  0000A1                     _sleepTicker:
  2748                           	opt stack 0
  2749  0000A1                     	ds	1
  2750  0000A2                     _usbState:
  2751                           	opt stack 0
  2752  0000A2                     	ds	1
  2753  0000A3                     service_pushbutton@Release_Timer:
  2754                           	opt stack 0
  2755  0000A3                     	ds	1
  2756  0000A4                     _dataBuffer:
  2757                           	opt stack 0
  2758  0000A4                     	ds	12
  2759  0000B0                     _line_coding:
  2760                           	opt stack 0
  2761  0000B0                     	ds	7
  2762  0000B7                     _USBAlternateInterface:
  2763                           	opt stack 0
  2764  0000B7                     	ds	2
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1l	equ	0xFE1
  2773                           
  2774                           	psect	dataBANK0
  2775  0000F1                     __pdataBANK0:
  2776                           	opt stack 0
  2777  0000F1                     _selectedFont:
  2778                           	opt stack 0
  2779  0000F1                     	ds	2
  2780  0000F3                     _S1:
  2781                           	opt stack 0
  2782  0000F3                     	ds	1
  2783  0000F4                     _S2:
  2784                           	opt stack 0
  2785  0000F4                     	ds	1
  2786  0000F5                     _moteState:
  2787                           	opt stack 0
  2788  0000F5                     	ds	1
  2789  0000F6                     _prevS1:
  2790                           	opt stack 0
  2791  0000F6                     	ds	1
  2792  0000F7                     _prevS2:
  2793                           	opt stack 0
  2794  0000F7                     	ds	1
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           
  2804                           	psect	bssBANK1
  2805  000100                     __pbssBANK1:
  2806                           	opt stack 0
  2807  000100                     _responseId:
  2808                           	opt stack 0
  2809  000100                     	ds	16
  2810  000110                     _responseData:
  2811                           	opt stack 0
  2812  000110                     	ds	8
  2813  000118                     _USB_Buffer:
  2814                           	opt stack 0
  2815  000118                     	ds	64
  2816  000158                     _cmd:
  2817                           	opt stack 0
  2818  000158                     	ds	64
  2819  000198                     _modemResonseBuffer:
  2820                           	opt stack 0
  2821  000198                     	ds	64
  2822  0001D8                     _cdc_notice:
  2823                           	opt stack 0
  2824  0001D8                     	ds	10
  2825  0001E2                     _dummy_encapsulated_cmd_response:
  2826                           	opt stack 0
  2827  0001E2                     	ds	8
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           postinc0	equ	0xFEE
  2833                           wreg	equ	0xFE8
  2834                           postdec1	equ	0xFE5
  2835                           fsr1l	equ	0xFE1
  2836                           
  2837                           	psect	bssBANK2
  2838  000200                     __pbssBANK2:
  2839                           	opt stack 0
  2840  000200                     _eusartRxBuffer:
  2841                           	opt stack 0
  2842  000200                     	ds	64
  2843  000240                     _eusartTxBuffer:
  2844                           	opt stack 0
  2845  000240                     	ds	64
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           postinc0	equ	0xFEE
  2851                           wreg	equ	0xFE8
  2852                           postdec1	equ	0xFE5
  2853                           fsr1l	equ	0xFE1
  2854                           
  2855                           	psect	cstackBANK1
  2856  0001EA                     __pcstackBANK1:
  2857                           	opt stack 0
  2858  0001EA                     moteHandler@gotoSleep:
  2859                           	opt stack 0
  2860                           
  2861                           ; 1 bytes @ 0x0
  2862  0001EA                     	ds	1
  2863  0001EB                     moteHandler@gotoNextState:
  2864                           	opt stack 0
  2865                           
  2866                           ; 1 bytes @ 0x1
  2867  0001EB                     	ds	1
  2868  0001EC                     moteHandler@Traw:
  2869                           	opt stack 0
  2870                           
  2871                           ; 2 bytes @ 0x2
  2872  0001EC                     	ds	2
  2873  0001EE                     moteHandler@s2Button:
  2874                           	opt stack 0
  2875                           
  2876                           ; 1 bytes @ 0x4
  2877  0001EE                     	ds	1
  2878  0001EF                     moteHandler@buttonPress:
  2879                           	opt stack 0
  2880                           
  2881                           ; 1 bytes @ 0x5
  2882  0001EF                     	ds	1
  2883  0001F0                     moteHandler@i:
  2884                           	opt stack 0
  2885                           
  2886                           ; 1 bytes @ 0x6
  2887  0001F0                     	ds	1
  2888  0001F1                     moteHandler@i_1298:
  2889                           	opt stack 0
  2890                           
  2891                           ; 1 bytes @ 0x7
  2892  0001F1                     	ds	1
  2893  0001F2                     moteHandler@readMessage:
  2894                           	opt stack 0
  2895                           
  2896                           ; 1 bytes @ 0x8
  2897  0001F2                     	ds	1
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           postdec1	equ	0xFE5
  2905                           fsr1l	equ	0xFE1
  2906                           
  2907                           	psect	cstackBANK0
  2908  0000B9                     __pcstackBANK0:
  2909                           	opt stack 0
  2910  0000B9                     ??_TMR1_Initialize:
  2911  0000B9                     ??_isdigit:
  2912  0000B9                     ?_ADC_GetConversion:
  2913                           	opt stack 0
  2914  0000B9                     ?_strncmp:
  2915                           	opt stack 0
  2916  0000B9                     ?_strcmp:
  2917                           	opt stack 0
  2918  0000B9                     ?_USBTransferOnePacket:
  2919                           	opt stack 0
  2920  0000B9                     ?___wmul:
  2921                           	opt stack 0
  2922  0000B9                     ?___lwdiv:
  2923                           	opt stack 0
  2924  0000B9                     MOTEapp_handlerState@state:
  2925                           	opt stack 0
  2926  0000B9                     MOTEapp_TimerBasedTask@timerTask:
  2927                           	opt stack 0
  2928  0000B9                     hexToStr@character:
  2929                           	opt stack 0
  2930  0000B9                     moteApp_clearBuffers@counter:
  2931                           	opt stack 0
  2932  0000B9                     USBapp_handlerState@state:
  2933                           	opt stack 0
  2934  0000B9                     service_pushbutton@bs:
  2935                           	opt stack 0
  2936  0000B9                     EUSART_Read@readValue:
  2937                           	opt stack 0
  2938  0000B9                     EUSART_Write@txData:
  2939                           	opt stack 0
  2940  0000B9                     EUSART_FlushBuffer@index:
  2941                           	opt stack 0
  2942  0000B9                     SPI_Exchange8bit@data:
  2943                           	opt stack 0
  2944  0000B9                     DATAEE_WriteByte@bData:
  2945                           	opt stack 0
  2946  0000B9                     DATAEE_ReadByte@bAdd:
  2947                           	opt stack 0
  2948  0000B9                     TMR2_ReadTimer@readVal:
  2949                           	opt stack 0
  2950  0000B9                     USBTransferOnePacket@dir:
  2951                           	opt stack 0
  2952  0000B9                     ___lbdiv@divisor:
  2953                           	opt stack 0
  2954  0000B9                     ___lbmod@divisor:
  2955                           	opt stack 0
  2956  0000B9                     moteApp_delayms@length:
  2957                           	opt stack 0
  2958  0000B9                     oled_setFont@font:
  2959                           	opt stack 0
  2960  0000B9                     putUSBUSART@data:
  2961                           	opt stack 0
  2962  0000B9                     ___wmul@multiplier:
  2963                           	opt stack 0
  2964  0000B9                     ___lwdiv@dividend:
  2965                           	opt stack 0
  2966  0000B9                     memset@p1:
  2967                           	opt stack 0
  2968  0000B9                     strcmp@s1:
  2969                           	opt stack 0
  2970  0000B9                     strncmp@s1:
  2971                           	opt stack 0
  2972                           
  2973                           ; 2 bytes @ 0x0
  2974  0000B9                     	ds	1
  2975  0000BA                     MOTEapp_getModemResponse@terminatorReceived:
  2976                           	opt stack 0
  2977  0000BA                     moteApp_clearBuffers@counter_1525:
  2978                           	opt stack 0
  2979  0000BA                     oled_writeCommand@command:
  2980                           	opt stack 0
  2981  0000BA                     oled_writeData@data:
  2982                           	opt stack 0
  2983  0000BA                     DATAEE_WriteByte@bAdd:
  2984                           	opt stack 0
  2985  0000BA                     _isdigit$5910:
  2986                           	opt stack 0
  2987  0000BA                     ___lbdiv@dividend:
  2988                           	opt stack 0
  2989  0000BA                     ___lbmod@dividend:
  2990                           	opt stack 0
  2991  0000BA                     sendCommand@string:
  2992                           	opt stack 0
  2993  0000BA                     sendDataCommand@string:
  2994                           	opt stack 0
  2995  0000BA                     USBTransferOnePacket@data:
  2996                           	opt stack 0
  2997                           
  2998                           ; 2 bytes @ 0x1
  2999  0000BA                     	ds	1
  3000  0000BB                     ??_moteApp_delayms:
  3001  0000BB                     ??_ADC_GetConversion:
  3002  0000BB                     ??_oled_devInit:
  3003  0000BB                     MOTEapp_getModemResponse@bufferByte:
  3004                           	opt stack 0
  3005  0000BB                     moteApp_clearBuffers@counter_1526:
  3006                           	opt stack 0
  3007  0000BB                     Set_Page_Address@address:
  3008                           	opt stack 0
  3009  0000BB                     Set_Column_Address@address:
  3010                           	opt stack 0
  3011  0000BB                     oled_setDisplay@displayType:
  3012                           	opt stack 0
  3013  0000BB                     oled_displayOff@state:
  3014                           	opt stack 0
  3015  0000BB                     DATAEE_WriteByte@GIEBitValue:
  3016                           	opt stack 0
  3017  0000BB                     putUSBUSART@length:
  3018                           	opt stack 0
  3019  0000BB                     isdigit@c:
  3020                           	opt stack 0
  3021  0000BB                     ___lbdiv@counter:
  3022                           	opt stack 0
  3023  0000BB                     ___lbmod@counter:
  3024                           	opt stack 0
  3025  0000BB                     ___wmul@multiplicand:
  3026                           	opt stack 0
  3027  0000BB                     ___lwdiv@divisor:
  3028                           	opt stack 0
  3029  0000BB                     memset@c:
  3030                           	opt stack 0
  3031  0000BB                     strcmp@s2:
  3032                           	opt stack 0
  3033  0000BB                     strncmp@s2:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x2
  3037  0000BB                     	ds	1
  3038  0000BC                     sendDataCommand@appData:
  3039                           	opt stack 0
  3040  0000BC                     oled_putChar@station_dot:
  3041                           	opt stack 0
  3042  0000BC                     USBTransferOnePacket@len:
  3043                           	opt stack 0
  3044  0000BC                     ___lbdiv@quotient:
  3045                           	opt stack 0
  3046  0000BC                     ___lbmod@rem:
  3047                           	opt stack 0
  3048  0000BC                     moteApp_delayms@counter:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x3
  3052  0000BC                     	ds	1
  3053  0000BD                     ??_strcmp:
  3054  0000BD                     sendDataCommand@dataLength:
  3055                           	opt stack 0
  3056  0000BD                     moteApp_add8bToDataBuffer@bufferLocation:
  3057                           	opt stack 0
  3058  0000BD                     oled_putChar@start_page:
  3059                           	opt stack 0
  3060  0000BD                     ADC_GetConversion@channel:
  3061                           	opt stack 0
  3062  0000BD                     USBTransferOnePacket@ep:
  3063                           	opt stack 0
  3064  0000BD                     ___lwdiv@counter:
  3065                           	opt stack 0
  3066  0000BD                     ___wmul@product:
  3067                           	opt stack 0
  3068  0000BD                     memset@n:
  3069                           	opt stack 0
  3070  0000BD                     strncmp@len:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x4
  3074  0000BD                     	ds	1
  3075  0000BE                     ??_oled_putChar:
  3076  0000BE                     ??_sendDataCommand:
  3077  0000BE                     moteApp_add8bToDataBuffer@number:
  3078                           	opt stack 0
  3079  0000BE                     modemResync@escapeCounter:
  3080                           	opt stack 0
  3081  0000BE                     USBTransferOnePacket@handle:
  3082                           	opt stack 0
  3083  0000BE                     ___lwdiv@quotient:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x5
  3087  0000BE                     	ds	1
  3088  0000BF                     ??_strncmp:
  3089  0000BF                     sendDataCommand@byteCount:
  3090                           	opt stack 0
  3091  0000BF                     strcmp@t0:
  3092                           	opt stack 0
  3093  0000BF                     memset@p:
  3094                           	opt stack 0
  3095                           
  3096                           ; 2 bytes @ 0x6
  3097  0000BF                     	ds	1
  3098  0000C0                     ?___lwmod:
  3099                           	opt stack 0
  3100  0000C0                     modemResync@escapeEvent:
  3101                           	opt stack 0
  3102  0000C0                     sendDataCommand@byteCount_1458:
  3103                           	opt stack 0
  3104  0000C0                     ADC_TempConversion@tempRaw:
  3105                           	opt stack 0
  3106  0000C0                     strcmp@t2:
  3107                           	opt stack 0
  3108  0000C0                     getsUSBUSART@buffer:
  3109                           	opt stack 0
  3110  0000C0                     _CDCTxService$5580:
  3111                           	opt stack 0
  3112  0000C0                     ___lwmod@dividend:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x7
  3116  0000C0                     	ds	1
  3117  0000C1                     ADC_TempConversion@temp:
  3118                           	opt stack 0
  3119  0000C1                     USBDeviceInit@i:
  3120                           	opt stack 0
  3121  0000C1                     strcmp@t1:
  3122                           	opt stack 0
  3123                           
  3124                           ; 1 bytes @ 0x8
  3125  0000C1                     	ds	1
  3126  0000C2                     getsUSBUSART@len:
  3127                           	opt stack 0
  3128  0000C2                     CDCTxService@i:
  3129                           	opt stack 0
  3130  0000C2                     ___lwmod@divisor:
  3131                           	opt stack 0
  3132                           
  3133                           ; 2 bytes @ 0x9
  3134  0000C2                     	ds	1
  3135  0000C3                     CDCTxService@byte_to_send:
  3136                           	opt stack 0
  3137                           
  3138                           ; 1 bytes @ 0xA
  3139  0000C3                     	ds	1
  3140  0000C4                     oled_putChar@k:
  3141                           	opt stack 0
  3142  0000C4                     ___lwmod@counter:
  3143                           	opt stack 0
  3144  0000C4                     _getsUSBUSART$5532:
  3145                           	opt stack 0
  3146                           
  3147                           ; 2 bytes @ 0xB
  3148  0000C4                     	ds	1
  3149  0000C5                     ?_sprintf:
  3150                           	opt stack 0
  3151  0000C5                     oled_putChar@index:
  3152                           	opt stack 0
  3153  0000C5                     moteApp_add16bToDataBuffer@number:
  3154                           	opt stack 0
  3155  0000C5                     sprintf@sp:
  3156                           	opt stack 0
  3157                           
  3158                           ; 2 bytes @ 0xC
  3159  0000C5                     	ds	1
  3160  0000C6                     ??_USBapp_DeviceCdcEmulatorHandler:
  3161  0000C6                     oled_clearRow@page:
  3162                           	opt stack 0
  3163  0000C6                     oled_putString@string:
  3164                           	opt stack 0
  3165                           
  3166                           ; 2 bytes @ 0xD
  3167  0000C6                     	ds	1
  3168  0000C7                     moteApp_add16bToDataBuffer@bufferLocation:
  3169                           	opt stack 0
  3170  0000C7                     oled_clearRow@index:
  3171                           	opt stack 0
  3172  0000C7                     sprintf@f:
  3173                           	opt stack 0
  3174                           
  3175                           ; 2 bytes @ 0xE
  3176  0000C7                     	ds	1
  3177  0000C8                     oled_putString@station_dot:
  3178                           	opt stack 0
  3179                           
  3180                           ; 1 bytes @ 0xF
  3181  0000C8                     	ds	1
  3182  0000C9                     oled_putString@start_page:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x10
  3186  0000C9                     	ds	1
  3187  0000CA                     oled_putString@index:
  3188                           	opt stack 0
  3189                           
  3190                           ; 1 bytes @ 0x11
  3191  0000CA                     	ds	1
  3192  0000CB                     oled_putUint8@station_dot:
  3193                           	opt stack 0
  3194  0000CB                     oled_putUint16@number:
  3195                           	opt stack 0
  3196                           
  3197                           ; 2 bytes @ 0x12
  3198  0000CB                     	ds	1
  3199  0000CC                     oled_putUint8@start_page:
  3200                           	opt stack 0
  3201                           
  3202                           ; 1 bytes @ 0x13
  3203  0000CC                     	ds	1
  3204  0000CD                     ??_sprintf:
  3205  0000CD                     oled_putUint8@number:
  3206                           	opt stack 0
  3207  0000CD                     oled_putUint16@station_dot:
  3208                           	opt stack 0
  3209                           
  3210                           ; 1 bytes @ 0x14
  3211  0000CD                     	ds	1
  3212  0000CE                     oled_putUint16@start_page:
  3213                           	opt stack 0
  3214  0000CE                     oled_putUint8@numData:
  3215                           	opt stack 0
  3216                           
  3217                           ; 6 bytes @ 0x15
  3218  0000CE                     	ds	1
  3219  0000CF                     oled_putUint16@numData:
  3220                           	opt stack 0
  3221                           
  3222                           ; 6 bytes @ 0x16
  3223  0000CF                     	ds	2
  3224  0000D1                     sprintf@idx:
  3225                           	opt stack 0
  3226                           
  3227                           ; 1 bytes @ 0x18
  3228  0000D1                     	ds	1
  3229  0000D2                     sprintf@prec:
  3230                           	opt stack 0
  3231                           
  3232                           ; 1 bytes @ 0x19
  3233  0000D2                     	ds	1
  3234  0000D3                     sprintf@cp:
  3235                           	opt stack 0
  3236                           
  3237                           ; 2 bytes @ 0x1A
  3238  0000D3                     	ds	2
  3239  0000D5                     moteRunningProcess@selectButton:
  3240                           	opt stack 0
  3241  0000D5                     sprintf@ap:
  3242                           	opt stack 0
  3243                           
  3244                           ; 1 bytes @ 0x1C
  3245  0000D5                     	ds	1
  3246  0000D6                     moteRunningProcess@messageReady:
  3247                           	opt stack 0
  3248  0000D6                     sprintf@len:
  3249                           	opt stack 0
  3250                           
  3251                           ; 2 bytes @ 0x1D
  3252  0000D6                     	ds	1
  3253  0000D7                     moteRunningProcess@sleepEvent:
  3254                           	opt stack 0
  3255                           
  3256                           ; 1 bytes @ 0x1E
  3257  0000D7                     	ds	1
  3258  0000D8                     ??_moteRunningProcess:
  3259  0000D8                     sprintf@val:
  3260                           	opt stack 0
  3261                           
  3262                           ; 2 bytes @ 0x1F
  3263  0000D8                     	ds	2
  3264  0000DA                     sprintf@flag:
  3265                           	opt stack 0
  3266  0000DA                     moteRunningProcess@Traw:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x21
  3270  0000DA                     	ds	1
  3271  0000DB                     sprintf@width:
  3272                           	opt stack 0
  3273                           
  3274                           ; 2 bytes @ 0x22
  3275  0000DB                     	ds	1
  3276  0000DC                     moteRunningProcess@i:
  3277                           	opt stack 0
  3278                           
  3279                           ; 1 bytes @ 0x23
  3280  0000DC                     	ds	1
  3281  0000DD                     moteRunningProcess@i_1400:
  3282                           	opt stack 0
  3283  0000DD                     sprintf@c:
  3284                           	opt stack 0
  3285                           
  3286                           ; 1 bytes @ 0x24
  3287  0000DD                     	ds	1
  3288  0000DE                     moteJoiningProcess@switchEvent:
  3289                           	opt stack 0
  3290                           
  3291                           ; 1 bytes @ 0x25
  3292  0000DE                     	ds	1
  3293  0000DF                     ??_moteJoiningProcess:
  3294                           
  3295                           ; 1 bytes @ 0x26
  3296  0000DF                     	ds	2
  3297  0000E1                     _moteJoiningProcess$1341:
  3298                           	opt stack 0
  3299                           
  3300                           ; 2 bytes @ 0x28
  3301  0000E1                     	ds	2
  3302  0000E3                     _moteJoiningProcess$1359:
  3303                           	opt stack 0
  3304                           
  3305                           ; 2 bytes @ 0x2A
  3306  0000E3                     	ds	2
  3307  0000E5                     _moteJoiningProcess$1366:
  3308                           	opt stack 0
  3309                           
  3310                           ; 2 bytes @ 0x2C
  3311  0000E5                     	ds	2
  3312  0000E7                     _moteJoiningProcess$1374:
  3313                           	opt stack 0
  3314                           
  3315                           ; 2 bytes @ 0x2E
  3316  0000E7                     	ds	2
  3317  0000E9                     moteJoiningProcess@joiningComplete:
  3318                           	opt stack 0
  3319                           
  3320                           ; 1 bytes @ 0x30
  3321  0000E9                     	ds	1
  3322  0000EA                     moteJoiningProcess@Traw:
  3323                           	opt stack 0
  3324                           
  3325                           ; 2 bytes @ 0x31
  3326  0000EA                     	ds	2
  3327  0000EC                     moteJoiningProcess@i:
  3328                           	opt stack 0
  3329                           
  3330                           ; 1 bytes @ 0x33
  3331  0000EC                     	ds	1
  3332  0000ED                     moteJoiningProcess@i_1369:
  3333                           	opt stack 0
  3334                           
  3335                           ; 1 bytes @ 0x34
  3336  0000ED                     	ds	1
  3337  0000EE                     moteJoiningProcess@messageReady:
  3338                           	opt stack 0
  3339                           
  3340                           ; 1 bytes @ 0x35
  3341  0000EE                     	ds	1
  3342  0000EF                     ??_moteHandler:
  3343                           
  3344                           ; 1 bytes @ 0x36
  3345  0000EF                     	ds	2
  3346  0000F1                     tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           postinc0	equ	0xFEE
  3351                           wreg	equ	0xFE8
  3352                           postdec1	equ	0xFE5
  3353                           fsr1l	equ	0xFE1
  3354                           
  3355                           ; 1 bytes @ 0x38
  3356                           
  3357                           	psect	cstackCOMRAM
  3358  00002E                     __pcstackCOMRAM:
  3359                           	opt stack 0
  3360  00002E                     ??_USBStdGetDscHandler:
  3361  00002E                     ?i2_USBTransferOnePacket:
  3362                           	opt stack 0
  3363  00002E                     ?___lldiv:
  3364                           	opt stack 0
  3365  00002E                     USBConfigureEndpoint@direction:
  3366                           	opt stack 0
  3367  00002E                     USBCtrlTrfTxService@byteToSend:
  3368                           	opt stack 0
  3369  00002E                     i2USBTransferOnePacket@dir:
  3370                           	opt stack 0
  3371  00002E                     USBStdGetStatusHandler@p:
  3372                           	opt stack 0
  3373  00002E                     i2memset@p1:
  3374                           	opt stack 0
  3375  00002E                     ___lldiv@dividend:
  3376                           	opt stack 0
  3377                           
  3378                           ; 4 bytes @ 0x0
  3379  00002E                     	ds	1
  3380  00002F                     ??_USBConfigureEndpoint:
  3381  00002F                     i2USBTransferOnePacket@data:
  3382                           	opt stack 0
  3383                           
  3384                           ; 2 bytes @ 0x1
  3385  00002F                     	ds	1
  3386  000030                     i2memset@c:
  3387                           	opt stack 0
  3388                           
  3389                           ; 2 bytes @ 0x2
  3390  000030                     	ds	1
  3391  000031                     i2USBTransferOnePacket@len:
  3392                           	opt stack 0
  3393                           
  3394                           ; 1 bytes @ 0x3
  3395  000031                     	ds	1
  3396  000032                     i2USBTransferOnePacket@ep:
  3397                           	opt stack 0
  3398  000032                     i2memset@n:
  3399                           	opt stack 0
  3400  000032                     ___lldiv@divisor:
  3401                           	opt stack 0
  3402                           
  3403                           ; 4 bytes @ 0x4
  3404  000032                     	ds	1
  3405  000033                     USBConfigureEndpoint@EPNum:
  3406                           	opt stack 0
  3407  000033                     i2USBTransferOnePacket@handle:
  3408                           	opt stack 0
  3409                           
  3410                           ; 2 bytes @ 0x5
  3411  000033                     	ds	1
  3412  000034                     USBConfigureEndpoint@handle:
  3413                           	opt stack 0
  3414  000034                     i2memset@p:
  3415                           	opt stack 0
  3416                           
  3417                           ; 2 bytes @ 0x6
  3418  000034                     	ds	2
  3419  000036                     USBEnableEndpoint@options:
  3420                           	opt stack 0
  3421  000036                     i2USBDeviceInit@i:
  3422                           	opt stack 0
  3423  000036                     ___lldiv@quotient:
  3424                           	opt stack 0
  3425                           
  3426                           ; 4 bytes @ 0x8
  3427  000036                     	ds	1
  3428  000037                     USBEnableEndpoint@p:
  3429                           	opt stack 0
  3430                           
  3431                           ; 2 bytes @ 0x9
  3432  000037                     	ds	2
  3433  000039                     USBEnableEndpoint@ep:
  3434                           	opt stack 0
  3435                           
  3436                           ; 1 bytes @ 0xB
  3437  000039                     	ds	1
  3438  00003A                     USBapp_CdcEmulatorInitialize@i:
  3439                           	opt stack 0
  3440  00003A                     ___lldiv@counter:
  3441                           	opt stack 0
  3442                           
  3443                           ; 1 bytes @ 0xC
  3444  00003A                     	ds	1
  3445  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3446                           	opt stack 0
  3447  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3448                           	opt stack 0
  3449                           
  3450                           ; 4 bytes @ 0xD
  3451  00003B                     	ds	2
  3452  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3453                           	opt stack 0
  3454                           
  3455                           ; 2 bytes @ 0xF
  3456  00003D                     	ds	2
  3457  00003F                     USBCtrlTrfRxService@i:
  3458                           	opt stack 0
  3459  00003F                     USBCtrlTrfInHandler@lastDTS:
  3460                           	opt stack 0
  3461  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3462                           	opt stack 0
  3463                           
  3464                           ; 2 bytes @ 0x11
  3465  00003F                     	ds	1
  3466  000040                     USBCtrlTrfRxService@byteToRead:
  3467                           	opt stack 0
  3468                           
  3469                           ; 1 bytes @ 0x12
  3470  000040                     	ds	1
  3471  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3472                           
  3473                           ; 1 bytes @ 0x13
  3474  000041                     	ds	2
  3475  000043                     ??_USBStdFeatureReqHandler:
  3476  000043                     USBStdSetCfgHandler@i:
  3477                           	opt stack 0
  3478                           
  3479                           ; 1 bytes @ 0x15
  3480  000043                     	ds	2
  3481  000045                     USBStdFeatureReqHandler@pUEP:
  3482                           	opt stack 0
  3483                           
  3484                           ; 2 bytes @ 0x17
  3485  000045                     	ds	2
  3486  000047                     USBStdFeatureReqHandler@current_ep_data:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x19
  3490  000047                     	ds	1
  3491  000048                     USBStdFeatureReqHandler@p:
  3492                           	opt stack 0
  3493                           
  3494                           ; 2 bytes @ 0x1A
  3495  000048                     	ds	2
  3496  00004A                     ??_USBCheckStdRequest:
  3497                           
  3498                           ; 1 bytes @ 0x1C
  3499  00004A                     	ds	1
  3500  00004B                     ??_USBCtrlEPService:
  3501  00004B                     
  3502                           ; 1 bytes @ 0x1D
  3503  00004B                     	ds	2
  3504  00004D                     USBCtrlEPService@setup_cnt:
  3505                           	opt stack 0
  3506                           
  3507                           ; 1 bytes @ 0x1F
  3508  00004D                     	ds	1
  3509  00004E                     USBDeviceTasks@i:
  3510                           	opt stack 0
  3511                           
  3512                           ; 1 bytes @ 0x20
  3513  00004E                     	ds	1
  3514  00004F                     ??_INTERRUPT_InterruptManager:
  3515                           
  3516                           ; 1 bytes @ 0x21
  3517  00004F                     	ds	12
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           postdec1	equ	0xFE5
  3525                           fsr1l	equ	0xFE1
  3526                           
  3527 ;;
  3528 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3529 ;;
  3530 ;; *************** function _main *****************
  3531 ;; Defined at:
  3532 ;;		line 42 in file "main.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : F/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels required when called:   21
  3552 ;; This function calls:
  3553 ;;		_DATAEE_ReadByte
  3554 ;;		_MOTEapp_handlerState
  3555 ;;		_SYSTEM_Initialize
  3556 ;;		_USBDeviceAttach
  3557 ;;		_USBDeviceInit
  3558 ;;		_USBapp_Handler
  3559 ;;		_USBapp_handlerState
  3560 ;;		_modemResync
  3561 ;;		_moteApp_delayms
  3562 ;;		_moteHandler
  3563 ;;		_oled_clear
  3564 ;;		_oled_init
  3565 ;;		_oled_putString
  3566 ;; This function is called by:
  3567 ;;		Startup code after reset
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text0
  3572  005830                     __ptext0:
  3573                           	opt stack 0
  3574  005830                     _main:
  3575                           	opt stack 10
  3576                           
  3577                           ;main.c: 45: SYSTEM_Initialize();
  3578                           
  3579                           ;incstack = 0
  3580  005830  EC31  F022         	call	_SYSTEM_Initialize	;wreg free
  3581                           
  3582                           ;main.c: 60: oled_init();
  3583  005834  EC63  F022         	call	_oled_init	;wreg free
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;main.c: 61: USBDeviceInit();
  3587  005838  EC9B  F02D         	call	_USBDeviceInit	;wreg free
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;main.c: 67: USBDeviceAttach();
  3591  00583C  EC56  F023         	call	_USBDeviceAttach	;wreg free
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;main.c: 69: PEIE = 1;
  3595  005840  8CF2               	bsf	intcon,6,c	;volatile
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;main.c: 70: GIE = 1;
  3599  005842  8EF2               	bsf	intcon,7,c	;volatile
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;main.c: 73: moteApp_delayms(300);
  3603  005844  0E01               	movlw	1
  3604  005846  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3605  005848  0E2C               	movlw	44
  3606  00584A  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  3607  00584C  ECC2  F022         	call	_moteApp_delayms	;wreg free
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;main.c: 74: modemResync();
  3611  005850  ECBE  F026         	call	_modemResync	;wreg free
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;main.c: 75: moteApp_delayms(300);
  3615  005854  0E01               	movlw	1
  3616  005856  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3617  005858  0E2C               	movlw	44
  3618  00585A  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  3619  00585C  ECC2  F022         	call	_moteApp_delayms	;wreg free
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;main.c: 79: powerOnStatus = DATAEE_ReadByte(0x00);
  3623  005860  0E00               	movlw	0
  3624  005862  EC99  F021         	call	_DATAEE_ReadByte
  3625                           
  3626                           ;main.c: 89: operationType = USB;
  3627  005866  0100               	movlb	0	; () banked
  3628  005868  6B9D               	clrf	_operationType& (0+255),b
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;main.c: 90: USBapp_handlerState(USB_STARTUP);
  3632  00586A  0E00               	movlw	0
  3633  00586C  EC40  F021         	call	_USBapp_handlerState
  3634                           
  3635                           ;main.c: 95: oled_clear();
  3636  005870  ECCD  F021         	call	_oled_clear	;wreg free
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;main.c: 96: oled_putString("LoRa SigMap",0,0);
  3640  005874  0EE9               	movlw	low STR_1
  3641  005876  6FC6               	movwf	oled_putString@string& (0+255),b
  3642  005878  0E7E               	movlw	high STR_1
  3643  00587A  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  3644  00587C  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  3645  00587E  6BC9               	clrf	oled_putString@start_page& (0+255),b
  3646  005880  ECF0  F026         	call	_oled_putString	;wreg free
  3647                           
  3648                           ;main.c: 97: oled_putString(" Dev: A1 ",0,1);
  3649  005884  0E28               	movlw	low STR_2
  3650  005886  0100               	movlb	0	; () banked
  3651  005888  6FC6               	movwf	oled_putString@string& (0+255),b
  3652  00588A  0E7F               	movlw	high STR_2
  3653  00588C  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  3654  00588E  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  3655  005890  0E01               	movlw	1
  3656  005892  6FC9               	movwf	oled_putString@start_page& (0+255),b
  3657  005894  ECF0  F026         	call	_oled_putString	;wreg free
  3658                           
  3659                           ;main.c: 98: oled_putString("   build 012   ",0,3);
  3660  005898  0E97               	movlw	low STR_3
  3661  00589A  0100               	movlb	0	; () banked
  3662  00589C  6FC6               	movwf	oled_putString@string& (0+255),b
  3663  00589E  0E7D               	movlw	high STR_3
  3664  0058A0  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  3665  0058A2  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  3666  0058A4  0E03               	movlw	3
  3667  0058A6  6FC9               	movwf	oled_putString@start_page& (0+255),b
  3668  0058A8  ECF0  F026         	call	_oled_putString	;wreg free
  3669                           
  3670                           ;main.c: 99: moteApp_delayms(700);
  3671  0058AC  0E02               	movlw	2
  3672  0058AE  0100               	movlb	0	; () banked
  3673  0058B0  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3674  0058B2  0EBC               	movlw	188
  3675  0058B4  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  3676  0058B6  ECC2  F022         	call	_moteApp_delayms	;wreg free
  3677  0058BA  D011               	goto	l10671
  3678  0058BC                     l50:
  3679  0058BC  D7FF               	goto	l50
  3680  0058BE                     l10657:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;main.c: 111: USBapp_Handler();
  3684  0058BE  EC03  F028         	call	_USBapp_Handler	;wreg free
  3685                           
  3686                           ;main.c: 113: operationType = MOTE;
  3687  0058C2  0E01               	movlw	1
  3688  0058C4  0100               	movlb	0	; () banked
  3689  0058C6  6F9D               	movwf	_operationType& (0+255),b
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;main.c: 114: MOTEapp_handlerState(MOTE_STARTUP);
  3693  0058C8  EC3C  F021         	call	_MOTEapp_handlerState
  3694                           
  3695                           ;main.c: 115: break;
  3696  0058CC  D008               	goto	l10671
  3697  0058CE                     l10663:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;main.c: 117: if (moteHandler() == MOTE_SWAP)
  3701  0058CE  EC94  F033         	call	_moteHandler	;wreg free
  3702  0058D2  0A04               	xorlw	4
  3703  0058D4  E104               	bnz	l10671
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;main.c: 118: {
  3707                           ;main.c: 120: operationType = USB;
  3708  0058D6  6B9D               	clrf	_operationType& (0+255),b
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;main.c: 121: USBapp_handlerState(USB_STARTUP);
  3712  0058D8  0E00               	movlw	0
  3713  0058DA  EC40  F021         	call	_USBapp_handlerState
  3714  0058DE                     l10671:
  3715  0058DE  0100               	movlb	0	; () banked
  3716  0058E0  519D               	movf	_operationType& (0+255),w,b
  3717                           
  3718                           ; Switch size 1, requested type "speed"
  3719                           ; Number of cases is 2, Range of values is 0 to 1
  3720                           ; switch strategies available:
  3721                           ; Name         Instructions Cycles
  3722                           ; simple_byte            7     4 (average)
  3723                           ;	Chosen strategy is simple_byte
  3724  0058E2  E0ED               	bz	l10657
  3725  0058E4  0A01               	xorlw	1	; case 1
  3726  0058E6  E0F3               	bz	l10663
  3727  0058E8  D7E9               	goto	l50
  3728  0058EA                     __end_of_main:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           intcon	equ	0xFF2
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           postdec1	equ	0xFE5
  3738                           fsr1l	equ	0xFE1
  3739                           
  3740 ;; *************** function _moteHandler *****************
  3741 ;; Defined at:
  3742 ;;		line 185 in file "../Includes/Board/MOTEapp.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  i               1    7[BANK1 ] unsigned char 
  3747 ;;  i               1    6[BANK1 ] unsigned char 
  3748 ;;  Traw            2    2[BANK1 ] unsigned int 
  3749 ;;  readMessage     1    8[BANK1 ] unsigned char 
  3750 ;;  buttonPress     1    5[BANK1 ] enum E6327
  3751 ;;  s2Button        1    4[BANK1 ] unsigned char 
  3752 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  3753 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      enum E7241
  3756 ;; Registers used:
  3757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : F/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0
  3764 ;;      Locals:         0       0       9       0       0       0       0       0       0
  3765 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3766 ;;      Totals:         0       2       9       0       0       0       0       0       0
  3767 ;;Total ram usage:       11 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:   20
  3770 ;; This function calls:
  3771 ;;		_ADC_GetConversion
  3772 ;;		_ADC_TempConversion
  3773 ;;		_MOTEapp_TimerBasedTask
  3774 ;;		_MOTEapp_getModemResponse
  3775 ;;		_TMRapp_ClearBitFlags
  3776 ;;		_TMRapp_Handler
  3777 ;;		_moteApp_delayms
  3778 ;;		_moteJoiningProcess
  3779 ;;		_moteRunningProcess
  3780 ;;		_oled_clear
  3781 ;;		_oled_putString
  3782 ;;		_service_pushbutton
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text1
  3789  006728                     __ptext1:
  3790                           	opt stack 0
  3791  006728                     _moteHandler:
  3792                           	opt stack 10
  3793                           
  3794                           ;MOTEapp.c: 187: bool gotoSleep = 0;
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;incstack = 0
  3798  006728  0101               	movlb	1	; () banked
  3799  00672A  6BEA               	clrf	moteHandler@gotoSleep& (0+255),b
  3800                           
  3801                           ;MOTEapp.c: 188: bool gotoNextState = 0;
  3802  00672C  6BEB               	clrf	moteHandler@gotoNextState& (0+255),b
  3803                           
  3804                           ;MOTEapp.c: 189: bool s2Button = 0;
  3805  00672E  6BEE               	clrf	moteHandler@s2Button& (0+255),b
  3806                           
  3807                           ; BSR set to: 1
  3808                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  3809                           
  3810                           ; BSR set to: 1
  3811  006730  A080               	btfss	3968,0,c	;volatile
  3812  006732  D003               	goto	l10515
  3813                           
  3814                           ; BSR set to: 1
  3815                           ;MOTEapp.c: 198: moteState = MOTE_SWAP;
  3816  006734  0E04               	movlw	4
  3817  006736  0100               	movlb	0	; () banked
  3818  006738  6FF5               	movwf	_moteState& (0+255),b
  3819  00673A                     l10515:
  3820                           
  3821                           ;MOTEapp.c: 201: if ( appTimer.mSecTick )
  3822  00673A  0100               	movlb	0	; () banked
  3823  00673C  A195               	btfss	_appTimer& (0+255),0,b
  3824  00673E  D007               	goto	l10523
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;MOTEapp.c: 202: {
  3828                           ;MOTEapp.c: 204: TMRapp_ClearBitFlags();
  3829  006740  EC30  F021         	call	_TMRapp_ClearBitFlags	;wreg free
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;MOTEapp.c: 206: TMRapp_Handler();
  3833  006744  ECDE  F02E         	call	_TMRapp_Handler	;wreg free
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;MOTEapp.c: 207: MOTEapp_TimerBasedTask(appTimer);
  3837  006748  5195               	movf	_appTimer& (0+255),w,b
  3838  00674A  EC67  F021         	call	_MOTEapp_TimerBasedTask
  3839  00674E                     l10523:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;MOTEapp.c: 208: }
  3843                           ;MOTEapp.c: 211: buttonPress = service_pushbutton();
  3844  00674E  EC10  F025         	call	_service_pushbutton	;wreg free
  3845  006752  0101               	movlb	1	; () banked
  3846  006754  6FEF               	movwf	moteHandler@buttonPress& (0+255),b
  3847                           
  3848                           ;MOTEapp.c: 212: if (buttonPress == ShortPress1)
  3849  006756  05EF               	decf	moteHandler@buttonPress& (0+255),w,b
  3850  006758  E106               	bnz	l10529
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;MOTEapp.c: 213: {
  3854                           ;MOTEapp.c: 214: secTicker = 0;
  3855  00675A  0100               	movlb	0	; () banked
  3856  00675C  6BA0               	clrf	_secTicker& (0+255),b
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;MOTEapp.c: 215: gotoNextState = 1;
  3860  00675E  0E01               	movlw	1
  3861  006760  0101               	movlb	1	; () banked
  3862  006762  6FEB               	movwf	moteHandler@gotoNextState& (0+255),b
  3863                           
  3864                           ;MOTEapp.c: 216: }
  3865  006764  D008               	goto	l10535
  3866  006766                     l10529:
  3867                           
  3868                           ; BSR set to: 1
  3869                           ;MOTEapp.c: 217: else if (buttonPress == ShortPress2)
  3870  006766  0E02               	movlw	2
  3871  006768  19EF               	xorwf	moteHandler@buttonPress& (0+255),w,b
  3872  00676A  E105               	bnz	l10535
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;MOTEapp.c: 218: {
  3876                           ;MOTEapp.c: 219: secTicker = 0;
  3877  00676C  0100               	movlb	0	; () banked
  3878  00676E  6BA0               	clrf	_secTicker& (0+255),b
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;MOTEapp.c: 220: s2Button = 1;
  3882  006770  0E01               	movlw	1
  3883  006772  0101               	movlb	1	; () banked
  3884  006774  6FEE               	movwf	moteHandler@s2Button& (0+255),b
  3885  006776                     l10535:
  3886                           
  3887                           ; BSR set to: 1
  3888                           ;MOTEapp.c: 221: }
  3889                           ;MOTEapp.c: 224: if ( MOTEapp_getModemResponse() )
  3890  006776  ECEB  F024         	call	_MOTEapp_getModemResponse	;wreg free
  3891  00677A  0900               	iorlw	0
  3892  00677C  E004               	bz	l338
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;MOTEapp.c: 225: readMessage = 1;
  3896  00677E  0E01               	movlw	1
  3897  006780  0101               	movlb	1	; () banked
  3898  006782  6FF2               	movwf	moteHandler@readMessage& (0+255),b
  3899  006784  D002               	goto	l10539
  3900  006786                     l338:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;MOTEapp.c: 226: else
  3904                           ;MOTEapp.c: 227: readMessage = 0;
  3905  006786  0101               	movlb	1	; () banked
  3906  006788  6BF2               	clrf	moteHandler@readMessage& (0+255),b
  3907  00678A                     l10539:
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;MOTEapp.c: 230: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  3911  00678A  0E06               	movlw	6
  3912  00678C  0100               	movlb	0	; () banked
  3913  00678E  199F               	xorwf	_runningState& (0+255),w,b
  3914  006790  E003               	bz	l10543
  3915                           
  3916                           ; BSR set to: 0
  3917  006792  0E02               	movlw	2
  3918  006794  199F               	xorwf	_runningState& (0+255),w,b
  3919  006796  E146               	bnz	l10579
  3920  006798                     l10543:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;MOTEapp.c: 231: {
  3924                           ;MOTEapp.c: 233: if (m10SecTicker >= 5)
  3925  006798  0E04               	movlw	4
  3926  00679A  659B               	cpfsgt	_m10SecTicker& (0+255),b
  3927  00679C  D043               	goto	l10579
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;MOTEapp.c: 234: {
  3931                           ;MOTEapp.c: 235: uint16_t Traw = 0;
  3932  00679E  0101               	movlb	1	; () banked
  3933  0067A0  6BEC               	clrf	moteHandler@Traw& (0+255),b
  3934  0067A2  6BED               	clrf	(moteHandler@Traw+1)& (0+255),b
  3935                           
  3936                           ; BSR set to: 1
  3937                           ;MOTEapp.c: 236: moteApp_delayms(10);
  3938  0067A4  0100               	movlb	0	; () banked
  3939  0067A6  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3940  0067A8  0E0A               	movlw	10
  3941  0067AA  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  3942  0067AC  ECC2  F022         	call	_moteApp_delayms	;wreg free
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;MOTEapp.c: 237: for(uint8_t i = 32; i>0; i--)
  3946  0067B0  0E20               	movlw	32
  3947  0067B2  0101               	movlb	1	; () banked
  3948  0067B4  6FF0               	movwf	moteHandler@i& (0+255),b
  3949  0067B6                     l10555:
  3950                           
  3951                           ; BSR set to: 1
  3952                           ;MOTEapp.c: 238: {
  3953                           ;MOTEapp.c: 239: light = (light + ADC_GetConversion(Light_channel)) / 2;
  3954  0067B6  0E03               	movlw	3
  3955  0067B8  EC05  F024         	call	_ADC_GetConversion
  3956  0067BC  517D               	movf	_light& (0+255),w,b
  3957  0067BE  27B9               	addwf	?_ADC_GetConversion& (0+255),f,b
  3958  0067C0  517E               	movf	(_light+1)& (0+255),w,b
  3959  0067C2  23BA               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3960  0067C4  90D8               	bcf	status,0,c
  3961  0067C6  31BA               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3962  0067C8  6FEF               	movwf	??_moteHandler& (0+255),b
  3963  0067CA  31B9               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3964  0067CC  6F7D               	movwf	_light& (0+255),b
  3965  0067CE  C0EF  F07E         	movff	??_moteHandler,_light+1
  3966                           
  3967                           ; BSR set to: 0
  3968  0067D2  0101               	movlb	1	; () banked
  3969  0067D4  07F0               	decf	moteHandler@i& (0+255),f,b
  3970                           
  3971                           ; BSR set to: 1
  3972  0067D6  51F0               	movf	moteHandler@i& (0+255),w,b
  3973  0067D8  E1EE               	bnz	l10555
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;MOTEapp.c: 240: }
  3977                           ;MOTEapp.c: 241: moteApp_delayms(10);
  3978  0067DA  0100               	movlb	0	; () banked
  3979  0067DC  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3980  0067DE  0E0A               	movlw	10
  3981  0067E0  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  3982  0067E2  ECC2  F022         	call	_moteApp_delayms	;wreg free
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;MOTEapp.c: 242: for(uint8_t i = 32; i>0; i--)
  3986  0067E6  0E20               	movlw	32
  3987  0067E8  0101               	movlb	1	; () banked
  3988  0067EA  6FF1               	movwf	moteHandler@i_1298& (0+255),b
  3989  0067EC                     l10569:
  3990                           
  3991                           ; BSR set to: 1
  3992                           ;MOTEapp.c: 243: {
  3993                           ;MOTEapp.c: 244: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  3994  0067EC  0E02               	movlw	2
  3995  0067EE  EC05  F024         	call	_ADC_GetConversion
  3996  0067F2  0101               	movlb	1	; () banked
  3997  0067F4  51EC               	movf	moteHandler@Traw& (0+255),w,b
  3998  0067F6  0100               	movlb	0	; () banked
  3999  0067F8  27B9               	addwf	?_ADC_GetConversion& (0+255),f,b
  4000  0067FA  0101               	movlb	1	; () banked
  4001  0067FC  51ED               	movf	(moteHandler@Traw+1)& (0+255),w,b
  4002  0067FE  0100               	movlb	0	; () banked
  4003  006800  23BA               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4004  006802  90D8               	bcf	status,0,c
  4005  006804  31BA               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4006  006806  6FEF               	movwf	??_moteHandler& (0+255),b
  4007  006808  31B9               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4008  00680A  0101               	movlb	1	; () banked
  4009  00680C  6FEC               	movwf	moteHandler@Traw& (0+255),b
  4010  00680E  C0EF  F1ED         	movff	??_moteHandler,moteHandler@Traw+1
  4011                           
  4012                           ; BSR set to: 1
  4013  006812  07F1               	decf	moteHandler@i_1298& (0+255),f,b
  4014                           
  4015                           ; BSR set to: 1
  4016  006814  51F1               	movf	moteHandler@i_1298& (0+255),w,b
  4017  006816  E1EA               	bnz	l10569
  4018                           
  4019                           ; BSR set to: 1
  4020                           ;MOTEapp.c: 245: }
  4021                           ;MOTEapp.c: 246: temperature = ADC_TempConversion(Traw);
  4022  006818  51EC               	movf	moteHandler@Traw& (0+255),w,b
  4023  00681A  EC52  F022         	call	_ADC_TempConversion
  4024  00681E  6F83               	movwf	_temperature& (0+255),b
  4025  006820  6B84               	clrf	(_temperature+1)& (0+255),b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;MOTEapp.c: 247: m10SecTicker = 0;
  4029  006822  6B9B               	clrf	_m10SecTicker& (0+255),b
  4030  006824                     l10579:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;MOTEapp.c: 248: }
  4034                           ;MOTEapp.c: 249: }
  4035                           ;MOTEapp.c: 251: if(secTicker)
  4036  006824  51A0               	movf	_secTicker& (0+255),w,b
  4037  006826  E064               	bz	l10617
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;MOTEapp.c: 252: {
  4041                           ;MOTEapp.c: 253: if (secTicker >= 10)
  4042  006828  0E09               	movlw	9
  4043  00682A  65A0               	cpfsgt	_secTicker& (0+255),b
  4044  00682C  D061               	goto	l10617
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;MOTEapp.c: 254: {
  4048                           ;MOTEapp.c: 255: gotoSleep = 1;
  4049  00682E  0E01               	movlw	1
  4050  006830  0101               	movlb	1	; () banked
  4051  006832  6FEA               	movwf	moteHandler@gotoSleep& (0+255),b
  4052                           
  4053                           ; BSR set to: 1
  4054                           ;MOTEapp.c: 256: secTicker = 0;
  4055  006834  0100               	movlb	0	; () banked
  4056  006836  6BA0               	clrf	_secTicker& (0+255),b
  4057  006838  D05B               	goto	l10617
  4058  00683A                     l352:
  4059                           
  4060                           ; BSR set to: 0
  4061  00683A  D7FF               	goto	l352
  4062  00683C                     l10587:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;MOTEapp.c: 266: oled_clear();
  4066  00683C  ECCD  F021         	call	_oled_clear	;wreg free
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;MOTEapp.c: 267: oled_putString("MOTE Mode",1,0);
  4070  006840  0E0A               	movlw	low STR_23
  4071  006842  6FC6               	movwf	oled_putString@string& (0+255),b
  4072  006844  0E7F               	movlw	high STR_23
  4073  006846  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4074  006848  0E01               	movlw	1
  4075  00684A  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  4076  00684C  6BC9               	clrf	oled_putString@start_page& (0+255),b
  4077  00684E  ECF0  F026         	call	_oled_putString	;wreg free
  4078                           
  4079                           ;MOTEapp.c: 268: oled_putString("Starting",2,1);
  4080  006852  0E56               	movlw	low STR_24
  4081  006854  0100               	movlb	0	; () banked
  4082  006856  6FC6               	movwf	oled_putString@string& (0+255),b
  4083  006858  0E7F               	movlw	high STR_24
  4084  00685A  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4085  00685C  0E02               	movlw	2
  4086  00685E  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  4087  006860  0E01               	movlw	1
  4088  006862  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4089  006864  ECF0  F026         	call	_oled_putString	;wreg free
  4090                           
  4091                           ;MOTEapp.c: 269: oled_putString("ReRun PwrTst<S2>",0,3);
  4092  006868  0EE0               	movlw	low STR_25
  4093  00686A  0100               	movlb	0	; () banked
  4094  00686C  6FC6               	movwf	oled_putString@string& (0+255),b
  4095  00686E  0E7C               	movlw	high STR_25
  4096  006870  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4097  006872  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4098  006874  0E03               	movlw	3
  4099  006876  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4100  006878  ECF0  F026         	call	_oled_putString	;wreg free
  4101                           
  4102                           ;MOTEapp.c: 270: activeState = moteStartup;
  4103  00687C  0100               	movlb	0	; () banked
  4104  00687E  6B94               	clrf	_activeState& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;MOTEapp.c: 271: moteState = MOTE_JOINING;
  4108  006880  0E02               	movlw	2
  4109  006882  D029               	goto	L1
  4110  006884                     l10599:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;MOTEapp.c: 274: if ( moteJoiningProcess(readMessage, s2Button) )
  4114  006884  C1EE  F0DE         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  4115  006888  0101               	movlb	1	; () banked
  4116  00688A  51F2               	movf	moteHandler@readMessage& (0+255),w,b
  4117  00688C  EC54  F037         	call	_moteJoiningProcess
  4118  006890  0900               	iorlw	0
  4119  006892  E037               	bz	l10619
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;MOTEapp.c: 275: {
  4123                           ;MOTEapp.c: 276: oled_clear();
  4124  006894  ECCD  F021         	call	_oled_clear	;wreg free
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;MOTEapp.c: 277: oled_putString("Mobile Mote -App",0,0);
  4128  006898  0E35               	movlw	low STR_26
  4129  00689A  6FC6               	movwf	oled_putString@string& (0+255),b
  4130  00689C  0E7D               	movlw	high STR_26
  4131  00689E  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4132  0068A0  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4133  0068A2  6BC9               	clrf	oled_putString@start_page& (0+255),b
  4134  0068A4  ECF0  F026         	call	_oled_putString	;wreg free
  4135                           
  4136                           ;MOTEapp.c: 278: oled_putString("Navigate  Select", 0,2);
  4137  0068A8  0E46               	movlw	low STR_27
  4138  0068AA  0100               	movlb	0	; () banked
  4139  0068AC  6FC6               	movwf	oled_putString@string& (0+255),b
  4140  0068AE  0E7D               	movlw	high STR_27
  4141  0068B0  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4142  0068B2  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4143  0068B4  0E02               	movlw	2
  4144  0068B6  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4145  0068B8  ECF0  F026         	call	_oled_putString	;wreg free
  4146                           
  4147                           ;MOTEapp.c: 279: oled_putString(" (S1)      (S2) ", 0,3);
  4148  0068BC  0EBE               	movlw	low STR_28
  4149  0068BE  0100               	movlb	0	; () banked
  4150  0068C0  6FC6               	movwf	oled_putString@string& (0+255),b
  4151  0068C2  0E7C               	movlw	high STR_28
  4152  0068C4  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4153  0068C6  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4154  0068C8  0E03               	movlw	3
  4155  0068CA  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4156  0068CC  ECF0  F026         	call	_oled_putString	;wreg free
  4157                           
  4158                           ;MOTEapp.c: 280: runningState = runningEnter;
  4159  0068D0  0100               	movlb	0	; () banked
  4160  0068D2  6B9F               	clrf	_runningState& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;MOTEapp.c: 281: moteState = MOTE_RUNNING;
  4164  0068D4  0E03               	movlw	3
  4165  0068D6                     L1:
  4166  0068D6  6FF5               	movwf	_moteState& (0+255),b
  4167  0068D8  D014               	goto	l10619
  4168  0068DA                     l10613:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;MOTEapp.c: 285: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  4172  0068DA  C1EE  F0D5         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  4173  0068DE  C1F2  F0D6         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  4174  0068E2  C1EA  F0D7         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  4175  0068E6  0101               	movlb	1	; () banked
  4176  0068E8  51EB               	movf	moteHandler@gotoNextState& (0+255),w,b
  4177  0068EA  ECCE  F032         	call	_moteRunningProcess
  4178                           
  4179                           ;MOTEapp.c: 286: break;
  4180  0068EE  D009               	goto	l10619
  4181  0068F0                     l10617:
  4182                           
  4183                           ; BSR set to: 0
  4184  0068F0  51F5               	movf	_moteState& (0+255),w,b
  4185                           
  4186                           ; Switch size 1, requested type "speed"
  4187                           ; Number of cases is 4, Range of values is 1 to 4
  4188                           ; switch strategies available:
  4189                           ; Name         Instructions Cycles
  4190                           ; simple_byte           13     7 (average)
  4191                           ;	Chosen strategy is simple_byte
  4192  0068F2  0A01               	xorlw	1	; case 1
  4193  0068F4  E0A3               	bz	l10587
  4194  0068F6  0A03               	xorlw	3	; case 2
  4195  0068F8  E0C5               	bz	l10599
  4196  0068FA  0A01               	xorlw	1	; case 3
  4197  0068FC  E0EE               	bz	l10613
  4198  0068FE  0A07               	xorlw	7	; case 4
  4199  006900  E19C               	bnz	l352
  4200  006902                     l10619:
  4201                           
  4202                           ;MOTEapp.c: 291: return moteState;
  4203  006902  0100               	movlb	0	; () banked
  4204  006904  51F5               	movf	_moteState& (0+255),w,b
  4205                           
  4206                           ; BSR set to: 0
  4207  006906  0012               	return		;funcret
  4208  006908                     __end_of_moteHandler:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           intcon	equ	0xFF2
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           postdec1	equ	0xFE5
  4218                           fsr1l	equ	0xFE1
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _service_pushbutton *****************
  4222 ;; Defined at:
  4223 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  bs              1    0[BANK0 ] enum E6178
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      enum E6327
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : F/0
  4234 ;;		On exit  : F/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0
  4238 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4240 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4241 ;;Total ram usage:        1 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:   11
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_moteHandler
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text2
  4252  004A20                     __ptext2:
  4253                           	opt stack 0
  4254  004A20                     _service_pushbutton:
  4255                           	opt stack 18
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;incstack = 0
  4262  004A20  A082               	btfss	3970,0,c	;volatile
  4263  004A22  D002               	goto	l9739
  4264                           
  4265                           ; BSR set to: 0
  4266  004A24  B282               	btfsc	3970,1,c	;volatile
  4267  004A26  D014               	goto	l9747
  4268  004A28                     l9739:
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;buttons.c: 21: {
  4272                           ;buttons.c: 22: ++PB_Timer;
  4273  004A28  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  4274  004A2A  0E00               	movlw	0
  4275  004A2C  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  4276  004A2E  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  4277  004A30  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  4278                           
  4279                           ;buttons.c: 26: if (PB_Timer == 55)
  4280  004A32  0E37               	movlw	55
  4281  004A34  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  4282  004A36  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  4283  004A38  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  4284  004A3A  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  4285  004A3C  E107               	bnz	l791
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;buttons.c: 27: {
  4289                           ;buttons.c: 28: Release_Timer = 0;
  4290  004A3E  6BA3               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4291                           
  4292                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  4293  004A40  B082               	btfsc	3970,0,c	;volatile
  4294  004A42  D002               	goto	l9745
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;buttons.c: 31: {
  4298                           ;buttons.c: 32: bs = ShortPress1;
  4299  004A44  0E01               	movlw	1
  4300  004A46  D00F               	goto	L2
  4301  004A48                     l9745:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;buttons.c: 34: else
  4305                           ;buttons.c: 35: {
  4306                           ;buttons.c: 36: bs = ShortPress2;
  4307  004A48  0E02               	movlw	2
  4308  004A4A  D00D               	goto	L2
  4309  004A4C                     l791:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;buttons.c: 39: else
  4313                           ;buttons.c: 40: {
  4314                           ;buttons.c: 41: bs = NoButton;
  4315  004A4C  6BB9               	clrf	service_pushbutton@bs& (0+255),b
  4316  004A4E  D00C               	goto	l9755
  4317  004A50                     l9747:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;buttons.c: 44: else
  4321                           ;buttons.c: 45: {
  4322                           ;buttons.c: 46: if (Release_Timer == 20)
  4323  004A50  0E14               	movlw	20
  4324  004A52  19A3               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  4325  004A54  E106               	bnz	l9751
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;buttons.c: 47: {
  4329                           ;buttons.c: 48: PB_Timer = 0;
  4330  004A56  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  4331  004A58  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  4332  004A5A  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  4333  004A5C  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  4334                           
  4335                           ;buttons.c: 49: Release_Timer = 0;
  4336  004A5E  6BA3               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4337                           
  4338                           ;buttons.c: 50: }
  4339  004A60  D001               	goto	l9753
  4340  004A62                     l9751:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;buttons.c: 51: else
  4344                           ;buttons.c: 52: {
  4345                           ;buttons.c: 53: Release_Timer++;
  4346  004A62  2BA3               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  4347  004A64                     l9753:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;buttons.c: 54: }
  4351                           ;buttons.c: 55: bs = Released;
  4352  004A64  0E03               	movlw	3
  4353  004A66                     L2:
  4354  004A66  6FB9               	movwf	service_pushbutton@bs& (0+255),b
  4355  004A68                     l9755:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;buttons.c: 56: }
  4359                           ;buttons.c: 58: return bs;
  4360  004A68  51B9               	movf	service_pushbutton@bs& (0+255),w,b
  4361                           
  4362                           ; BSR set to: 0
  4363  004A6A  0012               	return		;funcret
  4364  004A6C                     __end_of_service_pushbutton:
  4365                           	opt stack 0
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           intcon	equ	0xFF2
  4371                           postinc0	equ	0xFEE
  4372                           wreg	equ	0xFE8
  4373                           postdec1	equ	0xFE5
  4374                           fsr1l	equ	0xFE1
  4375                           status	equ	0xFD8
  4376                           
  4377 ;; *************** function _moteRunningProcess *****************
  4378 ;; Defined at:
  4379 ;;		line 738 in file "../Includes/Board/MOTEapp.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  changeStates    1    wreg     unsigned char 
  4382 ;;  selectButton    1   28[BANK0 ] unsigned char 
  4383 ;;  messageReady    1   29[BANK0 ] unsigned char 
  4384 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  changeStates    1    0[COMRAM] unsigned char 
  4387 ;;  i               1   36[BANK0 ] unsigned char 
  4388 ;;  i               1   35[BANK0 ] unsigned char 
  4389 ;;  Traw            2   33[BANK0 ] unsigned int 
  4390 ;;  readByte        1    0        unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      enum E6578
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : F/1
  4397 ;;		On exit  : E/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4400 ;;      Params:         0       3       0       0       0       0       0       0       0
  4401 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4402 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4403 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4404 ;;Total ram usage:        9 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   19
  4407 ;; This function calls:
  4408 ;;		_ADC_GetConversion
  4409 ;;		_ADC_TempConversion
  4410 ;;		_TMR2_ReadTimer
  4411 ;;		_moteApp_GoToSleep
  4412 ;;		_moteApp_add16bToDataBuffer
  4413 ;;		_moteApp_add8bToDataBuffer
  4414 ;;		_moteApp_clearBuffers
  4415 ;;		_moteApp_delayms
  4416 ;;		_oled_clear
  4417 ;;		_oled_putString
  4418 ;;		_oled_putUint16
  4419 ;;		_oled_putUint8
  4420 ;;		_sendDataCommand
  4421 ;; This function is called by:
  4422 ;;		_moteHandler
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text3
  4427  00659C                     __ptext3:
  4428                           	opt stack 0
  4429  00659C                     _moteRunningProcess:
  4430                           	opt stack 10
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;MOTEapp.c: 742: if ((sleepEvent) && (periodicState))
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;incstack = 0
  4437  00659C  0100               	movlb	0	; () banked
  4438  00659E  51D7               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  4439  0065A0  E101 D0BF          	bz	l10243
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;MOTEapp.c: 743: {
  4443                           ;MOTEapp.c: 744: if (sleepTicker >= 33)
  4444  0065A4  0E20               	movlw	32
  4445  0065A6  65A1               	cpfsgt	_sleepTicker& (0+255),b
  4446  0065A8  D0B9               	goto	l10237
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;MOTEapp.c: 745: {
  4450                           ;MOTEapp.c: 747: uint16_t Traw = 0;
  4451  0065AA  6BDA               	clrf	moteRunningProcess@Traw& (0+255),b
  4452  0065AC  6BDB               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;MOTEapp.c: 748: moteApp_delayms(10);
  4456  0065AE  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4457  0065B0  0E0A               	movlw	10
  4458  0065B2  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  4459  0065B4  ECC2  F022         	call	_moteApp_delayms	;wreg free
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;MOTEapp.c: 749: for(uint8_t i = 32; i>0; i--)
  4463  0065B8  0E20               	movlw	32
  4464  0065BA  6FDC               	movwf	moteRunningProcess@i& (0+255),b
  4465  0065BC                     l10167:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;MOTEapp.c: 750: {
  4469                           ;MOTEapp.c: 751: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4470  0065BC  0E03               	movlw	3
  4471  0065BE  EC05  F024         	call	_ADC_GetConversion
  4472  0065C2  517D               	movf	_light& (0+255),w,b
  4473  0065C4  27B9               	addwf	?_ADC_GetConversion& (0+255),f,b
  4474  0065C6  517E               	movf	(_light+1)& (0+255),w,b
  4475  0065C8  23BA               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4476  0065CA  90D8               	bcf	status,0,c
  4477  0065CC  31BA               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4478  0065CE  6FD8               	movwf	??_moteRunningProcess& (0+255),b
  4479  0065D0  31B9               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4480  0065D2  6F7D               	movwf	_light& (0+255),b
  4481  0065D4  C0D8  F07E         	movff	??_moteRunningProcess,_light+1
  4482                           
  4483                           ; BSR set to: 0
  4484  0065D8  07DC               	decf	moteRunningProcess@i& (0+255),f,b
  4485                           
  4486                           ; BSR set to: 0
  4487  0065DA  51DC               	movf	moteRunningProcess@i& (0+255),w,b
  4488  0065DC  E1EF               	bnz	l10167
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;MOTEapp.c: 752: }
  4492                           ;MOTEapp.c: 753: moteApp_delayms(10);
  4493  0065DE  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4494  0065E0  0E0A               	movlw	10
  4495  0065E2  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  4496  0065E4  ECC2  F022         	call	_moteApp_delayms	;wreg free
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;MOTEapp.c: 754: for(uint8_t i = 32; i>0; i--)
  4500  0065E8  0E20               	movlw	32
  4501  0065EA  6FDD               	movwf	moteRunningProcess@i_1400& (0+255),b
  4502  0065EC                     l10181:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;MOTEapp.c: 755: {
  4506                           ;MOTEapp.c: 756: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4507  0065EC  0E02               	movlw	2
  4508  0065EE  EC05  F024         	call	_ADC_GetConversion
  4509  0065F2  51DA               	movf	moteRunningProcess@Traw& (0+255),w,b
  4510  0065F4  27B9               	addwf	?_ADC_GetConversion& (0+255),f,b
  4511  0065F6  51DB               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  4512  0065F8  23BA               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4513  0065FA  90D8               	bcf	status,0,c
  4514  0065FC  31BA               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4515  0065FE  6FD8               	movwf	??_moteRunningProcess& (0+255),b
  4516  006600  31B9               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4517  006602  6FDA               	movwf	moteRunningProcess@Traw& (0+255),b
  4518  006604  C0D8  F0DB         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  4519                           
  4520                           ; BSR set to: 0
  4521  006608  07DD               	decf	moteRunningProcess@i_1400& (0+255),f,b
  4522                           
  4523                           ; BSR set to: 0
  4524  00660A  51DD               	movf	moteRunningProcess@i_1400& (0+255),w,b
  4525  00660C  E1EF               	bnz	l10181
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;MOTEapp.c: 757: }
  4529                           ;MOTEapp.c: 758: temperature = ADC_TempConversion(Traw);
  4530  00660E  51DA               	movf	moteRunningProcess@Traw& (0+255),w,b
  4531  006610  EC52  F022         	call	_ADC_TempConversion
  4532  006614  6F83               	movwf	_temperature& (0+255),b
  4533  006616  6B84               	clrf	(_temperature+1)& (0+255),b
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;MOTEapp.c: 760: sleepTicker = 0;
  4537  006618  6BA1               	clrf	_sleepTicker& (0+255),b
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;MOTEapp.c: 761: oled_clear();
  4541  00661A  ECCD  F021         	call	_oled_clear	;wreg free
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;MOTEapp.c: 762: oled_putString("Issue Perodic TX",0,0);
  4545  00661E  0EF1               	movlw	low STR_87
  4546  006620  6FC6               	movwf	oled_putString@string& (0+255),b
  4547  006622  0E7C               	movlw	high STR_87
  4548  006624  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4549  006626  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4550  006628  6BC9               	clrf	oled_putString@start_page& (0+255),b
  4551  00662A  ECF0  F026         	call	_oled_putString	;wreg free
  4552                           
  4553                           ;MOTEapp.c: 763: oled_putString("On Port #: ",0,1);
  4554  00662E  0E95               	movlw	low STR_88
  4555  006630  0100               	movlb	0	; () banked
  4556  006632  6FC6               	movwf	oled_putString@string& (0+255),b
  4557  006634  0E7E               	movlw	high STR_88
  4558  006636  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4559  006638  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4560  00663A  0E01               	movlw	1
  4561  00663C  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4562  00663E  ECF0  F026         	call	_oled_putString	;wreg free
  4563                           
  4564                           ;MOTEapp.c: 764: oled_putUint8(randomPortNum,10,1);
  4565  006642  0E0A               	movlw	10
  4566  006644  0100               	movlb	0	; () banked
  4567  006646  6FCB               	movwf	oled_putUint8@station_dot& (0+255),b
  4568  006648  0E01               	movlw	1
  4569  00664A  6FCC               	movwf	oled_putUint8@start_page& (0+255),b
  4570  00664C  519E               	movf	_randomPortNum& (0+255),w,b
  4571  00664E  EC03  F026         	call	_oled_putUint8
  4572                           
  4573                           ;MOTEapp.c: 765: oled_putString("L:       T: ",0,2);
  4574  006652  0ED3               	movlw	low STR_89
  4575  006654  0100               	movlb	0	; () banked
  4576  006656  6FC6               	movwf	oled_putString@string& (0+255),b
  4577  006658  0E7D               	movlw	high STR_89
  4578  00665A  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4579  00665C  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4580  00665E  0E02               	movlw	2
  4581  006660  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4582  006662  ECF0  F026         	call	_oled_putString	;wreg free
  4583                           
  4584                           ;MOTEapp.c: 766: oled_putUint16(light,3,2);
  4585  006666  C07D  F0CB         	movff	_light,oled_putUint16@number
  4586  00666A  C07E  F0CC         	movff	_light+1,oled_putUint16@number+1
  4587  00666E  0E03               	movlw	3
  4588  006670  0100               	movlb	0	; () banked
  4589  006672  6FCD               	movwf	oled_putUint16@station_dot& (0+255),b
  4590  006674  0E02               	movlw	2
  4591  006676  6FCE               	movwf	oled_putUint16@start_page& (0+255),b
  4592  006678  ECBF  F02F         	call	_oled_putUint16	;wreg free
  4593                           
  4594                           ;MOTEapp.c: 767: oled_putUint8(temperature,12,2);
  4595  00667C  0E0C               	movlw	12
  4596  00667E  0100               	movlb	0	; () banked
  4597  006680  6FCB               	movwf	oled_putUint8@station_dot& (0+255),b
  4598  006682  0E02               	movlw	2
  4599  006684  6FCC               	movwf	oled_putUint8@start_page& (0+255),b
  4600  006686  5183               	movf	_temperature& (0+255),w,b
  4601  006688  EC03  F026         	call	_oled_putUint8
  4602                           
  4603                           ;MOTEapp.c: 768: oled_putString("(NAV)    (SEL) ",0,3);
  4604  00668C  0E57               	movlw	low STR_90
  4605  00668E  0100               	movlb	0	; () banked
  4606  006690  6FC6               	movwf	oled_putString@string& (0+255),b
  4607  006692  0E7D               	movlw	high STR_90
  4608  006694  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4609  006696  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  4610  006698  0E03               	movlw	3
  4611  00669A  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4612  00669C  ECF0  F026         	call	_oled_putString	;wreg free
  4613                           
  4614                           ;MOTEapp.c: 770: moteApp_clearBuffers();
  4615  0066A0  EC7D  F024         	call	_moteApp_clearBuffers	;wreg free
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;MOTEapp.c: 771: randomPortNum = TMR2_ReadTimer();
  4619  0066A4  EC44  F021         	call	_TMR2_ReadTimer	;wreg free
  4620  0066A8  6F9E               	movwf	_randomPortNum& (0+255),b
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;MOTEapp.c: 773: if (!randomPortNum)
  4624  0066AA  519E               	movf	_randomPortNum& (0+255),w,b
  4625  0066AC  E103               	bnz	l10215
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;MOTEapp.c: 774: randomPortNum = 5;
  4629  0066AE  0E05               	movlw	5
  4630  0066B0  6F9E               	movwf	_randomPortNum& (0+255),b
  4631  0066B2  D005               	goto	l10219
  4632  0066B4                     l10215:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;MOTEapp.c: 775: else if (randomPortNum > 223)
  4636  0066B4  0EDF               	movlw	223
  4637  0066B6  659E               	cpfsgt	_randomPortNum& (0+255),b
  4638  0066B8  D002               	goto	l10219
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;MOTEapp.c: 776: randomPortNum = randomPortNum - 50;
  4642  0066BA  0ECE               	movlw	206
  4643  0066BC  279E               	addwf	_randomPortNum& (0+255),f,b
  4644  0066BE                     l10219:
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;MOTEapp.c: 778: moteApp_add8bToDataBuffer(randomPortNum, 0);
  4648  0066BE  6BBD               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4649  0066C0  519E               	movf	_randomPortNum& (0+255),w,b
  4650  0066C2  EC8E  F026         	call	_moteApp_add8bToDataBuffer
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;MOTEapp.c: 779: dataBuffer[3] = 0x20;
  4654  0066C6  0E20               	movlw	32
  4655  0066C8  6FA7               	movwf	(_dataBuffer+3)& (0+255),b
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;MOTEapp.c: 780: moteApp_add16bToDataBuffer(light, 4);
  4659  0066CA  C07D  F0C5         	movff	_light,moteApp_add16bToDataBuffer@number
  4660  0066CE  C07E  F0C6         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  4661  0066D2  0E04               	movlw	4
  4662  0066D4  6FC7               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  4663  0066D6  ECB9  F031         	call	_moteApp_add16bToDataBuffer	;wreg free
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;MOTEapp.c: 781: moteApp_add8bToDataBuffer(temperature, 9);
  4667  0066DA  0E09               	movlw	9
  4668  0066DC  6FBD               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4669  0066DE  5183               	movf	_temperature& (0+255),w,b
  4670  0066E0  EC8E  F026         	call	_moteApp_add8bToDataBuffer
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;MOTEapp.c: 783: sleepTxOccurances = 0;
  4674  0066E4  F000               	nop	
  4675                           
  4676                           ;MOTEapp.c: 784: oled_putString("C",15,1);
  4677  0066E6  0E85               	movlw	low (STR_38+47)
  4678  0066E8  0100               	movlb	0	; () banked
  4679  0066EA  6FC6               	movwf	oled_putString@string& (0+255),b
  4680  0066EC  0E7B               	movlw	high (STR_38+47)
  4681  0066EE  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  4682  0066F0  0E0F               	movlw	15
  4683  0066F2  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  4684  0066F4  0E01               	movlw	1
  4685  0066F6  6FC9               	movwf	oled_putString@start_page& (0+255),b
  4686  0066F8  ECF0  F026         	call	_oled_putString	;wreg free
  4687                           
  4688                           ;MOTEapp.c: 785: sendDataCommand("radio tx ", dataBuffer, 12);
  4689  0066FC  0E00               	movlw	low STR_92
  4690  0066FE  0100               	movlb	0	; () banked
  4691  006700  6FBA               	movwf	sendDataCommand@string& (0+255),b
  4692  006702  0E7F               	movlw	high STR_92
  4693  006704  6FBB               	movwf	(sendDataCommand@string+1)& (0+255),b
  4694  006706  0EA4               	movlw	low _dataBuffer
  4695  006708  6FBC               	movwf	sendDataCommand@appData& (0+255),b
  4696  00670A  0E0C               	movlw	12
  4697  00670C  6FBD               	movwf	sendDataCommand@dataLength& (0+255),b
  4698  00670E  ECD8  F029         	call	_sendDataCommand	;wreg free
  4699                           
  4700                           ;MOTEapp.c: 786: secTicker = 10 - (10 / 3);
  4701  006712  0E07               	movlw	7
  4702  006714  0100               	movlb	0	; () banked
  4703  006716  6FA0               	movwf	_secTicker& (0+255),b
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;MOTEapp.c: 787: runningState = runningUplinkTransmit;
  4707  006718  0E08               	movlw	8
  4708  00671A  D002               	goto	L37
  4709  00671C                     l10237:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;MOTEapp.c: 789: else
  4713                           ;MOTEapp.c: 790: {
  4714                           ;MOTEapp.c: 791: sleepTicker++;
  4715  00671C  2BA1               	incf	_sleepTicker& (0+255),f,b
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;MOTEapp.c: 792: runningState = runningSleep;
  4719  00671E  0E0E               	movlw	14
  4720  006720                     L37:
  4721  006720  6F9F               	movwf	_runningState& (0+255),b
  4722  006722                     l10243:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;MOTEapp.c: 794: }
  4726                           ;MOTEapp.c: 795: }
  4727                           ;MOTEapp.c: 797: moteApp_GoToSleep();
  4728  006722  EC57  F027         	call	_moteApp_GoToSleep	;wreg free
  4729  006726                     l505:
  4730  006726  D7FF               	goto	l505
  4731  006728                     __end_of_moteRunningProcess:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           intcon	equ	0xFF2
  4738                           postinc0	equ	0xFEE
  4739                           wreg	equ	0xFE8
  4740                           postdec1	equ	0xFE5
  4741                           fsr1l	equ	0xFE1
  4742                           status	equ	0xFD8
  4743                           
  4744 ;; *************** function _sendDataCommand *****************
  4745 ;; Defined at:
  4746 ;;		line 967 in file "../Includes/Board/MOTEapp.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  4749 ;;		 -> STR_92(10), 
  4750 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  4751 ;;		 -> dataBuffer(12), 
  4752 ;;  dataLength      1    4[BANK0 ] unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  byteCount       1    7[BANK0 ] unsigned char 
  4755 ;;  byteCount       1    6[BANK0 ] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : F/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4765 ;;      Params:         0       4       0       0       0       0       0       0       0
  4766 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4767 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4768 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4769 ;;Total ram usage:        7 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:   13
  4772 ;; This function calls:
  4773 ;;		_EUSART_Write
  4774 ;;		_EndLine
  4775 ;;		_hexToStr
  4776 ;; This function is called by:
  4777 ;;		_moteRunningProcess
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text4
  4782  0053B0                     __ptext4:
  4783                           	opt stack 0
  4784  0053B0                     _sendDataCommand:
  4785                           	opt stack 15
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;MOTEapp.c: 970: while (*string)
  4789                           
  4790                           ;incstack = 0
  4791  0053B0  D00B               	goto	l9463
  4792  0053B2                     l9459:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;MOTEapp.c: 971: {
  4796                           ;MOTEapp.c: 972: EUSART_Write(*string++);
  4797  0053B2  C0BA  FFF6         	movff	sendDataCommand@string,tblptrl
  4798  0053B6  C0BB  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4799  0053BA                     	if	0	;tblptru may be non-zero
  4800  0053BA                     	endif
  4801  0053BA                     	if	0	;tblptru may be non-zero
  4802  0053BA                     	endif
  4803  0053BA  0008               	tblrd		*
  4804  0053BC  50F5               	movf	tablat,w,c
  4805  0053BE  EC99  F023         	call	_EUSART_Write
  4806  0053C2  0100               	movlb	0	; () banked
  4807  0053C4  4BBA               	infsnz	sendDataCommand@string& (0+255),f,b
  4808  0053C6  2BBB               	incf	(sendDataCommand@string+1)& (0+255),f,b
  4809  0053C8                     l9463:
  4810                           
  4811                           ; BSR set to: 0
  4812  0053C8  C0BA  FFF6         	movff	sendDataCommand@string,tblptrl
  4813  0053CC  C0BB  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4814  0053D0                     	if	0	;tblptru may be non-zero
  4815  0053D0                     	endif
  4816  0053D0                     	if	0	;tblptru may be non-zero
  4817  0053D0                     	endif
  4818  0053D0  0008               	tblrd		*
  4819  0053D2  50F5               	movf	tablat,w,c
  4820  0053D4  E1EE               	bnz	l9459
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;MOTEapp.c: 973: }
  4824                           ;MOTEapp.c: 975: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  4825  0053D6  6BBF               	clrf	sendDataCommand@byteCount& (0+255),b
  4826  0053D8                     l9469:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;MOTEapp.c: 976: {
  4830                           ;MOTEapp.c: 977: EUSART_Write(appData[byteCount]);
  4831  0053D8  51BC               	movf	sendDataCommand@appData& (0+255),w,b
  4832  0053DA  25BF               	addwf	sendDataCommand@byteCount& (0+255),w,b
  4833  0053DC  6ED9               	movwf	fsr2l,c
  4834  0053DE  6ADA               	clrf	fsr2h,c
  4835  0053E0  50DF               	movf	indf2,w,c
  4836  0053E2  EC99  F023         	call	_EUSART_Write
  4837  0053E6  0100               	movlb	0	; () banked
  4838  0053E8  2BBF               	incf	sendDataCommand@byteCount& (0+255),f,b
  4839                           
  4840                           ; BSR set to: 0
  4841  0053EA  0E02               	movlw	2
  4842  0053EC  65BF               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  4843  0053EE  D7F4               	goto	l9469
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;MOTEapp.c: 978: }
  4847                           ;MOTEapp.c: 980: EUSART_Write(appData[3]);
  4848  0053F0  51BC               	movf	sendDataCommand@appData& (0+255),w,b
  4849  0053F2  6ED9               	movwf	fsr2l,c
  4850  0053F4  6ADA               	clrf	fsr2h,c
  4851  0053F6  0E03               	movlw	3
  4852  0053F8  26D9               	addwf	fsr2l,f,c
  4853  0053FA  50DF               	movf	indf2,w,c
  4854  0053FC  EC99  F023         	call	_EUSART_Write
  4855                           
  4856                           ;MOTEapp.c: 982: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  4857  005400  0E04               	movlw	4
  4858  005402  0100               	movlb	0	; () banked
  4859  005404  6FC0               	movwf	sendDataCommand@byteCount_1458& (0+255),b
  4860  005406  D019               	goto	l9483
  4861  005408                     l9479:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;MOTEapp.c: 983: {
  4865                           ;MOTEapp.c: 984: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  4866  005408  51BC               	movf	sendDataCommand@appData& (0+255),w,b
  4867  00540A  25C0               	addwf	sendDataCommand@byteCount_1458& (0+255),w,b
  4868  00540C  6ED9               	movwf	fsr2l,c
  4869  00540E  6ADA               	clrf	fsr2h,c
  4870  005410  50DF               	movf	indf2,w,c
  4871  005412  6FBE               	movwf	??_sendDataCommand& (0+255),b
  4872  005414  39BE               	swapf	??_sendDataCommand& (0+255),w,b
  4873  005416  0B0F               	andlw	15
  4874  005418  EC87  F022         	call	_hexToStr
  4875  00541C  EC99  F023         	call	_EUSART_Write
  4876                           
  4877                           ;MOTEapp.c: 985: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  4878  005420  0100               	movlb	0	; () banked
  4879  005422  51BC               	movf	sendDataCommand@appData& (0+255),w,b
  4880  005424  25C0               	addwf	sendDataCommand@byteCount_1458& (0+255),w,b
  4881  005426  6ED9               	movwf	fsr2l,c
  4882  005428  6ADA               	clrf	fsr2h,c
  4883  00542A  50DF               	movf	indf2,w,c
  4884  00542C  0B0F               	andlw	15
  4885  00542E  EC87  F022         	call	_hexToStr
  4886  005432  EC99  F023         	call	_EUSART_Write
  4887  005436  0100               	movlb	0	; () banked
  4888  005438  2BC0               	incf	sendDataCommand@byteCount_1458& (0+255),f,b
  4889  00543A                     l9483:
  4890                           
  4891                           ; BSR set to: 0
  4892  00543A  51BD               	movf	sendDataCommand@dataLength& (0+255),w,b
  4893  00543C  5DC0               	subwf	sendDataCommand@byteCount_1458& (0+255),w,b
  4894  00543E  E3E4               	bnc	l9479
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;MOTEapp.c: 986: }
  4898                           ;MOTEapp.c: 987: EndLine();
  4899  005440  EF5A  F021         	goto	_EndLine	;wreg free
  4900  005444                     __end_of_sendDataCommand:
  4901                           	opt stack 0
  4902                           tblptru	equ	0xFF8
  4903                           tblptrh	equ	0xFF7
  4904                           tblptrl	equ	0xFF6
  4905                           tablat	equ	0xFF5
  4906                           intcon	equ	0xFF2
  4907                           postinc0	equ	0xFEE
  4908                           wreg	equ	0xFE8
  4909                           postdec1	equ	0xFE5
  4910                           fsr1l	equ	0xFE1
  4911                           indf2	equ	0xFDF
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function _hexToStr *****************
  4917 ;; Defined at:
  4918 ;;		line 999 in file "../Includes/Board/MOTEapp.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  character       1    wreg     unsigned char 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  character       1    0[BANK0 ] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0
  4927 ;; Tracked objects:
  4928 ;;		On entry : F/0
  4929 ;;		On exit  : F/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0
  4933 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4935 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4936 ;;Total ram usage:        1 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:   11
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_sendDataCommand
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text5
  4947  00450E                     __ptext5:
  4948                           	opt stack 0
  4949  00450E                     _hexToStr:
  4950                           	opt stack 16
  4951                           
  4952                           ;incstack = 0
  4953                           ;hexToStr@character stored from wreg
  4954  00450E  6FB9               	movwf	hexToStr@character& (0+255),b
  4955                           
  4956                           ;MOTEapp.c: 1002: character = character & 0x0F;
  4957  004510  0E0F               	movlw	15
  4958  004512  0100               	movlb	0	; () banked
  4959  004514  17B9               	andwf	hexToStr@character& (0+255),f,b
  4960                           
  4961                           ;MOTEapp.c: 1004: if (character < 0x0A)
  4962  004516  0E0A               	movlw	10
  4963  004518  61B9               	cpfslt	hexToStr@character& (0+255),b
  4964  00451A  D003               	goto	l8945
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;MOTEapp.c: 1005: {
  4968                           ;MOTEapp.c: 1006: return character + '0';
  4969  00451C  51B9               	movf	hexToStr@character& (0+255),w,b
  4970  00451E  0F30               	addlw	48
  4971  004520  0012               	return	
  4972  004522                     l8945:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;MOTEapp.c: 1008: else if ( (character >= 0x0A) && (character <= 0x0F) )
  4976  004522  0E09               	movlw	9
  4977  004524  65B9               	cpfsgt	hexToStr@character& (0+255),b
  4978  004526  0C00               	retlw	0
  4979                           
  4980                           ; BSR set to: 0
  4981  004528  0E10               	movlw	16
  4982  00452A  61B9               	cpfslt	hexToStr@character& (0+255),b
  4983  00452C  0C00               	retlw	0
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;MOTEapp.c: 1009: {
  4987                           ;MOTEapp.c: 1010: return character + '0' + 7;
  4988  00452E  51B9               	movf	hexToStr@character& (0+255),w,b
  4989  004530  0F37               	addlw	55
  4990  004532  0012               	return	
  4991  004534                     __end_of_hexToStr:
  4992                           	opt stack 0
  4993                           tblptru	equ	0xFF8
  4994                           tblptrh	equ	0xFF7
  4995                           tblptrl	equ	0xFF6
  4996                           tablat	equ	0xFF5
  4997                           intcon	equ	0xFF2
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           postdec1	equ	0xFE5
  5001                           fsr1l	equ	0xFE1
  5002                           indf2	equ	0xFDF
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _oled_putUint8 *****************
  5008 ;; Defined at:
  5009 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  number          1    wreg     unsigned char 
  5012 ;;  station_dot     1   18[BANK0 ] unsigned char 
  5013 ;;  start_page      1   19[BANK0 ] unsigned char 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  number          1   20[BANK0 ] unsigned char 
  5016 ;;  numData         6   21[BANK0 ] struct .
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      void 
  5019 ;; Registers used:
  5020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : F/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         0       2       0       0       0       0       0       0       0
  5027 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5029 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        9 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:   16
  5033 ;; This function calls:
  5034 ;;		___lbdiv
  5035 ;;		___lbmod
  5036 ;;		_oled_putString
  5037 ;; This function is called by:
  5038 ;;		_moteRunningProcess
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text6
  5043  004C06                     __ptext6:
  5044                           	opt stack 0
  5045  004C06                     _oled_putUint8:
  5046                           	opt stack 12
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;incstack = 0
  5050                           ;oled_putUint8@number stored from wreg
  5051  004C06  6FCD               	movwf	oled_putUint8@number& (0+255),b
  5052                           
  5053                           ;SSD1306oLED.c: 228: display_data_t numData;
  5054                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  5055  004C08  0E0A               	movlw	10
  5056  004C0A  0100               	movlb	0	; () banked
  5057  004C0C  6FB9               	movwf	___lbmod@divisor& (0+255),b
  5058  004C0E  51CD               	movf	oled_putUint8@number& (0+255),w,b
  5059  004C10  ECD6  F022         	call	___lbmod
  5060  004C14  0F30               	addlw	48
  5061  004C16  6FD0               	movwf	(oled_putUint8@numData+2)& (0+255),b
  5062                           
  5063                           ;SSD1306oLED.c: 230: number /= 10;
  5064  004C18  0E0A               	movlw	10
  5065  004C1A  6FB9               	movwf	___lbdiv@divisor& (0+255),b
  5066  004C1C  51CD               	movf	oled_putUint8@number& (0+255),w,b
  5067  004C1E  ECCE  F023         	call	___lbdiv
  5068  004C22  6FCD               	movwf	oled_putUint8@number& (0+255),b
  5069                           
  5070                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  5071  004C24  0E0A               	movlw	10
  5072  004C26  6FB9               	movwf	___lbmod@divisor& (0+255),b
  5073  004C28  51CD               	movf	oled_putUint8@number& (0+255),w,b
  5074  004C2A  ECD6  F022         	call	___lbmod
  5075  004C2E  0F30               	addlw	48
  5076  004C30  6FCF               	movwf	(oled_putUint8@numData+1)& (0+255),b
  5077                           
  5078                           ;SSD1306oLED.c: 232: number /= 10;
  5079  004C32  0E0A               	movlw	10
  5080  004C34  6FB9               	movwf	___lbdiv@divisor& (0+255),b
  5081  004C36  51CD               	movf	oled_putUint8@number& (0+255),w,b
  5082  004C38  ECCE  F023         	call	___lbdiv
  5083  004C3C  6FCD               	movwf	oled_putUint8@number& (0+255),b
  5084                           
  5085                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  5086  004C3E  0E0A               	movlw	10
  5087  004C40  6FB9               	movwf	___lbmod@divisor& (0+255),b
  5088  004C42  51CD               	movf	oled_putUint8@number& (0+255),w,b
  5089  004C44  ECD6  F022         	call	___lbmod
  5090  004C48  0F30               	addlw	48
  5091  004C4A  6FCE               	movwf	oled_putUint8@numData& (0+255),b
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  5095  004C4C  6BD1               	clrf	(oled_putUint8@numData+3)& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  5099  004C4E  0ECE               	movlw	low oled_putUint8@numData
  5100  004C50  6FC6               	movwf	oled_putString@string& (0+255),b
  5101  004C52  6BC7               	clrf	(oled_putString@string+1)& (0+255),b
  5102  004C54  C0CB  F0C8         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  5103  004C58  C0CC  F0C9         	movff	oled_putUint8@start_page,oled_putString@start_page
  5104  004C5C  EFF0  F026         	goto	_oled_putString	;wreg free
  5105  004C60                     __end_of_oled_putUint8:
  5106                           	opt stack 0
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           intcon	equ	0xFF2
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postdec1	equ	0xFE5
  5115                           fsr1l	equ	0xFE1
  5116                           indf2	equ	0xFDF
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _moteApp_clearBuffers *****************
  5122 ;; Defined at:
  5123 ;;		line 1109 in file "../Includes/Board/MOTEapp.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  counter         1    2[BANK0 ] unsigned char 
  5128 ;;  counter         1    1[BANK0 ] unsigned char 
  5129 ;;  counter         1    0[BANK0 ] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : F/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0
  5140 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5142 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5143 ;;Total ram usage:        3 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:   11
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_moteRunningProcess
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text7
  5154  0048FA                     __ptext7:
  5155                           	opt stack 0
  5156  0048FA                     _moteApp_clearBuffers:
  5157                           	opt stack 17
  5158                           
  5159                           ;MOTEapp.c: 1111: for (uint8_t counter = 0; counter < 3; counter++)
  5160                           
  5161                           ;incstack = 0
  5162  0048FA  0100               	movlb	0	; () banked
  5163  0048FC  6BB9               	clrf	moteApp_clearBuffers@counter& (0+255),b
  5164  0048FE                     l9403:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;MOTEapp.c: 1112: {
  5168                           ;MOTEapp.c: 1113: responsePortNum[counter] = 0;
  5169  0048FE  51B9               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  5170  004900  0F76               	addlw	low _responsePortNum
  5171  004902  6ED9               	movwf	fsr2l,c
  5172  004904  6ADA               	clrf	fsr2h,c
  5173  004906  6ADF               	clrf	indf2,c
  5174                           
  5175                           ; BSR set to: 0
  5176  004908  2BB9               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  5177                           
  5178                           ; BSR set to: 0
  5179  00490A  0E02               	movlw	2
  5180  00490C  65B9               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  5181  00490E  D7F7               	goto	l9403
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;MOTEapp.c: 1114: }
  5185                           ;MOTEapp.c: 1115: for (uint8_t counter = 0; counter < 34; counter++)
  5186  004910  6BBA               	clrf	moteApp_clearBuffers@counter_1525& (0+255),b
  5187  004912                     l9413:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;MOTEapp.c: 1116: {
  5191                           ;MOTEapp.c: 1117: responseId[counter] = 0;
  5192  004912  0E00               	movlw	low _responseId
  5193  004914  25BA               	addwf	moteApp_clearBuffers@counter_1525& (0+255),w,b
  5194  004916  6ED9               	movwf	fsr2l,c
  5195  004918  6ADA               	clrf	fsr2h,c
  5196  00491A  0E01               	movlw	high _responseId
  5197  00491C  22DA               	addwfc	fsr2h,f,c
  5198  00491E  6ADF               	clrf	indf2,c
  5199                           
  5200                           ; BSR set to: 0
  5201  004920  2BBA               	incf	moteApp_clearBuffers@counter_1525& (0+255),f,b
  5202                           
  5203                           ; BSR set to: 0
  5204  004922  0E21               	movlw	33
  5205  004924  65BA               	cpfsgt	moteApp_clearBuffers@counter_1525& (0+255),b
  5206  004926  D7F5               	goto	l9413
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;MOTEapp.c: 1118: }
  5210                           ;MOTEapp.c: 1119: for (uint8_t counter = 0; counter < 10; counter++)
  5211  004928  6BBB               	clrf	moteApp_clearBuffers@counter_1526& (0+255),b
  5212  00492A                     l9423:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;MOTEapp.c: 1120: {
  5216                           ;MOTEapp.c: 1121: responseData[counter] = 0;
  5217  00492A  0E10               	movlw	low _responseData
  5218  00492C  25BB               	addwf	moteApp_clearBuffers@counter_1526& (0+255),w,b
  5219  00492E  6ED9               	movwf	fsr2l,c
  5220  004930  6ADA               	clrf	fsr2h,c
  5221  004932  0E01               	movlw	high _responseData
  5222  004934  22DA               	addwfc	fsr2h,f,c
  5223  004936  6ADF               	clrf	indf2,c
  5224                           
  5225                           ; BSR set to: 0
  5226  004938  2BBB               	incf	moteApp_clearBuffers@counter_1526& (0+255),f,b
  5227                           
  5228                           ; BSR set to: 0
  5229  00493A  0E09               	movlw	9
  5230  00493C  65BB               	cpfsgt	moteApp_clearBuffers@counter_1526& (0+255),b
  5231  00493E  D7F5               	goto	l9423
  5232  004940  0C09               	retlw	9
  5233  004942                     __end_of_moteApp_clearBuffers:
  5234                           	opt stack 0
  5235                           tblptru	equ	0xFF8
  5236                           tblptrh	equ	0xFF7
  5237                           tblptrl	equ	0xFF6
  5238                           tablat	equ	0xFF5
  5239                           intcon	equ	0xFF2
  5240                           postinc0	equ	0xFEE
  5241                           wreg	equ	0xFE8
  5242                           postdec1	equ	0xFE5
  5243                           fsr1l	equ	0xFE1
  5244                           indf2	equ	0xFDF
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function _moteApp_add8bToDataBuffer *****************
  5250 ;; Defined at:
  5251 ;;		line 1125 in file "../Includes/Board/MOTEapp.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  number          1    wreg     unsigned char 
  5254 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  number          1    5[BANK0 ] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : F/0
  5263 ;;		On exit  : F/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5266 ;;      Params:         0       1       0       0       0       0       0       0       0
  5267 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5269 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:   12
  5273 ;; This function calls:
  5274 ;;		___lbdiv
  5275 ;;		___lbmod
  5276 ;; This function is called by:
  5277 ;;		_moteRunningProcess
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text8
  5282  004D1C                     __ptext8:
  5283                           	opt stack 0
  5284  004D1C                     _moteApp_add8bToDataBuffer:
  5285                           	opt stack 16
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;incstack = 0
  5289                           ;moteApp_add8bToDataBuffer@number stored from wreg
  5290  004D1C  6FBE               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5291                           
  5292                           ;MOTEapp.c: 1127: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5293  004D1E  0100               	movlb	0	; () banked
  5294  004D20  51BD               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5295  004D22  0FA6               	addlw	low (_dataBuffer+2)
  5296  004D24  6ED9               	movwf	fsr2l,c
  5297  004D26  6ADA               	clrf	fsr2h,c
  5298  004D28  0E0A               	movlw	10
  5299  004D2A  6FB9               	movwf	___lbmod@divisor& (0+255),b
  5300  004D2C  51BE               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5301  004D2E  ECD6  F022         	call	___lbmod
  5302  004D32  0F30               	addlw	48
  5303  004D34  6EDF               	movwf	indf2,c
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;MOTEapp.c: 1128: number /= 10;
  5307  004D36  0E0A               	movlw	10
  5308  004D38  6FB9               	movwf	___lbdiv@divisor& (0+255),b
  5309  004D3A  51BE               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5310  004D3C  ECCE  F023         	call	___lbdiv
  5311  004D40  6FBE               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;MOTEapp.c: 1129: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5315  004D42  51BD               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5316  004D44  0FA5               	addlw	low (_dataBuffer+1)
  5317  004D46  6ED9               	movwf	fsr2l,c
  5318  004D48  6ADA               	clrf	fsr2h,c
  5319  004D4A  0E0A               	movlw	10
  5320  004D4C  6FB9               	movwf	___lbmod@divisor& (0+255),b
  5321  004D4E  51BE               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5322  004D50  ECD6  F022         	call	___lbmod
  5323  004D54  0F30               	addlw	48
  5324  004D56  6EDF               	movwf	indf2,c
  5325                           
  5326                           ;MOTEapp.c: 1130: number /= 10;
  5327  004D58  0E0A               	movlw	10
  5328  004D5A  6FB9               	movwf	___lbdiv@divisor& (0+255),b
  5329  004D5C  51BE               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5330  004D5E  ECCE  F023         	call	___lbdiv
  5331  004D62  6FBE               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;MOTEapp.c: 1131: dataBuffer[bufferLocation] = '0' + (number % 10);
  5335  004D64  51BD               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5336  004D66  0FA4               	addlw	low _dataBuffer
  5337  004D68  6ED9               	movwf	fsr2l,c
  5338  004D6A  6ADA               	clrf	fsr2h,c
  5339  004D6C  0E0A               	movlw	10
  5340  004D6E  6FB9               	movwf	___lbmod@divisor& (0+255),b
  5341  004D70  51BE               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5342  004D72  ECD6  F022         	call	___lbmod
  5343  004D76  0F30               	addlw	48
  5344  004D78  6EDF               	movwf	indf2,c
  5345                           
  5346                           ; BSR set to: 0
  5347  004D7A  0012               	return		;funcret
  5348  004D7C                     __end_of_moteApp_add8bToDataBuffer:
  5349                           	opt stack 0
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           intcon	equ	0xFF2
  5355                           postinc0	equ	0xFEE
  5356                           wreg	equ	0xFE8
  5357                           postdec1	equ	0xFE5
  5358                           fsr1l	equ	0xFE1
  5359                           indf2	equ	0xFDF
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function ___lbmod *****************
  5365 ;; Defined at:
  5366 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  dividend        1    wreg     unsigned char 
  5369 ;;  divisor         1    0[BANK0 ] unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  dividend        1    1[BANK0 ] unsigned char 
  5372 ;;  rem             1    3[BANK0 ] unsigned char 
  5373 ;;  counter         1    2[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      unsigned char 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : F/0
  5380 ;;		On exit  : F/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5383 ;;      Params:         0       1       0       0       0       0       0       0       0
  5384 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5386 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5387 ;;Total ram usage:        4 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:   11
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_moteApp_add8bToDataBuffer
  5394 ;;		_oled_putUint8
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text9
  5399  0045AC                     __ptext9:
  5400                           	opt stack 0
  5401  0045AC                     ___lbmod:
  5402                           	opt stack 16
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;incstack = 0
  5406                           ;___lbmod@dividend stored from wreg
  5407  0045AC  6FBA               	movwf	___lbmod@dividend& (0+255),b
  5408  0045AE  0E08               	movlw	8
  5409  0045B0  0100               	movlb	0	; () banked
  5410  0045B2  6FBB               	movwf	___lbmod@counter& (0+255),b
  5411                           
  5412                           ; BSR set to: 0
  5413  0045B4  6BBC               	clrf	___lbmod@rem& (0+255),b
  5414  0045B6                     l9075:
  5415                           
  5416                           ; BSR set to: 0
  5417  0045B6  90D8               	bcf	status,0,c
  5418  0045B8  35BA               	rlcf	___lbmod@dividend& (0+255),w,b
  5419  0045BA  35BC               	rlcf	___lbmod@rem& (0+255),w,b
  5420  0045BC  6FBC               	movwf	___lbmod@rem& (0+255),b
  5421                           
  5422                           ; BSR set to: 0
  5423  0045BE  90D8               	bcf	status,0,c
  5424  0045C0  37BA               	rlcf	___lbmod@dividend& (0+255),f,b
  5425                           
  5426                           ; BSR set to: 0
  5427  0045C2  51B9               	movf	___lbmod@divisor& (0+255),w,b
  5428  0045C4  5DBC               	subwf	___lbmod@rem& (0+255),w,b
  5429  0045C6  E302               	bnc	l9083
  5430                           
  5431                           ; BSR set to: 0
  5432  0045C8  51B9               	movf	___lbmod@divisor& (0+255),w,b
  5433  0045CA  5FBC               	subwf	___lbmod@rem& (0+255),f,b
  5434  0045CC                     l9083:
  5435                           
  5436                           ; BSR set to: 0
  5437  0045CC  2FBB               	decfsz	___lbmod@counter& (0+255),f,b
  5438  0045CE  D7F3               	goto	l9075
  5439                           
  5440                           ; BSR set to: 0
  5441  0045D0  51BC               	movf	___lbmod@rem& (0+255),w,b
  5442                           
  5443                           ; BSR set to: 0
  5444  0045D2  0012               	return		;funcret
  5445  0045D4                     __end_of___lbmod:
  5446                           	opt stack 0
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           intcon	equ	0xFF2
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           postdec1	equ	0xFE5
  5455                           fsr1l	equ	0xFE1
  5456                           indf2	equ	0xFDF
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function ___lbdiv *****************
  5462 ;; Defined at:
  5463 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  dividend        1    wreg     unsigned char 
  5466 ;;  divisor         1    0[BANK0 ] unsigned char 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  dividend        1    1[BANK0 ] unsigned char 
  5469 ;;  quotient        1    3[BANK0 ] unsigned char 
  5470 ;;  counter         1    2[BANK0 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      unsigned char 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : F/0
  5477 ;;		On exit  : F/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5480 ;;      Params:         0       1       0       0       0       0       0       0       0
  5481 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5483 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5484 ;;Total ram usage:        4 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:   11
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_moteApp_add8bToDataBuffer
  5491 ;;		_oled_putUint8
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text10
  5496  00479C                     __ptext10:
  5497                           	opt stack 0
  5498  00479C                     ___lbdiv:
  5499                           	opt stack 16
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;incstack = 0
  5503                           ;___lbdiv@dividend stored from wreg
  5504  00479C  6FBA               	movwf	___lbdiv@dividend& (0+255),b
  5505  00479E  0100               	movlb	0	; () banked
  5506  0047A0  6BBC               	clrf	___lbdiv@quotient& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509  0047A2  51B9               	movf	___lbdiv@divisor& (0+255),w,b
  5510  0047A4  E014               	bz	l9067
  5511                           
  5512                           ; BSR set to: 0
  5513  0047A6  0E01               	movlw	1
  5514  0047A8  6FBB               	movwf	___lbdiv@counter& (0+255),b
  5515  0047AA  D003               	goto	l9055
  5516  0047AC                     l9051:
  5517                           
  5518                           ; BSR set to: 0
  5519  0047AC  90D8               	bcf	status,0,c
  5520  0047AE  37B9               	rlcf	___lbdiv@divisor& (0+255),f,b
  5521                           
  5522                           ; BSR set to: 0
  5523  0047B0  2BBB               	incf	___lbdiv@counter& (0+255),f,b
  5524  0047B2                     l9055:
  5525                           
  5526                           ; BSR set to: 0
  5527  0047B2  AFB9               	btfss	___lbdiv@divisor& (0+255),7,b
  5528  0047B4  D7FB               	goto	l9051
  5529  0047B6                     l9057:
  5530                           
  5531                           ; BSR set to: 0
  5532  0047B6  90D8               	bcf	status,0,c
  5533  0047B8  37BC               	rlcf	___lbdiv@quotient& (0+255),f,b
  5534  0047BA  51B9               	movf	___lbdiv@divisor& (0+255),w,b
  5535  0047BC  5DBA               	subwf	___lbdiv@dividend& (0+255),w,b
  5536  0047BE  E303               	bnc	l9063
  5537                           
  5538                           ; BSR set to: 0
  5539  0047C0  51B9               	movf	___lbdiv@divisor& (0+255),w,b
  5540  0047C2  5FBA               	subwf	___lbdiv@dividend& (0+255),f,b
  5541                           
  5542                           ; BSR set to: 0
  5543  0047C4  81BC               	bsf	___lbdiv@quotient& (0+255),0,b
  5544  0047C6                     l9063:
  5545                           
  5546                           ; BSR set to: 0
  5547  0047C6  90D8               	bcf	status,0,c
  5548  0047C8  33B9               	rrcf	___lbdiv@divisor& (0+255),f,b
  5549                           
  5550                           ; BSR set to: 0
  5551  0047CA  2FBB               	decfsz	___lbdiv@counter& (0+255),f,b
  5552  0047CC  D7F4               	goto	l9057
  5553  0047CE                     l9067:
  5554                           
  5555                           ; BSR set to: 0
  5556  0047CE  51BC               	movf	___lbdiv@quotient& (0+255),w,b
  5557                           
  5558                           ; BSR set to: 0
  5559  0047D0  0012               	return		;funcret
  5560  0047D2                     __end_of___lbdiv:
  5561                           	opt stack 0
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           intcon	equ	0xFF2
  5567                           postinc0	equ	0xFEE
  5568                           wreg	equ	0xFE8
  5569                           postdec1	equ	0xFE5
  5570                           fsr1l	equ	0xFE1
  5571                           indf2	equ	0xFDF
  5572                           fsr2h	equ	0xFDA
  5573                           fsr2l	equ	0xFD9
  5574                           status	equ	0xFD8
  5575                           
  5576 ;; *************** function _moteApp_add16bToDataBuffer *****************
  5577 ;; Defined at:
  5578 ;;		line 1134 in file "../Includes/Board/MOTEapp.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  number          2   12[BANK0 ] unsigned int 
  5581 ;;  bufferLocati    1   14[BANK0 ] unsigned char 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : F/0
  5590 ;;		On exit  : F/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5593 ;;      Params:         0       3       0       0       0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5596 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5597 ;;Total ram usage:        3 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:   12
  5600 ;; This function calls:
  5601 ;;		___lwdiv
  5602 ;;		___lwmod
  5603 ;; This function is called by:
  5604 ;;		_moteRunningProcess
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text11
  5609  006372                     __ptext11:
  5610                           	opt stack 0
  5611  006372                     _moteApp_add16bToDataBuffer:
  5612                           	opt stack 16
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;MOTEapp.c: 1136: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;incstack = 0
  5619  006372  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5620  006374  0FA8               	addlw	low (_dataBuffer+4)
  5621  006376  6ED9               	movwf	fsr2l,c
  5622  006378  6ADA               	clrf	fsr2h,c
  5623  00637A  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5624  00637E  C0C6  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5625  006382  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
  5626  006384  0E0A               	movlw	10
  5627  006386  6FC2               	movwf	___lwmod@divisor& (0+255),b
  5628  006388  EC5E  F024         	call	___lwmod	;wreg free
  5629  00638C  51C0               	movf	?___lwmod& (0+255),w,b
  5630  00638E  0F30               	addlw	48
  5631  006390  6EDF               	movwf	indf2,c
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;MOTEapp.c: 1137: number /= 10;
  5635  006392  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5636  006396  C0C6  F0BA         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5637  00639A  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5638  00639C  0E0A               	movlw	10
  5639  00639E  6FBB               	movwf	___lwdiv@divisor& (0+255),b
  5640  0063A0  ECC6  F024         	call	___lwdiv	;wreg free
  5641  0063A4  C0B9  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5642  0063A8  C0BA  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;MOTEapp.c: 1138: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
  5646  0063AC  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5647  0063AE  0FA7               	addlw	low (_dataBuffer+3)
  5648  0063B0  6ED9               	movwf	fsr2l,c
  5649  0063B2  6ADA               	clrf	fsr2h,c
  5650  0063B4  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5651  0063B8  C0C6  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5652  0063BC  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
  5653  0063BE  0E0A               	movlw	10
  5654  0063C0  6FC2               	movwf	___lwmod@divisor& (0+255),b
  5655  0063C2  EC5E  F024         	call	___lwmod	;wreg free
  5656  0063C6  51C0               	movf	?___lwmod& (0+255),w,b
  5657  0063C8  0F30               	addlw	48
  5658  0063CA  6EDF               	movwf	indf2,c
  5659                           
  5660                           ;MOTEapp.c: 1139: number /= 10;
  5661  0063CC  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5662  0063D0  C0C6  F0BA         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5663  0063D4  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5664  0063D6  0E0A               	movlw	10
  5665  0063D8  6FBB               	movwf	___lwdiv@divisor& (0+255),b
  5666  0063DA  ECC6  F024         	call	___lwdiv	;wreg free
  5667  0063DE  C0B9  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5668  0063E2  C0BA  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;MOTEapp.c: 1140: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5672  0063E6  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5673  0063E8  0FA6               	addlw	low (_dataBuffer+2)
  5674  0063EA  6ED9               	movwf	fsr2l,c
  5675  0063EC  6ADA               	clrf	fsr2h,c
  5676  0063EE  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5677  0063F2  C0C6  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5678  0063F6  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
  5679  0063F8  0E0A               	movlw	10
  5680  0063FA  6FC2               	movwf	___lwmod@divisor& (0+255),b
  5681  0063FC  EC5E  F024         	call	___lwmod	;wreg free
  5682  006400  51C0               	movf	?___lwmod& (0+255),w,b
  5683  006402  0F30               	addlw	48
  5684  006404  6EDF               	movwf	indf2,c
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;MOTEapp.c: 1141: number /= 10;
  5688  006406  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5689  00640A  C0C6  F0BA         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5690  00640E  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5691  006410  0E0A               	movlw	10
  5692  006412  6FBB               	movwf	___lwdiv@divisor& (0+255),b
  5693  006414  ECC6  F024         	call	___lwdiv	;wreg free
  5694  006418  C0B9  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5695  00641C  C0BA  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5696                           
  5697                           ;MOTEapp.c: 1142: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5698  006420  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5699  006422  0FA5               	addlw	low (_dataBuffer+1)
  5700  006424  6ED9               	movwf	fsr2l,c
  5701  006426  6ADA               	clrf	fsr2h,c
  5702  006428  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5703  00642C  C0C6  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5704  006430  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
  5705  006432  0E0A               	movlw	10
  5706  006434  6FC2               	movwf	___lwmod@divisor& (0+255),b
  5707  006436  EC5E  F024         	call	___lwmod	;wreg free
  5708  00643A  51C0               	movf	?___lwmod& (0+255),w,b
  5709  00643C  0F30               	addlw	48
  5710  00643E  6EDF               	movwf	indf2,c
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;MOTEapp.c: 1143: number /= 10;
  5714  006440  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5715  006444  C0C6  F0BA         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5716  006448  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5717  00644A  0E0A               	movlw	10
  5718  00644C  6FBB               	movwf	___lwdiv@divisor& (0+255),b
  5719  00644E  ECC6  F024         	call	___lwdiv	;wreg free
  5720  006452  C0B9  F0C5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5721  006456  C0BA  F0C6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;MOTEapp.c: 1144: dataBuffer[bufferLocation] = '0' + (number % 10);
  5725  00645A  51C7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5726  00645C  0FA4               	addlw	low _dataBuffer
  5727  00645E  6ED9               	movwf	fsr2l,c
  5728  006460  6ADA               	clrf	fsr2h,c
  5729  006462  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5730  006466  C0C6  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5731  00646A  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
  5732  00646C  0E0A               	movlw	10
  5733  00646E  6FC2               	movwf	___lwmod@divisor& (0+255),b
  5734  006470  EC5E  F024         	call	___lwmod	;wreg free
  5735  006474  51C0               	movf	?___lwmod& (0+255),w,b
  5736  006476  0F30               	addlw	48
  5737  006478  6EDF               	movwf	indf2,c
  5738                           
  5739                           ; BSR set to: 0
  5740  00647A  0012               	return		;funcret
  5741  00647C                     __end_of_moteApp_add16bToDataBuffer:
  5742                           	opt stack 0
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           intcon	equ	0xFF2
  5748                           postinc0	equ	0xFEE
  5749                           wreg	equ	0xFE8
  5750                           postdec1	equ	0xFE5
  5751                           fsr1l	equ	0xFE1
  5752                           indf2	equ	0xFDF
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _moteApp_GoToSleep *****************
  5758 ;; Defined at:
  5759 ;;		line 1018 in file "../Includes/Board/MOTEapp.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  status          1    0        unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      unsigned char 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : F/0
  5770 ;;		On exit  : F/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5773 ;;      Params:         0       0       0       0       0       0       0       0       0
  5774 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5776 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5777 ;;Total ram usage:        1 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:   18
  5780 ;; This function calls:
  5781 ;;		_EUSART_FlushBuffer
  5782 ;;		_EUSART_Initialize
  5783 ;;		_PIN_MANAGER_Initialize
  5784 ;;		_modemResync
  5785 ;;		_modemSleep
  5786 ;;		_oled_displayOff
  5787 ;;		_oled_init
  5788 ;; This function is called by:
  5789 ;;		_moteRunningProcess
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text12
  5794  004EAE                     __ptext12:
  5795                           	opt stack 0
  5796  004EAE                     _moteApp_GoToSleep:
  5797                           	opt stack 10
  5798  004EAE                     l591:
  5799                           
  5800                           ; BSR set to: 0
  5801  004EAE  A282               	btfss	3970,1,c	;volatile
  5802  004EB0  D7FE               	goto	l591
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;MOTEapp.c: 1022: modemSleep();
  5806  004EB2  ECE7  F021         	call	_modemSleep	;wreg free
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;MOTEapp.c: 1023: oled_displayOff(1);
  5810  004EB6  0E01               	movlw	1
  5811  004EB8  EC87  F021         	call	_oled_displayOff
  5812                           
  5813                           ;MOTEapp.c: 1024: ADCON0bits.ADON = 0;
  5814  004EBC  90C2               	bcf	4034,0,c	;volatile
  5815                           
  5816                           ;MOTEapp.c: 1025: INTCONbits.GIE = 0;
  5817  004EBE  9EF2               	bcf	intcon,7,c	;volatile
  5818                           
  5819                           ;MOTEapp.c: 1026: GIE = 0;
  5820  004EC0  9EF2               	bcf	intcon,7,c	;volatile
  5821                           
  5822                           ;MOTEapp.c: 1027: PEIE = 0;
  5823  004EC2  9CF2               	bcf	intcon,6,c	;volatile
  5824                           
  5825                           ;MOTEapp.c: 1029: ANSELAbits.ANSA0 = 1;
  5826  004EC4  010F               	movlb	15	; () banked
  5827  004EC6  815B               	bsf	91,0,b	;volatile
  5828                           
  5829                           ; BSR set to: 15
  5830                           ;MOTEapp.c: 1031: PIE2bits.C1IE = 1;
  5831  004EC8  8CA0               	bsf	4000,6,c	;volatile
  5832                           
  5833                           ; BSR set to: 15
  5834                           ;MOTEapp.c: 1032: IOCCbits.IOCC0 = 1;
  5835  004ECA  8087               	bsf	3975,0,c	;volatile
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;MOTEapp.c: 1033: IOCCbits.IOCC1 = 1;
  5839  004ECC  8287               	bsf	3975,1,c	;volatile
  5840                           
  5841                           ; BSR set to: 15
  5842                           ;MOTEapp.c: 1034: IOCCbits.IOCC2 = 1;
  5843  004ECE  8487               	bsf	3975,2,c	;volatile
  5844                           
  5845                           ; BSR set to: 15
  5846                           ;MOTEapp.c: 1035: INTCONbits.IOCIE = 1;
  5847  004ED0  86F2               	bsf	intcon,3,c	;volatile
  5848                           
  5849                           ; BSR set to: 15
  5850  004ED2  5082               	movf	3970,w,c	;volatile
  5851                           
  5852                           ; BSR set to: 15
  5853  004ED4  5082               	movf	3970,w,c	;volatile
  5854                           
  5855                           ; BSR set to: 15
  5856  004ED6  5082               	movf	3970,w,c	;volatile
  5857                           
  5858                           ; BSR set to: 15
  5859                           ;MOTEapp.c: 1043: }
  5860                           ;MOTEapp.c: 1044: INTCONbits.IOCIF = 0;
  5861  004ED8  90F2               	bcf	intcon,0,c	;volatile
  5862                           
  5863                           ; BSR set to: 15
  5864                           ;MOTEapp.c: 1045: PIR2bits.C1IF = 0;
  5865  004EDA  9CA1               	bcf	4001,6,c	;volatile
  5866                           
  5867                           ; BSR set to: 15
  5868                           ;MOTEapp.c: 1046: __nop();
  5869  004EDC  F000               	nop	
  5870  004EDE  0003               	sleep		;# 
  5871                           
  5872                           ;MOTEapp.c: 1048: __nop();
  5873  004EE0  F000               	nop	
  5874                           
  5875                           ;MOTEapp.c: 1051: EUSART_FlushBuffer();
  5876  004EE2  EC6C  F023         	call	_EUSART_FlushBuffer	;wreg free
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;MOTEapp.c: 1053: INTCONbits.IOCIE = 0;
  5880  004EE6  96F2               	bcf	intcon,3,c	;volatile
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;MOTEapp.c: 1054: IOCCbits.IOCC0 = 0;
  5884  004EE8  9087               	bcf	3975,0,c	;volatile
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;MOTEapp.c: 1055: IOCCbits.IOCC1 = 0;
  5888  004EEA  9287               	bcf	3975,1,c	;volatile
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;MOTEapp.c: 1056: IOCCbits.IOCC2 = 0;
  5892  004EEC  9487               	bcf	3975,2,c	;volatile
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;MOTEapp.c: 1057: PIE2bits.C1IE = 0;
  5896  004EEE  9CA0               	bcf	4000,6,c	;volatile
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;MOTEapp.c: 1058: GIE = 1;
  5900  004EF0  8EF2               	bsf	intcon,7,c	;volatile
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;MOTEapp.c: 1060: PIN_MANAGER_Initialize();
  5904  004EF2  EC36  F025         	call	_PIN_MANAGER_Initialize	;wreg free
  5905                           
  5906                           ; BSR set to: 15
  5907                           ;MOTEapp.c: 1061: EUSART_Initialize();
  5908  004EF6  EC2A  F023         	call	_EUSART_Initialize	;wreg free
  5909                           
  5910                           ;MOTEapp.c: 1063: if (INTCONbits.IOCIF)
  5911  004EFA  A0F2               	btfss	intcon,0,c	;volatile
  5912  004EFC  D002               	goto	l9551
  5913                           
  5914                           ;MOTEapp.c: 1064: {
  5915                           ;MOTEapp.c: 1065: INTCONbits.IOCIF = 0;
  5916  004EFE  90F2               	bcf	intcon,0,c	;volatile
  5917                           
  5918                           ;MOTEapp.c: 1067: }
  5919  004F00  D003               	goto	l9555
  5920  004F02                     l9551:
  5921                           
  5922                           ;MOTEapp.c: 1073: else
  5923                           ;MOTEapp.c: 1074: {
  5924                           ;MOTEapp.c: 1075: secTicker = 10;
  5925  004F02  0E0A               	movlw	10
  5926  004F04  0100               	movlb	0	; () banked
  5927  004F06  6FA0               	movwf	_secTicker& (0+255),b
  5928  004F08                     l9555:
  5929                           
  5930                           ;MOTEapp.c: 1077: }
  5931                           ;MOTEapp.c: 1078: ANSELAbits.ANSA0 = 0;
  5932  004F08  010F               	movlb	15	; () banked
  5933  004F0A  915B               	bcf	91,0,b	;volatile
  5934                           
  5935                           ; BSR set to: 15
  5936                           ;MOTEapp.c: 1079: oled_displayOff(0);
  5937  004F0C  0E00               	movlw	0
  5938  004F0E  EC87  F021         	call	_oled_displayOff
  5939                           
  5940                           ;MOTEapp.c: 1080: oled_init();
  5941  004F12  EC63  F022         	call	_oled_init	;wreg free
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;MOTEapp.c: 1082: modemResync();
  5945  004F16  EFBE  F026         	goto	_modemResync	;wreg free
  5946  004F1A                     __end_of_moteApp_GoToSleep:
  5947                           	opt stack 0
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           intcon	equ	0xFF2
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           postdec1	equ	0xFE5
  5956                           fsr1l	equ	0xFE1
  5957                           indf2	equ	0xFDF
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _oled_init *****************
  5963 ;; Defined at:
  5964 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : F/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:   17
  5985 ;; This function calls:
  5986 ;;		_oled_clear
  5987 ;;		_oled_devInit
  5988 ;;		_oled_setDisplay
  5989 ;;		_oled_setFont
  5990 ;; This function is called by:
  5991 ;;		_main
  5992 ;;		_moteApp_GoToSleep
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text13
  5997  0044C6                     __ptext13:
  5998                           	opt stack 0
  5999  0044C6                     _oled_init:
  6000                           	opt stack 13
  6001                           
  6002                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;incstack = 0
  6006  0044C6  9493               	bcf	3987,2,c	;volatile
  6007                           
  6008                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
  6009  0044C8  9893               	bcf	3987,4,c	;volatile
  6010                           
  6011                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
  6012  0044CA  9A93               	bcf	3987,5,c	;volatile
  6013                           
  6014                           ;SSD1306oLED.c: 315: oled_devInit();
  6015  0044CC  EC72  F02E         	call	_oled_devInit	;wreg free
  6016                           
  6017                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
  6018  0044D0  0E00               	movlw	0
  6019  0044D2  ECAD  F021         	call	_oled_setDisplay
  6020                           
  6021                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
  6022  0044D6  0E95               	movlw	low _OledFont0
  6023  0044D8  0100               	movlb	0	; () banked
  6024  0044DA  6FB9               	movwf	oled_setFont@font& (0+255),b
  6025  0044DC  0E77               	movlw	high _OledFont0
  6026  0044DE  6FBA               	movwf	(oled_setFont@font+1)& (0+255),b
  6027  0044E0  EC90  F021         	call	_oled_setFont	;wreg free
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;SSD1306oLED.c: 319: oled_clear();
  6031  0044E4  EFCD  F021         	goto	_oled_clear	;wreg free
  6032  0044E8                     __end_of_oled_init:
  6033                           	opt stack 0
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           intcon	equ	0xFF2
  6039                           postinc0	equ	0xFEE
  6040                           wreg	equ	0xFE8
  6041                           postdec1	equ	0xFE5
  6042                           fsr1l	equ	0xFE1
  6043                           indf2	equ	0xFDF
  6044                           fsr2h	equ	0xFDA
  6045                           fsr2l	equ	0xFD9
  6046                           status	equ	0xFD8
  6047                           
  6048 ;; *************** function _oled_setFont *****************
  6049 ;; Defined at:
  6050 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  font            2    0[BANK0 ] PTR const unsigned char 
  6053 ;;		 -> OledFont0(768), 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : F/0
  6062 ;;		On exit  : F/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6065 ;;      Params:         0       2       0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6068 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6069 ;;Total ram usage:        2 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:   11
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_oled_init
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text14
  6080  004320                     __ptext14:
  6081                           	opt stack 0
  6082  004320                     _oled_setFont:
  6083                           	opt stack 18
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;SSD1306oLED.c: 220: if(font!=0)
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;incstack = 0
  6090  004320  51B9               	movf	oled_setFont@font& (0+255),w,b
  6091  004322  11BA               	iorwf	(oled_setFont@font+1)& (0+255),w,b
  6092  004324  B4D8               	btfsc	status,2,c
  6093  004326  0012               	return	
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;SSD1306oLED.c: 221: {
  6097                           ;SSD1306oLED.c: 222: selectedFont=font;
  6098  004328  C0B9  F0F1         	movff	oled_setFont@font,_selectedFont
  6099  00432C  C0BA  F0F2         	movff	oled_setFont@font+1,_selectedFont+1
  6100                           
  6101                           ; BSR set to: 0
  6102  004330  0012               	return		;funcret
  6103  004332                     __end_of_oled_setFont:
  6104                           	opt stack 0
  6105                           tblptru	equ	0xFF8
  6106                           tblptrh	equ	0xFF7
  6107                           tblptrl	equ	0xFF6
  6108                           tablat	equ	0xFF5
  6109                           intcon	equ	0xFF2
  6110                           postinc0	equ	0xFEE
  6111                           wreg	equ	0xFE8
  6112                           postdec1	equ	0xFE5
  6113                           fsr1l	equ	0xFE1
  6114                           indf2	equ	0xFDF
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _oled_setDisplay *****************
  6120 ;; Defined at:
  6121 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  displayType     1    wreg     enum E6298
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  displayType     1    2[BANK0 ] enum E6298
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6135 ;;      Params:         0       0       0       0       0       0       0       0       0
  6136 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6138 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6139 ;;Total ram usage:        1 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:   13
  6142 ;; This function calls:
  6143 ;;		_oled_writeCommand
  6144 ;; This function is called by:
  6145 ;;		_oled_init
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text15
  6150  00435A                     __ptext15:
  6151                           	opt stack 0
  6152  00435A                     _oled_setDisplay:
  6153                           	opt stack 16
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;incstack = 0
  6157                           ;oled_setDisplay@displayType stored from wreg
  6158  00435A  0100               	movlb	0	; () banked
  6159  00435C  6FBB               	movwf	oled_setDisplay@displayType& (0+255),b
  6160                           
  6161                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
  6162  00435E  0EA6               	movlw	166
  6163  004360  27BB               	addwf	oled_setDisplay@displayType& (0+255),f,b
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
  6167  004362  988A               	bcf	3978,4,c	;volatile
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
  6171  004364  51BB               	movf	oled_setDisplay@displayType& (0+255),w,b
  6172  004366  EC4E  F021         	call	_oled_writeCommand
  6173                           
  6174                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
  6175  00436A  888A               	bsf	3978,4,c	;volatile
  6176  00436C  0012               	return		;funcret
  6177  00436E                     __end_of_oled_setDisplay:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           intcon	equ	0xFF2
  6184                           postinc0	equ	0xFEE
  6185                           wreg	equ	0xFE8
  6186                           postdec1	equ	0xFE5
  6187                           fsr1l	equ	0xFE1
  6188                           indf2	equ	0xFDF
  6189                           fsr2h	equ	0xFDA
  6190                           fsr2l	equ	0xFD9
  6191                           status	equ	0xFD8
  6192                           
  6193 ;; *************** function _oled_devInit *****************
  6194 ;; Defined at:
  6195 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6209 ;;      Params:         0       0       0       0       0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6211 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6212 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6213 ;;Total ram usage:        1 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:   13
  6216 ;; This function calls:
  6217 ;;		_oled_writeCommand
  6218 ;; This function is called by:
  6219 ;;		_oled_init
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text16
  6224  005CE4                     __ptext16:
  6225                           	opt stack 0
  6226  005CE4                     _oled_devInit:
  6227                           	opt stack 16
  6228                           
  6229                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
  6230                           
  6231                           ;incstack = 0
  6232  005CE4  888A               	bsf	3978,4,c	;volatile
  6233                           
  6234                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
  6235  005CE6  8A8A               	bsf	3978,5,c	;volatile
  6236                           
  6237                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
  6238  005CE8  848A               	bsf	3978,2,c	;volatile
  6239                           
  6240                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
  6241  005CEA  0E50               	movlw	80
  6242  005CEC                     u8907:
  6243  005CEC  2EE8               	decfsz	wreg,f,c
  6244  005CEE  D7FE               	goto	u8907
  6245                           
  6246                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
  6247  005CF0  948A               	bcf	3978,2,c	;volatile
  6248                           
  6249                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6250  005CF2  0E04               	movlw	4
  6251  005CF4  0100               	movlb	0	; () banked
  6252  005CF6  6FBB               	movwf	??_oled_devInit& (0+255),b
  6253  005CF8  0E1C               	movlw	28
  6254  005CFA                     u8917:
  6255  005CFA  2EE8               	decfsz	wreg,f,c
  6256  005CFC  D7FE               	goto	u8917
  6257  005CFE  2FBB               	decfsz	??_oled_devInit& (0+255),f,b
  6258  005D00  D7FC               	goto	u8917
  6259  005D02  D000               	nop2	
  6260                           
  6261                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
  6262  005D04  848A               	bsf	3978,2,c	;volatile
  6263                           
  6264                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
  6265  005D06  988A               	bcf	3978,4,c	;volatile
  6266                           
  6267                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6268  005D08  0E04               	movlw	4
  6269  005D0A  0100               	movlb	0	; () banked
  6270  005D0C  6FBB               	movwf	??_oled_devInit& (0+255),b
  6271  005D0E  0E1C               	movlw	28
  6272  005D10                     u8927:
  6273  005D10  2EE8               	decfsz	wreg,f,c
  6274  005D12  D7FE               	goto	u8927
  6275  005D14  2FBB               	decfsz	??_oled_devInit& (0+255),f,b
  6276  005D16  D7FC               	goto	u8927
  6277  005D18  D000               	nop2	
  6278                           
  6279                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
  6280  005D1A  9A8A               	bcf	3978,5,c	;volatile
  6281                           
  6282                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6283  005D1C  0E04               	movlw	4
  6284  005D1E  0100               	movlb	0	; () banked
  6285  005D20  6FBB               	movwf	??_oled_devInit& (0+255),b
  6286  005D22  0E1C               	movlw	28
  6287  005D24                     u8937:
  6288  005D24  2EE8               	decfsz	wreg,f,c
  6289  005D26  D7FE               	goto	u8937
  6290  005D28  2FBB               	decfsz	??_oled_devInit& (0+255),f,b
  6291  005D2A  D7FC               	goto	u8937
  6292  005D2C  D000               	nop2	
  6293                           
  6294                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
  6295  005D2E  0EAE               	movlw	174
  6296  005D30  EC4E  F021         	call	_oled_writeCommand
  6297                           
  6298                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
  6299  005D34  0ED5               	movlw	213
  6300  005D36  EC4E  F021         	call	_oled_writeCommand
  6301                           
  6302                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
  6303  005D3A  0E80               	movlw	128
  6304  005D3C  EC4E  F021         	call	_oled_writeCommand
  6305                           
  6306                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
  6307  005D40  0EA8               	movlw	168
  6308  005D42  EC4E  F021         	call	_oled_writeCommand
  6309                           
  6310                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
  6311  005D46  0E1F               	movlw	31
  6312  005D48  EC4E  F021         	call	_oled_writeCommand
  6313                           
  6314                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
  6315  005D4C  0ED3               	movlw	211
  6316  005D4E  EC4E  F021         	call	_oled_writeCommand
  6317                           
  6318                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
  6319  005D52  0E00               	movlw	0
  6320  005D54  EC4E  F021         	call	_oled_writeCommand
  6321                           
  6322                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
  6323  005D58  0E8D               	movlw	141
  6324  005D5A  EC4E  F021         	call	_oled_writeCommand
  6325                           
  6326                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
  6327  005D5E  0E14               	movlw	20
  6328  005D60  EC4E  F021         	call	_oled_writeCommand
  6329                           
  6330                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
  6331  005D64  0E40               	movlw	64
  6332  005D66  EC4E  F021         	call	_oled_writeCommand
  6333                           
  6334                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
  6335  005D6A  0EA6               	movlw	166
  6336  005D6C  EC4E  F021         	call	_oled_writeCommand
  6337                           
  6338                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
  6339  005D70  0EA4               	movlw	164
  6340  005D72  EC4E  F021         	call	_oled_writeCommand
  6341                           
  6342                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
  6343  005D76  0EA0               	movlw	160
  6344  005D78  EC4E  F021         	call	_oled_writeCommand
  6345                           
  6346                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
  6347  005D7C  0EC0               	movlw	192
  6348  005D7E  EC4E  F021         	call	_oled_writeCommand
  6349                           
  6350                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
  6351  005D82  0EDA               	movlw	218
  6352  005D84  EC4E  F021         	call	_oled_writeCommand
  6353                           
  6354                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
  6355  005D88  0E42               	movlw	66
  6356  005D8A  EC4E  F021         	call	_oled_writeCommand
  6357                           
  6358                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
  6359  005D8E  0E81               	movlw	129
  6360  005D90  EC4E  F021         	call	_oled_writeCommand
  6361                           
  6362                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
  6363  005D94  0E7F               	movlw	127
  6364  005D96  EC4E  F021         	call	_oled_writeCommand
  6365                           
  6366                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
  6367  005D9A  0ED9               	movlw	217
  6368  005D9C  EC4E  F021         	call	_oled_writeCommand
  6369                           
  6370                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
  6371  005DA0  0EF1               	movlw	241
  6372  005DA2  EC4E  F021         	call	_oled_writeCommand
  6373                           
  6374                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
  6375  005DA6  0EDB               	movlw	219
  6376  005DA8  EC4E  F021         	call	_oled_writeCommand
  6377                           
  6378                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
  6379  005DAC  0E40               	movlw	64
  6380  005DAE  EC4E  F021         	call	_oled_writeCommand
  6381                           
  6382                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
  6383  005DB2  0EAF               	movlw	175
  6384  005DB4  EC4E  F021         	call	_oled_writeCommand
  6385                           
  6386                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
  6387  005DB8  888A               	bsf	3978,4,c	;volatile
  6388  005DBA  0012               	return		;funcret
  6389  005DBC                     __end_of_oled_devInit:
  6390                           	opt stack 0
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           intcon	equ	0xFF2
  6396                           postinc0	equ	0xFEE
  6397                           wreg	equ	0xFE8
  6398                           postdec1	equ	0xFE5
  6399                           fsr1l	equ	0xFE1
  6400                           indf2	equ	0xFDF
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function _oled_displayOff *****************
  6406 ;; Defined at:
  6407 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  state           1    wreg     unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  state           1    2[BANK0 ] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      void 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6424 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6425 ;;Total ram usage:        1 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:   13
  6428 ;; This function calls:
  6429 ;;		_oled_writeCommand
  6430 ;; This function is called by:
  6431 ;;		_moteApp_GoToSleep
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text17
  6436  00430E                     __ptext17:
  6437                           	opt stack 0
  6438  00430E                     _oled_displayOff:
  6439                           	opt stack 14
  6440                           
  6441                           ;incstack = 0
  6442                           ;oled_displayOff@state stored from wreg
  6443  00430E  0100               	movlb	0	; () banked
  6444  004310  6FBB               	movwf	oled_displayOff@state& (0+255),b
  6445                           
  6446                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
  6447  004312  988A               	bcf	3978,4,c	;volatile
  6448                           
  6449                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
  6450  004314  51BB               	movf	oled_displayOff@state& (0+255),w,b
  6451  004316  08AF               	sublw	175
  6452  004318  EC4E  F021         	call	_oled_writeCommand
  6453                           
  6454                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
  6455  00431C  888A               	bsf	3978,4,c	;volatile
  6456  00431E  0012               	return		;funcret
  6457  004320                     __end_of_oled_displayOff:
  6458                           	opt stack 0
  6459                           tblptru	equ	0xFF8
  6460                           tblptrh	equ	0xFF7
  6461                           tblptrl	equ	0xFF6
  6462                           tablat	equ	0xFF5
  6463                           intcon	equ	0xFF2
  6464                           postinc0	equ	0xFEE
  6465                           wreg	equ	0xFE8
  6466                           postdec1	equ	0xFE5
  6467                           fsr1l	equ	0xFE1
  6468                           indf2	equ	0xFDF
  6469                           fsr2h	equ	0xFDA
  6470                           fsr2l	equ	0xFD9
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function _modemSleep *****************
  6474 ;; Defined at:
  6475 ;;		line 172 in file "../Includes/Board/MOTEapp.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : F/0
  6486 ;;		On exit  : F/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0
  6490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6493 ;;Total ram usage:        0 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:   14
  6496 ;; This function calls:
  6497 ;;		_moteApp_delayms
  6498 ;;		_sendCommand
  6499 ;; This function is called by:
  6500 ;;		_moteApp_GoToSleep
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text18
  6505  0043CE                     __ptext18:
  6506                           	opt stack 0
  6507  0043CE                     _modemSleep:
  6508                           	opt stack 13
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;MOTEapp.c: 174: sendCommand("sys sleep 999999999");
  6512                           
  6513                           ;incstack = 0
  6514  0043CE  0E99               	movlw	low STR_22
  6515  0043D0  6FBA               	movwf	sendCommand@string& (0+255),b
  6516  0043D2  0E7C               	movlw	high STR_22
  6517  0043D4  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  6518  0043D6  ECD9  F025         	call	_sendCommand	;wreg free
  6519  0043DA                     l324:
  6520  0043DA  B89D               	btfsc	3997,4,c	;volatile
  6521  0043DC  D7FE               	goto	l324
  6522                           
  6523                           ;MOTEapp.c: 177: moteApp_delayms(20);
  6524  0043DE  0100               	movlb	0	; () banked
  6525  0043E0  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6526  0043E2  0E14               	movlw	20
  6527  0043E4  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  6528  0043E6  EFC2  F022         	goto	_moteApp_delayms	;wreg free
  6529  0043EA                     __end_of_modemSleep:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           intcon	equ	0xFF2
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           postdec1	equ	0xFE5
  6539                           fsr1l	equ	0xFE1
  6540                           indf2	equ	0xFDF
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function _modemResync *****************
  6546 ;; Defined at:
  6547 ;;		line 135 in file "../Includes/Board/MOTEapp.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;		None
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  6552 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : F/0
  6559 ;;		On exit  : F/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6562 ;;      Params:         0       0       0       0       0       0       0       0       0
  6563 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6565 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6566 ;;Total ram usage:        3 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:   14
  6569 ;; This function calls:
  6570 ;;		_MOTEapp_getModemResponse
  6571 ;;		_moteApp_delayms
  6572 ;;		_sendCommand
  6573 ;; This function is called by:
  6574 ;;		_main
  6575 ;;		_moteApp_GoToSleep
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text19
  6580  004D7C                     __ptext19:
  6581                           	opt stack 0
  6582  004D7C                     _modemResync:
  6583                           	opt stack 13
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;MOTEapp.c: 137: bool escapeEvent = 0;
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;incstack = 0
  6590  004D7C  6BC0               	clrf	modemResync@escapeEvent& (0+255),b
  6591                           
  6592                           ;MOTEapp.c: 138: uint16_t escapeCounter = 0;
  6593  004D7E  6BBE               	clrf	modemResync@escapeCounter& (0+255),b
  6594  004D80  6BBF               	clrf	(modemResync@escapeCounter+1)& (0+255),b
  6595                           
  6596                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 0;
  6597  004D82  9AAC               	bcf	4012,5,c	;volatile
  6598                           
  6599                           ;MOTEapp.c: 147: LATCbits.LATC6 = 0;
  6600  004D84  9C8B               	bcf	3979,6,c	;volatile
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;MOTEapp.c: 148: moteApp_delayms(10);
  6604  004D86  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6605  004D88  0E0A               	movlw	10
  6606  004D8A  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  6607  004D8C  ECC2  F022         	call	_moteApp_delayms	;wreg free
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;MOTEapp.c: 153: TXSTAbits.TXEN = 1;
  6611  004D90  8AAC               	bsf	4012,5,c	;volatile
  6612                           
  6613                           ;MOTEapp.c: 154: moteApp_delayms(5);
  6614  004D92  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6615  004D94  0E05               	movlw	5
  6616  004D96  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  6617  004D98  ECC2  F022         	call	_moteApp_delayms	;wreg free
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;MOTEapp.c: 156: TXREG = 0x55;
  6621  004D9C  0E55               	movlw	85
  6622  004D9E  6EAD               	movwf	4013,c	;volatile
  6623  004DA0                     l312:
  6624                           
  6625                           ; BSR set to: 0
  6626  004DA0  A2AC               	btfss	4012,1,c	;volatile
  6627  004DA2  D7FE               	goto	l312
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;MOTEapp.c: 160: sendCommand("z");
  6631  004DA4  0EFD               	movlw	low STR_21
  6632  004DA6  6FBA               	movwf	sendCommand@string& (0+255),b
  6633  004DA8  0E7F               	movlw	high STR_21
  6634  004DAA  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  6635  004DAC  ECD9  F025         	call	_sendCommand	;wreg free
  6636                           
  6637                           ;MOTEapp.c: 162: moteApp_delayms(40);
  6638  004DB0  0100               	movlb	0	; () banked
  6639  004DB2  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6640  004DB4  0E28               	movlw	40
  6641  004DB6  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  6642  004DB8  ECC2  F022         	call	_moteApp_delayms	;wreg free
  6643                           
  6644                           ;MOTEapp.c: 163: while (escapeEvent)
  6645  004DBC  D00E               	goto	l315
  6646  004DBE                     l8909:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;MOTEapp.c: 164: {
  6650                           ;MOTEapp.c: 165: if(MOTEapp_getModemResponse())
  6651  004DBE  ECEB  F024         	call	_MOTEapp_getModemResponse	;wreg free
  6652  004DC2  0900               	iorlw	0
  6653  004DC4  E003               	bz	l8913
  6654  004DC6                     l8911:
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;MOTEapp.c: 166: escapeEvent = 1;
  6658  004DC6  0E01               	movlw	1
  6659  004DC8  6FC0               	movwf	modemResync@escapeEvent& (0+255),b
  6660  004DCA  D007               	goto	l315
  6661  004DCC                     l8913:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;MOTEapp.c: 167: else if (++escapeCounter > 5000)
  6665  004DCC  4BBE               	infsnz	modemResync@escapeCounter& (0+255),f,b
  6666  004DCE  2BBF               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
  6667  004DD0  0E89               	movlw	137
  6668  004DD2  5DBE               	subwf	modemResync@escapeCounter& (0+255),w,b
  6669  004DD4  0E13               	movlw	19
  6670  004DD6  59BF               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
  6671  004DD8  E2F6               	bc	l8911
  6672  004DDA                     l315:
  6673                           
  6674                           ; BSR set to: 0
  6675  004DDA  51C0               	movf	modemResync@escapeEvent& (0+255),w,b
  6676  004DDC  E1F0               	bnz	l8909
  6677                           
  6678                           ; BSR set to: 0
  6679  004DDE  0012               	return		;funcret
  6680  004DE0                     __end_of_modemResync:
  6681                           	opt stack 0
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           intcon	equ	0xFF2
  6687                           postinc0	equ	0xFEE
  6688                           wreg	equ	0xFE8
  6689                           postdec1	equ	0xFE5
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _EUSART_FlushBuffer *****************
  6697 ;; Defined at:
  6698 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;  index           1    0[BANK0 ] unsigned char 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/F
  6709 ;;		On exit  : F/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0
  6713 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6715 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6716 ;;Total ram usage:        1 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:   11
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_moteApp_GoToSleep
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text20
  6727  0046D8                     __ptext20:
  6728                           	opt stack 0
  6729  0046D8                     _EUSART_FlushBuffer:
  6730                           	opt stack 16
  6731                           
  6732                           ;eusart.c: 204: uint8_t index;
  6733                           ;eusart.c: 205: for (index=0; index < 64; index++)
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;incstack = 0
  6737  0046D8  0100               	movlb	0	; () banked
  6738  0046DA  6BB9               	clrf	EUSART_FlushBuffer@index& (0+255),b
  6739  0046DC                     l8971:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;eusart.c: 206: {
  6743                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
  6744  0046DC  0E00               	movlw	low _eusartRxBuffer
  6745  0046DE  25B9               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
  6746  0046E0  6ED9               	movwf	fsr2l,c
  6747  0046E2  6ADA               	clrf	fsr2h,c
  6748  0046E4  0E02               	movlw	high _eusartRxBuffer
  6749  0046E6  22DA               	addwfc	fsr2h,f,c
  6750  0046E8  6ADF               	clrf	indf2,c
  6751                           
  6752                           ; BSR set to: 0
  6753  0046EA  2BB9               	incf	EUSART_FlushBuffer@index& (0+255),f,b
  6754                           
  6755                           ; BSR set to: 0
  6756  0046EC  0E3F               	movlw	63
  6757  0046EE  65B9               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
  6758  0046F0  D7F5               	goto	l8971
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;eusart.c: 208: }
  6762                           ;eusart.c: 209: eusartRxHead = 0;
  6763  0046F2  6A24               	clrf	_eusartRxHead,c
  6764                           
  6765                           ;eusart.c: 210: eusartRxTail = 0;
  6766  0046F4  6A25               	clrf	_eusartRxTail,c
  6767                           
  6768                           ;eusart.c: 211: eusartRxCount = 0;
  6769  0046F6  6A23               	clrf	_eusartRxCount,c	;volatile
  6770                           
  6771                           ;eusart.c: 213: PIE1bits.TXIE = 0;
  6772  0046F8  989D               	bcf	3997,4,c	;volatile
  6773                           
  6774                           ;eusart.c: 214: eusartTxHead = 0;
  6775  0046FA  6A27               	clrf	_eusartTxHead,c
  6776                           
  6777                           ;eusart.c: 215: eusartTxTail = 0;
  6778  0046FC  6A28               	clrf	_eusartTxTail,c
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6782  0046FE  0E40               	movlw	64
  6783  004700  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
  6784                           
  6785                           ; BSR set to: 0
  6786  004702  0C40               	retlw	64	;funcret
  6787  004704                     __end_of_EUSART_FlushBuffer:
  6788                           	opt stack 0
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           intcon	equ	0xFF2
  6794                           postinc0	equ	0xFEE
  6795                           wreg	equ	0xFE8
  6796                           postdec1	equ	0xFE5
  6797                           fsr1l	equ	0xFE1
  6798                           indf2	equ	0xFDF
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _TMR2_ReadTimer *****************
  6804 ;; Defined at:
  6805 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  readVal         1    0[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      unsigned char 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2
  6814 ;; Tracked objects:
  6815 ;;		On entry : F/0
  6816 ;;		On exit  : F/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0
  6820 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6822 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6823 ;;Total ram usage:        1 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   11
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_moteRunningProcess
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text21
  6834  004288                     __ptext21:
  6835                           	opt stack 0
  6836  004288                     _TMR2_ReadTimer:
  6837                           	opt stack 17
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;tmr2.c: 88: uint8_t readVal;
  6841                           ;tmr2.c: 90: readVal = TMR2;
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;incstack = 0
  6845  004288  CFBC F0B9          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;tmr2.c: 92: return readVal;
  6849  00428C  51B9               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
  6850                           
  6851                           ; BSR set to: 0
  6852  00428E  0012               	return		;funcret
  6853  004290                     __end_of_TMR2_ReadTimer:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           intcon	equ	0xFF2
  6860                           postinc0	equ	0xFEE
  6861                           wreg	equ	0xFE8
  6862                           postdec1	equ	0xFE5
  6863                           fsr1l	equ	0xFE1
  6864                           indf2	equ	0xFDF
  6865                           fsr2h	equ	0xFDA
  6866                           fsr2l	equ	0xFD9
  6867                           status	equ	0xFD8
  6868                           
  6869 ;; *************** function _moteJoiningProcess *****************
  6870 ;; Defined at:
  6871 ;;		line 299 in file "../Includes/Board/MOTEapp.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  messageReady    1    wreg     unsigned char 
  6874 ;;  switchEvent     1   37[BANK0 ] unsigned char 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  messageReady    1   53[BANK0 ] unsigned char 
  6877 ;;  i               1   52[BANK0 ] unsigned char 
  6878 ;;  i               1   51[BANK0 ] unsigned char 
  6879 ;;  Traw            2   49[BANK0 ] unsigned int 
  6880 ;;  buf            50    0        unsigned char [50]
  6881 ;;  joiningCompl    1   48[BANK0 ] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      enum E6542
  6884 ;; Registers used:
  6885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : F/1
  6888 ;;		On exit  : F/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6891 ;;      Params:         0       1       0       0       0       0       0       0       0
  6892 ;;      Locals:         0      14       0       0       0       0       0       0       0
  6893 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6894 ;;      Totals:         0      17       0       0       0       0       0       0       0
  6895 ;;Total ram usage:       17 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:   17
  6898 ;; This function calls:
  6899 ;;		_ADC_GetConversion
  6900 ;;		_ADC_TempConversion
  6901 ;;		_DATAEE_WriteByte
  6902 ;;		_MOTEapp_getModemResponse
  6903 ;;		_moteApp_delayms
  6904 ;;		_oled_clear
  6905 ;;		_oled_putString
  6906 ;;		_oled_putUint16
  6907 ;;		_sendCommand
  6908 ;;		_sprintf
  6909 ;;		_strcmp
  6910 ;;		_strncmp
  6911 ;; This function is called by:
  6912 ;;		_moteHandler
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text22
  6917  006EA8                     __ptext22:
  6918                           	opt stack 0
  6919  006EA8                     _moteJoiningProcess:
  6920                           	opt stack 12
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;incstack = 0
  6924                           ;moteJoiningProcess@messageReady stored from wreg
  6925  006EA8  0100               	movlb	0	; () banked
  6926  006EAA  6FEE               	movwf	moteJoiningProcess@messageReady& (0+255),b
  6927                           
  6928                           ;MOTEapp.c: 301: static int ch = 0;
  6929                           ;MOTEapp.c: 302: bool joiningComplete = 0;
  6930  006EAC  6BE9               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
  6931                           
  6932                           ;MOTEapp.c: 303: static int mode = 0;
  6933                           ;MOTEapp.c: 304: static unsigned char pkt_cnt = 0;
  6934                           ;MOTEapp.c: 305: static unsigned char float_val = 255;
  6935                           ;MOTEapp.c: 306: static bool pending_confirm = 0;
  6936                           ;MOTEapp.c: 307: char buf[50];
  6937                           ;MOTEapp.c: 308: static int skip_count = 0;
  6938                           ;MOTEapp.c: 317: switch (activeState)
  6939  006EAE  EF80  F03B         	goto	l10147
  6940  006EB2                     l378:
  6941  006EB2  D7FF               	goto	l378
  6942  006EB4                     l382:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;MOTEapp.c: 330: LATAbits.LATA7 = 0;
  6946  006EB4  9E89               	bcf	3977,7,c	;volatile
  6947                           
  6948                           ;MOTEapp.c: 331: LATAbits.LATA6 = 0;
  6949  006EB6  9C89               	bcf	3977,6,c	;volatile
  6950  006EB8                     l9761:
  6951                           
  6952                           ; BSR set to: 0
  6953  006EB8  ECEB  F024         	call	_MOTEapp_getModemResponse	;wreg free
  6954  006EBC  0900               	iorlw	0
  6955  006EBE  E1FC               	bnz	l9761
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;MOTEapp.c: 338: sendCommand("sys get ver");
  6959  006EC0  0EAD               	movlw	low STR_29
  6960  006EC2  6FBA               	movwf	sendCommand@string& (0+255),b
  6961  006EC4  0E7E               	movlw	high STR_29
  6962  006EC6  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  6963  006EC8  ECD9  F025         	call	_sendCommand	;wreg free
  6964                           
  6965                           ;MOTEapp.c: 339: oled_clear();
  6966  006ECC  ECCD  F021         	call	_oled_clear	;wreg free
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;MOTEapp.c: 340: oled_putString("get ver",0,0);
  6970  006ED0  0EB1               	movlw	low (STR_29+4)
  6971  006ED2  6FC6               	movwf	oled_putString@string& (0+255),b
  6972  006ED4  0E7E               	movlw	high (STR_29+4)
  6973  006ED6  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  6974  006ED8  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  6975  006EDA  6BC9               	clrf	oled_putString@start_page& (0+255),b
  6976  006EDC  ECF0  F026         	call	_oled_putString	;wreg free
  6977                           
  6978                           ;MOTEapp.c: 341: moteApp_delayms(100);
  6979  006EE0  0100               	movlb	0	; () banked
  6980  006EE2  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6981  006EE4  0E64               	movlw	100
  6982  006EE6  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  6983  006EE8  ECC2  F022         	call	_moteApp_delayms	;wreg free
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;MOTEapp.c: 342: activeState = moteReset;
  6987  006EEC  0E02               	movlw	2
  6988  006EEE  D3DD               	goto	L19
  6989  006EF0                     l9773:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;MOTEapp.c: 346: if ( messageReady )
  6993  006EF0  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  6994  006EF2  E102 EFBA  F03B    	bz	l10149
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;MOTEapp.c: 347: {
  6998                           ;MOTEapp.c: 348: if(strncmp(&modemResonseBuffer[2], "2903", 4) == 0)
  6999  006EF8  0E9A               	movlw	low (_modemResonseBuffer+2)
  7000  006EFA  6FB9               	movwf	strncmp@s1& (0+255),b
  7001  006EFC  0E01               	movlw	high (_modemResonseBuffer+2)
  7002  006EFE  6FBA               	movwf	(strncmp@s1+1)& (0+255),b
  7003  006F00  0EF8               	movlw	low STR_31
  7004  006F02  6FBB               	movwf	strncmp@s2& (0+255),b
  7005  006F04  0E7F               	movlw	high STR_31
  7006  006F06  6FBC               	movwf	(strncmp@s2+1)& (0+255),b
  7007  006F08  6BBE               	clrf	(strncmp@len+1)& (0+255),b
  7008  006F0A  0E04               	movlw	4
  7009  006F0C  6FBD               	movwf	strncmp@len& (0+255),b
  7010  006F0E  EC23  F027         	call	_strncmp	;wreg free
  7011  006F12  51B9               	movf	?_strncmp& (0+255),w,b
  7012  006F14  11BA               	iorwf	(?_strncmp+1)& (0+255),w,b
  7013  006F16  E118               	bnz	l9787
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;MOTEapp.c: 349: {
  7017                           ;MOTEapp.c: 350: sendCommand("mac set devaddr DEAD00A1");
  7018  006F18  0E20               	movlw	low STR_32
  7019  006F1A  6FBA               	movwf	sendCommand@string& (0+255),b
  7020  006F1C  0E7C               	movlw	high STR_32
  7021  006F1E  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7022  006F20  ECD9  F025         	call	_sendCommand	;wreg free
  7023                           
  7024                           ;MOTEapp.c: 351: oled_clear();
  7025  006F24  ECCD  F021         	call	_oled_clear	;wreg free
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;MOTEapp.c: 352: oled_putString("set devaddr",0,0);
  7029  006F28  0EA1               	movlw	low STR_33
  7030  006F2A  6FC6               	movwf	oled_putString@string& (0+255),b
  7031  006F2C  0E7E               	movlw	high STR_33
  7032  006F2E  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7033  006F30  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7034  006F32  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7035  006F34  ECF0  F026         	call	_oled_putString	;wreg free
  7036                           
  7037                           ;MOTEapp.c: 353: moteApp_delayms(80);
  7038  006F38  0100               	movlb	0	; () banked
  7039  006F3A  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7040  006F3C  0E50               	movlw	80
  7041  006F3E  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7042  006F40  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;MOTEapp.c: 354: activeState = moteSetDevaddr;
  7046  006F44  0E03               	movlw	3
  7047  006F46  D3B1               	goto	L19
  7048  006F48                     l9787:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;MOTEapp.c: 356: else
  7052                           ;MOTEapp.c: 357: {
  7053                           ;MOTEapp.c: 358: oled_clear();
  7054  006F48  ECCD  F021         	call	_oled_clear	;wreg free
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;MOTEapp.c: 359: oled_putString(modemResonseBuffer,0,3);
  7058  006F4C  0E98               	movlw	low _modemResonseBuffer
  7059  006F4E  6FC6               	movwf	oled_putString@string& (0+255),b
  7060  006F50  0E01               	movlw	high _modemResonseBuffer
  7061  006F52  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7062  006F54  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7063  006F56  0E03               	movlw	3
  7064  006F58  6FC9               	movwf	oled_putString@start_page& (0+255),b
  7065  006F5A  ECF0  F026         	call	_oled_putString	;wreg free
  7066                           
  7067                           ;MOTEapp.c: 360: moteApp_delayms(1000);
  7068  006F5E  0E03               	movlw	3
  7069  006F60  0100               	movlb	0	; () banked
  7070  006F62  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7071  006F64  0EE8               	movlw	232
  7072  006F66  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7073  006F68  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7074  006F6C                     l9793:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;MOTEapp.c: 361: activeState = moteStartup;
  7078  006F6C  6B94               	clrf	_activeState& (0+255),b
  7079  006F6E  EFBA  F03B         	goto	l10149
  7080  006F72                     l9795:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;MOTEapp.c: 366: if ( messageReady )
  7084  006F72  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7085  006F74  E102 EFBA  F03B    	bz	l10149
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;MOTEapp.c: 367: {
  7089                           ;MOTEapp.c: 368: if(strcmp(modemResonseBuffer, "ok") == 0)
  7090  006F7A  0E98               	movlw	low _modemResonseBuffer
  7091  006F7C  6FB9               	movwf	strcmp@s1& (0+255),b
  7092  006F7E  0E01               	movlw	high _modemResonseBuffer
  7093  006F80  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7094  006F82  0EB3               	movlw	low (STR_64+12)
  7095  006F84  6FBB               	movwf	strcmp@s2& (0+255),b
  7096  006F86  0E7D               	movlw	high (STR_64+12)
  7097  006F88  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7098  006F8A  EC7D  F028         	call	_strcmp	;wreg free
  7099  006F8E  51B9               	movf	?_strcmp& (0+255),w,b
  7100  006F90  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7101  006F92  E1EC               	bnz	l9793
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;MOTEapp.c: 369: {
  7105                           ;MOTEapp.c: 370: sendCommand("mac set appskey 2B7E151628AED2A6ABF7158809CF4F3C");
  7106  006F94  0E87               	movlw	low STR_35
  7107  006F96  6FBA               	movwf	sendCommand@string& (0+255),b
  7108  006F98  0E7B               	movlw	high STR_35
  7109  006F9A  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7110  006F9C  ECD9  F025         	call	_sendCommand	;wreg free
  7111                           
  7112                           ;MOTEapp.c: 371: oled_clear();
  7113  006FA0  ECCD  F021         	call	_oled_clear	;wreg free
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;MOTEapp.c: 372: oled_putString("set appskey",0,0);
  7117  006FA4  0EC5               	movlw	low STR_36
  7118  006FA6  6FC6               	movwf	oled_putString@string& (0+255),b
  7119  006FA8  0E7E               	movlw	high STR_36
  7120  006FAA  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7121  006FAC  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7122  006FAE  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7123  006FB0  ECF0  F026         	call	_oled_putString	;wreg free
  7124                           
  7125                           ;MOTEapp.c: 373: moteApp_delayms(80);
  7126  006FB4  0100               	movlb	0	; () banked
  7127  006FB6  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7128  006FB8  0E50               	movlw	80
  7129  006FBA  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7130  006FBC  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;MOTEapp.c: 374: activeState = moteSetAppskey;
  7134  006FC0  0E04               	movlw	4
  7135  006FC2  D373               	goto	L19
  7136  006FC4                     l9809:
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;MOTEapp.c: 383: if ( messageReady )
  7140  006FC4  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7141  006FC6  E101 D3D5          	bz	l10149
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;MOTEapp.c: 384: {
  7145                           ;MOTEapp.c: 385: if(strcmp(modemResonseBuffer, "ok") == 0)
  7146  006FCA  0E98               	movlw	low _modemResonseBuffer
  7147  006FCC  6FB9               	movwf	strcmp@s1& (0+255),b
  7148  006FCE  0E01               	movlw	high _modemResonseBuffer
  7149  006FD0  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7150  006FD2  0EB3               	movlw	low (STR_64+12)
  7151  006FD4  6FBB               	movwf	strcmp@s2& (0+255),b
  7152  006FD6  0E7D               	movlw	high (STR_64+12)
  7153  006FD8  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7154  006FDA  EC7D  F028         	call	_strcmp	;wreg free
  7155  006FDE  51B9               	movf	?_strcmp& (0+255),w,b
  7156  006FE0  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7157  006FE2  E1C4               	bnz	l9793
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;MOTEapp.c: 386: {
  7161                           ;MOTEapp.c: 388: sendCommand("mac set nwkskey 2B7E151628AED2A6ABF7158809CF4F3C");
  7162  006FE4  0E56               	movlw	low STR_38
  7163  006FE6  6FBA               	movwf	sendCommand@string& (0+255),b
  7164  006FE8  0E7B               	movlw	high STR_38
  7165  006FEA  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7166  006FEC  ECD9  F025         	call	_sendCommand	;wreg free
  7167                           
  7168                           ;MOTEapp.c: 389: oled_clear();
  7169  006FF0  ECCD  F021         	call	_oled_clear	;wreg free
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;MOTEapp.c: 390: oled_putString("set nwkskey",0,0);
  7173  006FF4  0EB9               	movlw	low STR_39
  7174  006FF6  6FC6               	movwf	oled_putString@string& (0+255),b
  7175  006FF8  0E7E               	movlw	high STR_39
  7176  006FFA  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7177  006FFC  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7178  006FFE  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7179  007000  ECF0  F026         	call	_oled_putString	;wreg free
  7180                           
  7181                           ;MOTEapp.c: 391: moteApp_delayms(80);
  7182  007004  0100               	movlb	0	; () banked
  7183  007006  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7184  007008  0E50               	movlw	80
  7185  00700A  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7186  00700C  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;MOTEapp.c: 392: activeState = moteSetNwkskey;
  7190  007010  0E05               	movlw	5
  7191  007012  D34B               	goto	L19
  7192  007014                     l9823:
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;MOTEapp.c: 401: if ( messageReady )
  7196  007014  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7197  007016  E101 D3AD          	bz	l10149
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;MOTEapp.c: 402: {
  7201                           ;MOTEapp.c: 403: if(strcmp(modemResonseBuffer, "ok") == 0)
  7202  00701A  0E98               	movlw	low _modemResonseBuffer
  7203  00701C  6FB9               	movwf	strcmp@s1& (0+255),b
  7204  00701E  0E01               	movlw	high _modemResonseBuffer
  7205  007020  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7206  007022  0EB3               	movlw	low (STR_64+12)
  7207  007024  6FBB               	movwf	strcmp@s2& (0+255),b
  7208  007026  0E7D               	movlw	high (STR_64+12)
  7209  007028  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7210  00702A  EC7D  F028         	call	_strcmp	;wreg free
  7211  00702E  51B9               	movf	?_strcmp& (0+255),w,b
  7212  007030  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7213  007032  E19C               	bnz	l9793
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;MOTEapp.c: 404: {
  7217                           ;MOTEapp.c: 406: sendCommand("mac set adr off");
  7218  007034  0E77               	movlw	low STR_41
  7219  007036  6FBA               	movwf	sendCommand@string& (0+255),b
  7220  007038  0E7D               	movlw	high STR_41
  7221  00703A  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7222  00703C  ECD9  F025         	call	_sendCommand	;wreg free
  7223                           
  7224                           ;MOTEapp.c: 407: oled_clear();
  7225  007040  ECCD  F021         	call	_oled_clear	;wreg free
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;MOTEapp.c: 408: oled_putString("set adr",0,0);
  7229  007044  0E93               	movlw	low STR_42
  7230  007046  6FC6               	movwf	oled_putString@string& (0+255),b
  7231  007048  0E7F               	movlw	high STR_42
  7232  00704A  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7233  00704C  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7234  00704E  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7235  007050  ECF0  F026         	call	_oled_putString	;wreg free
  7236                           
  7237                           ;MOTEapp.c: 409: moteApp_delayms(80);
  7238  007054  0100               	movlb	0	; () banked
  7239  007056  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7240  007058  0E50               	movlw	80
  7241  00705A  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7242  00705C  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;MOTEapp.c: 410: activeState = moteSetAdr;
  7246  007060  0E06               	movlw	6
  7247  007062  D323               	goto	L19
  7248  007064                     l9837:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;MOTEapp.c: 419: if ( messageReady )
  7252  007064  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7253  007066  E101 D385          	bz	l10149
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;MOTEapp.c: 420: {
  7257                           ;MOTEapp.c: 421: if(strcmp(modemResonseBuffer, "ok") == 0)
  7258  00706A  0E98               	movlw	low _modemResonseBuffer
  7259  00706C  6FB9               	movwf	strcmp@s1& (0+255),b
  7260  00706E  0E01               	movlw	high _modemResonseBuffer
  7261  007070  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7262  007072  0EB3               	movlw	low (STR_64+12)
  7263  007074  6FBB               	movwf	strcmp@s2& (0+255),b
  7264  007076  0E7D               	movlw	high (STR_64+12)
  7265  007078  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7266  00707A  EC7D  F028         	call	_strcmp	;wreg free
  7267  00707E  51B9               	movf	?_strcmp& (0+255),w,b
  7268  007080  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7269  007082  E001 D773          	bnz	l9793
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;MOTEapp.c: 422: {
  7273                           ;MOTEapp.c: 424: sendCommand("mac set sync 34");
  7274  007086  0E67               	movlw	low STR_44
  7275  007088  6FBA               	movwf	sendCommand@string& (0+255),b
  7276  00708A  0E7D               	movlw	high STR_44
  7277  00708C  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7278  00708E  ECD9  F025         	call	_sendCommand	;wreg free
  7279                           
  7280                           ;MOTEapp.c: 425: oled_clear();
  7281  007092  ECCD  F021         	call	_oled_clear	;wreg free
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;MOTEapp.c: 426: oled_putString("set sync",0,0);
  7285  007096  0E3B               	movlw	low STR_45
  7286  007098  6FC6               	movwf	oled_putString@string& (0+255),b
  7287  00709A  0E7F               	movlw	high STR_45
  7288  00709C  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7289  00709E  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7290  0070A0  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7291  0070A2  ECF0  F026         	call	_oled_putString	;wreg free
  7292                           
  7293                           ;MOTEapp.c: 427: moteApp_delayms(80);
  7294  0070A6  0100               	movlb	0	; () banked
  7295  0070A8  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7296  0070AA  0E50               	movlw	80
  7297  0070AC  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7298  0070AE  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;MOTEapp.c: 428: activeState = moteSetSync;
  7302  0070B2  0E08               	movlw	8
  7303  0070B4  D2FA               	goto	L19
  7304  0070B6                     l9851:
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;MOTEapp.c: 437: if ( messageReady )
  7308  0070B6  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7309  0070B8  E101 D35C          	bz	l10149
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;MOTEapp.c: 438: {
  7313                           ;MOTEapp.c: 439: if(strcmp(modemResonseBuffer, "ok") == 0)
  7314  0070BC  0E98               	movlw	low _modemResonseBuffer
  7315  0070BE  6FB9               	movwf	strcmp@s1& (0+255),b
  7316  0070C0  0E01               	movlw	high _modemResonseBuffer
  7317  0070C2  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7318  0070C4  0EB3               	movlw	low (STR_64+12)
  7319  0070C6  6FBB               	movwf	strcmp@s2& (0+255),b
  7320  0070C8  0E7D               	movlw	high (STR_64+12)
  7321  0070CA  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7322  0070CC  EC7D  F028         	call	_strcmp	;wreg free
  7323  0070D0  51B9               	movf	?_strcmp& (0+255),w,b
  7324  0070D2  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7325  0070D4  E001 D74A          	bnz	l9793
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;MOTEapp.c: 440: {
  7329                           ;MOTEapp.c: 442: sendCommand("mac set rx2 8 923300000");
  7330  0070D8  0E51               	movlw	low STR_47
  7331  0070DA  6FBA               	movwf	sendCommand@string& (0+255),b
  7332  0070DC  0E7C               	movlw	high STR_47
  7333  0070DE  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7334  0070E0  ECD9  F025         	call	_sendCommand	;wreg free
  7335                           
  7336                           ;MOTEapp.c: 443: oled_clear();
  7337  0070E4  ECCD  F021         	call	_oled_clear	;wreg free
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;MOTEapp.c: 444: oled_putString("set rx2",0,0);
  7341  0070E8  0E8B               	movlw	low STR_48
  7342  0070EA  6FC6               	movwf	oled_putString@string& (0+255),b
  7343  0070EC  0E7F               	movlw	high STR_48
  7344  0070EE  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7345  0070F0  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7346  0070F2  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7347  0070F4  ECF0  F026         	call	_oled_putString	;wreg free
  7348                           
  7349                           ;MOTEapp.c: 445: moteApp_delayms(80);
  7350  0070F8  0100               	movlb	0	; () banked
  7351  0070FA  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7352  0070FC  0E50               	movlw	80
  7353  0070FE  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7354  007100  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;MOTEapp.c: 446: ch = 0;
  7358  007104  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7359  007106  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7360  007108                     l9865:
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;MOTEapp.c: 447: activeState = moteSetRx2;
  7364  007108  0E07               	movlw	7
  7365  00710A  D2CF               	goto	L19
  7366  00710C                     l9867:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;MOTEapp.c: 457: if ( messageReady )
  7370  00710C  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7371  00710E  E101 D331          	bz	l10149
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;MOTEapp.c: 458: {
  7375                           ;MOTEapp.c: 459: if(strcmp(modemResonseBuffer, "ok") == 0)
  7376  007112  0E98               	movlw	low _modemResonseBuffer
  7377  007114  6FB9               	movwf	strcmp@s1& (0+255),b
  7378  007116  0E01               	movlw	high _modemResonseBuffer
  7379  007118  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7380  00711A  0EB3               	movlw	low (STR_64+12)
  7381  00711C  6FBB               	movwf	strcmp@s2& (0+255),b
  7382  00711E  0E7D               	movlw	high (STR_64+12)
  7383  007120  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7384  007122  EC7D  F028         	call	_strcmp	;wreg free
  7385  007126  51B9               	movf	?_strcmp& (0+255),w,b
  7386  007128  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7387  00712A  E001 D71F          	bnz	l9793
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;MOTEapp.c: 460: {
  7391                           ;MOTEapp.c: 462: sprintf(cmd,"mac set ch status %d %s",
  7392                           ;MOTEapp.c: 463: ch,
  7393                           ;MOTEapp.c: 464: (ch>=8 && ch<=15)?"on":"off");
  7394  00712E  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7395  007130  D00C               	goto	l9875
  7396  007132  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7397  007134  E103               	bnz	u8180
  7398  007136  0E08               	movlw	8
  7399  007138  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7400  00713A  E307               	bnc	l9875
  7401  00713C                     u8180:
  7402                           
  7403                           ; BSR set to: 0
  7404  00713C  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7405  00713E  D009               	goto	l9877
  7406  007140  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7407  007142  E103               	bnz	u8190
  7408  007144  0E10               	movlw	16
  7409  007146  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7410  007148  E304               	bnc	l9877
  7411  00714A                     u8190:
  7412  00714A                     l9875:
  7413                           
  7414                           ; BSR set to: 0
  7415  00714A  0E83               	movlw	low (STR_41+12)
  7416  00714C  6FE1               	movwf	_moteJoiningProcess$1341& (0+255),b
  7417  00714E  0E7D               	movlw	high (STR_41+12)
  7418  007150  D003               	goto	L10
  7419  007152                     l9877:
  7420                           
  7421                           ; BSR set to: 0
  7422  007152  0EC2               	movlw	low (STR_93+12)
  7423  007154  6FE1               	movwf	_moteJoiningProcess$1341& (0+255),b
  7424  007156  0E7D               	movlw	high (STR_93+12)
  7425  007158                     L10:
  7426  007158  6FE2               	movwf	(_moteJoiningProcess$1341+1)& (0+255),b
  7427                           
  7428                           ; BSR set to: 0
  7429  00715A  0E58               	movlw	low _cmd
  7430  00715C  6FC5               	movwf	sprintf@sp& (0+255),b
  7431  00715E  0E01               	movlw	high _cmd
  7432  007160  6FC6               	movwf	(sprintf@sp+1)& (0+255),b
  7433  007162  0E81               	movlw	low STR_50
  7434  007164  6FC7               	movwf	sprintf@f& (0+255),b
  7435  007166  0E7C               	movlw	high STR_50
  7436  007168  6FC8               	movwf	(sprintf@f+1)& (0+255),b
  7437  00716A  C08B  F0C9         	movff	moteJoiningProcess@ch,?_sprintf+4
  7438  00716E  C08C  F0CA         	movff	moteJoiningProcess@ch+1,?_sprintf+5
  7439  007172  C0E1  F0CB         	movff	_moteJoiningProcess$1341,?_sprintf+6
  7440  007176  C0E2  F0CC         	movff	_moteJoiningProcess$1341+1,?_sprintf+7
  7441  00717A  EC7E  F035         	call	_sprintf	;wreg free
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;MOTEapp.c: 465: sendCommand(cmd);
  7445  00717E  0E58               	movlw	low _cmd
  7446  007180  6FBA               	movwf	sendCommand@string& (0+255),b
  7447  007182  0E01               	movlw	high _cmd
  7448  007184  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7449  007186  ECD9  F025         	call	_sendCommand	;wreg free
  7450                           
  7451                           ;MOTEapp.c: 466: oled_clear();
  7452  00718A  ECCD  F021         	call	_oled_clear	;wreg free
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;MOTEapp.c: 467: oled_putString("set ch",0,0);
  7456  00718E  0EEA               	movlw	low STR_53
  7457  007190  6FC6               	movwf	oled_putString@string& (0+255),b
  7458  007192  0E7F               	movlw	high STR_53
  7459  007194  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7460  007196  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7461  007198  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7462  00719A  ECF0  F026         	call	_oled_putString	;wreg free
  7463                           
  7464                           ;MOTEapp.c: 468: oled_putString(&cmd[18],0,1);
  7465  00719E  0E6A               	movlw	low (_cmd+18)
  7466  0071A0  0100               	movlb	0	; () banked
  7467  0071A2  6FC6               	movwf	oled_putString@string& (0+255),b
  7468  0071A4  0E01               	movlw	high (_cmd+18)
  7469  0071A6  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7470  0071A8  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7471  0071AA  0E01               	movlw	1
  7472  0071AC  6FC9               	movwf	oled_putString@start_page& (0+255),b
  7473  0071AE  ECF0  F026         	call	_oled_putString	;wreg free
  7474                           
  7475                           ;MOTEapp.c: 469: moteApp_delayms(80);
  7476  0071B2  0100               	movlb	0	; () banked
  7477  0071B4  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7478  0071B6  0E50               	movlw	80
  7479  0071B8  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7480  0071BA  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;MOTEapp.c: 470: ch++;
  7484  0071BE  4B8B               	infsnz	moteJoiningProcess@ch& (0+255),f,b
  7485  0071C0  2B8C               	incf	(moteJoiningProcess@ch+1)& (0+255),f,b
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;MOTEapp.c: 471: if (ch<72) {
  7489  0071C2  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7490  0071C4  D7A1               	goto	l9865
  7491  0071C6  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7492  0071C8  E103               	bnz	l9897
  7493  0071CA  0E48               	movlw	72
  7494  0071CC  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7495  0071CE  E39C               	bnc	l9865
  7496  0071D0                     l9897:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;MOTEapp.c: 474: activeState = moteSetChStatus;
  7500  0071D0  0E09               	movlw	9
  7501  0071D2  D26B               	goto	L19
  7502  0071D4                     l9899:
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;MOTEapp.c: 484: if ( messageReady )
  7506  0071D4  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7507  0071D6  E101 D2CD          	bz	l10149
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;MOTEapp.c: 485: {
  7511                           ;MOTEapp.c: 486: if(strcmp(modemResonseBuffer, "ok") == 0)
  7512  0071DA  0E98               	movlw	low _modemResonseBuffer
  7513  0071DC  6FB9               	movwf	strcmp@s1& (0+255),b
  7514  0071DE  0E01               	movlw	high _modemResonseBuffer
  7515  0071E0  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7516  0071E2  0EB3               	movlw	low (STR_64+12)
  7517  0071E4  6FBB               	movwf	strcmp@s2& (0+255),b
  7518  0071E6  0E7D               	movlw	high (STR_64+12)
  7519  0071E8  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7520  0071EA  EC7D  F028         	call	_strcmp	;wreg free
  7521  0071EE  51B9               	movf	?_strcmp& (0+255),w,b
  7522  0071F0  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7523  0071F2  E001 D6BB          	bnz	l9793
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MOTEapp.c: 487: {
  7527                           ;MOTEapp.c: 488: moteApp_delayms(200);
  7528  0071F6  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7529  0071F8  0EC8               	movlw	200
  7530  0071FA  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7531  0071FC  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;MOTEapp.c: 489: sendCommand("mac join abp");
  7535  007200  0E48               	movlw	low STR_55
  7536  007202  6FBA               	movwf	sendCommand@string& (0+255),b
  7537  007204  0E7E               	movlw	high STR_55
  7538  007206  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7539  007208  ECD9  F025         	call	_sendCommand	;wreg free
  7540                           
  7541                           ;MOTEapp.c: 490: oled_clear();
  7542  00720C  ECCD  F021         	call	_oled_clear	;wreg free
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;MOTEapp.c: 491: oled_putString("join abp",0,0);
  7546  007210  0E4C               	movlw	low (STR_55+4)
  7547  007212  6FC6               	movwf	oled_putString@string& (0+255),b
  7548  007214  0E7E               	movlw	high (STR_55+4)
  7549  007216  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7550  007218  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7551  00721A  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7552  00721C  ECF0  F026         	call	_oled_putString	;wreg free
  7553                           
  7554                           ;MOTEapp.c: 492: moteApp_delayms(80);
  7555  007220  0100               	movlb	0	; () banked
  7556  007222  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7557  007224  0E50               	movlw	80
  7558  007226  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7559  007228  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;MOTEapp.c: 493: activeState = moteJoinAbp;
  7563  00722C  0E0A               	movlw	10
  7564  00722E  D23D               	goto	L19
  7565  007230                     l9915:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;MOTEapp.c: 502: if ( messageReady )
  7569  007230  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7570  007232  E101 D29F          	bz	l10149
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;MOTEapp.c: 503: {
  7574                           ;MOTEapp.c: 504: if(strcmp(modemResonseBuffer, "ok") == 0)
  7575  007236  0E98               	movlw	low _modemResonseBuffer
  7576  007238  6FB9               	movwf	strcmp@s1& (0+255),b
  7577  00723A  0E01               	movlw	high _modemResonseBuffer
  7578  00723C  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7579  00723E  0EB3               	movlw	low (STR_64+12)
  7580  007240  6FBB               	movwf	strcmp@s2& (0+255),b
  7581  007242  0E7D               	movlw	high (STR_64+12)
  7582  007244  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7583  007246  EC7D  F028         	call	_strcmp	;wreg free
  7584  00724A  51B9               	movf	?_strcmp& (0+255),w,b
  7585  00724C  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7586  00724E  E001 D68D          	bnz	l9793
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;MOTEapp.c: 505: {
  7590                           ;MOTEapp.c: 507: oled_clear();
  7591  007252  ECCD  F021         	call	_oled_clear	;wreg free
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;MOTEapp.c: 508: oled_putString("Wait accepted...",0,0);
  7595  007256  0ECF               	movlw	low STR_58
  7596  007258  6FC6               	movwf	oled_putString@string& (0+255),b
  7597  00725A  0E7C               	movlw	high STR_58
  7598  00725C  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7599  00725E  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7600  007260  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7601  007262  ECF0  F026         	call	_oled_putString	;wreg free
  7602                           
  7603                           ;MOTEapp.c: 509: moteApp_delayms(80);
  7604  007266  0100               	movlb	0	; () banked
  7605  007268  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7606  00726A  0E50               	movlw	80
  7607  00726C  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7608  00726E  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;MOTEapp.c: 510: activeState = moteWaitAccepted;
  7612  007272  0E0B               	movlw	11
  7613  007274  D21A               	goto	L19
  7614  007276                     l9927:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;MOTEapp.c: 519: if ( messageReady )
  7618  007276  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7619  007278  E101 D27C          	bz	l10149
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;MOTEapp.c: 520: {
  7623                           ;MOTEapp.c: 521: if(strcmp(modemResonseBuffer, "accepted") == 0)
  7624  00727C  0E98               	movlw	low _modemResonseBuffer
  7625  00727E  6FB9               	movwf	strcmp@s1& (0+255),b
  7626  007280  0E01               	movlw	high _modemResonseBuffer
  7627  007282  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7628  007284  0E44               	movlw	low STR_59
  7629  007286  6FBB               	movwf	strcmp@s2& (0+255),b
  7630  007288  0E7F               	movlw	high STR_59
  7631  00728A  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7632  00728C  EC7D  F028         	call	_strcmp	;wreg free
  7633  007290  51B9               	movf	?_strcmp& (0+255),w,b
  7634  007292  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7635  007294  E11A               	bnz	l9943
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;MOTEapp.c: 522: {
  7639                           ;MOTEapp.c: 527: sendCommand("mac tx uncnf 1 00000000");
  7640  007296  0E39               	movlw	low STR_60
  7641  007298  6FBA               	movwf	sendCommand@string& (0+255),b
  7642  00729A  0E7C               	movlw	high STR_60
  7643  00729C  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  7644  00729E  ECD9  F025         	call	_sendCommand	;wreg free
  7645                           
  7646                           ;MOTEapp.c: 528: oled_clear();
  7647  0072A2  ECCD  F021         	call	_oled_clear	;wreg free
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;MOTEapp.c: 529: oled_putString("ini tx",0,0);
  7651  0072A6  0EF1               	movlw	low STR_61
  7652  0072A8  6FC6               	movwf	oled_putString@string& (0+255),b
  7653  0072AA  0E7F               	movlw	high STR_61
  7654  0072AC  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7655  0072AE  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7656  0072B0  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7657  0072B2  ECF0  F026         	call	_oled_putString	;wreg free
  7658                           
  7659                           ;MOTEapp.c: 530: moteApp_delayms(150);
  7660  0072B6  0100               	movlb	0	; () banked
  7661  0072B8  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7662  0072BA  0E96               	movlw	150
  7663  0072BC  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7664  0072BE  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;MOTEapp.c: 531: activeState = moteIniTx;
  7668  0072C2  0E0C               	movlw	12
  7669  0072C4  6F94               	movwf	_activeState& (0+255),b
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;MOTEapp.c: 532: LATAbits.LATA6 = 1;
  7673  0072C6  8C89               	bsf	3977,6,c	;volatile
  7674                           
  7675                           ;MOTEapp.c: 533: }
  7676  0072C8  D255               	goto	l10149
  7677  0072CA                     l9943:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;MOTEapp.c: 534: else
  7681                           ;MOTEapp.c: 535: {
  7682                           ;MOTEapp.c: 536: oled_clear();
  7683  0072CA  ECCD  F021         	call	_oled_clear	;wreg free
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;MOTEapp.c: 537: oled_putString("moteWaitAccepted",0,0);
  7687  0072CE  0E02               	movlw	low STR_62
  7688  0072D0  6FC6               	movwf	oled_putString@string& (0+255),b
  7689  0072D2  0E7D               	movlw	high STR_62
  7690  0072D4  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7691  0072D6  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7692  0072D8  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7693  0072DA  ECF0  F026         	call	_oled_putString	;wreg free
  7694                           
  7695                           ;MOTEapp.c: 538: activeState = moteStartup;
  7696  0072DE  0100               	movlb	0	; () banked
  7697  0072E0  6B94               	clrf	_activeState& (0+255),b
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;MOTEapp.c: 539: moteApp_delayms(500);
  7701  0072E2  0E01               	movlw	1
  7702  0072E4  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7703  0072E6  0EF4               	movlw	244
  7704  0072E8  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7705  0072EA  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7706  0072EE  D023               	goto	l9965
  7707  0072F0                     l9953:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;MOTEapp.c: 545: if ( messageReady )
  7711  0072F0  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7712  0072F2  E101 D23F          	bz	l10149
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;MOTEapp.c: 546: {
  7716                           ;MOTEapp.c: 547: if(strcmp(modemResonseBuffer, "ok") == 0)
  7717  0072F6  0E98               	movlw	low _modemResonseBuffer
  7718  0072F8  6FB9               	movwf	strcmp@s1& (0+255),b
  7719  0072FA  0E01               	movlw	high _modemResonseBuffer
  7720  0072FC  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  7721  0072FE  0EB3               	movlw	low (STR_64+12)
  7722  007300  6FBB               	movwf	strcmp@s2& (0+255),b
  7723  007302  0E7D               	movlw	high (STR_64+12)
  7724  007304  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  7725  007306  EC7D  F028         	call	_strcmp	;wreg free
  7726  00730A  51B9               	movf	?_strcmp& (0+255),w,b
  7727  00730C  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  7728  00730E  E115               	bnz	l9967
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;MOTEapp.c: 548: {
  7732                           ;MOTEapp.c: 549: oled_clear();
  7733  007310  ECCD  F021         	call	_oled_clear	;wreg free
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;MOTEapp.c: 550: oled_putString("wait mac_tx_ok",0,0);
  7737  007314  0EA7               	movlw	low STR_64
  7738  007316  6FC6               	movwf	oled_putString@string& (0+255),b
  7739  007318  0E7D               	movlw	high STR_64
  7740  00731A  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7741  00731C  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7742  00731E  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7743  007320  ECF0  F026         	call	_oled_putString	;wreg free
  7744                           
  7745                           ;MOTEapp.c: 551: moteApp_delayms(3000);
  7746  007324  0E0B               	movlw	11
  7747  007326  0100               	movlb	0	; () banked
  7748  007328  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7749  00732A  0EB8               	movlw	184
  7750  00732C  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7751  00732E  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;MOTEapp.c: 552: activeState = moteWaitIniTxOk;
  7755  007332  0E0D               	movlw	13
  7756  007334  6F94               	movwf	_activeState& (0+255),b
  7757  007336                     l9965:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;MOTEapp.c: 553: LATAbits.LATA7 = 1;
  7761  007336  8E89               	bsf	3977,7,c	;volatile
  7762                           
  7763                           ;MOTEapp.c: 554: }
  7764  007338  D21D               	goto	l10149
  7765  00733A                     l9967:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;MOTEapp.c: 556: else
  7769                           ;MOTEapp.c: 557: {
  7770                           ;MOTEapp.c: 558: oled_clear();
  7771  00733A  ECCD  F021         	call	_oled_clear	;wreg free
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;MOTEapp.c: 559: oled_putString("moteIniTx",0,0);
  7775  00733E  0E14               	movlw	low STR_65
  7776  007340  6FC6               	movwf	oled_putString@string& (0+255),b
  7777  007342  0E7F               	movlw	high STR_65
  7778  007344  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7779  007346  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7780  007348  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7781  00734A  ECF0  F026         	call	_oled_putString	;wreg free
  7782                           
  7783                           ;MOTEapp.c: 560: activeState = moteStartup;
  7784  00734E  0100               	movlb	0	; () banked
  7785  007350  6B94               	clrf	_activeState& (0+255),b
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;MOTEapp.c: 561: moteApp_delayms(500);
  7789  007352  0E01               	movlw	1
  7790  007354  6FBA               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7791  007356  0EF4               	movlw	244
  7792  007358  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7793  00735A  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;MOTEapp.c: 562: LATAbits.LATA6 = 0;
  7797  00735E  9C89               	bcf	3977,6,c	;volatile
  7798  007360  D209               	goto	l10149
  7799  007362                     l438:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;MOTEapp.c: 568: {
  7803                           ;MOTEapp.c: 570: {
  7804                           ;MOTEapp.c: 571: LATAbits.LATA7 = 1;
  7805  007362  8E89               	bsf	3977,7,c	;volatile
  7806                           
  7807                           ;MOTEapp.c: 572: LATAbits.LATA6 = 0;
  7808  007364  9C89               	bcf	3977,6,c	;volatile
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;MOTEapp.c: 574: oled_clear();
  7812  007366  ECCD  F021         	call	_oled_clear	;wreg free
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;MOTEapp.c: 575: oled_putString("Mode: ",0,0);
  7816  00736A  0EB9               	movlw	low STR_66
  7817  00736C  6FC6               	movwf	oled_putString@string& (0+255),b
  7818  00736E  0E7F               	movlw	high STR_66
  7819  007370  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7820  007372  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7821  007374  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7822  007376  ECF0  F026         	call	_oled_putString	;wreg free
  7823                           
  7824                           ;MOTEapp.c: 576: oled_putString(autoMode?"AUTO  ":"MANUAL",6,0);
  7825  00737A  0100               	movlb	0	; () banked
  7826  00737C  5196               	movf	_autoMode& (0+255),w,b
  7827  00737E  E104               	bnz	l9985
  7828                           
  7829                           ; BSR set to: 0
  7830  007380  0EE3               	movlw	low STR_68
  7831  007382  6FE3               	movwf	_moteJoiningProcess$1359& (0+255),b
  7832  007384  0E7F               	movlw	high STR_68
  7833  007386  D003               	goto	L14
  7834  007388                     l9985:
  7835                           
  7836                           ; BSR set to: 0
  7837  007388  0EB2               	movlw	low STR_67
  7838  00738A  6FE3               	movwf	_moteJoiningProcess$1359& (0+255),b
  7839  00738C  0E7F               	movlw	high STR_67
  7840  00738E                     L14:
  7841  00738E  6FE4               	movwf	(_moteJoiningProcess$1359+1)& (0+255),b
  7842                           
  7843                           ; BSR set to: 0
  7844  007390  C0E3  F0C6         	movff	_moteJoiningProcess$1359,oled_putString@string
  7845  007394  C0E4  F0C7         	movff	_moteJoiningProcess$1359+1,oled_putString@string+1
  7846  007398  0E06               	movlw	6
  7847  00739A  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  7848  00739C  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7849  00739E  ECF0  F026         	call	_oled_putString	;wreg free
  7850                           
  7851                           ;MOTEapp.c: 577: oled_putString("S1 = auto on/off",0,1);
  7852  0073A2  0E24               	movlw	low STR_69
  7853  0073A4  0100               	movlb	0	; () banked
  7854  0073A6  6FC6               	movwf	oled_putString@string& (0+255),b
  7855  0073A8  0E7D               	movlw	high STR_69
  7856  0073AA  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7857  0073AC  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7858  0073AE  0E01               	movlw	1
  7859  0073B0  6FC9               	movwf	oled_putString@start_page& (0+255),b
  7860  0073B2  ECF0  F026         	call	_oled_putString	;wreg free
  7861                           
  7862                           ;MOTEapp.c: 578: oled_putString("S2 = manual send",0,2);
  7863  0073B6  0E13               	movlw	low STR_70
  7864  0073B8  0100               	movlb	0	; () banked
  7865  0073BA  6FC6               	movwf	oled_putString@string& (0+255),b
  7866  0073BC  0E7D               	movlw	high STR_70
  7867  0073BE  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7868  0073C0  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7869  0073C2  0E02               	movlw	2
  7870  0073C4  6FC9               	movwf	oled_putString@start_page& (0+255),b
  7871  0073C6  ECF0  F026         	call	_oled_putString	;wreg free
  7872                           
  7873                           ;MOTEapp.c: 580: moteApp_delayms(80);
  7874  0073CA  0100               	movlb	0	; () banked
  7875  0073CC  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7876  0073CE  0E50               	movlw	80
  7877  0073D0  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7878  0073D2  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;MOTEapp.c: 581: ch = 0;
  7882  0073D6  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7883  0073D8  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7884  0073DA                     l9997:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;MOTEapp.c: 582: activeState = moteRest;
  7888  0073DA  0E0E               	movlw	14
  7889  0073DC  D166               	goto	L19
  7890  0073DE                     l9999:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;MOTEapp.c: 607: if (autoMode || manualTrigger) {
  7894  0073DE  5196               	movf	_autoMode& (0+255),w,b
  7895  0073E0  E102               	bnz	l10003
  7896                           
  7897                           ; BSR set to: 0
  7898  0073E2  519C               	movf	_manualTrigger& (0+255),w,b
  7899  0073E4  E002               	bz	l10005
  7900  0073E6                     l10003:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;MOTEapp.c: 608: ch++;
  7904  0073E6  4B8B               	infsnz	moteJoiningProcess@ch& (0+255),f,b
  7905  0073E8  2B8C               	incf	(moteJoiningProcess@ch+1)& (0+255),f,b
  7906  0073EA                     l10005:
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;MOTEapp.c: 609: }
  7910                           ;MOTEapp.c: 610: moteApp_delayms(100);
  7911  0073EA  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7912  0073EC  0E64               	movlw	100
  7913  0073EE  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  7914  0073F0  ECC2  F022         	call	_moteApp_delayms	;wreg free
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;MOTEapp.c: 612: S1 = PORTCbits.RC0;
  7918  0073F4  0E00               	movlw	0
  7919  0073F6  B082               	btfsc	3970,0,c	;volatile
  7920  0073F8  0E01               	movlw	1
  7921  0073FA  6FF3               	movwf	_S1& (0+255),b
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;MOTEapp.c: 613: S2 = PORTCbits.RC1;
  7925  0073FC  0E00               	movlw	0
  7926  0073FE  B282               	btfsc	3970,1,c	;volatile
  7927  007400  0E01               	movlw	1
  7928  007402  6FF4               	movwf	_S2& (0+255),b
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;MOTEapp.c: 614: if (S1 == 0 && prevS1 == 1) {
  7932  007404  51F3               	movf	_S1& (0+255),w,b
  7933  007406  E123               	bnz	l10027
  7934                           
  7935                           ; BSR set to: 0
  7936  007408  05F6               	decf	_prevS1& (0+255),w,b
  7937  00740A  E121               	bnz	l10027
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;MOTEapp.c: 617: autoMode = !autoMode;
  7941  00740C  5196               	movf	_autoMode& (0+255),w,b
  7942  00740E  0E01               	movlw	1
  7943  007410  A4D8               	btfss	status,2,c
  7944  007412  0E00               	movlw	0
  7945  007414  6F96               	movwf	_autoMode& (0+255),b
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;MOTEapp.c: 618: oled_putString("Mode: ",0,0);
  7949  007416  0EB9               	movlw	low STR_66
  7950  007418  6FC6               	movwf	oled_putString@string& (0+255),b
  7951  00741A  0E7F               	movlw	high STR_66
  7952  00741C  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  7953  00741E  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  7954  007420  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7955  007422  ECF0  F026         	call	_oled_putString	;wreg free
  7956                           
  7957                           ;MOTEapp.c: 619: oled_putString(autoMode?"AUTO  ":"MANUAL",6,0);
  7958  007426  0100               	movlb	0	; () banked
  7959  007428  5196               	movf	_autoMode& (0+255),w,b
  7960  00742A  E104               	bnz	l10023
  7961                           
  7962                           ; BSR set to: 0
  7963  00742C  0EE3               	movlw	low STR_68
  7964  00742E  6FE5               	movwf	_moteJoiningProcess$1366& (0+255),b
  7965  007430  0E7F               	movlw	high STR_68
  7966  007432  D003               	goto	L16
  7967  007434                     l10023:
  7968                           
  7969                           ; BSR set to: 0
  7970  007434  0EB2               	movlw	low STR_67
  7971  007436  6FE5               	movwf	_moteJoiningProcess$1366& (0+255),b
  7972  007438  0E7F               	movlw	high STR_67
  7973  00743A                     L16:
  7974  00743A  6FE6               	movwf	(_moteJoiningProcess$1366+1)& (0+255),b
  7975                           
  7976                           ; BSR set to: 0
  7977  00743C  C0E5  F0C6         	movff	_moteJoiningProcess$1366,oled_putString@string
  7978  007440  C0E6  F0C7         	movff	_moteJoiningProcess$1366+1,oled_putString@string+1
  7979  007444  0E06               	movlw	6
  7980  007446  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  7981  007448  6BC9               	clrf	oled_putString@start_page& (0+255),b
  7982  00744A  ECF0  F026         	call	_oled_putString	;wreg free
  7983  00744E                     l10027:
  7984                           
  7985                           ;MOTEapp.c: 620: }
  7986                           ;MOTEapp.c: 621: if (S2 == 0 && prevS2 == 1) {
  7987  00744E  0100               	movlb	0	; () banked
  7988  007450  51F4               	movf	_S2& (0+255),w,b
  7989  007452  E104               	bnz	l10033
  7990                           
  7991                           ; BSR set to: 0
  7992  007454  05F7               	decf	_prevS2& (0+255),w,b
  7993  007456  E102               	bnz	l10033
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;MOTEapp.c: 624: manualTrigger = 1;
  7997  007458  0E01               	movlw	1
  7998  00745A  6F9C               	movwf	_manualTrigger& (0+255),b
  7999  00745C                     l10033:
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;MOTEapp.c: 625: }
  8003                           ;MOTEapp.c: 626: prevS1 = S1;
  8004  00745C  C0F3  F0F6         	movff	_S1,_prevS1
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;MOTEapp.c: 627: prevS2 = S2;
  8008  007460  C0F4  F0F7         	movff	_S2,_prevS2
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;MOTEapp.c: 628: if (ch>20) {
  8012  007464  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  8013  007466  D186               	goto	l10149
  8014  007468  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  8015  00746A  E104               	bnz	u8390
  8016  00746C  0E15               	movlw	21
  8017  00746E  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  8018  007470  E201 D180          	bnc	l10149
  8019  007474                     u8390:
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;MOTEapp.c: 629: manualTrigger=0;
  8023  007474  6B9C               	clrf	_manualTrigger& (0+255),b
  8024                           
  8025                           ;MOTEapp.c: 630: ch = 0;
  8026  007476  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  8027  007478  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  8028                           
  8029                           ;MOTEapp.c: 632: uint16_t Traw = 0;
  8030  00747A  6BEA               	clrf	moteJoiningProcess@Traw& (0+255),b
  8031  00747C  6BEB               	clrf	(moteJoiningProcess@Traw+1)& (0+255),b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;MOTEapp.c: 633: moteApp_delayms(10);
  8035  00747E  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8036  007480  0E0A               	movlw	10
  8037  007482  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  8038  007484  ECC2  F022         	call	_moteApp_delayms	;wreg free
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;MOTEapp.c: 634: for(uint8_t i = 32; i>0; i--)
  8042  007488  0E20               	movlw	32
  8043  00748A  6FEC               	movwf	moteJoiningProcess@i& (0+255),b
  8044  00748C                     l10045:
  8045                           
  8046                           ; BSR set to: 0
  8047  00748C  51EC               	movf	moteJoiningProcess@i& (0+255),w,b
  8048  00748E  E010               	bz	l10055
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;MOTEapp.c: 635: {
  8052                           ;MOTEapp.c: 636: light = (light + ADC_GetConversion(Light_channel)) / 2;
  8053  007490  0E03               	movlw	3
  8054  007492  EC05  F024         	call	_ADC_GetConversion
  8055  007496  517D               	movf	_light& (0+255),w,b
  8056  007498  27B9               	addwf	?_ADC_GetConversion& (0+255),f,b
  8057  00749A  517E               	movf	(_light+1)& (0+255),w,b
  8058  00749C  23BA               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  8059  00749E  90D8               	bcf	status,0,c
  8060  0074A0  31BA               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  8061  0074A2  6FDF               	movwf	??_moteJoiningProcess& (0+255),b
  8062  0074A4  31B9               	rrcf	?_ADC_GetConversion& (0+255),w,b
  8063  0074A6  6F7D               	movwf	_light& (0+255),b
  8064  0074A8  C0DF  F07E         	movff	??_moteJoiningProcess,_light+1
  8065                           
  8066                           ; BSR set to: 0
  8067  0074AC  07EC               	decf	moteJoiningProcess@i& (0+255),f,b
  8068  0074AE  D7EE               	goto	l10045
  8069  0074B0                     l10055:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;MOTEapp.c: 637: }
  8073                           ;MOTEapp.c: 638: moteApp_delayms(10);
  8074  0074B0  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8075  0074B2  0E0A               	movlw	10
  8076  0074B4  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  8077  0074B6  ECC2  F022         	call	_moteApp_delayms	;wreg free
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;MOTEapp.c: 639: for(uint8_t i = 32; i>0; i--)
  8081  0074BA  0E20               	movlw	32
  8082  0074BC  6FED               	movwf	moteJoiningProcess@i_1369& (0+255),b
  8083  0074BE                     l10059:
  8084                           
  8085                           ; BSR set to: 0
  8086  0074BE  51ED               	movf	moteJoiningProcess@i_1369& (0+255),w,b
  8087  0074C0  E010               	bz	l10069
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;MOTEapp.c: 640: {
  8091                           ;MOTEapp.c: 641: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  8092  0074C2  0E02               	movlw	2
  8093  0074C4  EC05  F024         	call	_ADC_GetConversion
  8094  0074C8  51EA               	movf	moteJoiningProcess@Traw& (0+255),w,b
  8095  0074CA  27B9               	addwf	?_ADC_GetConversion& (0+255),f,b
  8096  0074CC  51EB               	movf	(moteJoiningProcess@Traw+1)& (0+255),w,b
  8097  0074CE  23BA               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  8098  0074D0  90D8               	bcf	status,0,c
  8099  0074D2  31BA               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  8100  0074D4  6FDF               	movwf	??_moteJoiningProcess& (0+255),b
  8101  0074D6  31B9               	rrcf	?_ADC_GetConversion& (0+255),w,b
  8102  0074D8  6FEA               	movwf	moteJoiningProcess@Traw& (0+255),b
  8103  0074DA  C0DF  F0EB         	movff	??_moteJoiningProcess,moteJoiningProcess@Traw+1
  8104                           
  8105                           ; BSR set to: 0
  8106  0074DE  07ED               	decf	moteJoiningProcess@i_1369& (0+255),f,b
  8107  0074E0  D7EE               	goto	l10059
  8108  0074E2                     l10069:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;MOTEapp.c: 642: }
  8112                           ;MOTEapp.c: 643: temperature = ADC_TempConversion(Traw);
  8113  0074E2  51EA               	movf	moteJoiningProcess@Traw& (0+255),w,b
  8114  0074E4  EC52  F022         	call	_ADC_TempConversion
  8115  0074E8  6F83               	movwf	_temperature& (0+255),b
  8116  0074EA  6B84               	clrf	(_temperature+1)& (0+255),b
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;MOTEapp.c: 644: m10SecTicker = 0;
  8120  0074EC  6B9B               	clrf	_m10SecTicker& (0+255),b
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;MOTEapp.c: 646: pkts++;
  8124  0074EE  4B81               	infsnz	_pkts& (0+255),f,b
  8125  0074F0  2B82               	incf	(_pkts+1)& (0+255),f,b
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;MOTEapp.c: 649: oled_clear();
  8129  0074F2  ECCD  F021         	call	_oled_clear	;wreg free
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;MOTEapp.c: 650: oled_putString("Mode: ",0,0);
  8133  0074F6  0EB9               	movlw	low STR_66
  8134  0074F8  6FC6               	movwf	oled_putString@string& (0+255),b
  8135  0074FA  0E7F               	movlw	high STR_66
  8136  0074FC  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8137  0074FE  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  8138  007500  6BC9               	clrf	oled_putString@start_page& (0+255),b
  8139  007502  ECF0  F026         	call	_oled_putString	;wreg free
  8140                           
  8141                           ;MOTEapp.c: 651: oled_putString(autoMode?"AUTO  ":"MANUAL",6,0);
  8142  007506  0100               	movlb	0	; () banked
  8143  007508  5196               	movf	_autoMode& (0+255),w,b
  8144  00750A  E104               	bnz	l10083
  8145                           
  8146                           ; BSR set to: 0
  8147  00750C  0EE3               	movlw	low STR_68
  8148  00750E  6FE7               	movwf	_moteJoiningProcess$1374& (0+255),b
  8149  007510  0E7F               	movlw	high STR_68
  8150  007512  D003               	goto	L17
  8151  007514                     l10083:
  8152                           
  8153                           ; BSR set to: 0
  8154  007514  0EB2               	movlw	low STR_67
  8155  007516  6FE7               	movwf	_moteJoiningProcess$1374& (0+255),b
  8156  007518  0E7F               	movlw	high STR_67
  8157  00751A                     L17:
  8158  00751A  6FE8               	movwf	(_moteJoiningProcess$1374+1)& (0+255),b
  8159                           
  8160                           ; BSR set to: 0
  8161  00751C  C0E7  F0C6         	movff	_moteJoiningProcess$1374,oled_putString@string
  8162  007520  C0E8  F0C7         	movff	_moteJoiningProcess$1374+1,oled_putString@string+1
  8163  007524  0E06               	movlw	6
  8164  007526  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  8165  007528  6BC9               	clrf	oled_putString@start_page& (0+255),b
  8166  00752A  ECF0  F026         	call	_oled_putString	;wreg free
  8167                           
  8168                           ;MOTEapp.c: 652: oled_putString("Light:",0,1);
  8169  00752E  0ED5               	movlw	low STR_77
  8170  007530  0100               	movlb	0	; () banked
  8171  007532  6FC6               	movwf	oled_putString@string& (0+255),b
  8172  007534  0E7F               	movlw	high STR_77
  8173  007536  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8174  007538  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  8175  00753A  0E01               	movlw	1
  8176  00753C  6FC9               	movwf	oled_putString@start_page& (0+255),b
  8177  00753E  ECF0  F026         	call	_oled_putString	;wreg free
  8178                           
  8179                           ;MOTEapp.c: 653: oled_putString("Temp :",0,2);
  8180  007542  0EC0               	movlw	low STR_78
  8181  007544  0100               	movlb	0	; () banked
  8182  007546  6FC6               	movwf	oled_putString@string& (0+255),b
  8183  007548  0E7F               	movlw	high STR_78
  8184  00754A  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8185  00754C  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  8186  00754E  0E02               	movlw	2
  8187  007550  6FC9               	movwf	oled_putString@start_page& (0+255),b
  8188  007552  ECF0  F026         	call	_oled_putString	;wreg free
  8189                           
  8190                           ;MOTEapp.c: 654: oled_putString("C",12,2);
  8191  007556  0E85               	movlw	low (STR_38+47)
  8192  007558  0100               	movlb	0	; () banked
  8193  00755A  6FC6               	movwf	oled_putString@string& (0+255),b
  8194  00755C  0E7B               	movlw	high (STR_38+47)
  8195  00755E  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8196  007560  0E0C               	movlw	12
  8197  007562  6FC8               	movwf	oled_putString@station_dot& (0+255),b
  8198  007564  0E02               	movlw	2
  8199  007566  6FC9               	movwf	oled_putString@start_page& (0+255),b
  8200  007568  ECF0  F026         	call	_oled_putString	;wreg free
  8201                           
  8202                           ;MOTEapp.c: 655: oled_putUint16(light,6,1);
  8203  00756C  C07D  F0CB         	movff	_light,oled_putUint16@number
  8204  007570  C07E  F0CC         	movff	_light+1,oled_putUint16@number+1
  8205  007574  0E06               	movlw	6
  8206  007576  0100               	movlb	0	; () banked
  8207  007578  6FCD               	movwf	oled_putUint16@station_dot& (0+255),b
  8208  00757A  0E01               	movlw	1
  8209  00757C  6FCE               	movwf	oled_putUint16@start_page& (0+255),b
  8210  00757E  ECBF  F02F         	call	_oled_putUint16	;wreg free
  8211                           
  8212                           ;MOTEapp.c: 656: oled_putUint16(temperature,6,2);
  8213  007582  C083  F0CB         	movff	_temperature,oled_putUint16@number
  8214  007586  C084  F0CC         	movff	_temperature+1,oled_putUint16@number+1
  8215  00758A  0E06               	movlw	6
  8216  00758C  0100               	movlb	0	; () banked
  8217  00758E  6FCD               	movwf	oled_putUint16@station_dot& (0+255),b
  8218  007590  0E02               	movlw	2
  8219  007592  6FCE               	movwf	oled_putUint16@start_page& (0+255),b
  8220  007594  ECBF  F02F         	call	_oled_putUint16	;wreg free
  8221                           
  8222                           ;MOTEapp.c: 657: oled_putString("Pkts|:",0,3);
  8223  007598  0EDC               	movlw	low STR_80
  8224  00759A  0100               	movlb	0	; () banked
  8225  00759C  6FC6               	movwf	oled_putString@string& (0+255),b
  8226  00759E  0E7F               	movlw	high STR_80
  8227  0075A0  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8228  0075A2  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  8229  0075A4  0E03               	movlw	3
  8230  0075A6  6FC9               	movwf	oled_putString@start_page& (0+255),b
  8231  0075A8  ECF0  F026         	call	_oled_putString	;wreg free
  8232                           
  8233                           ;MOTEapp.c: 658: oled_putUint16(pkts,6,3);
  8234  0075AC  C081  F0CB         	movff	_pkts,oled_putUint16@number
  8235  0075B0  C082  F0CC         	movff	_pkts+1,oled_putUint16@number+1
  8236  0075B4  0E06               	movlw	6
  8237  0075B6  0100               	movlb	0	; () banked
  8238  0075B8  6FCD               	movwf	oled_putUint16@station_dot& (0+255),b
  8239  0075BA  0E03               	movlw	3
  8240  0075BC  6FCE               	movwf	oled_putUint16@start_page& (0+255),b
  8241  0075BE  ECBF  F02F         	call	_oled_putUint16	;wreg free
  8242                           
  8243                           ;MOTEapp.c: 661: sprintf(cmd,"mac tx uncnf 1 %04X%04X",
  8244                           ;MOTEapp.c: 662: pkts,dr);
  8245  0075C2  0E58               	movlw	low _cmd
  8246  0075C4  0100               	movlb	0	; () banked
  8247  0075C6  6FC5               	movwf	sprintf@sp& (0+255),b
  8248  0075C8  0E01               	movlw	high _cmd
  8249  0075CA  6FC6               	movwf	(sprintf@sp+1)& (0+255),b
  8250  0075CC  0E69               	movlw	low STR_81
  8251  0075CE  6FC7               	movwf	sprintf@f& (0+255),b
  8252  0075D0  0E7C               	movlw	high STR_81
  8253  0075D2  6FC8               	movwf	(sprintf@f+1)& (0+255),b
  8254  0075D4  C081  F0C9         	movff	_pkts,?_sprintf+4
  8255  0075D8  C082  F0CA         	movff	_pkts+1,?_sprintf+5
  8256  0075DC  C09A  F0CB         	movff	_dr,?_sprintf+6
  8257  0075E0  6BCC               	clrf	(?_sprintf+7)& (0+255),b
  8258  0075E2  EC7E  F035         	call	_sprintf	;wreg free
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;MOTEapp.c: 663: sendCommand(cmd);
  8262  0075E6  0E58               	movlw	low _cmd
  8263  0075E8  6FBA               	movwf	sendCommand@string& (0+255),b
  8264  0075EA  0E01               	movlw	high _cmd
  8265  0075EC  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  8266  0075EE  ECD9  F025         	call	_sendCommand	;wreg free
  8267                           
  8268                           ;MOTEapp.c: 665: activeState = moteTxUncnf;
  8269  0075F2  0E0F               	movlw	15
  8270  0075F4  D059               	goto	L38
  8271  0075F6                     l10107:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;MOTEapp.c: 670: {
  8275                           ;MOTEapp.c: 672: {
  8276                           ;MOTEapp.c: 673: oled_putString("Pkts/:",0,3);
  8277  0075F6  0ECE               	movlw	low STR_82
  8278  0075F8  6FC6               	movwf	oled_putString@string& (0+255),b
  8279  0075FA  0E7F               	movlw	high STR_82
  8280  0075FC  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8281  0075FE  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  8282  007600  0E03               	movlw	3
  8283  007602  6FC9               	movwf	oled_putString@start_page& (0+255),b
  8284  007604  ECF0  F026         	call	_oled_putString	;wreg free
  8285                           
  8286                           ;MOTEapp.c: 674: oled_putUint16(pkts,6,3);
  8287  007608  C081  F0CB         	movff	_pkts,oled_putUint16@number
  8288  00760C  C082  F0CC         	movff	_pkts+1,oled_putUint16@number+1
  8289  007610  0E06               	movlw	6
  8290  007612  0100               	movlb	0	; () banked
  8291  007614  6FCD               	movwf	oled_putUint16@station_dot& (0+255),b
  8292  007616  0E03               	movlw	3
  8293  007618  6FCE               	movwf	oled_putUint16@start_page& (0+255),b
  8294  00761A  ECBF  F02F         	call	_oled_putUint16	;wreg free
  8295                           
  8296                           ;MOTEapp.c: 675: moteApp_delayms(80);
  8297  00761E  0100               	movlb	0	; () banked
  8298  007620  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8299  007622  0E50               	movlw	80
  8300  007624  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  8301  007626  ECC2  F022         	call	_moteApp_delayms	;wreg free
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;MOTEapp.c: 676: activeState = moteTxWait;
  8305  00762A  0E10               	movlw	16
  8306  00762C  D03E               	goto	L19
  8307  00762E                     l10113:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;MOTEapp.c: 689: if ( messageReady )
  8311  00762E  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8312  007630  E101 D0A0          	bz	l10149
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;MOTEapp.c: 690: {
  8316                           ;MOTEapp.c: 691: if(strcmp(modemResonseBuffer, "mac_tx_ok") == 0)
  8317  007634  0E98               	movlw	low _modemResonseBuffer
  8318  007636  6FB9               	movwf	strcmp@s1& (0+255),b
  8319  007638  0E01               	movlw	high _modemResonseBuffer
  8320  00763A  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  8321  00763C  0EAC               	movlw	low (STR_64+5)
  8322  00763E  6FBB               	movwf	strcmp@s2& (0+255),b
  8323  007640  0E7D               	movlw	high (STR_64+5)
  8324  007642  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  8325  007644  EC7D  F028         	call	_strcmp	;wreg free
  8326  007648  51B9               	movf	?_strcmp& (0+255),w,b
  8327  00764A  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  8328  00764C  E001 D092          	bnz	l10149
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;MOTEapp.c: 692: {
  8332                           ;MOTEapp.c: 693: dr = (dr + 1) % 4;
  8333  007650  299A               	incf	_dr& (0+255),w,b
  8334  007652  0B03               	andlw	3
  8335  007654  6F9A               	movwf	_dr& (0+255),b
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;MOTEapp.c: 694: sprintf(cmd,"mac set dr %d",dr);
  8339  007656  0E58               	movlw	low _cmd
  8340  007658  6FC5               	movwf	sprintf@sp& (0+255),b
  8341  00765A  0E01               	movlw	high _cmd
  8342  00765C  6FC6               	movwf	(sprintf@sp+1)& (0+255),b
  8343  00765E  0EC5               	movlw	low STR_84
  8344  007660  6FC7               	movwf	sprintf@f& (0+255),b
  8345  007662  0E7D               	movlw	high STR_84
  8346  007664  6FC8               	movwf	(sprintf@f+1)& (0+255),b
  8347  007666  C09A  F0C9         	movff	_dr,?_sprintf+4
  8348  00766A  6BCA               	clrf	(?_sprintf+5)& (0+255),b
  8349  00766C  EC7E  F035         	call	_sprintf	;wreg free
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;MOTEapp.c: 695: sendCommand(cmd);
  8353  007670  0E58               	movlw	low _cmd
  8354  007672  6FBA               	movwf	sendCommand@string& (0+255),b
  8355  007674  0E01               	movlw	high _cmd
  8356  007676  6FBB               	movwf	(sendCommand@string+1)& (0+255),b
  8357  007678  ECD9  F025         	call	_sendCommand	;wreg free
  8358                           
  8359                           ;MOTEapp.c: 696: oled_putString("Pkts-:",0,3);
  8360  00767C  0EC7               	movlw	low STR_85
  8361  00767E  0100               	movlb	0	; () banked
  8362  007680  6FC6               	movwf	oled_putString@string& (0+255),b
  8363  007682  0E7F               	movlw	high STR_85
  8364  007684  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
  8365  007686  6BC8               	clrf	oled_putString@station_dot& (0+255),b
  8366  007688  0E03               	movlw	3
  8367  00768A  6FC9               	movwf	oled_putString@start_page& (0+255),b
  8368  00768C  ECF0  F026         	call	_oled_putString	;wreg free
  8369                           
  8370                           ;MOTEapp.c: 697: oled_putUint16(pkts,6,3);
  8371  007690  C081  F0CB         	movff	_pkts,oled_putUint16@number
  8372  007694  C082  F0CC         	movff	_pkts+1,oled_putUint16@number+1
  8373  007698  0E06               	movlw	6
  8374  00769A  0100               	movlb	0	; () banked
  8375  00769C  6FCD               	movwf	oled_putUint16@station_dot& (0+255),b
  8376  00769E  0E03               	movlw	3
  8377  0076A0  6FCE               	movwf	oled_putUint16@start_page& (0+255),b
  8378  0076A2  ECBF  F02F         	call	_oled_putUint16	;wreg free
  8379                           
  8380                           ;MOTEapp.c: 698: activeState = moteNextDr;
  8381  0076A6  0E01               	movlw	1
  8382  0076A8                     L38:
  8383  0076A8  0100               	movlb	0	; () banked
  8384  0076AA                     L19:
  8385  0076AA  6F94               	movwf	_activeState& (0+255),b
  8386  0076AC  D063               	goto	l10149
  8387  0076AE                     l10129:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;MOTEapp.c: 704: if ( messageReady )
  8391  0076AE  51EE               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8392  0076B0  E061               	bz	l10149
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;MOTEapp.c: 705: {
  8396                           ;MOTEapp.c: 706: if(strcmp(modemResonseBuffer, "ok") == 0)
  8397  0076B2  0E98               	movlw	low _modemResonseBuffer
  8398  0076B4  6FB9               	movwf	strcmp@s1& (0+255),b
  8399  0076B6  0E01               	movlw	high _modemResonseBuffer
  8400  0076B8  6FBA               	movwf	(strcmp@s1+1)& (0+255),b
  8401  0076BA  0EB3               	movlw	low (STR_64+12)
  8402  0076BC  6FBB               	movwf	strcmp@s2& (0+255),b
  8403  0076BE  0E7D               	movlw	high (STR_64+12)
  8404  0076C0  6FBC               	movwf	(strcmp@s2+1)& (0+255),b
  8405  0076C2  EC7D  F028         	call	_strcmp	;wreg free
  8406  0076C6  51B9               	movf	?_strcmp& (0+255),w,b
  8407  0076C8  11BA               	iorwf	(?_strcmp+1)& (0+255),w,b
  8408  0076CA  E101 D686          	bz	l9997
  8409  0076CE  D052               	goto	l10149
  8410  0076D0                     l10135:
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;MOTEapp.c: 716: joiningComplete = 1;
  8414  0076D0  0E01               	movlw	1
  8415  0076D2  6FE9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;MOTEapp.c: 717: moteApp_delayms(80);
  8419  0076D4  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8420  0076D6  0E50               	movlw	80
  8421  0076D8  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  8422  0076DA  ECC2  F022         	call	_moteApp_delayms	;wreg free
  8423                           
  8424                           ;MOTEapp.c: 718: break;
  8425  0076DE  D04A               	goto	l10149
  8426  0076E0                     l10139:
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;MOTEapp.c: 720: DATAEE_WriteByte(0x00, 0x00);
  8430  0076E0  0E00               	movlw	0
  8431  0076E2  6BB9               	clrf	DATAEE_WriteByte@bData& (0+255),b
  8432  0076E4  EC22  F024         	call	_DATAEE_WriteByte
  8433  0076E8                     l471:
  8434  0076E8  B082               	btfsc	3970,0,c	;volatile
  8435  0076EA  D002               	goto	l10143
  8436  0076EC  A282               	btfss	3970,1,c	;volatile
  8437  0076EE  D7FC               	goto	l471
  8438  0076F0                     l10143:
  8439                           
  8440                           ;MOTEapp.c: 722: moteApp_delayms(40);
  8441  0076F0  0100               	movlb	0	; () banked
  8442  0076F2  6BBA               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8443  0076F4  0E28               	movlw	40
  8444  0076F6  6FB9               	movwf	moteApp_delayms@length& (0+255),b
  8445  0076F8  ECC2  F022         	call	_moteApp_delayms	;wreg free
  8446  0076FC  00FF               	reset		;# 
  8447                           
  8448                           ;MOTEapp.c: 725: break;
  8449  0076FE  D03A               	goto	l10149
  8450  007700                     l10147:
  8451                           
  8452                           ; BSR set to: 0
  8453  007700  5194               	movf	_activeState& (0+255),w,b
  8454                           
  8455                           ; Switch size 1, requested type "speed"
  8456                           ; Number of cases is 19, Range of values is 0 to 18
  8457                           ; switch strategies available:
  8458                           ; Name         Instructions Cycles
  8459                           ; simple_byte           58    30 (average)
  8460                           ;	Chosen strategy is simple_byte
  8461  007702  E102 EF5A  F037    	bz	l382
  8462  007708  0A01               	xorlw	1	; case 1
  8463  00770A  E0D1               	bz	l10129
  8464  00770C  0A03               	xorlw	3	; case 2
  8465  00770E  E102 EF78  F037    	bz	l9773
  8466  007714  0A01               	xorlw	1	; case 3
  8467  007716  E101 D42C          	bz	l9795
  8468  00771A  0A07               	xorlw	7	; case 4
  8469  00771C  E101 D452          	bz	l9809
  8470  007720  0A01               	xorlw	1	; case 5
  8471  007722  E101 D477          	bz	l9823
  8472  007726  0A03               	xorlw	3	; case 6
  8473  007728  E101 D49C          	bz	l9837
  8474  00772C  0A01               	xorlw	1	; case 7
  8475  00772E  E101 D4ED          	bz	l9867
  8476  007732  0A0F               	xorlw	15	; case 8
  8477  007734  E101 D4BF          	bz	l9851
  8478  007738  0A01               	xorlw	1	; case 9
  8479  00773A  E101 D54B          	bz	l9899
  8480  00773E  0A03               	xorlw	3	; case 10
  8481  007740  E101 D576          	bz	l9915
  8482  007744  0A01               	xorlw	1	; case 11
  8483  007746  E101 D596          	bz	l9927
  8484  00774A  0A07               	xorlw	7	; case 12
  8485  00774C  E101 D5D0          	bz	l9953
  8486  007750  0A01               	xorlw	1	; case 13
  8487  007752  E101 D606          	bz	l438
  8488  007756  0A03               	xorlw	3	; case 14
  8489  007758  E101 D641          	bz	l9999
  8490  00775C  0A01               	xorlw	1	; case 15
  8491  00775E  E101 D74A          	bz	l10107
  8492  007762  0A1F               	xorlw	31	; case 16
  8493  007764  E101 D763          	bz	l10113
  8494  007768  0A01               	xorlw	1	; case 17
  8495  00776A  E0B2               	bz	l10135
  8496  00776C  0A03               	xorlw	3	; case 18
  8497  00776E  E0B8               	bz	l10139
  8498  007770  EF59  F037         	goto	l378
  8499  007774                     l10149:
  8500                           
  8501                           ;MOTEapp.c: 727: return joiningComplete;
  8502  007774  0100               	movlb	0	; () banked
  8503  007776  51E9               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
  8504                           
  8505                           ; BSR set to: 0
  8506  007778  0012               	return		;funcret
  8507  00777A                     __end_of_moteJoiningProcess:
  8508                           	opt stack 0
  8509                           tblptru	equ	0xFF8
  8510                           tblptrh	equ	0xFF7
  8511                           tblptrl	equ	0xFF6
  8512                           tablat	equ	0xFF5
  8513                           intcon	equ	0xFF2
  8514                           postinc0	equ	0xFEE
  8515                           wreg	equ	0xFE8
  8516                           postdec1	equ	0xFE5
  8517                           fsr1l	equ	0xFE1
  8518                           indf2	equ	0xFDF
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function _strncmp *****************
  8524 ;; Defined at:
  8525 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8528 ;;		 -> modemResonseBuffer(64), 
  8529 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8530 ;;		 -> STR_31(5), 
  8531 ;;  len             2    4[BANK0 ] unsigned int 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  2    0[BANK0 ] int 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8538 ;; Tracked objects:
  8539 ;;		On entry : F/0
  8540 ;;		On exit  : F/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8543 ;;      Params:         0       6       0       0       0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8545 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8546 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8547 ;;Total ram usage:        7 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:   11
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_moteJoiningProcess
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text23
  8558  004E46                     __ptext23:
  8559                           	opt stack 0
  8560  004E46                     _strncmp:
  8561                           	opt stack 17
  8562                           
  8563                           ; BSR set to: 0
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;incstack = 0
  8567  004E46  D029               	goto	l9169
  8568  004E48                     l9159:
  8569                           
  8570                           ; BSR set to: 0
  8571  004E48  C0B9  FFD9         	movff	strncmp@s1,fsr2l
  8572  004E4C  C0BA  FFDA         	movff	strncmp@s1+1,fsr2h
  8573  004E50  50DF               	movf	indf2,w,c
  8574  004E52  E00D               	bz	l9163
  8575                           
  8576                           ; BSR set to: 0
  8577  004E54  C0B9  FFD9         	movff	strncmp@s1,fsr2l
  8578  004E58  C0BA  FFDA         	movff	strncmp@s1+1,fsr2h
  8579  004E5C  50DF               	movf	indf2,w,c
  8580  004E5E  6FBF               	movwf	??_strncmp& (0+255),b
  8581  004E60  C0BB  FFF6         	movff	strncmp@s2,tblptrl
  8582  004E64  C0BC  FFF7         	movff	strncmp@s2+1,tblptrh
  8583  004E68                     	if	0	;tblptru may be non-zero
  8584  004E68                     	endif
  8585  004E68                     	if	0	;tblptru may be non-zero
  8586  004E68                     	endif
  8587  004E68  0008               	tblrd		*
  8588  004E6A  18F5               	xorwf	tablat,w,c
  8589  004E6C  E012               	bz	l9167
  8590  004E6E                     l9163:
  8591                           
  8592                           ; BSR set to: 0
  8593  004E6E  C0B9  FFD9         	movff	strncmp@s1,fsr2l
  8594  004E72  C0BA  FFDA         	movff	strncmp@s1+1,fsr2h
  8595  004E76  50DF               	movf	indf2,w,c
  8596  004E78  6FBF               	movwf	??_strncmp& (0+255),b
  8597  004E7A  C0BB  FFF6         	movff	strncmp@s2,tblptrl
  8598  004E7E  C0BC  FFF7         	movff	strncmp@s2+1,tblptrh
  8599  004E82                     	if	0	;tblptru may be non-zero
  8600  004E82                     	endif
  8601  004E82                     	if	0	;tblptru may be non-zero
  8602  004E82                     	endif
  8603  004E82  0008               	tblrd		*
  8604  004E84  50F5               	movf	tablat,w,c
  8605  004E86  5DBF               	subwf	??_strncmp& (0+255),w,b
  8606  004E88  6FB9               	movwf	?_strncmp& (0+255),b
  8607  004E8A  6BBA               	clrf	(?_strncmp+1)& (0+255),b
  8608  004E8C  A0D8               	btfss	status,0,c
  8609  004E8E  07BA               	decf	(?_strncmp+1)& (0+255),f,b
  8610  004E90  0012               	return	
  8611  004E92                     l9167:
  8612                           
  8613                           ; BSR set to: 0
  8614  004E92  4BB9               	infsnz	strncmp@s1& (0+255),f,b
  8615  004E94  2BBA               	incf	(strncmp@s1+1)& (0+255),f,b
  8616  004E96  4BBB               	infsnz	strncmp@s2& (0+255),f,b
  8617  004E98  2BBC               	incf	(strncmp@s2+1)& (0+255),f,b
  8618  004E9A                     l9169:
  8619                           
  8620                           ; BSR set to: 0
  8621  004E9A  07BD               	decf	strncmp@len& (0+255),f,b
  8622  004E9C  A0D8               	btfss	status,0,c
  8623  004E9E  07BE               	decf	(strncmp@len+1)& (0+255),f,b
  8624  004EA0  29BD               	incf	strncmp@len& (0+255),w,b
  8625  004EA2  E1D2               	bnz	l9159
  8626  004EA4  29BE               	incf	(strncmp@len+1)& (0+255),w,b
  8627  004EA6  E1D0               	bnz	l9159
  8628                           
  8629                           ; BSR set to: 0
  8630  004EA8  6BB9               	clrf	?_strncmp& (0+255),b
  8631  004EAA  6BBA               	clrf	(?_strncmp+1)& (0+255),b
  8632                           
  8633                           ; BSR set to: 0
  8634  004EAC  0012               	return		;funcret
  8635  004EAE                     __end_of_strncmp:
  8636                           	opt stack 0
  8637                           tblptru	equ	0xFF8
  8638                           tblptrh	equ	0xFF7
  8639                           tblptrl	equ	0xFF6
  8640                           tablat	equ	0xFF5
  8641                           intcon	equ	0xFF2
  8642                           postinc0	equ	0xFEE
  8643                           wreg	equ	0xFE8
  8644                           postdec1	equ	0xFE5
  8645                           fsr1l	equ	0xFE1
  8646                           indf2	equ	0xFDF
  8647                           fsr2h	equ	0xFDA
  8648                           fsr2l	equ	0xFD9
  8649                           status	equ	0xFD8
  8650                           
  8651 ;; *************** function _strcmp *****************
  8652 ;; Defined at:
  8653 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8656 ;;		 -> modemResonseBuffer(64), 
  8657 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8658 ;;		 -> STR_86(3), STR_83(10), STR_63(3), STR_59(9), 
  8659 ;;		 -> STR_57(3), STR_54(3), STR_49(3), STR_46(3), 
  8660 ;;		 -> STR_43(3), STR_40(3), STR_37(3), STR_34(3), 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  t1              1    8[BANK0 ] unsigned char 
  8663 ;;  t2              1    7[BANK0 ] unsigned char 
  8664 ;;  t0              1    6[BANK0 ] unsigned char 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  2    0[BANK0 ] int 
  8667 ;; Registers used:
  8668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8669 ;; Tracked objects:
  8670 ;;		On entry : F/0
  8671 ;;		On exit  : F/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8674 ;;      Params:         0       4       0       0       0       0       0       0       0
  8675 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8676 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8677 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8678 ;;Total ram usage:        9 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:   11
  8681 ;; This function calls:
  8682 ;;		Nothing
  8683 ;; This function is called by:
  8684 ;;		_moteJoiningProcess
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text24
  8689  0050FA                     __ptext24:
  8690                           	opt stack 0
  8691  0050FA                     _strcmp:
  8692                           	opt stack 17
  8693  0050FA                     l9171:
  8694                           
  8695                           ; BSR set to: 0
  8696  0050FA  C0B9  FFD9         	movff	strcmp@s1,fsr2l
  8697  0050FE  C0BA  FFDA         	movff	strcmp@s1+1,fsr2h
  8698  005102  50DF               	movf	indf2,w,c
  8699  005104  6FBF               	movwf	strcmp@t0& (0+255),b
  8700                           
  8701                           ; BSR set to: 0
  8702  005106  C0BB  FFF6         	movff	strcmp@s2,tblptrl
  8703  00510A  C0BC  FFF7         	movff	strcmp@s2+1,tblptrh
  8704  00510E                     	if	0	;tblptru may be non-zero
  8705  00510E                     	endif
  8706  00510E                     	if	0	;tblptru may be non-zero
  8707  00510E                     	endif
  8708  00510E  0008               	tblrd		*
  8709  005110  CFF5 F0C1          	movff	tablat,strcmp@t1
  8710                           
  8711                           ; BSR set to: 0
  8712  005114  51BF               	movf	strcmp@t0& (0+255),w,b
  8713  005116  E02C               	bz	l9201
  8714                           
  8715                           ; BSR set to: 0
  8716  005118  0E02               	movlw	2
  8717  00511A  27B9               	addwf	strcmp@s1& (0+255),f,b
  8718  00511C  0E00               	movlw	0
  8719  00511E  23BA               	addwfc	(strcmp@s1+1)& (0+255),f,b
  8720  005120  51C1               	movf	strcmp@t1& (0+255),w,b
  8721  005122  19BF               	xorwf	strcmp@t0& (0+255),w,b
  8722  005124  E125               	bnz	l9201
  8723                           
  8724                           ; BSR set to: 0
  8725  005126  EE2F F0FF          	lfsr	2,-1
  8726  00512A  51B9               	movf	strcmp@s1& (0+255),w,b
  8727  00512C  26D9               	addwf	fsr2l,f,c
  8728  00512E  51BA               	movf	(strcmp@s1+1)& (0+255),w,b
  8729  005130  22DA               	addwfc	fsr2h,f,c
  8730  005132  50DF               	movf	indf2,w,c
  8731  005134  6FC0               	movwf	strcmp@t2& (0+255),b
  8732                           
  8733                           ; BSR set to: 0
  8734  005136  29BB               	incf	strcmp@s2& (0+255),w,b
  8735  005138  6FBD               	movwf	??_strcmp& (0+255),b
  8736  00513A  0E00               	movlw	0
  8737  00513C  21BC               	addwfc	(strcmp@s2+1)& (0+255),w,b
  8738  00513E  6FBE               	movwf	(??_strcmp+1)& (0+255),b
  8739  005140  C0BD  FFF6         	movff	??_strcmp,tblptrl
  8740  005144  C0BE  FFF7         	movff	??_strcmp+1,tblptrh
  8741  005148                     	if	0	;tblptru may be non-zero
  8742  005148                     	endif
  8743  005148                     	if	0	;tblptru may be non-zero
  8744  005148                     	endif
  8745  005148  0008               	tblrd		*
  8746  00514A  CFF5 F0C1          	movff	tablat,strcmp@t1
  8747                           
  8748                           ; BSR set to: 0
  8749  00514E  51C0               	movf	strcmp@t2& (0+255),w,b
  8750  005150  E107               	bnz	l9193
  8751  005152                     l9189:
  8752                           
  8753                           ; BSR set to: 0
  8754  005152  51C1               	movf	strcmp@t1& (0+255),w,b
  8755  005154  5DC0               	subwf	strcmp@t2& (0+255),w,b
  8756  005156  6FB9               	movwf	?_strcmp& (0+255),b
  8757  005158  6BBA               	clrf	(?_strcmp+1)& (0+255),b
  8758  00515A  A0D8               	btfss	status,0,c
  8759  00515C  07BA               	decf	(?_strcmp+1)& (0+255),f,b
  8760  00515E  0012               	return	
  8761  005160                     l9193:
  8762                           
  8763                           ; BSR set to: 0
  8764  005160  0E02               	movlw	2
  8765  005162  27BB               	addwf	strcmp@s2& (0+255),f,b
  8766  005164  0E00               	movlw	0
  8767  005166  23BC               	addwfc	(strcmp@s2+1)& (0+255),f,b
  8768  005168  51C0               	movf	strcmp@t2& (0+255),w,b
  8769  00516A  19C1               	xorwf	strcmp@t1& (0+255),w,b
  8770  00516C  E1F2               	bnz	l9189
  8771  00516E  D7C5               	goto	l9171
  8772  005170                     l9201:
  8773                           
  8774                           ; BSR set to: 0
  8775  005170  51C1               	movf	strcmp@t1& (0+255),w,b
  8776  005172  5DBF               	subwf	strcmp@t0& (0+255),w,b
  8777  005174  6FB9               	movwf	?_strcmp& (0+255),b
  8778  005176  6BBA               	clrf	(?_strcmp+1)& (0+255),b
  8779  005178  A0D8               	btfss	status,0,c
  8780  00517A  07BA               	decf	(?_strcmp+1)& (0+255),f,b
  8781                           
  8782                           ; BSR set to: 0
  8783  00517C  0012               	return		;funcret
  8784  00517E                     __end_of_strcmp:
  8785                           	opt stack 0
  8786                           tblptru	equ	0xFF8
  8787                           tblptrh	equ	0xFF7
  8788                           tblptrl	equ	0xFF6
  8789                           tablat	equ	0xFF5
  8790                           intcon	equ	0xFF2
  8791                           postinc0	equ	0xFEE
  8792                           wreg	equ	0xFE8
  8793                           postdec1	equ	0xFE5
  8794                           fsr1l	equ	0xFE1
  8795                           indf2	equ	0xFDF
  8796                           fsr2h	equ	0xFDA
  8797                           fsr2l	equ	0xFD9
  8798                           status	equ	0xFD8
  8799                           
  8800 ;; *************** function _sprintf *****************
  8801 ;; Defined at:
  8802 ;;		line 492 in file "/opt/microchip/xc8/v1.36/sources/common/doprnt.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  8805 ;;		 -> cmd(64), 
  8806 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8807 ;;		 -> STR_84(14), STR_81(24), STR_50(24), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  idx             1   24[BANK0 ] unsigned char 
  8810 ;;  tmpval          4    0        struct .
  8811 ;;  width           2   34[BANK0 ] int 
  8812 ;;  val             2   31[BANK0 ] unsigned int 
  8813 ;;  len             2   29[BANK0 ] unsigned int 
  8814 ;;  cp              2   26[BANK0 ] PTR const unsigned char 
  8815 ;;		 -> STR_112(7), STR_52(4), STR_51(3), 
  8816 ;;  c               1   36[BANK0 ] char 
  8817 ;;  flag            1   33[BANK0 ] unsigned char 
  8818 ;;  ap              1   28[BANK0 ] PTR void [1]
  8819 ;;		 -> ?_sprintf(2), 
  8820 ;;  prec            1   25[BANK0 ] char 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  2   12[BANK0 ] int 
  8823 ;; Registers used:
  8824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : F/0
  8827 ;;		On exit  : F/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8830 ;;      Params:         0       8       0       0       0       0       0       0       0
  8831 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8832 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8833 ;;      Totals:         0      25       0       0       0       0       0       0       0
  8834 ;;Total ram usage:       25 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:   12
  8837 ;; This function calls:
  8838 ;;		___lwdiv
  8839 ;;		___lwmod
  8840 ;;		___wmul
  8841 ;;		_isdigit
  8842 ;; This function is called by:
  8843 ;;		_moteJoiningProcess
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text25
  8848  006AFC                     __ptext25:
  8849                           	opt stack 0
  8850  006AFC                     _sprintf:
  8851                           	opt stack 16
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;doprnt.c: 494: va_list ap;
  8855                           ;doprnt.c: 499: signed char c;
  8856                           ;doprnt.c: 501: int width;
  8857                           ;doprnt.c: 506: signed char prec;
  8858                           ;doprnt.c: 508: unsigned char flag;
  8859                           ;doprnt.c: 523: union {
  8860                           ;doprnt.c: 524: unsigned long vd;
  8861                           ;doprnt.c: 525: double integ;
  8862                           ;doprnt.c: 526: } tmpval;
  8863                           ;doprnt.c: 528: unsigned int val;
  8864                           ;doprnt.c: 529: unsigned len;
  8865                           ;doprnt.c: 530: const char * cp;
  8866                           ;doprnt.c: 533: *ap = __va_start();
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;incstack = 0
  8870  006AFC  0EC9               	movlw	low (?_sprintf+4)
  8871  006AFE  6FD5               	movwf	sprintf@ap& (0+255),b
  8872                           
  8873                           ;doprnt.c: 536: while(c = *f++) {
  8874  006B00  D1C1               	goto	l9371
  8875  006B02                     l9207:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;doprnt.c: 538: if(c != '%')
  8879  006B02  0E25               	movlw	37
  8880  006B04  19DD               	xorwf	sprintf@c& (0+255),w,b
  8881  006B06  E009               	bz	l1865
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;doprnt.c: 540: {
  8885                           ;doprnt.c: 541: ((*sp++ = (c)));
  8886  006B08  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  8887  006B0C  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  8888  006B10  C0DD  FFDF         	movff	sprintf@c,indf2
  8889                           
  8890                           ; BSR set to: 0
  8891  006B14  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  8892  006B16  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  8893                           
  8894                           ;doprnt.c: 542: continue;
  8895  006B18  D1B5               	goto	l9371
  8896  006B1A                     l1865:
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;doprnt.c: 543: }
  8900                           ;doprnt.c: 546: width = 0;
  8901  006B1A  6BDB               	clrf	sprintf@width& (0+255),b
  8902  006B1C  6BDC               	clrf	(sprintf@width+1)& (0+255),b
  8903                           
  8904                           ;doprnt.c: 548: flag = 0;
  8905  006B1E  6BDA               	clrf	sprintf@flag& (0+255),b
  8906  006B20  D003               	goto	l9217
  8907  006B22                     l9213:
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;doprnt.c: 580: flag |= 0x04;
  8911  006B22  85DA               	bsf	sprintf@flag& (0+255),2,b
  8912                           
  8913                           ;doprnt.c: 581: f++;
  8914  006B24  4BC7               	infsnz	sprintf@f& (0+255),f,b
  8915  006B26  2BC8               	incf	(sprintf@f+1)& (0+255),f,b
  8916  006B28                     l9217:
  8917                           
  8918                           ; BSR set to: 0
  8919  006B28  C0C7  FFF6         	movff	sprintf@f,tblptrl
  8920  006B2C  C0C8  FFF7         	movff	sprintf@f+1,tblptrh
  8921  006B30                     	if	0	;tblptru may be non-zero
  8922  006B30                     	endif
  8923  006B30                     	if	0	;tblptru may be non-zero
  8924  006B30                     	endif
  8925  006B30  0008               	tblrd		*
  8926  006B32  50F5               	movf	tablat,w,c
  8927                           
  8928                           ; Switch size 1, requested type "speed"
  8929                           ; Number of cases is 1, Range of values is 48 to 48
  8930                           ; switch strategies available:
  8931                           ; Name         Instructions Cycles
  8932                           ; simple_byte            4     3 (average)
  8933                           ;	Chosen strategy is simple_byte
  8934  006B34  0A30               	xorlw	48	; case 48
  8935  006B36  E0F5               	bz	l9213
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8939  006B38  C0C7  FFF6         	movff	sprintf@f,tblptrl
  8940  006B3C  C0C8  FFF7         	movff	sprintf@f+1,tblptrh
  8941  006B40                     	if	0	;tblptru may be non-zero
  8942  006B40                     	endif
  8943  006B40                     	if	0	;tblptru may be non-zero
  8944  006B40                     	endif
  8945  006B40  0008               	tblrd		*
  8946  006B42  50F5               	movf	tablat,w,c
  8947  006B44  EC22  F022         	call	_isdigit
  8948  006B48  E201 D087          	bnc	l9267
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;doprnt.c: 598: width = 0;
  8952  006B4C  6BDB               	clrf	sprintf@width& (0+255),b
  8953  006B4E  6BDC               	clrf	(sprintf@width+1)& (0+255),b
  8954  006B50                     l9223:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;doprnt.c: 600: width *= 10;
  8958  006B50  C0DB  F0B9         	movff	sprintf@width,___wmul@multiplier
  8959  006B54  C0DC  F0BA         	movff	sprintf@width+1,___wmul@multiplier+1
  8960  006B58  6BBC               	clrf	(___wmul@multiplicand+1)& (0+255),b
  8961  006B5A  0E0A               	movlw	10
  8962  006B5C  6FBB               	movwf	___wmul@multiplicand& (0+255),b
  8963  006B5E  EC74  F022         	call	___wmul	;wreg free
  8964  006B62  C0B9  F0DB         	movff	?___wmul,sprintf@width
  8965  006B66  C0BA  F0DC         	movff	?___wmul+1,sprintf@width+1
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;doprnt.c: 601: width += *f++ - '0';
  8969  006B6A  0ED0               	movlw	208
  8970  006B6C  6FCD               	movwf	??_sprintf& (0+255),b
  8971  006B6E  69CE               	setf	(??_sprintf+1)& (0+255),b
  8972  006B70  C0C7  FFF6         	movff	sprintf@f,tblptrl
  8973  006B74  C0C8  FFF7         	movff	sprintf@f+1,tblptrh
  8974  006B78                     	if	0	;tblptru may be non-zero
  8975  006B78                     	endif
  8976  006B78                     	if	0	;tblptru may be non-zero
  8977  006B78                     	endif
  8978  006B78  0008               	tblrd		*
  8979  006B7A  50F5               	movf	tablat,w,c
  8980  006B7C  6FCF               	movwf	(??_sprintf+2)& (0+255),b
  8981  006B7E  6BD0               	clrf	(??_sprintf+3)& (0+255),b
  8982  006B80  51CD               	movf	??_sprintf& (0+255),w,b
  8983  006B82  27CF               	addwf	(??_sprintf+2)& (0+255),f,b
  8984  006B84  51CE               	movf	(??_sprintf+1)& (0+255),w,b
  8985  006B86  23D0               	addwfc	(??_sprintf+3)& (0+255),f,b
  8986  006B88  51CF               	movf	(??_sprintf+2)& (0+255),w,b
  8987  006B8A  27DB               	addwf	sprintf@width& (0+255),f,b
  8988  006B8C  51D0               	movf	(??_sprintf+3)& (0+255),w,b
  8989  006B8E  23DC               	addwfc	(sprintf@width+1)& (0+255),f,b
  8990                           
  8991                           ; BSR set to: 0
  8992  006B90  4BC7               	infsnz	sprintf@f& (0+255),f,b
  8993  006B92  2BC8               	incf	(sprintf@f+1)& (0+255),f,b
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8997  006B94  C0C7  FFF6         	movff	sprintf@f,tblptrl
  8998  006B98  C0C8  FFF7         	movff	sprintf@f+1,tblptrh
  8999  006B9C                     	if	0	;tblptru may be non-zero
  9000  006B9C                     	endif
  9001  006B9C                     	if	0	;tblptru may be non-zero
  9002  006B9C                     	endif
  9003  006B9C  0008               	tblrd		*
  9004  006B9E  50F5               	movf	tablat,w,c
  9005  006BA0  EC22  F022         	call	_isdigit
  9006  006BA4  E35A               	bnc	l9267
  9007  006BA6  D7D4               	goto	l9223
  9008  006BA8                     l9231:
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;doprnt.c: 718: case 'x':
  9012                           ;doprnt.c: 721: flag |= 0x80;
  9013  006BA8  8FDA               	bsf	sprintf@flag& (0+255),7,b
  9014                           
  9015                           ;doprnt.c: 723: break;
  9016  006BAA  D06E               	goto	l1880
  9017  006BAC                     l9233:
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  9021  006BAC  51D5               	movf	sprintf@ap& (0+255),w,b
  9022  006BAE  6ED9               	movwf	fsr2l,c
  9023  006BB0  6ADA               	clrf	fsr2h,c
  9024  006BB2  CFDE F0D3          	movff	postinc2,sprintf@cp
  9025  006BB6  CFDD F0D4          	movff	postdec2,sprintf@cp+1
  9026                           
  9027                           ; BSR set to: 0
  9028  006BBA  0E02               	movlw	2
  9029  006BBC  27D5               	addwf	sprintf@ap& (0+255),f,b
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;doprnt.c: 740: if(!cp)
  9033  006BBE  51D3               	movf	sprintf@cp& (0+255),w,b
  9034  006BC0  11D4               	iorwf	(sprintf@cp+1)& (0+255),w,b
  9035  006BC2  E104               	bnz	l9241
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;doprnt.c: 741: cp = "(null)";
  9039  006BC4  0EAB               	movlw	low STR_112
  9040  006BC6  6FD3               	movwf	sprintf@cp& (0+255),b
  9041  006BC8  0E7F               	movlw	high STR_112
  9042  006BCA  6FD4               	movwf	(sprintf@cp+1)& (0+255),b
  9043  006BCC                     l9241:
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;doprnt.c: 745: len = 0;
  9047  006BCC  6BD6               	clrf	sprintf@len& (0+255),b
  9048  006BCE  6BD7               	clrf	(sprintf@len+1)& (0+255),b
  9049                           
  9050                           ;doprnt.c: 746: while(cp[len])
  9051  006BD0  D002               	goto	l9245
  9052  006BD2                     l9243:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;doprnt.c: 747: len++;
  9056  006BD2  4BD6               	infsnz	sprintf@len& (0+255),f,b
  9057  006BD4  2BD7               	incf	(sprintf@len+1)& (0+255),f,b
  9058  006BD6                     l9245:
  9059                           
  9060                           ; BSR set to: 0
  9061  006BD6  51D6               	movf	sprintf@len& (0+255),w,b
  9062  006BD8  25D3               	addwf	sprintf@cp& (0+255),w,b
  9063  006BDA  6FCD               	movwf	??_sprintf& (0+255),b
  9064  006BDC  51D7               	movf	(sprintf@len+1)& (0+255),w,b
  9065  006BDE  21D4               	addwfc	(sprintf@cp+1)& (0+255),w,b
  9066  006BE0  6FCE               	movwf	(??_sprintf+1)& (0+255),b
  9067  006BE2  C0CD  FFF6         	movff	??_sprintf,tblptrl
  9068  006BE6  C0CE  FFF7         	movff	??_sprintf+1,tblptrh
  9069  006BEA                     	if	0	;tblptru may be non-zero
  9070  006BEA                     	endif
  9071  006BEA                     	if	0	;tblptru may be non-zero
  9072  006BEA                     	endif
  9073  006BEA  0008               	tblrd		*
  9074  006BEC  50F5               	movf	tablat,w,c
  9075  006BEE  E1F1               	bnz	l9243
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;doprnt.c: 757: if(width > len)
  9079  006BF0  51DB               	movf	sprintf@width& (0+255),w,b
  9080  006BF2  5DD6               	subwf	sprintf@len& (0+255),w,b
  9081  006BF4  51DC               	movf	(sprintf@width+1)& (0+255),w,b
  9082  006BF6  59D7               	subwfb	(sprintf@len+1)& (0+255),w,b
  9083  006BF8  E205               	bc	l1888
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;doprnt.c: 758: width -= len;
  9087  006BFA  51D6               	movf	sprintf@len& (0+255),w,b
  9088  006BFC  5FDB               	subwf	sprintf@width& (0+255),f,b
  9089  006BFE  51D7               	movf	(sprintf@len+1)& (0+255),w,b
  9090  006C00  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
  9091  006C02  D00B               	goto	l9255
  9092  006C04                     l1888:
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;doprnt.c: 759: else
  9096                           ;doprnt.c: 760: width = 0;
  9097  006C04  6BDB               	clrf	sprintf@width& (0+255),b
  9098  006C06  6BDC               	clrf	(sprintf@width+1)& (0+255),b
  9099  006C08  D008               	goto	l9255
  9100  006C0A                     l9251:
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;doprnt.c: 765: ((*sp++ = (' ')));
  9104  006C0A  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9105  006C0E  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9106  006C12  0E20               	movlw	32
  9107  006C14  6EDF               	movwf	indf2,c
  9108                           
  9109                           ; BSR set to: 0
  9110  006C16  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9111  006C18  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9112  006C1A                     l9255:
  9113                           
  9114                           ; BSR set to: 0
  9115  006C1A  07DB               	decf	sprintf@width& (0+255),f,b
  9116  006C1C  A0D8               	btfss	status,0,c
  9117  006C1E  07DC               	decf	(sprintf@width+1)& (0+255),f,b
  9118  006C20  29DB               	incf	sprintf@width& (0+255),w,b
  9119  006C22  E1F3               	bnz	l9251
  9120  006C24  29DC               	incf	(sprintf@width+1)& (0+255),w,b
  9121  006C26  E010               	bz	l9263
  9122  006C28  D7F0               	goto	l9251
  9123  006C2A                     l9257:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  9127  006C2A  C0D3  FFF6         	movff	sprintf@cp,tblptrl
  9128  006C2E  C0D4  FFF7         	movff	sprintf@cp+1,tblptrh
  9129  006C32                     	if	0	;tblptru may be non-zero
  9130  006C32                     	endif
  9131  006C32                     	if	0	;tblptru may be non-zero
  9132  006C32                     	endif
  9133  006C32  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9134  006C36  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9135  006C3A  0008               	tblrd		*
  9136  006C3C  CFF5 FFDF          	movff	tablat,indf2
  9137                           
  9138                           ; BSR set to: 0
  9139  006C40  4BD3               	infsnz	sprintf@cp& (0+255),f,b
  9140  006C42  2BD4               	incf	(sprintf@cp+1)& (0+255),f,b
  9141                           
  9142                           ; BSR set to: 0
  9143  006C44  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9144  006C46  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9145  006C48                     l9263:
  9146                           
  9147                           ; BSR set to: 0
  9148  006C48  07D6               	decf	sprintf@len& (0+255),f,b
  9149  006C4A  A0D8               	btfss	status,0,c
  9150  006C4C  07D7               	decf	(sprintf@len+1)& (0+255),f,b
  9151  006C4E  29D6               	incf	sprintf@len& (0+255),w,b
  9152  006C50  E1EC               	bnz	l9257
  9153  006C52  29D7               	incf	(sprintf@len+1)& (0+255),w,b
  9154  006C54  E101 D116          	bz	l9371
  9155  006C58  D7E8               	goto	l9257
  9156  006C5A                     l9267:
  9157                           
  9158                           ; BSR set to: 0
  9159  006C5A  C0C7  FFF6         	movff	sprintf@f,tblptrl
  9160  006C5E  C0C8  FFF7         	movff	sprintf@f+1,tblptrh
  9161  006C62  4BC7               	infsnz	sprintf@f& (0+255),f,b
  9162  006C64  2BC8               	incf	(sprintf@f+1)& (0+255),f,b
  9163  006C66                     	if	0	;tblptru may be non-zero
  9164  006C66                     	endif
  9165  006C66                     	if	0	;tblptru may be non-zero
  9166  006C66                     	endif
  9167  006C66  0008               	tblrd		*
  9168  006C68  CFF5 F0DD          	movff	tablat,sprintf@c
  9169  006C6C  51DD               	movf	sprintf@c& (0+255),w,b
  9170                           
  9171                           ; Switch size 1, requested type "speed"
  9172                           ; Number of cases is 6, Range of values is 0 to 120
  9173                           ; switch strategies available:
  9174                           ; Name         Instructions Cycles
  9175                           ; simple_byte           19    10 (average)
  9176                           ;	Chosen strategy is simple_byte
  9177  006C6E  E101 D115          	bz	l9373
  9178  006C72  0A58               	xorlw	88	; case 88
  9179  006C74  E099               	bz	l9231
  9180  006C76  0A3C               	xorlw	60	; case 100
  9181  006C78  E007               	bz	l1880
  9182  006C7A  0A0D               	xorlw	13	; case 105
  9183  006C7C  E005               	bz	l1880
  9184  006C7E  0A1A               	xorlw	26	; case 115
  9185  006C80  E095               	bz	l9233
  9186  006C82  0A0B               	xorlw	11	; case 120
  9187  006C84  E091               	bz	l9231
  9188  006C86  D0FE               	goto	l9371
  9189  006C88                     l1880:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  9193  006C88  BFDA               	btfsc	sprintf@flag& (0+255),7,b
  9194  006C8A  D012               	goto	l9279
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;doprnt.c: 1253: {
  9198                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9199  006C8C  51D5               	movf	sprintf@ap& (0+255),w,b
  9200  006C8E  6ED9               	movwf	fsr2l,c
  9201  006C90  6ADA               	clrf	fsr2h,c
  9202  006C92  CFDE F0D8          	movff	postinc2,sprintf@val
  9203  006C96  CFDD F0D9          	movff	postdec2,sprintf@val+1
  9204                           
  9205                           ; BSR set to: 0
  9206  006C9A  0E02               	movlw	2
  9207  006C9C  27D5               	addwf	sprintf@ap& (0+255),f,b
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;doprnt.c: 1261: if((int)val < 0) {
  9211  006C9E  AFD9               	btfss	(sprintf@val+1)& (0+255),7,b
  9212  006CA0  D03D               	goto	l9313
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;doprnt.c: 1262: flag |= 0x03;
  9216  006CA2  0E03               	movlw	3
  9217  006CA4  13DA               	iorwf	sprintf@flag& (0+255),f,b
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;doprnt.c: 1263: val = -val;
  9221  006CA6  6DD8               	negf	sprintf@val& (0+255),b
  9222  006CA8  1FD9               	comf	(sprintf@val+1)& (0+255),f,b
  9223  006CAA  B0D8               	btfsc	status,0,c
  9224  006CAC  2BD9               	incf	(sprintf@val+1)& (0+255),f,b
  9225  006CAE  D036               	goto	l9313
  9226  006CB0                     l9279:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;doprnt.c: 1268: else
  9230                           ;doprnt.c: 1273: {
  9231                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9232  006CB0  51D5               	movf	sprintf@ap& (0+255),w,b
  9233  006CB2  6ED9               	movwf	fsr2l,c
  9234  006CB4  6ADA               	clrf	fsr2h,c
  9235  006CB6  CFDE F0D8          	movff	postinc2,sprintf@val
  9236  006CBA  CFDD F0D9          	movff	postdec2,sprintf@val+1
  9237                           
  9238                           ; BSR set to: 0
  9239  006CBE  0E02               	movlw	2
  9240  006CC0  27D5               	addwf	sprintf@ap& (0+255),f,b
  9241  006CC2  D02C               	goto	l9313
  9242  006CC4                     l9283:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9246  006CC4  0E01               	movlw	1
  9247  006CC6  6FDD               	movwf	sprintf@c& (0+255),b
  9248  006CC8                     l9289:
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;doprnt.c: 1306: if(val < dpowers[c])
  9252  006CC8  51DD               	movf	sprintf@c& (0+255),w,b
  9253  006CCA  0D02               	mullw	2
  9254  006CCC  0E7B               	movlw	low _dpowers
  9255  006CCE  24F3               	addwf	prodl,w,c
  9256  006CD0  6EF6               	movwf	tblptrl,c
  9257  006CD2  0E77               	movlw	high _dpowers
  9258  006CD4  20F4               	addwfc	prodh,w,c
  9259  006CD6  6EF7               	movwf	tblptrh,c
  9260  006CD8                     	if	0	;There are less than 3 active tblptr bytes
  9261  006CD8                     	endif
  9262  006CD8  0009               	tblrd		*+
  9263  006CDA  50F5               	movf	tablat,w,c
  9264  006CDC  5DD8               	subwf	sprintf@val& (0+255),w,b
  9265  006CDE  0009               	tblrd		*+
  9266  006CE0  50F5               	movf	tablat,w,c
  9267  006CE2  59D9               	subwfb	(sprintf@val+1)& (0+255),w,b
  9268  006CE4  E320               	bnc	l9315
  9269                           
  9270                           ; BSR set to: 0
  9271  006CE6  2BDD               	incf	sprintf@c& (0+255),f,b
  9272                           
  9273                           ; BSR set to: 0
  9274  006CE8  0E05               	movlw	5
  9275  006CEA  19DD               	xorwf	sprintf@c& (0+255),w,b
  9276  006CEC  E01C               	bz	l9315
  9277  006CEE  D7EC               	goto	l9289
  9278  006CF0                     l9297:
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9282  006CF0  0E01               	movlw	1
  9283  006CF2  6FDD               	movwf	sprintf@c& (0+255),b
  9284  006CF4                     l9303:
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9288  006CF4  51DD               	movf	sprintf@c& (0+255),w,b
  9289  006CF6  0D02               	mullw	2
  9290  006CF8  0E85               	movlw	low _hexpowers
  9291  006CFA  24F3               	addwf	prodl,w,c
  9292  006CFC  6EF6               	movwf	tblptrl,c
  9293  006CFE  0E77               	movlw	high _hexpowers
  9294  006D00  20F4               	addwfc	prodh,w,c
  9295  006D02  6EF7               	movwf	tblptrh,c
  9296  006D04                     	if	0	;There are less than 3 active tblptr bytes
  9297  006D04                     	endif
  9298  006D04  0009               	tblrd		*+
  9299  006D06  50F5               	movf	tablat,w,c
  9300  006D08  5DD8               	subwf	sprintf@val& (0+255),w,b
  9301  006D0A  0009               	tblrd		*+
  9302  006D0C  50F5               	movf	tablat,w,c
  9303  006D0E  59D9               	subwfb	(sprintf@val+1)& (0+255),w,b
  9304  006D10  E30A               	bnc	l9315
  9305                           
  9306                           ; BSR set to: 0
  9307  006D12  2BDD               	incf	sprintf@c& (0+255),f,b
  9308                           
  9309                           ; BSR set to: 0
  9310  006D14  0E04               	movlw	4
  9311  006D16  19DD               	xorwf	sprintf@c& (0+255),w,b
  9312  006D18  E006               	bz	l9315
  9313  006D1A  D7EC               	goto	l9303
  9314  006D1C                     l9313:
  9315                           
  9316                           ; BSR set to: 0
  9317  006D1C  51DA               	movf	sprintf@flag& (0+255),w,b
  9318  006D1E  0B80               	andlw	128
  9319                           
  9320                           ; Switch size 1, requested type "speed"
  9321                           ; Number of cases is 2, Range of values is 0 to 128
  9322                           ; switch strategies available:
  9323                           ; Name         Instructions Cycles
  9324                           ; simple_byte            7     4 (average)
  9325                           ;	Chosen strategy is simple_byte
  9326  006D20  E0D1               	bz	l9283
  9327  006D22  0A80               	xorlw	128	; case 128
  9328  006D24  E0E5               	bz	l9297
  9329  006D26                     l9315:
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9333  006D26  51DB               	movf	sprintf@width& (0+255),w,b
  9334  006D28  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
  9335  006D2A  E008               	bz	l9321
  9336                           
  9337                           ; BSR set to: 0
  9338  006D2C  C0DA  F0CD         	movff	sprintf@flag,??_sprintf
  9339  006D30  0E03               	movlw	3
  9340  006D32  17CD               	andwf	??_sprintf& (0+255),f,b
  9341  006D34  E003               	bz	l9321
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;doprnt.c: 1346: width--;
  9345  006D36  07DB               	decf	sprintf@width& (0+255),f,b
  9346  006D38  A0D8               	btfss	status,0,c
  9347  006D3A  07DC               	decf	(sprintf@width+1)& (0+255),f,b
  9348  006D3C                     l9321:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;doprnt.c: 1381: if(width > c)
  9352  006D3C  0E80               	movlw	128
  9353  006D3E  BFDD               	btfsc	sprintf@c& (0+255),7,b
  9354  006D40  0E7F               	movlw	127
  9355  006D42  6FCD               	movwf	??_sprintf& (0+255),b
  9356  006D44  51DB               	movf	sprintf@width& (0+255),w,b
  9357  006D46  5DDD               	subwf	sprintf@c& (0+255),w,b
  9358  006D48  51DC               	movf	(sprintf@width+1)& (0+255),w,b
  9359  006D4A  0A80               	xorlw	128
  9360  006D4C  59CD               	subwfb	??_sprintf& (0+255),w,b
  9361  006D4E  E207               	bc	l1911
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;doprnt.c: 1382: width -= c;
  9365  006D50  51DD               	movf	sprintf@c& (0+255),w,b
  9366  006D52  5FDB               	subwf	sprintf@width& (0+255),f,b
  9367  006D54  0E00               	movlw	0
  9368  006D56  BFDD               	btfsc	sprintf@c& (0+255),7,b
  9369  006D58  0EFF               	movlw	255
  9370  006D5A  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
  9371  006D5C  D002               	goto	l1912
  9372  006D5E                     l1911:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;doprnt.c: 1383: else
  9376                           ;doprnt.c: 1384: width = 0;
  9377  006D5E  6BDB               	clrf	sprintf@width& (0+255),b
  9378  006D60  6BDC               	clrf	(sprintf@width+1)& (0+255),b
  9379  006D62                     l1912:
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;doprnt.c: 1387: if(flag & 0x04) {
  9383  006D62  A5DA               	btfss	sprintf@flag& (0+255),2,b
  9384  006D64  D01C               	goto	l9339
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;doprnt.c: 1392: if(flag & 0x03)
  9388  006D66  C0DA  F0CD         	movff	sprintf@flag,??_sprintf
  9389  006D6A  0E03               	movlw	3
  9390  006D6C  17CD               	andwf	??_sprintf& (0+255),f,b
  9391  006D6E  E008               	bz	l9331
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9395  006D70  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9396  006D74  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9397  006D78  0E2D               	movlw	45
  9398  006D7A  6EDF               	movwf	indf2,c
  9399                           
  9400                           ; BSR set to: 0
  9401  006D7C  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9402  006D7E  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9403  006D80                     l9331:
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;doprnt.c: 1415: if(width)
  9407  006D80  51DB               	movf	sprintf@width& (0+255),w,b
  9408  006D82  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
  9409  006D84  E02A               	bz	l9353
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9413  006D86  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9414  006D8A  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9415  006D8E  0E30               	movlw	48
  9416  006D90  6EDF               	movwf	indf2,c
  9417                           
  9418                           ; BSR set to: 0
  9419  006D92  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9420  006D94  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;doprnt.c: 1418: while(--width);
  9424  006D96  07DB               	decf	sprintf@width& (0+255),f,b
  9425  006D98  A0D8               	btfss	status,0,c
  9426  006D9A  07DC               	decf	(sprintf@width+1)& (0+255),f,b
  9427  006D9C  D7F1               	goto	l9331
  9428  006D9E                     l9339:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;doprnt.c: 1422: {
  9432                           ;doprnt.c: 1424: if(width
  9433                           ;doprnt.c: 1428: )
  9434  006D9E  51DB               	movf	sprintf@width& (0+255),w,b
  9435  006DA0  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
  9436  006DA2  E00E               	bz	l9347
  9437  006DA4                     l9341:
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9441  006DA4  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9442  006DA8  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9443  006DAC  0E20               	movlw	32
  9444  006DAE  6EDF               	movwf	indf2,c
  9445                           
  9446                           ; BSR set to: 0
  9447  006DB0  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9448  006DB2  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;doprnt.c: 1431: while(--width);
  9452  006DB4  07DB               	decf	sprintf@width& (0+255),f,b
  9453  006DB6  A0D8               	btfss	status,0,c
  9454  006DB8  07DC               	decf	(sprintf@width+1)& (0+255),f,b
  9455  006DBA  51DB               	movf	sprintf@width& (0+255),w,b
  9456  006DBC  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
  9457  006DBE  E1F2               	bnz	l9341
  9458  006DC0                     l9347:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;doprnt.c: 1438: if(flag & 0x03)
  9462  006DC0  C0DA  F0CD         	movff	sprintf@flag,??_sprintf
  9463  006DC4  0E03               	movlw	3
  9464  006DC6  17CD               	andwf	??_sprintf& (0+255),f,b
  9465  006DC8  E008               	bz	l9353
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9469  006DCA  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9470  006DCE  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9471  006DD2  0E2D               	movlw	45
  9472  006DD4  6EDF               	movwf	indf2,c
  9473                           
  9474                           ; BSR set to: 0
  9475  006DD6  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9476  006DD8  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9477  006DDA                     l9353:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;doprnt.c: 1469: }
  9481                           ;doprnt.c: 1472: prec = c;
  9482  006DDA  C0DD  F0D2         	movff	sprintf@c,sprintf@prec
  9483                           
  9484                           ;doprnt.c: 1474: while(prec--) {
  9485  006DDE  D04F               	goto	l9369
  9486  006DE0                     l9355:
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9490  006DE0  51D2               	movf	sprintf@prec& (0+255),w,b
  9491  006DE2  0D02               	mullw	2
  9492  006DE4  0E7B               	movlw	low _dpowers
  9493  006DE6  24F3               	addwf	prodl,w,c
  9494  006DE8  6EF6               	movwf	tblptrl,c
  9495  006DEA  0E77               	movlw	high _dpowers
  9496  006DEC  20F4               	addwfc	prodh,w,c
  9497  006DEE  6EF7               	movwf	tblptrh,c
  9498  006DF0                     	if	0	;There are less than 3 active tblptr bytes
  9499  006DF0                     	endif
  9500  006DF0  0009               	tblrd		*+
  9501  006DF2  CFF5 F0BB          	movff	tablat,___lwdiv@divisor
  9502  006DF6  000A               	tblrd		*-
  9503  006DF8  CFF5 F0BC          	movff	tablat,___lwdiv@divisor+1
  9504  006DFC  C0D8  F0B9         	movff	sprintf@val,___lwdiv@dividend
  9505  006E00  C0D9  F0BA         	movff	sprintf@val+1,___lwdiv@dividend+1
  9506  006E04  ECC6  F024         	call	___lwdiv	;wreg free
  9507  006E08  C0B9  F0C0         	movff	?___lwdiv,___lwmod@dividend
  9508  006E0C  C0BA  F0C1         	movff	?___lwdiv+1,___lwmod@dividend+1
  9509  006E10  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
  9510  006E12  0E0A               	movlw	10
  9511  006E14  6FC2               	movwf	___lwmod@divisor& (0+255),b
  9512  006E16  EC5E  F024         	call	___lwmod	;wreg free
  9513  006E1A  51C0               	movf	?___lwmod& (0+255),w,b
  9514  006E1C  0F30               	addlw	48
  9515  006E1E  6FDD               	movwf	sprintf@c& (0+255),b
  9516                           
  9517                           ;doprnt.c: 1491: break;
  9518  006E20  D026               	goto	l9365
  9519  006E22                     l9357:
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;doprnt.c: 1499: {
  9523                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9524  006E22  C0D8  F0B9         	movff	sprintf@val,___lwdiv@dividend
  9525  006E26  C0D9  F0BA         	movff	sprintf@val+1,___lwdiv@dividend+1
  9526  006E2A  51D2               	movf	sprintf@prec& (0+255),w,b
  9527  006E2C  0D02               	mullw	2
  9528  006E2E  0E85               	movlw	low _hexpowers
  9529  006E30  24F3               	addwf	prodl,w,c
  9530  006E32  6EF6               	movwf	tblptrl,c
  9531  006E34  0E77               	movlw	high _hexpowers
  9532  006E36  20F4               	addwfc	prodh,w,c
  9533  006E38  6EF7               	movwf	tblptrh,c
  9534  006E3A                     	if	0	;There are less than 3 active tblptr bytes
  9535  006E3A                     	endif
  9536  006E3A  0009               	tblrd		*+
  9537  006E3C  CFF5 F0BB          	movff	tablat,___lwdiv@divisor
  9538  006E40  000A               	tblrd		*-
  9539  006E42  CFF5 F0BC          	movff	tablat,___lwdiv@divisor+1
  9540  006E46  ECC6  F024         	call	___lwdiv	;wreg free
  9541  006E4A  51B9               	movf	?___lwdiv& (0+255),w,b
  9542  006E4C  0B0F               	andlw	15
  9543  006E4E  6FD1               	movwf	sprintf@idx& (0+255),b
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  9547  006E50  0EAD               	movlw	low STR_113
  9548  006E52  25D1               	addwf	sprintf@idx& (0+255),w,b
  9549  006E54  6EF6               	movwf	tblptrl,c
  9550  006E56  6AF7               	clrf	tblptrh,c
  9551  006E58  0E7C               	movlw	high STR_113
  9552  006E5A  22F7               	addwfc	tblptrh,f,c
  9553  006E5C                     	if	0	;There are less than 3 active tblptr bytes
  9554  006E5C                     	endif
  9555  006E5C  0008               	tblrd		*
  9556  006E5E  CFF5 F0DD          	movff	tablat,sprintf@c
  9557                           
  9558                           ;doprnt.c: 1508: }
  9559                           ;doprnt.c: 1510: break;
  9560  006E62  D005               	goto	l9365
  9561  006E64                     l9363:
  9562                           
  9563                           ; BSR set to: 0
  9564  006E64  51DA               	movf	sprintf@flag& (0+255),w,b
  9565  006E66  0B80               	andlw	128
  9566                           
  9567                           ; Switch size 1, requested type "speed"
  9568                           ; Number of cases is 2, Range of values is 0 to 128
  9569                           ; switch strategies available:
  9570                           ; Name         Instructions Cycles
  9571                           ; simple_byte            7     4 (average)
  9572                           ;	Chosen strategy is simple_byte
  9573  006E68  E0BB               	bz	l9355
  9574  006E6A  0A80               	xorlw	128	; case 128
  9575  006E6C  E0DA               	bz	l9357
  9576  006E6E                     l9365:
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9580  006E6E  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9581  006E72  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9582  006E76  C0DD  FFDF         	movff	sprintf@c,indf2
  9583                           
  9584                           ; BSR set to: 0
  9585  006E7A  4BC5               	infsnz	sprintf@sp& (0+255),f,b
  9586  006E7C  2BC6               	incf	(sprintf@sp+1)& (0+255),f,b
  9587  006E7E                     l9369:
  9588                           
  9589                           ; BSR set to: 0
  9590  006E7E  07D2               	decf	sprintf@prec& (0+255),f,b
  9591  006E80  29D2               	incf	sprintf@prec& (0+255),w,b
  9592  006E82  E1F0               	bnz	l9363
  9593  006E84                     l9371:
  9594                           
  9595                           ; BSR set to: 0
  9596  006E84  C0C7  FFF6         	movff	sprintf@f,tblptrl
  9597  006E88  C0C8  FFF7         	movff	sprintf@f+1,tblptrh
  9598  006E8C  4BC7               	infsnz	sprintf@f& (0+255),f,b
  9599  006E8E  2BC8               	incf	(sprintf@f+1)& (0+255),f,b
  9600  006E90                     	if	0	;tblptru may be non-zero
  9601  006E90                     	endif
  9602  006E90                     	if	0	;tblptru may be non-zero
  9603  006E90                     	endif
  9604  006E90  0008               	tblrd		*
  9605  006E92  CFF5 F0DD          	movff	tablat,sprintf@c
  9606  006E96  51DD               	movf	sprintf@c& (0+255),w,b
  9607  006E98  E001 D633          	bnz	l9207
  9608  006E9C                     l9373:
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;doprnt.c: 1538: *sp = 0;
  9612  006E9C  C0C5  FFD9         	movff	sprintf@sp,fsr2l
  9613  006EA0  C0C6  FFDA         	movff	sprintf@sp+1,fsr2h
  9614  006EA4  6ADF               	clrf	indf2,c
  9615                           
  9616                           ; BSR set to: 0
  9617  006EA6  0C00               	retlw	0	;funcret
  9618  006EA8                     __end_of_sprintf:
  9619                           	opt stack 0
  9620                           tblptru	equ	0xFF8
  9621                           tblptrh	equ	0xFF7
  9622                           tblptrl	equ	0xFF6
  9623                           tablat	equ	0xFF5
  9624                           prodh	equ	0xFF4
  9625                           prodl	equ	0xFF3
  9626                           intcon	equ	0xFF2
  9627                           postinc0	equ	0xFEE
  9628                           wreg	equ	0xFE8
  9629                           postdec1	equ	0xFE5
  9630                           fsr1l	equ	0xFE1
  9631                           indf2	equ	0xFDF
  9632                           postinc2	equ	0xFDE
  9633                           postdec2	equ	0xFDD
  9634                           fsr2h	equ	0xFDA
  9635                           fsr2l	equ	0xFD9
  9636                           status	equ	0xFD8
  9637                           
  9638 ;; *************** function _isdigit *****************
  9639 ;; Defined at:
  9640 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/isdigit.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  c               1    wreg     unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  c               1    2[BANK0 ] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;		None               void
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : F/0
  9651 ;;		On exit  : F/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9654 ;;      Params:         0       0       0       0       0       0       0       0       0
  9655 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9656 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9657 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9658 ;;Total ram usage:        3 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:   11
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_sprintf
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text26
  9669  004444                     __ptext26:
  9670                           	opt stack 0
  9671  004444                     _isdigit:
  9672                           	opt stack 16
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;incstack = 0
  9676                           ;isdigit@c stored from wreg
  9677  004444  6FBB               	movwf	isdigit@c& (0+255),b
  9678  004446  0100               	movlb	0	; () banked
  9679  004448  6BBA               	clrf	_isdigit$5910& (0+255),b
  9680                           
  9681                           ; BSR set to: 0
  9682  00444A  0E3A               	movlw	58
  9683  00444C  61BB               	cpfslt	isdigit@c& (0+255),b
  9684  00444E  D005               	goto	l9035
  9685                           
  9686                           ; BSR set to: 0
  9687  004450  0E2F               	movlw	47
  9688  004452  65BB               	cpfsgt	isdigit@c& (0+255),b
  9689  004454  D002               	goto	l9035
  9690                           
  9691                           ; BSR set to: 0
  9692  004456  0E01               	movlw	1
  9693  004458  6FBA               	movwf	_isdigit$5910& (0+255),b
  9694  00445A                     l9035:
  9695                           
  9696                           ; BSR set to: 0
  9697  00445A  C0BA  F0B9         	movff	_isdigit$5910,??_isdigit
  9698  00445E  31B9               	rrcf	??_isdigit& (0+255),w,b
  9699                           
  9700                           ; BSR set to: 0
  9701  004460  0012               	return		;funcret
  9702  004462                     __end_of_isdigit:
  9703                           	opt stack 0
  9704                           tblptru	equ	0xFF8
  9705                           tblptrh	equ	0xFF7
  9706                           tblptrl	equ	0xFF6
  9707                           tablat	equ	0xFF5
  9708                           prodh	equ	0xFF4
  9709                           prodl	equ	0xFF3
  9710                           intcon	equ	0xFF2
  9711                           postinc0	equ	0xFEE
  9712                           wreg	equ	0xFE8
  9713                           postdec1	equ	0xFE5
  9714                           fsr1l	equ	0xFE1
  9715                           indf2	equ	0xFDF
  9716                           postinc2	equ	0xFDE
  9717                           postdec2	equ	0xFDD
  9718                           fsr2h	equ	0xFDA
  9719                           fsr2l	equ	0xFD9
  9720                           status	equ	0xFD8
  9721                           
  9722 ;; *************** function ___wmul *****************
  9723 ;; Defined at:
  9724 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9727 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  product         2    4[BANK0 ] unsigned int 
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  2    0[BANK0 ] unsigned int 
  9732 ;; Registers used:
  9733 ;;		wreg, status,2, status,0, prodl, prodh
  9734 ;; Tracked objects:
  9735 ;;		On entry : F/0
  9736 ;;		On exit  : F/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9739 ;;      Params:         0       4       0       0       0       0       0       0       0
  9740 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9742 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9743 ;;Total ram usage:        6 bytes
  9744 ;; Hardware stack levels used:    1
  9745 ;; Hardware stack levels required when called:   11
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_sprintf
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           	psect	text27
  9754  0044E8                     __ptext27:
  9755                           	opt stack 0
  9756  0044E8                     ___wmul:
  9757                           	opt stack 16
  9758                           
  9759                           ; BSR set to: 0
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;incstack = 0
  9763  0044E8  51B9               	movf	___wmul@multiplier& (0+255),w,b
  9764  0044EA  03BB               	mulwf	___wmul@multiplicand& (0+255),b
  9765  0044EC  CFF3 F0BD          	movff	prodl,___wmul@product
  9766  0044F0  CFF4 F0BE          	movff	prodh,___wmul@product+1
  9767  0044F4  51B9               	movf	___wmul@multiplier& (0+255),w,b
  9768  0044F6  03BC               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9769  0044F8  50F3               	movf	prodl,w,c
  9770  0044FA  27BE               	addwf	(___wmul@product+1)& (0+255),f,b
  9771  0044FC  51BA               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9772  0044FE  03BB               	mulwf	___wmul@multiplicand& (0+255),b
  9773  004500  50F3               	movf	prodl,w,c
  9774  004502  27BE               	addwf	(___wmul@product+1)& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  004504  C0BD  F0B9         	movff	___wmul@product,?___wmul
  9778  004508  C0BE  F0BA         	movff	___wmul@product+1,?___wmul+1
  9779                           
  9780                           ; BSR set to: 0
  9781  00450C  0012               	return		;funcret
  9782  00450E                     __end_of___wmul:
  9783                           	opt stack 0
  9784                           tblptru	equ	0xFF8
  9785                           tblptrh	equ	0xFF7
  9786                           tblptrl	equ	0xFF6
  9787                           tablat	equ	0xFF5
  9788                           prodh	equ	0xFF4
  9789                           prodl	equ	0xFF3
  9790                           intcon	equ	0xFF2
  9791                           postinc0	equ	0xFEE
  9792                           wreg	equ	0xFE8
  9793                           postdec1	equ	0xFE5
  9794                           fsr1l	equ	0xFE1
  9795                           indf2	equ	0xFDF
  9796                           postinc2	equ	0xFDE
  9797                           postdec2	equ	0xFDD
  9798                           fsr2h	equ	0xFDA
  9799                           fsr2l	equ	0xFD9
  9800                           status	equ	0xFD8
  9801                           
  9802 ;; *************** function _sendCommand *****************
  9803 ;; Defined at:
  9804 ;;		line 957 in file "../Includes/Board/MOTEapp.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9807 ;;		 -> STR_108(26), STR_107(26), STR_106(26), STR_105(26), 
  9808 ;;		 -> STR_104(1), STR_103(9), STR_102(13), STR_101(13), 
  9809 ;;		 -> STR_100(13), STR_99(13), STR_98(13), STR_97(13), 
  9810 ;;		 -> STR_96(13), STR_95(13), STR_94(16), STR_93(15), 
  9811 ;;		 -> STR_60(24), STR_55(13), cmd(64), STR_47(24), 
  9812 ;;		 -> STR_44(16), STR_41(16), STR_38(49), STR_35(49), 
  9813 ;;		 -> STR_32(25), STR_29(12), STR_22(20), STR_21(2), 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1    wreg      void 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9820 ;; Tracked objects:
  9821 ;;		On entry : F/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9825 ;;      Params:         0       2       0       0       0       0       0       0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9828 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9829 ;;Total ram usage:        2 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:   13
  9832 ;; This function calls:
  9833 ;;		_EUSART_Write
  9834 ;;		_EndLine
  9835 ;; This function is called by:
  9836 ;;		_modemResync
  9837 ;;		_modemSleep
  9838 ;;		_moteJoiningProcess
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text28
  9843  004BB2                     __ptext28:
  9844                           	opt stack 0
  9845  004BB2                     _sendCommand:
  9846                           	opt stack 13
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;MOTEapp.c: 960: while (*string)
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;incstack = 0
  9853  004BB2  D015               	goto	l8783
  9854  004BB4                     l8779:
  9855                           
  9856                           ;MOTEapp.c: 961: {
  9857                           ;MOTEapp.c: 962: EUSART_Write(*string++);
  9858  004BB4  C0BA  FFF6         	movff	sendCommand@string,tblptrl
  9859  004BB8  C0BB  FFF7         	movff	sendCommand@string+1,tblptrh
  9860  004BBC  6AF8               	clrf	tblptru,c
  9861  004BBE  0E07               	movlw	(high __ramtop+-1)
  9862  004BC0  64F7               	cpfsgt	tblptrh,c
  9863  004BC2  D003               	bra	u6907
  9864  004BC4  0008               	tblrd		*
  9865  004BC6  50F5               	movf	tablat,w,c
  9866  004BC8  D005               	bra	u6900
  9867  004BCA                     u6907:
  9868  004BCA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9869  004BCE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9870  004BD2  50E7               	movf	indf1,w,c
  9871  004BD4                     u6900:
  9872  004BD4  EC99  F023         	call	_EUSART_Write
  9873  004BD8  0100               	movlb	0	; () banked
  9874  004BDA  4BBA               	infsnz	sendCommand@string& (0+255),f,b
  9875  004BDC  2BBB               	incf	(sendCommand@string+1)& (0+255),f,b
  9876  004BDE                     l8783:
  9877                           
  9878                           ; BSR set to: 0
  9879  004BDE  C0BA  FFF6         	movff	sendCommand@string,tblptrl
  9880  004BE2  C0BB  FFF7         	movff	sendCommand@string+1,tblptrh
  9881  004BE6  6AF8               	clrf	tblptru,c
  9882  004BE8  0E07               	movlw	(high __ramtop+-1)
  9883  004BEA  64F7               	cpfsgt	tblptrh,c
  9884  004BEC  D003               	bra	u6917
  9885  004BEE  0008               	tblrd		*
  9886  004BF0  50F5               	movf	tablat,w,c
  9887  004BF2  D005               	bra	u6910
  9888  004BF4                     u6917:
  9889  004BF4  CFF6 FFE1          	movff	tblptrl,fsr1l
  9890  004BF8  CFF7 FFE2          	movff	tblptrh,fsr1h
  9891  004BFC  50E7               	movf	indf1,w,c
  9892  004BFE                     u6910:
  9893  004BFE  0900               	iorlw	0
  9894  004C00  E1D9               	bnz	l8779
  9895                           
  9896                           ;MOTEapp.c: 963: }
  9897                           ;MOTEapp.c: 964: EndLine();
  9898  004C02  EF5A  F021         	goto	_EndLine	;wreg free
  9899  004C06                     __end_of_sendCommand:
  9900                           	opt stack 0
  9901                           tblptru	equ	0xFF8
  9902                           tblptrh	equ	0xFF7
  9903                           tblptrl	equ	0xFF6
  9904                           tablat	equ	0xFF5
  9905                           prodh	equ	0xFF4
  9906                           prodl	equ	0xFF3
  9907                           intcon	equ	0xFF2
  9908                           postinc0	equ	0xFEE
  9909                           wreg	equ	0xFE8
  9910                           indf1	equ	0xFE7
  9911                           postdec1	equ	0xFE5
  9912                           fsr1h	equ	0xFE2
  9913                           fsr1l	equ	0xFE1
  9914                           indf2	equ	0xFDF
  9915                           postinc2	equ	0xFDE
  9916                           postdec2	equ	0xFDD
  9917                           fsr2h	equ	0xFDA
  9918                           fsr2l	equ	0xFD9
  9919                           status	equ	0xFD8
  9920                           
  9921 ;; *************** function _EndLine *****************
  9922 ;; Defined at:
  9923 ;;		line 951 in file "../Includes/Board/MOTEapp.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;		None
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9937 ;;      Params:         0       0       0       0       0       0       0       0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9941 ;;Total ram usage:        0 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:   12
  9944 ;; This function calls:
  9945 ;;		_EUSART_Write
  9946 ;; This function is called by:
  9947 ;;		_sendCommand
  9948 ;;		_sendDataCommand
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text29
  9953  0042B4                     __ptext29:
  9954                           	opt stack 0
  9955  0042B4                     _EndLine:
  9956                           	opt stack 15
  9957                           
  9958                           ;MOTEapp.c: 953: EUSART_Write(0x0D);
  9959                           
  9960                           ;incstack = 0
  9961  0042B4  0E0D               	movlw	13
  9962  0042B6  EC99  F023         	call	_EUSART_Write
  9963                           
  9964                           ;MOTEapp.c: 954: EUSART_Write(0x0A);
  9965  0042BA  0E0A               	movlw	10
  9966  0042BC  EF99  F023         	goto	_EUSART_Write
  9967  0042C0                     __end_of_EndLine:
  9968                           	opt stack 0
  9969                           tblptru	equ	0xFF8
  9970                           tblptrh	equ	0xFF7
  9971                           tblptrl	equ	0xFF6
  9972                           tablat	equ	0xFF5
  9973                           prodh	equ	0xFF4
  9974                           prodl	equ	0xFF3
  9975                           intcon	equ	0xFF2
  9976                           postinc0	equ	0xFEE
  9977                           wreg	equ	0xFE8
  9978                           indf1	equ	0xFE7
  9979                           postdec1	equ	0xFE5
  9980                           fsr1h	equ	0xFE2
  9981                           fsr1l	equ	0xFE1
  9982                           indf2	equ	0xFDF
  9983                           postinc2	equ	0xFDE
  9984                           postdec2	equ	0xFDD
  9985                           fsr2h	equ	0xFDA
  9986                           fsr2l	equ	0xFD9
  9987                           status	equ	0xFD8
  9988                           
  9989 ;; *************** function _oled_putUint16 *****************
  9990 ;; Defined at:
  9991 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  number          2   18[BANK0 ] unsigned int 
  9994 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9995 ;;  start_page      1   21[BANK0 ] unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  numData         6   22[BANK0 ] struct .
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  1    wreg      void 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : F/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10007 ;;      Params:         0       4       0       0       0       0       0       0       0
 10008 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10010 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10011 ;;Total ram usage:       10 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:   16
 10014 ;; This function calls:
 10015 ;;		___lwdiv
 10016 ;;		___lwmod
 10017 ;;		_oled_putString
 10018 ;; This function is called by:
 10019 ;;		_moteJoiningProcess
 10020 ;;		_moteRunningProcess
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text30
 10025  005F7E                     __ptext30:
 10026                           	opt stack 0
 10027  005F7E                     _oled_putUint16:
 10028                           	opt stack 12
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;SSD1306oLED.c: 242: display_data_t numData;
 10032                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
 10033                           
 10034                           ;incstack = 0
 10035  005F7E  C0CB  F0C0         	movff	oled_putUint16@number,___lwmod@dividend
 10036  005F82  C0CC  F0C1         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10037  005F86  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10038  005F88  0E0A               	movlw	10
 10039  005F8A  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10040  005F8C  EC5E  F024         	call	___lwmod	;wreg free
 10041  005F90  51C0               	movf	?___lwmod& (0+255),w,b
 10042  005F92  0F30               	addlw	48
 10043  005F94  6FD3               	movwf	(oled_putUint16@numData+4)& (0+255),b
 10044                           
 10045                           ;SSD1306oLED.c: 244: number /= 10;
 10046  005F96  C0CB  F0B9         	movff	oled_putUint16@number,___lwdiv@dividend
 10047  005F9A  C0CC  F0BA         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10048  005F9E  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10049  005FA0  0E0A               	movlw	10
 10050  005FA2  6FBB               	movwf	___lwdiv@divisor& (0+255),b
 10051  005FA4  ECC6  F024         	call	___lwdiv	;wreg free
 10052  005FA8  C0B9  F0CB         	movff	?___lwdiv,oled_putUint16@number
 10053  005FAC  C0BA  F0CC         	movff	?___lwdiv+1,oled_putUint16@number+1
 10054                           
 10055                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
 10056  005FB0  C0CB  F0C0         	movff	oled_putUint16@number,___lwmod@dividend
 10057  005FB4  C0CC  F0C1         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10058  005FB8  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10059  005FBA  0E0A               	movlw	10
 10060  005FBC  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10061  005FBE  EC5E  F024         	call	___lwmod	;wreg free
 10062  005FC2  51C0               	movf	?___lwmod& (0+255),w,b
 10063  005FC4  0F30               	addlw	48
 10064  005FC6  6FD2               	movwf	(oled_putUint16@numData+3)& (0+255),b
 10065                           
 10066                           ;SSD1306oLED.c: 246: number /= 10;
 10067  005FC8  C0CB  F0B9         	movff	oled_putUint16@number,___lwdiv@dividend
 10068  005FCC  C0CC  F0BA         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10069  005FD0  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10070  005FD2  0E0A               	movlw	10
 10071  005FD4  6FBB               	movwf	___lwdiv@divisor& (0+255),b
 10072  005FD6  ECC6  F024         	call	___lwdiv	;wreg free
 10073  005FDA  C0B9  F0CB         	movff	?___lwdiv,oled_putUint16@number
 10074  005FDE  C0BA  F0CC         	movff	?___lwdiv+1,oled_putUint16@number+1
 10075                           
 10076                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
 10077  005FE2  C0CB  F0C0         	movff	oled_putUint16@number,___lwmod@dividend
 10078  005FE6  C0CC  F0C1         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10079  005FEA  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10080  005FEC  0E0A               	movlw	10
 10081  005FEE  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10082  005FF0  EC5E  F024         	call	___lwmod	;wreg free
 10083  005FF4  51C0               	movf	?___lwmod& (0+255),w,b
 10084  005FF6  0F30               	addlw	48
 10085  005FF8  6FD1               	movwf	(oled_putUint16@numData+2)& (0+255),b
 10086                           
 10087                           ;SSD1306oLED.c: 248: number /= 10;
 10088  005FFA  C0CB  F0B9         	movff	oled_putUint16@number,___lwdiv@dividend
 10089  005FFE  C0CC  F0BA         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10090  006002  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10091  006004  0E0A               	movlw	10
 10092  006006  6FBB               	movwf	___lwdiv@divisor& (0+255),b
 10093  006008  ECC6  F024         	call	___lwdiv	;wreg free
 10094  00600C  C0B9  F0CB         	movff	?___lwdiv,oled_putUint16@number
 10095  006010  C0BA  F0CC         	movff	?___lwdiv+1,oled_putUint16@number+1
 10096                           
 10097                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
 10098  006014  C0CB  F0C0         	movff	oled_putUint16@number,___lwmod@dividend
 10099  006018  C0CC  F0C1         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10100  00601C  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10101  00601E  0E0A               	movlw	10
 10102  006020  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10103  006022  EC5E  F024         	call	___lwmod	;wreg free
 10104  006026  51C0               	movf	?___lwmod& (0+255),w,b
 10105  006028  0F30               	addlw	48
 10106  00602A  6FD0               	movwf	(oled_putUint16@numData+1)& (0+255),b
 10107                           
 10108                           ;SSD1306oLED.c: 250: number /= 10;
 10109  00602C  C0CB  F0B9         	movff	oled_putUint16@number,___lwdiv@dividend
 10110  006030  C0CC  F0BA         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10111  006034  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10112  006036  0E0A               	movlw	10
 10113  006038  6FBB               	movwf	___lwdiv@divisor& (0+255),b
 10114  00603A  ECC6  F024         	call	___lwdiv	;wreg free
 10115  00603E  C0B9  F0CB         	movff	?___lwdiv,oled_putUint16@number
 10116  006042  C0BA  F0CC         	movff	?___lwdiv+1,oled_putUint16@number+1
 10117                           
 10118                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
 10119  006046  C0CB  F0C0         	movff	oled_putUint16@number,___lwmod@dividend
 10120  00604A  C0CC  F0C1         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10121  00604E  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10122  006050  0E0A               	movlw	10
 10123  006052  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10124  006054  EC5E  F024         	call	___lwmod	;wreg free
 10125  006058  51C0               	movf	?___lwmod& (0+255),w,b
 10126  00605A  0F30               	addlw	48
 10127  00605C  6FCF               	movwf	oled_putUint16@numData& (0+255),b
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;SSD1306oLED.c: 253: numData.b[5]=0;
 10131  00605E  6BD4               	clrf	(oled_putUint16@numData+5)& (0+255),b
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
 10135  006060  0ECF               	movlw	low oled_putUint16@numData
 10136  006062  6FC6               	movwf	oled_putString@string& (0+255),b
 10137  006064  6BC7               	clrf	(oled_putString@string+1)& (0+255),b
 10138  006066  C0CD  F0C8         	movff	oled_putUint16@station_dot,oled_putString@station_dot
 10139  00606A  C0CE  F0C9         	movff	oled_putUint16@start_page,oled_putString@start_page
 10140  00606E  EFF0  F026         	goto	_oled_putString	;wreg free
 10141  006072                     __end_of_oled_putUint16:
 10142                           	opt stack 0
 10143                           tblptru	equ	0xFF8
 10144                           tblptrh	equ	0xFF7
 10145                           tblptrl	equ	0xFF6
 10146                           tablat	equ	0xFF5
 10147                           prodh	equ	0xFF4
 10148                           prodl	equ	0xFF3
 10149                           intcon	equ	0xFF2
 10150                           postinc0	equ	0xFEE
 10151                           wreg	equ	0xFE8
 10152                           indf1	equ	0xFE7
 10153                           postdec1	equ	0xFE5
 10154                           fsr1h	equ	0xFE2
 10155                           fsr1l	equ	0xFE1
 10156                           indf2	equ	0xFDF
 10157                           postinc2	equ	0xFDE
 10158                           postdec2	equ	0xFDD
 10159                           fsr2h	equ	0xFDA
 10160                           fsr2l	equ	0xFD9
 10161                           status	equ	0xFD8
 10162                           
 10163 ;; *************** function _moteApp_delayms *****************
 10164 ;; Defined at:
 10165 ;;		line 1147 in file "../Includes/Board/MOTEapp.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;  length          2    0[BANK0 ] unsigned int 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  counter         2    3[BANK0 ] unsigned int 
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, status,2, status,0
 10174 ;; Tracked objects:
 10175 ;;		On entry : F/0
 10176 ;;		On exit  : F/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10179 ;;      Params:         0       2       0       0       0       0       0       0       0
 10180 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10181 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10182 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10183 ;;Total ram usage:        5 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:   11
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_main
 10190 ;;		_modemResync
 10191 ;;		_modemSleep
 10192 ;;		_moteHandler
 10193 ;;		_moteJoiningProcess
 10194 ;;		_moteRunningProcess
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text31
 10199  004584                     __ptext31:
 10200                           	opt stack 0
 10201  004584                     _moteApp_delayms:
 10202                           	opt stack 17
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;MOTEapp.c: 1149: uint16_t counter;
 10206                           ;MOTEapp.c: 1150: for(counter = 0; counter < length; counter++)
 10207                           
 10208                           ;incstack = 0
 10209  004584  6BBC               	clrf	moteApp_delayms@counter& (0+255),b
 10210  004586  6BBD               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 10211  004588  D00B               	goto	l623
 10212  00458A                     l8771:
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;MOTEapp.c: 1151: {
 10216                           ;MOTEapp.c: 1152: _delay((unsigned long)((1)*(48000000/4000.0)));
 10217  00458A  0E10               	movlw	16
 10218  00458C  6FBB               	movwf	??_moteApp_delayms& (0+255),b
 10219  00458E  0E94               	movlw	148
 10220  004590                     u8947:
 10221  004590  2EE8               	decfsz	wreg,f,c
 10222  004592  D7FE               	goto	u8947
 10223  004594  2FBB               	decfsz	??_moteApp_delayms& (0+255),f,b
 10224  004596  D7FC               	goto	u8947
 10225  004598  D000               	nop2	
 10226  00459A  0100               	movlb	0	; () banked
 10227  00459C  4BBC               	infsnz	moteApp_delayms@counter& (0+255),f,b
 10228  00459E  2BBD               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 10229  0045A0                     l623:
 10230                           
 10231                           ; BSR set to: 0
 10232  0045A0  51B9               	movf	moteApp_delayms@length& (0+255),w,b
 10233  0045A2  5DBC               	subwf	moteApp_delayms@counter& (0+255),w,b
 10234  0045A4  51BA               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 10235  0045A6  59BD               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 10236  0045A8  E3F0               	bnc	l8771
 10237                           
 10238                           ; BSR set to: 0
 10239  0045AA  0012               	return		;funcret
 10240  0045AC                     __end_of_moteApp_delayms:
 10241                           	opt stack 0
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           intcon	equ	0xFF2
 10249                           postinc0	equ	0xFEE
 10250                           wreg	equ	0xFE8
 10251                           indf1	equ	0xFE7
 10252                           postdec1	equ	0xFE5
 10253                           fsr1h	equ	0xFE2
 10254                           fsr1l	equ	0xFE1
 10255                           indf2	equ	0xFDF
 10256                           postinc2	equ	0xFDE
 10257                           postdec2	equ	0xFDD
 10258                           fsr2h	equ	0xFDA
 10259                           fsr2l	equ	0xFD9
 10260                           status	equ	0xFD8
 10261                           
 10262 ;; *************** function _MOTEapp_getModemResponse *****************
 10263 ;; Defined at:
 10264 ;;		line 918 in file "../Includes/Board/MOTEapp.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;		None
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 10269 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      unsigned char 
 10272 ;; Registers used:
 10273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/1
 10276 ;;		On exit  : F/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10279 ;;      Params:         0       0       0       0       0       0       0       0       0
 10280 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10282 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10283 ;;Total ram usage:        2 bytes
 10284 ;; Hardware stack levels used:    1
 10285 ;; Hardware stack levels required when called:   12
 10286 ;; This function calls:
 10287 ;;		_EUSART_Read
 10288 ;; This function is called by:
 10289 ;;		_modemResync
 10290 ;;		_moteHandler
 10291 ;;		_moteJoiningProcess
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text32
 10296  0049D6                     __ptext32:
 10297                           	opt stack 0
 10298  0049D6                     _MOTEapp_getModemResponse:
 10299                           	opt stack 14
 10300                           
 10301                           ;MOTEapp.c: 920: bool terminatorReceived = 0;
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;incstack = 0
 10305  0049D6  0100               	movlb	0	; () banked
 10306  0049D8  6BBA               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;MOTEapp.c: 921: if ((eusartRxCount))
 10310  0049DA  5023               	movf	_eusartRxCount,w,c	;volatile
 10311  0049DC  E01F               	bz	l8811
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;MOTEapp.c: 924: bufferByte = EUSART_Read();
 10315                           
 10316                           ; BSR set to: 0
 10317  0049DE  EC82  F023         	call	_EUSART_Read	;wreg free
 10318  0049E2  6FBB               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;MOTEapp.c: 926: if (bufferByte == 0x0D)
 10322  0049E4  0E0D               	movlw	13
 10323  0049E6  19BB               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 10324  0049E8  E10B               	bnz	l8803
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;MOTEapp.c: 927: {
 10328                           ;MOTEapp.c: 928: modemResonseBuffer[modemBufferIndex] = 0x00;
 10329  0049EA  0E98               	movlw	low _modemResonseBuffer
 10330  0049EC  2429               	addwf	_modemBufferIndex,w,c
 10331  0049EE  6ED9               	movwf	fsr2l,c
 10332  0049F0  6ADA               	clrf	fsr2h,c
 10333  0049F2  0E01               	movlw	high _modemResonseBuffer
 10334  0049F4  22DA               	addwfc	fsr2h,f,c
 10335  0049F6  6ADF               	clrf	indf2,c
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;MOTEapp.c: 929: terminatorReceived = 1;
 10339  0049F8  0E01               	movlw	1
 10340  0049FA  6FBA               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;MOTEapp.c: 930: modemBufferIndex = 0;
 10344  0049FC  6A29               	clrf	_modemBufferIndex,c
 10345                           
 10346                           ;MOTEapp.c: 931: }
 10347  0049FE  D00E               	goto	l8811
 10348  004A00                     l8803:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;MOTEapp.c: 932: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 10352  004A00  51BB               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 10353  004A02  E00C               	bz	l8811
 10354                           
 10355                           ; BSR set to: 0
 10356  004A04  0E0A               	movlw	10
 10357  004A06  19BB               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 10358  004A08  E009               	bz	l8811
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;MOTEapp.c: 936: else
 10362                           ;MOTEapp.c: 937: {
 10363                           ;MOTEapp.c: 938: modemResonseBuffer[modemBufferIndex] = bufferByte;
 10364  004A0A  0E98               	movlw	low _modemResonseBuffer
 10365  004A0C  2429               	addwf	_modemBufferIndex,w,c
 10366  004A0E  6ED9               	movwf	fsr2l,c
 10367  004A10  6ADA               	clrf	fsr2h,c
 10368  004A12  0E01               	movlw	high _modemResonseBuffer
 10369  004A14  22DA               	addwfc	fsr2h,f,c
 10370  004A16  C0BB  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;MOTEapp.c: 940: modemBufferIndex++;
 10374  004A1A  2A29               	incf	_modemBufferIndex,f,c
 10375  004A1C                     l8811:
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;MOTEapp.c: 941: }
 10379                           ;MOTEapp.c: 942: }
 10380                           ;MOTEapp.c: 943: return terminatorReceived;
 10381  004A1C  51BA               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
 10382                           
 10383                           ; BSR set to: 0
 10384  004A1E  0012               	return		;funcret
 10385  004A20                     __end_of_MOTEapp_getModemResponse:
 10386                           	opt stack 0
 10387                           tblptru	equ	0xFF8
 10388                           tblptrh	equ	0xFF7
 10389                           tblptrl	equ	0xFF6
 10390                           tablat	equ	0xFF5
 10391                           prodh	equ	0xFF4
 10392                           prodl	equ	0xFF3
 10393                           intcon	equ	0xFF2
 10394                           postinc0	equ	0xFEE
 10395                           wreg	equ	0xFE8
 10396                           indf1	equ	0xFE7
 10397                           postdec1	equ	0xFE5
 10398                           fsr1h	equ	0xFE2
 10399                           fsr1l	equ	0xFE1
 10400                           indf2	equ	0xFDF
 10401                           postinc2	equ	0xFDE
 10402                           postdec2	equ	0xFDD
 10403                           fsr2h	equ	0xFDA
 10404                           fsr2l	equ	0xFD9
 10405                           status	equ	0xFD8
 10406                           
 10407 ;; *************** function _DATAEE_WriteByte *****************
 10408 ;; Defined at:
 10409 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  bAdd            1    wreg     unsigned char 
 10412 ;;  bData           1    0[BANK0 ] unsigned char 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  bAdd            1    1[BANK0 ] unsigned char 
 10415 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2
 10420 ;; Tracked objects:
 10421 ;;		On entry : F/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10425 ;;      Params:         0       1       0       0       0       0       0       0       0
 10426 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10427 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10428 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10429 ;;Total ram usage:        3 bytes
 10430 ;; Hardware stack levels used:    1
 10431 ;; Hardware stack levels required when called:   11
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_moteJoiningProcess
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text33
 10440  004844                     __ptext33:
 10441                           	opt stack 0
 10442  004844                     _DATAEE_WriteByte:
 10443                           	opt stack 17
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;incstack = 0
 10447                           ;DATAEE_WriteByte@bAdd stored from wreg
 10448  004844  6FBA               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 10449                           
 10450                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 10451  004846  0E00               	movlw	0
 10452  004848  BEF2               	btfsc	intcon,7,c	;volatile
 10453  00484A  0E01               	movlw	1
 10454  00484C  0100               	movlb	0	; () banked
 10455  00484E  6FBB               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 10459  004850  C0BA  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;memory.c: 171: EEDATA = bData;
 10463  004854  C0B9  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 10464                           
 10465                           ; BSR set to: 0
 10466                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 10467  004858  9EA6               	bcf	4006,7,c	;volatile
 10468                           
 10469                           ; BSR set to: 0
 10470                           ;memory.c: 173: EECON1bits.CFGS = 0;
 10471  00485A  9CA6               	bcf	4006,6,c	;volatile
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;memory.c: 174: EECON1bits.WREN = 1;
 10475  00485C  84A6               	bsf	4006,2,c	;volatile
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;memory.c: 175: INTCONbits.GIE = 0;
 10479  00485E  9EF2               	bcf	intcon,7,c	;volatile
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;memory.c: 176: EECON2 = 0x55;
 10483  004860  0E55               	movlw	85
 10484  004862  6EA7               	movwf	4007,c	;volatile
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;memory.c: 177: EECON2 = 0xAA;
 10488  004864  0EAA               	movlw	170
 10489  004866  6EA7               	movwf	4007,c	;volatile
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;memory.c: 178: EECON1bits.WR = 1;
 10493  004868  82A6               	bsf	4006,1,c	;volatile
 10494  00486A                     l1246:
 10495  00486A  B2A6               	btfsc	4006,1,c	;volatile
 10496  00486C  D7FE               	goto	l1246
 10497                           
 10498                           ;memory.c: 182: }
 10499                           ;memory.c: 184: EECON1bits.WREN = 0;
 10500  00486E  94A6               	bcf	4006,2,c	;volatile
 10501                           
 10502                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 10503  004870  0100               	movlb	0	; () banked
 10504  004872  B1BB               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 10505  004874  D002               	bra	u7615
 10506  004876  9EF2               	bcf	intcon,7,c	;volatile
 10507  004878  D001               	bra	u7616
 10508  00487A                     u7615:
 10509  00487A  8EF2               	bsf	intcon,7,c	;volatile
 10510  00487C                     u7616:
 10511  00487C  0012               	return		;funcret
 10512  00487E                     __end_of_DATAEE_WriteByte:
 10513                           	opt stack 0
 10514                           tblptru	equ	0xFF8
 10515                           tblptrh	equ	0xFF7
 10516                           tblptrl	equ	0xFF6
 10517                           tablat	equ	0xFF5
 10518                           prodh	equ	0xFF4
 10519                           prodl	equ	0xFF3
 10520                           intcon	equ	0xFF2
 10521                           postinc0	equ	0xFEE
 10522                           wreg	equ	0xFE8
 10523                           indf1	equ	0xFE7
 10524                           postdec1	equ	0xFE5
 10525                           fsr1h	equ	0xFE2
 10526                           fsr1l	equ	0xFE1
 10527                           indf2	equ	0xFDF
 10528                           postinc2	equ	0xFDE
 10529                           postdec2	equ	0xFDD
 10530                           fsr2h	equ	0xFDA
 10531                           fsr2l	equ	0xFD9
 10532                           status	equ	0xFD8
 10533                           
 10534 ;; *************** function _ADC_TempConversion *****************
 10535 ;; Defined at:
 10536 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  tempRaw         1    wreg     enum E6179
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  tempRaw         1    7[BANK0 ] enum E6179
 10541 ;;  temp            1    8[BANK0 ] unsigned char 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      unsigned char 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : E/1
 10548 ;;		On exit  : F/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0
 10552 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10554 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10555 ;;Total ram usage:        2 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:   12
 10558 ;; This function calls:
 10559 ;;		___lwdiv
 10560 ;; This function is called by:
 10561 ;;		_moteHandler
 10562 ;;		_moteJoiningProcess
 10563 ;;		_moteRunningProcess
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           	psect	text34
 10568  0044A4                     __ptext34:
 10569                           	opt stack 0
 10570  0044A4                     _ADC_TempConversion:
 10571                           	opt stack 16
 10572                           
 10573                           ;incstack = 0
 10574                           ;ADC_TempConversion@tempRaw stored from wreg
 10575  0044A4  0100               	movlb	0	; () banked
 10576  0044A6  6FC0               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 10577                           
 10578                           ;adc.c: 138: uint8_t temp;
 10579                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 10580  0044A8  0E06               	movlw	6
 10581  0044AA  25C0               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 10582  0044AC  6FB9               	movwf	___lwdiv@dividend& (0+255),b
 10583  0044AE  6BBA               	clrf	(___lwdiv@dividend+1)& (0+255),b
 10584  0044B0  0EFF               	movlw	255
 10585  0044B2  23BA               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 10586  0044B4  6BBC               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10587  0044B6  0E05               	movlw	5
 10588  0044B8  6FBB               	movwf	___lwdiv@divisor& (0+255),b
 10589  0044BA  ECC6  F024         	call	___lwdiv	;wreg free
 10590  0044BE  51B9               	movf	?___lwdiv& (0+255),w,b
 10591  0044C0  6FC1               	movwf	ADC_TempConversion@temp& (0+255),b
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;adc.c: 141: return temp;
 10595  0044C2  51C1               	movf	ADC_TempConversion@temp& (0+255),w,b
 10596                           
 10597                           ; BSR set to: 0
 10598  0044C4  0012               	return		;funcret
 10599  0044C6                     __end_of_ADC_TempConversion:
 10600                           	opt stack 0
 10601                           tblptru	equ	0xFF8
 10602                           tblptrh	equ	0xFF7
 10603                           tblptrl	equ	0xFF6
 10604                           tablat	equ	0xFF5
 10605                           prodh	equ	0xFF4
 10606                           prodl	equ	0xFF3
 10607                           intcon	equ	0xFF2
 10608                           postinc0	equ	0xFEE
 10609                           wreg	equ	0xFE8
 10610                           indf1	equ	0xFE7
 10611                           postdec1	equ	0xFE5
 10612                           fsr1h	equ	0xFE2
 10613                           fsr1l	equ	0xFE1
 10614                           indf2	equ	0xFDF
 10615                           postinc2	equ	0xFDE
 10616                           postdec2	equ	0xFDD
 10617                           fsr2h	equ	0xFDA
 10618                           fsr2l	equ	0xFD9
 10619                           status	equ	0xFD8
 10620                           
 10621 ;; *************** function ___lwdiv *****************
 10622 ;; Defined at:
 10623 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;  dividend        2    0[BANK0 ] unsigned int 
 10626 ;;  divisor         2    2[BANK0 ] unsigned int 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;  quotient        2    5[BANK0 ] unsigned int 
 10629 ;;  counter         1    4[BANK0 ] unsigned char 
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  2    0[BANK0 ] unsigned int 
 10632 ;; Registers used:
 10633 ;;		wreg, status,2, status,0
 10634 ;; Tracked objects:
 10635 ;;		On entry : F/0
 10636 ;;		On exit  : F/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10639 ;;      Params:         0       4       0       0       0       0       0       0       0
 10640 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10642 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10643 ;;Total ram usage:        7 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:   11
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_moteApp_add16bToDataBuffer
 10650 ;;		_oled_putUint16
 10651 ;;		_ADC_TempConversion
 10652 ;;		_sprintf
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text35
 10657  00498C                     __ptext35:
 10658                           	opt stack 0
 10659  00498C                     ___lwdiv:
 10660                           	opt stack 16
 10661                           
 10662                           ; BSR set to: 0
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;incstack = 0
 10666  00498C  6BBE               	clrf	___lwdiv@quotient& (0+255),b
 10667  00498E  6BBF               	clrf	(___lwdiv@quotient+1)& (0+255),b
 10668                           
 10669                           ; BSR set to: 0
 10670  004990  51BB               	movf	___lwdiv@divisor& (0+255),w,b
 10671  004992  11BC               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10672  004994  E01B               	bz	l2333
 10673                           
 10674                           ; BSR set to: 0
 10675  004996  0E01               	movlw	1
 10676  004998  6FBD               	movwf	___lwdiv@counter& (0+255),b
 10677  00499A  D004               	goto	l9097
 10678  00499C                     l9095:
 10679                           
 10680                           ; BSR set to: 0
 10681  00499C  90D8               	bcf	status,0,c
 10682  00499E  37BB               	rlcf	___lwdiv@divisor& (0+255),f,b
 10683  0049A0  37BC               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10684  0049A2  2BBD               	incf	___lwdiv@counter& (0+255),f,b
 10685  0049A4                     l9097:
 10686                           
 10687                           ; BSR set to: 0
 10688  0049A4  AFBC               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10689  0049A6  D7FA               	goto	l9095
 10690  0049A8                     l9099:
 10691                           
 10692                           ; BSR set to: 0
 10693  0049A8  90D8               	bcf	status,0,c
 10694  0049AA  37BE               	rlcf	___lwdiv@quotient& (0+255),f,b
 10695  0049AC  37BF               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10696                           
 10697                           ; BSR set to: 0
 10698  0049AE  51BB               	movf	___lwdiv@divisor& (0+255),w,b
 10699  0049B0  5DB9               	subwf	___lwdiv@dividend& (0+255),w,b
 10700  0049B2  51BC               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10701  0049B4  59BA               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10702  0049B6  E305               	bnc	l9107
 10703                           
 10704                           ; BSR set to: 0
 10705  0049B8  51BB               	movf	___lwdiv@divisor& (0+255),w,b
 10706  0049BA  5FB9               	subwf	___lwdiv@dividend& (0+255),f,b
 10707  0049BC  51BC               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10708  0049BE  5BBA               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10709                           
 10710                           ; BSR set to: 0
 10711  0049C0  81BE               	bsf	___lwdiv@quotient& (0+255),0,b
 10712  0049C2                     l9107:
 10713                           
 10714                           ; BSR set to: 0
 10715  0049C2  90D8               	bcf	status,0,c
 10716  0049C4  33BC               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10717  0049C6  33BB               	rrcf	___lwdiv@divisor& (0+255),f,b
 10718                           
 10719                           ; BSR set to: 0
 10720  0049C8  2FBD               	decfsz	___lwdiv@counter& (0+255),f,b
 10721  0049CA  D7EE               	goto	l9099
 10722  0049CC                     l2333:
 10723                           
 10724                           ; BSR set to: 0
 10725  0049CC  C0BE  F0B9         	movff	___lwdiv@quotient,?___lwdiv
 10726  0049D0  C0BF  F0BA         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10727                           
 10728                           ; BSR set to: 0
 10729  0049D4  0012               	return		;funcret
 10730  0049D6                     __end_of___lwdiv:
 10731                           	opt stack 0
 10732                           tblptru	equ	0xFF8
 10733                           tblptrh	equ	0xFF7
 10734                           tblptrl	equ	0xFF6
 10735                           tablat	equ	0xFF5
 10736                           prodh	equ	0xFF4
 10737                           prodl	equ	0xFF3
 10738                           intcon	equ	0xFF2
 10739                           postinc0	equ	0xFEE
 10740                           wreg	equ	0xFE8
 10741                           indf1	equ	0xFE7
 10742                           postdec1	equ	0xFE5
 10743                           fsr1h	equ	0xFE2
 10744                           fsr1l	equ	0xFE1
 10745                           indf2	equ	0xFDF
 10746                           postinc2	equ	0xFDE
 10747                           postdec2	equ	0xFDD
 10748                           fsr2h	equ	0xFDA
 10749                           fsr2l	equ	0xFD9
 10750                           status	equ	0xFD8
 10751                           
 10752 ;; *************** function _ADC_GetConversion *****************
 10753 ;; Defined at:
 10754 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;  channel         1    wreg     enum E6179
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  channel         1    4[BANK0 ] enum E6179
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  2    0[BANK0 ] unsigned int 
 10761 ;; Registers used:
 10762 ;;		wreg, status,2, status,0
 10763 ;; Tracked objects:
 10764 ;;		On entry : E/1
 10765 ;;		On exit  : F/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10768 ;;      Params:         0       2       0       0       0       0       0       0       0
 10769 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10770 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10771 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10772 ;;Total ram usage:        5 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:   11
 10775 ;; This function calls:
 10776 ;;		Nothing
 10777 ;; This function is called by:
 10778 ;;		_moteHandler
 10779 ;;		_moteJoiningProcess
 10780 ;;		_moteRunningProcess
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text36
 10785  00480A                     __ptext36:
 10786                           	opt stack 0
 10787  00480A                     _ADC_GetConversion:
 10788                           	opt stack 17
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;incstack = 0
 10792                           ;ADC_GetConversion@channel stored from wreg
 10793  00480A  0100               	movlb	0	; () banked
 10794  00480C  6FBD               	movwf	ADC_GetConversion@channel& (0+255),b
 10795                           
 10796                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10797  00480E  C0BD  F0BB         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 10798  004812  47BB               	rlncf	??_ADC_GetConversion& (0+255),f,b
 10799  004814  47BB               	rlncf	??_ADC_GetConversion& (0+255),f,b
 10800  004816  50C2               	movf	4034,w,c	;volatile
 10801  004818  19BB               	xorwf	??_ADC_GetConversion& (0+255),w,b
 10802  00481A  0B83               	andlw	-125
 10803  00481C  19BB               	xorwf	??_ADC_GetConversion& (0+255),w,b
 10804  00481E  6EC2               	movwf	4034,c	;volatile
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10808  004820  80C2               	bsf	4034,0,c	;volatile
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 10812  004822  0E14               	movlw	20
 10813  004824                     u8957:
 10814  004824  2EE8               	decfsz	wreg,f,c
 10815  004826  D7FE               	goto	u8957
 10816                           
 10817                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 10818  004828  82C2               	bsf	4034,1,c	;volatile
 10819  00482A                     l1074:
 10820  00482A  B2C2               	btfsc	4034,1,c	;volatile
 10821  00482C  D7FE               	goto	l1074
 10822                           
 10823                           ;adc.c: 130: }
 10824                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 10825  00482E  50C4               	movf	4036,w,c	;volatile
 10826  004830  0100               	movlb	0	; () banked
 10827  004832  6FBC               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 10828  004834  6BBB               	clrf	??_ADC_GetConversion& (0+255),b
 10829  004836  50C3               	movf	4035,w,c	;volatile
 10830  004838  25BB               	addwf	??_ADC_GetConversion& (0+255),w,b
 10831  00483A  6FB9               	movwf	?_ADC_GetConversion& (0+255),b
 10832  00483C  0E00               	movlw	0
 10833  00483E  21BC               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 10834  004840  6FBA               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 10835                           
 10836                           ; BSR set to: 0
 10837  004842  0012               	return		;funcret
 10838  004844                     __end_of_ADC_GetConversion:
 10839                           	opt stack 0
 10840                           tblptru	equ	0xFF8
 10841                           tblptrh	equ	0xFF7
 10842                           tblptrl	equ	0xFF6
 10843                           tablat	equ	0xFF5
 10844                           prodh	equ	0xFF4
 10845                           prodl	equ	0xFF3
 10846                           intcon	equ	0xFF2
 10847                           postinc0	equ	0xFEE
 10848                           wreg	equ	0xFE8
 10849                           indf1	equ	0xFE7
 10850                           postdec1	equ	0xFE5
 10851                           fsr1h	equ	0xFE2
 10852                           fsr1l	equ	0xFE1
 10853                           indf2	equ	0xFDF
 10854                           postinc2	equ	0xFDE
 10855                           postdec2	equ	0xFDD
 10856                           fsr2h	equ	0xFDA
 10857                           fsr2l	equ	0xFD9
 10858                           status	equ	0xFD8
 10859                           
 10860 ;; *************** function _TMRapp_Handler *****************
 10861 ;; Defined at:
 10862 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;		None
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;		None
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		wreg, status,2, status,0, cstack
 10871 ;; Tracked objects:
 10872 ;;		On entry : F/0
 10873 ;;		On exit  : F/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10876 ;;      Params:         0       0       0       0       0       0       0       0       0
 10877 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10878 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10879 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10880 ;;Total ram usage:        0 bytes
 10881 ;; Hardware stack levels used:    1
 10882 ;; Hardware stack levels required when called:   12
 10883 ;; This function calls:
 10884 ;;		___lwmod
 10885 ;; This function is called by:
 10886 ;;		_moteHandler
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text37
 10891  005DBC                     __ptext37:
 10892                           	opt stack 0
 10893  005DBC                     _TMRapp_Handler:
 10894                           	opt stack 17
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;TMRapp.c: 25: timerMsTickCount++;
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;incstack = 0
 10901  005DBC  4B89               	infsnz	_timerMsTickCount& (0+255),f,b
 10902  005DBE  2B8A               	incf	(_timerMsTickCount+1)& (0+255),f,b
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 10906  005DC0  C089  F0C0         	movff	_timerMsTickCount,___lwmod@dividend
 10907  005DC4  C08A  F0C1         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10908  005DC8  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10909  005DCA  0E0A               	movlw	10
 10910  005DCC  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10911  005DCE  EC5E  F024         	call	___lwmod	;wreg free
 10912  005DD2  51C0               	movf	?___lwmod& (0+255),w,b
 10913  005DD4  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 10914  005DD6  A4D8               	btfss	status,2,c
 10915  005DD8  0012               	return	
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;TMRapp.c: 28: {
 10919                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 10920  005DDA  8395               	bsf	_appTimer& (0+255),1,b
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 10924  005DDC  C089  F0C0         	movff	_timerMsTickCount,___lwmod@dividend
 10925  005DE0  C08A  F0C1         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10926  005DE4  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10927  005DE6  0E64               	movlw	100
 10928  005DE8  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10929  005DEA  EC5E  F024         	call	___lwmod	;wreg free
 10930  005DEE  51C0               	movf	?___lwmod& (0+255),w,b
 10931  005DF0  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 10932  005DF2  A4D8               	btfss	status,2,c
 10933  005DF4  0012               	return	
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;TMRapp.c: 31: {
 10937                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 10938  005DF6  8595               	bsf	_appTimer& (0+255),2,b
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 10942  005DF8  C089  F0C0         	movff	_timerMsTickCount,___lwmod@dividend
 10943  005DFC  C08A  F0C1         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10944  005E00  0E03               	movlw	3
 10945  005E02  6FC3               	movwf	(___lwmod@divisor+1)& (0+255),b
 10946  005E04  0EE8               	movlw	232
 10947  005E06  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10948  005E08  EC5E  F024         	call	___lwmod	;wreg free
 10949  005E0C  51C0               	movf	?___lwmod& (0+255),w,b
 10950  005E0E  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 10951  005E10  A4D8               	btfss	status,2,c
 10952  005E12  0012               	return	
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;TMRapp.c: 34: {
 10956                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 10957  005E14  8795               	bsf	_appTimer& (0+255),3,b
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 10961  005E16  C089  F0C0         	movff	_timerMsTickCount,___lwmod@dividend
 10962  005E1A  C08A  F0C1         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10963  005E1E  0EEA               	movlw	234
 10964  005E20  6FC3               	movwf	(___lwmod@divisor+1)& (0+255),b
 10965  005E22  0E60               	movlw	96
 10966  005E24  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10967  005E26  EC5E  F024         	call	___lwmod	;wreg free
 10968  005E2A  51C0               	movf	?___lwmod& (0+255),w,b
 10969  005E2C  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 10970  005E2E  A4D8               	btfss	status,2,c
 10971  005E30  0012               	return	
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;TMRapp.c: 37: {
 10975                           ;TMRapp.c: 38: timerMinTickCount++;
 10976  005E32  4B87               	infsnz	_timerMinTickCount& (0+255),f,b
 10977  005E34  2B88               	incf	(_timerMinTickCount+1)& (0+255),f,b
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 10981  005E36  8995               	bsf	_appTimer& (0+255),4,b
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 10985  005E38  C087  F0C0         	movff	_timerMinTickCount,___lwmod@dividend
 10986  005E3C  C088  F0C1         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10987  005E40  6BC3               	clrf	(___lwmod@divisor+1)& (0+255),b
 10988  005E42  0E3C               	movlw	60
 10989  005E44  6FC2               	movwf	___lwmod@divisor& (0+255),b
 10990  005E46  EC5E  F024         	call	___lwmod	;wreg free
 10991  005E4A  51C0               	movf	?___lwmod& (0+255),w,b
 10992  005E4C  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 10993  005E4E  A4D8               	btfss	status,2,c
 10994  005E50  0012               	return	
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;TMRapp.c: 41: {
 10998                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 10999  005E52  8B95               	bsf	_appTimer& (0+255),5,b
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 11003  005E54  C087  F0C0         	movff	_timerMinTickCount,___lwmod@dividend
 11004  005E58  C088  F0C1         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 11005  005E5C  0E02               	movlw	2
 11006  005E5E  6FC3               	movwf	(___lwmod@divisor+1)& (0+255),b
 11007  005E60  0ED0               	movlw	208
 11008  005E62  6FC2               	movwf	___lwmod@divisor& (0+255),b
 11009  005E64  EC5E  F024         	call	___lwmod	;wreg free
 11010  005E68  51C0               	movf	?___lwmod& (0+255),w,b
 11011  005E6A  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 11012  005E6C  A4D8               	btfss	status,2,c
 11013  005E6E  0012               	return	
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;TMRapp.c: 44: {
 11017                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 11018  005E70  8D95               	bsf	_appTimer& (0+255),6,b
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 11022  005E72  C087  F0C0         	movff	_timerMinTickCount,___lwmod@dividend
 11023  005E76  C088  F0C1         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 11024  005E7A  0E05               	movlw	5
 11025  005E7C  6FC3               	movwf	(___lwmod@divisor+1)& (0+255),b
 11026  005E7E  0EA0               	movlw	160
 11027  005E80  6FC2               	movwf	___lwmod@divisor& (0+255),b
 11028  005E82  EC5E  F024         	call	___lwmod	;wreg free
 11029  005E86  51C0               	movf	?___lwmod& (0+255),w,b
 11030  005E88  11C1               	iorwf	(?___lwmod+1)& (0+255),w,b
 11031  005E8A  A4D8               	btfss	status,2,c
 11032  005E8C  0012               	return	
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;TMRapp.c: 47: {
 11036                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 11037  005E8E  8F95               	bsf	_appTimer& (0+255),7,b
 11038                           
 11039                           ;TMRapp.c: 50: timerMsTickCount = 0;
 11040  005E90  6B89               	clrf	_timerMsTickCount& (0+255),b
 11041  005E92  6B8A               	clrf	(_timerMsTickCount+1)& (0+255),b
 11042                           
 11043                           ;TMRapp.c: 51: timerMinTickCount = 0;
 11044  005E94  6B87               	clrf	_timerMinTickCount& (0+255),b
 11045  005E96  6B88               	clrf	(_timerMinTickCount+1)& (0+255),b
 11046  005E98  0012               	return	
 11047  005E9A                     __end_of_TMRapp_Handler:
 11048                           	opt stack 0
 11049                           tblptru	equ	0xFF8
 11050                           tblptrh	equ	0xFF7
 11051                           tblptrl	equ	0xFF6
 11052                           tablat	equ	0xFF5
 11053                           prodh	equ	0xFF4
 11054                           prodl	equ	0xFF3
 11055                           intcon	equ	0xFF2
 11056                           postinc0	equ	0xFEE
 11057                           wreg	equ	0xFE8
 11058                           indf1	equ	0xFE7
 11059                           postdec1	equ	0xFE5
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8
 11068                           
 11069 ;; *************** function ___lwmod *****************
 11070 ;; Defined at:
 11071 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;  dividend        2    7[BANK0 ] unsigned int 
 11074 ;;  divisor         2    9[BANK0 ] unsigned int 
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  counter         1   11[BANK0 ] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  2    7[BANK0 ] unsigned int 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0
 11081 ;; Tracked objects:
 11082 ;;		On entry : F/0
 11083 ;;		On exit  : F/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11086 ;;      Params:         0       4       0       0       0       0       0       0       0
 11087 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11089 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11090 ;;Total ram usage:        5 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:   11
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_moteApp_add16bToDataBuffer
 11097 ;;		_TMRapp_Handler
 11098 ;;		_oled_putUint16
 11099 ;;		_sprintf
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text38
 11104  0048BC                     __ptext38:
 11105                           	opt stack 0
 11106  0048BC                     ___lwmod:
 11107                           	opt stack 16
 11108                           
 11109                           ; BSR set to: 0
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;incstack = 0
 11113  0048BC  51C2               	movf	___lwmod@divisor& (0+255),w,b
 11114  0048BE  11C3               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11115  0048C0  E017               	bz	l2343
 11116                           
 11117                           ; BSR set to: 0
 11118  0048C2  0E01               	movlw	1
 11119  0048C4  6FC4               	movwf	___lwmod@counter& (0+255),b
 11120  0048C6  D004               	goto	l9117
 11121  0048C8                     l9115:
 11122                           
 11123                           ; BSR set to: 0
 11124  0048C8  90D8               	bcf	status,0,c
 11125  0048CA  37C2               	rlcf	___lwmod@divisor& (0+255),f,b
 11126  0048CC  37C3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11127  0048CE  2BC4               	incf	___lwmod@counter& (0+255),f,b
 11128  0048D0                     l9117:
 11129                           
 11130                           ; BSR set to: 0
 11131  0048D0  AFC3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11132  0048D2  D7FA               	goto	l9115
 11133  0048D4                     l9119:
 11134                           
 11135                           ; BSR set to: 0
 11136  0048D4  51C2               	movf	___lwmod@divisor& (0+255),w,b
 11137  0048D6  5DC0               	subwf	___lwmod@dividend& (0+255),w,b
 11138  0048D8  51C3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11139  0048DA  59C1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11140  0048DC  E304               	bnc	l9123
 11141                           
 11142                           ; BSR set to: 0
 11143  0048DE  51C2               	movf	___lwmod@divisor& (0+255),w,b
 11144  0048E0  5FC0               	subwf	___lwmod@dividend& (0+255),f,b
 11145  0048E2  51C3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11146  0048E4  5BC1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11147  0048E6                     l9123:
 11148                           
 11149                           ; BSR set to: 0
 11150  0048E6  90D8               	bcf	status,0,c
 11151  0048E8  33C3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11152  0048EA  33C2               	rrcf	___lwmod@divisor& (0+255),f,b
 11153                           
 11154                           ; BSR set to: 0
 11155  0048EC  2FC4               	decfsz	___lwmod@counter& (0+255),f,b
 11156  0048EE  D7F2               	goto	l9119
 11157  0048F0                     l2343:
 11158                           
 11159                           ; BSR set to: 0
 11160  0048F0  C0C0  F0C0         	movff	___lwmod@dividend,?___lwmod
 11161  0048F4  C0C1  F0C1         	movff	___lwmod@dividend+1,?___lwmod+1
 11162                           
 11163                           ; BSR set to: 0
 11164  0048F8  0012               	return		;funcret
 11165  0048FA                     __end_of___lwmod:
 11166                           	opt stack 0
 11167                           tblptru	equ	0xFF8
 11168                           tblptrh	equ	0xFF7
 11169                           tblptrl	equ	0xFF6
 11170                           tablat	equ	0xFF5
 11171                           prodh	equ	0xFF4
 11172                           prodl	equ	0xFF3
 11173                           intcon	equ	0xFF2
 11174                           postinc0	equ	0xFEE
 11175                           wreg	equ	0xFE8
 11176                           indf1	equ	0xFE7
 11177                           postdec1	equ	0xFE5
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           indf2	equ	0xFDF
 11181                           postinc2	equ	0xFDE
 11182                           postdec2	equ	0xFDD
 11183                           fsr2h	equ	0xFDA
 11184                           fsr2l	equ	0xFD9
 11185                           status	equ	0xFD8
 11186                           
 11187 ;; *************** function _TMRapp_ClearBitFlags *****************
 11188 ;; Defined at:
 11189 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;		None
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;		None
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		None
 11198 ;; Tracked objects:
 11199 ;;		On entry : F/0
 11200 ;;		On exit  : F/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0
 11204 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11206 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11207 ;;Total ram usage:        0 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; Hardware stack levels required when called:   11
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_moteHandler
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text39
 11218  004260                     __ptext39:
 11219                           	opt stack 0
 11220  004260                     _TMRapp_ClearBitFlags:
 11221                           	opt stack 18
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;incstack = 0
 11228  004260  6B95               	clrf	_appTimer& (0+255),b
 11229                           
 11230                           ; BSR set to: 0
 11231  004262  0012               	return		;funcret
 11232  004264                     __end_of_TMRapp_ClearBitFlags:
 11233                           	opt stack 0
 11234                           tblptru	equ	0xFF8
 11235                           tblptrh	equ	0xFF7
 11236                           tblptrl	equ	0xFF6
 11237                           tablat	equ	0xFF5
 11238                           prodh	equ	0xFF4
 11239                           prodl	equ	0xFF3
 11240                           intcon	equ	0xFF2
 11241                           postinc0	equ	0xFEE
 11242                           wreg	equ	0xFE8
 11243                           indf1	equ	0xFE7
 11244                           postdec1	equ	0xFE5
 11245                           fsr1h	equ	0xFE2
 11246                           fsr1l	equ	0xFE1
 11247                           indf2	equ	0xFDF
 11248                           postinc2	equ	0xFDE
 11249                           postdec2	equ	0xFDD
 11250                           fsr2h	equ	0xFDA
 11251                           fsr2l	equ	0xFD9
 11252                           status	equ	0xFD8
 11253                           
 11254 ;; *************** function _MOTEapp_TimerBasedTask *****************
 11255 ;; Defined at:
 11256 ;;		line 879 in file "../Includes/Board/MOTEapp.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;  timerTask       1    wreg     struct .
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;  timerTask       1    0[BANK0 ] struct .
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, status,2, status,0
 11265 ;; Tracked objects:
 11266 ;;		On entry : F/0
 11267 ;;		On exit  : F/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11270 ;;      Params:         0       0       0       0       0       0       0       0       0
 11271 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11273 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11274 ;;Total ram usage:        1 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:   11
 11277 ;; This function calls:
 11278 ;;		Nothing
 11279 ;; This function is called by:
 11280 ;;		_moteHandler
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text40
 11285  0042CE                     __ptext40:
 11286                           	opt stack 0
 11287  0042CE                     _MOTEapp_TimerBasedTask:
 11288                           	opt stack 18
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;incstack = 0
 11292                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 11293  0042CE  6FB9               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 11294                           
 11295                           ;MOTEapp.c: 884: if (timerTask.mSecTenTick)
 11296  0042D0  0100               	movlb	0	; () banked
 11297  0042D2  B3B9               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 11298                           
 11299                           ; BSR set to: 0
 11300                           ;MOTEapp.c: 885: {
 11301                           ;MOTEapp.c: 887: m10SecTicker++;
 11302  0042D4  2B9B               	incf	_m10SecTicker& (0+255),f,b
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;MOTEapp.c: 893: }
 11306                           ;MOTEapp.c: 894: if (timerTask.SecTick)
 11307  0042D6  B7B9               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 11308                           
 11309                           ; BSR set to: 0
 11310                           ;MOTEapp.c: 895: {
 11311                           ;MOTEapp.c: 897: secTicker++;
 11312  0042D8  2BA0               	incf	_secTicker& (0+255),f,b
 11313  0042DA  0012               	return	
 11314  0042DC                     __end_of_MOTEapp_TimerBasedTask:
 11315                           	opt stack 0
 11316                           tblptru	equ	0xFF8
 11317                           tblptrh	equ	0xFF7
 11318                           tblptrl	equ	0xFF6
 11319                           tablat	equ	0xFF5
 11320                           prodh	equ	0xFF4
 11321                           prodl	equ	0xFF3
 11322                           intcon	equ	0xFF2
 11323                           postinc0	equ	0xFEE
 11324                           wreg	equ	0xFE8
 11325                           indf1	equ	0xFE7
 11326                           postdec1	equ	0xFE5
 11327                           fsr1h	equ	0xFE2
 11328                           fsr1l	equ	0xFE1
 11329                           indf2	equ	0xFDF
 11330                           postinc2	equ	0xFDE
 11331                           postdec2	equ	0xFDD
 11332                           fsr2h	equ	0xFDA
 11333                           fsr2l	equ	0xFD9
 11334                           status	equ	0xFD8
 11335                           
 11336 ;; *************** function _USBapp_handlerState *****************
 11337 ;; Defined at:
 11338 ;;		line 63 in file "../Includes/Board/USBapp.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  state           1    wreg     enum E6263
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;  state           1    0[BANK0 ] enum E6263
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  1    wreg      void 
 11345 ;; Registers used:
 11346 ;;		wreg
 11347 ;; Tracked objects:
 11348 ;;		On entry : F/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11352 ;;      Params:         0       0       0       0       0       0       0       0       0
 11353 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11354 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11355 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11356 ;;Total ram usage:        1 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:   11
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_main
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text41
 11367  004280                     __ptext41:
 11368                           	opt stack 0
 11369  004280                     _USBapp_handlerState:
 11370                           	opt stack 19
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;incstack = 0
 11374                           ;USBapp_handlerState@state stored from wreg
 11375  004280  6FB9               	movwf	USBapp_handlerState@state& (0+255),b
 11376                           
 11377                           ;USBapp.c: 65: usbState = state;
 11378  004282  C0B9  F0A2         	movff	USBapp_handlerState@state,_usbState
 11379  004286  0012               	return		;funcret
 11380  004288                     __end_of_USBapp_handlerState:
 11381                           	opt stack 0
 11382                           tblptru	equ	0xFF8
 11383                           tblptrh	equ	0xFF7
 11384                           tblptrl	equ	0xFF6
 11385                           tablat	equ	0xFF5
 11386                           prodh	equ	0xFF4
 11387                           prodl	equ	0xFF3
 11388                           intcon	equ	0xFF2
 11389                           postinc0	equ	0xFEE
 11390                           wreg	equ	0xFE8
 11391                           indf1	equ	0xFE7
 11392                           postdec1	equ	0xFE5
 11393                           fsr1h	equ	0xFE2
 11394                           fsr1l	equ	0xFE1
 11395                           indf2	equ	0xFDF
 11396                           postinc2	equ	0xFDE
 11397                           postdec2	equ	0xFDD
 11398                           fsr2h	equ	0xFDA
 11399                           fsr2l	equ	0xFD9
 11400                           status	equ	0xFD8
 11401                           
 11402 ;; *************** function _USBapp_Handler *****************
 11403 ;; Defined at:
 11404 ;;		line 68 in file "../Includes/Board/USBapp.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;		None
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;		None
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  1    wreg      void 
 11411 ;; Registers used:
 11412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11418 ;;      Params:         0       0       0       0       0       0       0       0       0
 11419 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11420 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11421 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11422 ;;Total ram usage:        0 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; Hardware stack levels required when called:   17
 11425 ;; This function calls:
 11426 ;;		_USBapp_DeviceCdcEmulatorHandler
 11427 ;;		_oled_clear
 11428 ;;		_oled_putString
 11429 ;; This function is called by:
 11430 ;;		_main
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text42
 11435  005006                     __ptext42:
 11436                           	opt stack 0
 11437  005006                     _USBapp_Handler:
 11438                           	opt stack 13
 11439                           
 11440                           ;USBapp.c: 72: {
 11441                           ;USBapp.c: 73: switch(usbState)
 11442                           
 11443                           ;incstack = 0
 11444                           ;USBapp.c: 71: do
 11445  005006  D02E               	goto	l10503
 11446  005008                     l707:
 11447                           
 11448                           ; BSR set to: 0
 11449  005008  D7FF               	goto	l707
 11450  00500A                     l10483:
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;USBapp.c: 80: oled_clear();
 11454  00500A  ECCD  F021         	call	_oled_clear	;wreg free
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 11458  00500E  0E32               	movlw	low STR_109
 11459  005010  6FC6               	movwf	oled_putString@string& (0+255),b
 11460  005012  0E7F               	movlw	high STR_109
 11461  005014  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
 11462  005016  0E01               	movlw	1
 11463  005018  6FC8               	movwf	oled_putString@station_dot& (0+255),b
 11464  00501A  6BC9               	clrf	oled_putString@start_page& (0+255),b
 11465  00501C  ECF0  F026         	call	_oled_putString	;wreg free
 11466                           
 11467                           ;USBapp.c: 82: oled_putString("Command",2,1);
 11468  005020  0E83               	movlw	low STR_110
 11469  005022  0100               	movlb	0	; () banked
 11470  005024  6FC6               	movwf	oled_putString@string& (0+255),b
 11471  005026  0E7F               	movlw	high STR_110
 11472  005028  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
 11473  00502A  0E02               	movlw	2
 11474  00502C  6FC8               	movwf	oled_putString@station_dot& (0+255),b
 11475  00502E  0E01               	movlw	1
 11476  005030  6FC9               	movwf	oled_putString@start_page& (0+255),b
 11477  005032  ECF0  F026         	call	_oled_putString	;wreg free
 11478                           
 11479                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 11480  005036  0E89               	movlw	low STR_111
 11481  005038  0100               	movlb	0	; () banked
 11482  00503A  6FC6               	movwf	oled_putString@string& (0+255),b
 11483  00503C  0E7E               	movlw	high STR_111
 11484  00503E  6FC7               	movwf	(oled_putString@string+1)& (0+255),b
 11485  005040  6BC8               	clrf	oled_putString@station_dot& (0+255),b
 11486  005042  0E02               	movlw	2
 11487  005044  6FC9               	movwf	oled_putString@start_page& (0+255),b
 11488  005046  ECF0  F026         	call	_oled_putString	;wreg free
 11489                           
 11490                           ;USBapp.c: 85: usbState = USB_RUNNING;
 11491  00504A  0E01               	movlw	1
 11492  00504C  0100               	movlb	0	; () banked
 11493  00504E  D005               	goto	L20
 11494  005050                     l10493:
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 11498  005050  0E20               	movlw	32
 11499  005052  6191               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 11500  005054  D001               	goto	l10497
 11501  005056  D00E               	goto	l714
 11502  005058                     l10497:
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;USBapp.c: 93: }
 11506                           ;USBapp.c: 94: usbState = USB_CDC;
 11507  005058  0E02               	movlw	2
 11508  00505A                     L20:
 11509  00505A  6FA2               	movwf	_usbState& (0+255),b
 11510                           
 11511                           ;USBapp.c: 95: break;
 11512  00505C  D00B               	goto	l714
 11513  00505E                     l10499:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 11517  00505E  ECBD  F02B         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 11518                           
 11519                           ;USBapp.c: 101: break;
 11520  005062  D008               	goto	l714
 11521  005064                     l10503:
 11522  005064  0100               	movlb	0	; () banked
 11523  005066  51A2               	movf	_usbState& (0+255),w,b
 11524                           
 11525                           ; Switch size 1, requested type "speed"
 11526                           ; Number of cases is 3, Range of values is 0 to 2
 11527                           ; switch strategies available:
 11528                           ; Name         Instructions Cycles
 11529                           ; simple_byte           10     6 (average)
 11530                           ;	Chosen strategy is simple_byte
 11531  005068  E0D0               	bz	l10483
 11532  00506A  0A01               	xorlw	1	; case 1
 11533  00506C  E0F1               	bz	l10493
 11534  00506E  0A03               	xorlw	3	; case 2
 11535  005070  E0F6               	bz	l10499
 11536  005072  D7CA               	goto	l707
 11537  005074                     l714:
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 11541  005074  B080               	btfsc	3968,0,c	;volatile
 11542  005076  D7F6               	goto	l10503
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;USBapp.c: 104: __nop();
 11546  005078  F000               	nop	
 11547  00507A  0012               	return		;funcret
 11548  00507C                     __end_of_USBapp_Handler:
 11549                           	opt stack 0
 11550                           tblptru	equ	0xFF8
 11551                           tblptrh	equ	0xFF7
 11552                           tblptrl	equ	0xFF6
 11553                           tablat	equ	0xFF5
 11554                           prodh	equ	0xFF4
 11555                           prodl	equ	0xFF3
 11556                           intcon	equ	0xFF2
 11557                           postinc0	equ	0xFEE
 11558                           wreg	equ	0xFE8
 11559                           indf1	equ	0xFE7
 11560                           postdec1	equ	0xFE5
 11561                           fsr1h	equ	0xFE2
 11562                           fsr1l	equ	0xFE1
 11563                           indf2	equ	0xFDF
 11564                           postinc2	equ	0xFDE
 11565                           postdec2	equ	0xFDD
 11566                           fsr2h	equ	0xFDA
 11567                           fsr2l	equ	0xFD9
 11568                           status	equ	0xFD8
 11569                           
 11570 ;; *************** function _oled_putString *****************
 11571 ;; Defined at:
 11572 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 11575 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_111(12), STR_110(8), 
 11576 ;;		 -> STR_109(9), STR_91(2), STR_90(16), STR_89(13), 
 11577 ;;		 -> STR_88(12), STR_87(17), STR_85(7), STR_82(7), 
 11578 ;;		 -> STR_80(7), STR_79(2), STR_78(7), STR_77(7), 
 11579 ;;		 -> STR_76(7), STR_75(7), STR_74(7), STR_73(7), 
 11580 ;;		 -> STR_72(7), STR_71(7), STR_70(17), STR_69(17), 
 11581 ;;		 -> STR_68(7), STR_67(7), STR_66(7), STR_65(10), 
 11582 ;;		 -> STR_64(15), STR_62(17), STR_61(7), STR_58(17), 
 11583 ;;		 -> STR_56(9), STR_53(7), cmd(64), STR_48(8), 
 11584 ;;		 -> STR_45(9), STR_42(8), STR_39(12), STR_36(12), 
 11585 ;;		 -> STR_33(12), modemResonseBuffer(64), STR_30(8), STR_28(17), 
 11586 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(9), 
 11587 ;;		 -> STR_23(10), STR_20(9), STR_19(8), STR_18(8), 
 11588 ;;		 -> STR_17(9), STR_16(10), STR_15(11), STR_14(13), 
 11589 ;;		 -> STR_13(13), STR_12(13), STR_11(12), STR_10(13), 
 11590 ;;		 -> STR_9(9), STR_8(12), STR_7(16), STR_6(2), 
 11591 ;;		 -> STR_5(2), STR_4(9), STR_3(16), STR_2(10), 
 11592 ;;		 -> STR_1(12), 
 11593 ;;  station_dot     1   15[BANK0 ] unsigned char 
 11594 ;;  start_page      1   16[BANK0 ] unsigned char 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;  index           1   17[BANK0 ] unsigned char 
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1    wreg      void 
 11599 ;; Registers used:
 11600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11601 ;; Tracked objects:
 11602 ;;		On entry : F/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11606 ;;      Params:         0       4       0       0       0       0       0       0       0
 11607 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11609 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11610 ;;Total ram usage:        5 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; Hardware stack levels required when called:   15
 11613 ;; This function calls:
 11614 ;;		_oled_putChar
 11615 ;; This function is called by:
 11616 ;;		_main
 11617 ;;		_moteHandler
 11618 ;;		_moteJoiningProcess
 11619 ;;		_moteRunningProcess
 11620 ;;		_USBapp_Handler
 11621 ;;		_oled_putUint8
 11622 ;;		_oled_putUint16
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text43
 11627  004DE0                     __ptext43:
 11628                           	opt stack 0
 11629  004DE0                     _oled_putString:
 11630                           	opt stack 15
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;SSD1306oLED.c: 275: uint8_t index;
 11634                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 11635                           
 11636                           ;incstack = 0
 11637  004DE0  C0C8  F0CA         	movff	oled_putString@station_dot,oled_putString@index
 11638  004DE4                     l8919:
 11639                           
 11640                           ; BSR set to: 0
 11641  004DE4  0E0F               	movlw	15
 11642  004DE6  65CA               	cpfsgt	oled_putString@index& (0+255),b
 11643  004DE8  D001               	goto	l8923
 11644  004DEA  0C0F               	retlw	15
 11645  004DEC                     l8923:
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;SSD1306oLED.c: 277: {
 11649                           ;SSD1306oLED.c: 278: if (*string != 0)
 11650  004DEC  C0C6  FFF6         	movff	oled_putString@string,tblptrl
 11651  004DF0  C0C7  FFF7         	movff	oled_putString@string+1,tblptrh
 11652  004DF4  6AF8               	clrf	tblptru,c
 11653  004DF6  0E07               	movlw	(high __ramtop+-1)
 11654  004DF8  64F7               	cpfsgt	tblptrh,c
 11655  004DFA  D003               	bra	u7037
 11656  004DFC  0008               	tblrd		*
 11657  004DFE  50F5               	movf	tablat,w,c
 11658  004E00  D005               	bra	u7030
 11659  004E02                     u7037:
 11660  004E02  CFF6 FFE1          	movff	tblptrl,fsr1l
 11661  004E06  CFF7 FFE2          	movff	tblptrh,fsr1h
 11662  004E0A  50E7               	movf	indf1,w,c
 11663  004E0C                     u7030:
 11664  004E0C  0900               	iorlw	0
 11665  004E0E  B4D8               	btfsc	status,2,c
 11666  004E10  0012               	return	
 11667                           
 11668                           ;SSD1306oLED.c: 279: {
 11669                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 11670  004E12  C0CA  F0BC         	movff	oled_putString@index,oled_putChar@station_dot
 11671  004E16  C0C9  F0BD         	movff	oled_putString@start_page,oled_putChar@start_page
 11672  004E1A  C0C6  FFF6         	movff	oled_putString@string,tblptrl
 11673  004E1E  C0C7  FFF7         	movff	oled_putString@string+1,tblptrh
 11674  004E22  6AF8               	clrf	tblptru,c
 11675  004E24  0E07               	movlw	(high __ramtop+-1)
 11676  004E26  64F7               	cpfsgt	tblptrh,c
 11677  004E28  D003               	bra	u7057
 11678  004E2A  0008               	tblrd		*
 11679  004E2C  50F5               	movf	tablat,w,c
 11680  004E2E  D005               	bra	u7050
 11681  004E30                     u7057:
 11682  004E30  CFF6 FFE1          	movff	tblptrl,fsr1l
 11683  004E34  CFF7 FFE2          	movff	tblptrh,fsr1h
 11684  004E38  50E7               	movf	indf1,w,c
 11685  004E3A                     u7050:
 11686  004E3A  ECC8  F027         	call	_oled_putChar
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;SSD1306oLED.c: 281: *string++;
 11690  004E3E  4BC6               	infsnz	oled_putString@string& (0+255),f,b
 11691  004E40  2BC7               	incf	(oled_putString@string+1)& (0+255),f,b
 11692                           
 11693                           ; BSR set to: 0
 11694                           
 11695                           ;SSD1306oLED.c: 282: }
 11696  004E42  2BCA               	incf	oled_putString@index& (0+255),f,b
 11697  004E44  D7CF               	goto	l8919
 11698  004E46                     __end_of_oled_putString:
 11699                           	opt stack 0
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           postinc0	equ	0xFEE
 11708                           wreg	equ	0xFE8
 11709                           indf1	equ	0xFE7
 11710                           postdec1	equ	0xFE5
 11711                           fsr1h	equ	0xFE2
 11712                           fsr1l	equ	0xFE1
 11713                           indf2	equ	0xFDF
 11714                           postinc2	equ	0xFDE
 11715                           postdec2	equ	0xFDD
 11716                           fsr2h	equ	0xFDA
 11717                           fsr2l	equ	0xFD9
 11718                           status	equ	0xFD8
 11719                           
 11720 ;; *************** function _oled_clear *****************
 11721 ;; Defined at:
 11722 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;		None
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;		None
 11727 ;; Return value:  Size  Location     Type
 11728 ;;                  1    wreg      void 
 11729 ;; Registers used:
 11730 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : F/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11736 ;;      Params:         0       0       0       0       0       0       0       0       0
 11737 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11738 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11739 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11740 ;;Total ram usage:        0 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; Hardware stack levels required when called:   16
 11743 ;; This function calls:
 11744 ;;		_oled_clearRow
 11745 ;; This function is called by:
 11746 ;;		_main
 11747 ;;		_moteHandler
 11748 ;;		_moteJoiningProcess
 11749 ;;		_moteRunningProcess
 11750 ;;		_USBapp_Handler
 11751 ;;		_oled_init
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text44
 11756  00439A                     __ptext44:
 11757                           	opt stack 0
 11758  00439A                     _oled_clear:
 11759                           	opt stack 13
 11760                           
 11761                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 11762                           
 11763                           ;incstack = 0
 11764  00439A  0E00               	movlw	0
 11765  00439C  EC13  F022         	call	_oled_clearRow
 11766                           
 11767                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 11768  0043A0  0E01               	movlw	1
 11769  0043A2  EC13  F022         	call	_oled_clearRow
 11770                           
 11771                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 11772  0043A6  0E02               	movlw	2
 11773  0043A8  EC13  F022         	call	_oled_clearRow
 11774                           
 11775                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 11776  0043AC  0E03               	movlw	3
 11777  0043AE  EF13  F022         	goto	_oled_clearRow
 11778  0043B2                     __end_of_oled_clear:
 11779                           	opt stack 0
 11780                           tblptru	equ	0xFF8
 11781                           tblptrh	equ	0xFF7
 11782                           tblptrl	equ	0xFF6
 11783                           tablat	equ	0xFF5
 11784                           prodh	equ	0xFF4
 11785                           prodl	equ	0xFF3
 11786                           intcon	equ	0xFF2
 11787                           postinc0	equ	0xFEE
 11788                           wreg	equ	0xFE8
 11789                           indf1	equ	0xFE7
 11790                           postdec1	equ	0xFE5
 11791                           fsr1h	equ	0xFE2
 11792                           fsr1l	equ	0xFE1
 11793                           indf2	equ	0xFDF
 11794                           postinc2	equ	0xFDE
 11795                           postdec2	equ	0xFDD
 11796                           fsr2h	equ	0xFDA
 11797                           fsr2l	equ	0xFD9
 11798                           status	equ	0xFD8
 11799                           
 11800 ;; *************** function _oled_clearRow *****************
 11801 ;; Defined at:
 11802 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 11803 ;; Parameters:    Size  Location     Type
 11804 ;;  page            1    wreg     unsigned char 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;  page            1   13[BANK0 ] unsigned char 
 11807 ;;  index           1   14[BANK0 ] unsigned char 
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  1    wreg      void 
 11810 ;; Registers used:
 11811 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : F/0
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11817 ;;      Params:         0       0       0       0       0       0       0       0       0
 11818 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11819 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11820 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11821 ;;Total ram usage:        2 bytes
 11822 ;; Hardware stack levels used:    1
 11823 ;; Hardware stack levels required when called:   15
 11824 ;; This function calls:
 11825 ;;		_oled_putChar
 11826 ;; This function is called by:
 11827 ;;		_oled_clear
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831                           	psect	text45
 11832  004426                     __ptext45:
 11833                           	opt stack 0
 11834  004426                     _oled_clearRow:
 11835                           	opt stack 13
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;incstack = 0
 11839                           ;oled_clearRow@page stored from wreg
 11840  004426  0100               	movlb	0	; () banked
 11841  004428  6FC6               	movwf	oled_clearRow@page& (0+255),b
 11842                           
 11843                           ;SSD1306oLED.c: 300: uint8_t index;
 11844                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 11845  00442A  6BC7               	clrf	oled_clearRow@index& (0+255),b
 11846  00442C                     l8763:
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;SSD1306oLED.c: 303: {
 11850                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 11851  00442C  C0C7  F0BC         	movff	oled_clearRow@index,oled_putChar@station_dot
 11852  004430  C0C6  F0BD         	movff	oled_clearRow@page,oled_putChar@start_page
 11853  004434  0E20               	movlw	32
 11854  004436  ECC8  F027         	call	_oled_putChar
 11855                           
 11856                           ; BSR set to: 0
 11857  00443A  2BC7               	incf	oled_clearRow@index& (0+255),f,b
 11858                           
 11859                           ; BSR set to: 0
 11860  00443C  0E0F               	movlw	15
 11861  00443E  65C7               	cpfsgt	oled_clearRow@index& (0+255),b
 11862  004440  D7F5               	goto	l8763
 11863  004442  0C0F               	retlw	15
 11864  004444                     __end_of_oled_clearRow:
 11865                           	opt stack 0
 11866                           tblptru	equ	0xFF8
 11867                           tblptrh	equ	0xFF7
 11868                           tblptrl	equ	0xFF6
 11869                           tablat	equ	0xFF5
 11870                           prodh	equ	0xFF4
 11871                           prodl	equ	0xFF3
 11872                           intcon	equ	0xFF2
 11873                           postinc0	equ	0xFEE
 11874                           wreg	equ	0xFE8
 11875                           indf1	equ	0xFE7
 11876                           postdec1	equ	0xFE5
 11877                           fsr1h	equ	0xFE2
 11878                           fsr1l	equ	0xFE1
 11879                           indf2	equ	0xFDF
 11880                           postinc2	equ	0xFDE
 11881                           postdec2	equ	0xFDD
 11882                           fsr2h	equ	0xFDA
 11883                           fsr2l	equ	0xFD9
 11884                           status	equ	0xFD8
 11885                           
 11886 ;; *************** function _oled_putChar *****************
 11887 ;; Defined at:
 11888 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  k               1    wreg     unsigned char 
 11891 ;;  station_dot     1    3[BANK0 ] unsigned char 
 11892 ;;  start_page      1    4[BANK0 ] unsigned char 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  k               1   11[BANK0 ] unsigned char 
 11895 ;;  index           1   12[BANK0 ] unsigned char 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : F/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11905 ;;      Params:         0       2       0       0       0       0       0       0       0
 11906 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11907 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11908 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11909 ;;Total ram usage:       10 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:   14
 11912 ;; This function calls:
 11913 ;;		_Set_Column_Address
 11914 ;;		_Set_Page_Address
 11915 ;;		_oled_writeData
 11916 ;; This function is called by:
 11917 ;;		_oled_putString
 11918 ;;		_oled_clearRow
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           	psect	text46
 11923  004F90                     __ptext46:
 11924                           	opt stack 0
 11925  004F90                     _oled_putChar:
 11926                           	opt stack 15
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;incstack = 0
 11930                           ;oled_putChar@k stored from wreg
 11931  004F90  0100               	movlb	0	; () banked
 11932  004F92  6FC4               	movwf	oled_putChar@k& (0+255),b
 11933                           
 11934                           ;SSD1306oLED.c: 260: uint8_t index;
 11935                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 11936  004F94  51BD               	movf	oled_putChar@start_page& (0+255),w,b
 11937  004F96  ECA3  F021         	call	_Set_Page_Address
 11938                           
 11939                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 11940  004F9A  0100               	movlb	0	; () banked
 11941  004F9C  51BC               	movf	oled_putChar@station_dot& (0+255),w,b
 11942  004F9E  0D08               	mullw	8
 11943  004FA0  50F3               	movf	prodl,w,c
 11944  004FA2  EC04  F022         	call	_Set_Column_Address
 11945                           
 11946                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 11947  004FA6  988A               	bcf	3978,4,c	;volatile
 11948                           
 11949                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 11950  004FA8  0100               	movlb	0	; () banked
 11951  004FAA  6BC5               	clrf	oled_putChar@index& (0+255),b
 11952  004FAC                     l8711:
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;SSD1306oLED.c: 267: {
 11956                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 11957  004FAC  6BBE               	clrf	??_oled_putChar& (0+255),b
 11958  004FAE  69BF               	setf	(??_oled_putChar+1)& (0+255),b
 11959  004FB0  51C4               	movf	oled_putChar@k& (0+255),w,b
 11960  004FB2  6FC0               	movwf	(??_oled_putChar+2)& (0+255),b
 11961  004FB4  6BC1               	clrf	(??_oled_putChar+3)& (0+255),b
 11962  004FB6  90D8               	bcf	status,0,c
 11963  004FB8  37C0               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11964  004FBA  37C1               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11965  004FBC  90D8               	bcf	status,0,c
 11966  004FBE  37C0               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11967  004FC0  37C1               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11968  004FC2  90D8               	bcf	status,0,c
 11969  004FC4  37C0               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11970  004FC6  37C1               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11971  004FC8  C0F1  F0C2         	movff	_selectedFont,??_oled_putChar+4
 11972  004FCC  C0F2  F0C3         	movff	_selectedFont+1,??_oled_putChar+5
 11973  004FD0  51C0               	movf	(??_oled_putChar+2)& (0+255),w,b
 11974  004FD2  27C2               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11975  004FD4  51C1               	movf	(??_oled_putChar+3)& (0+255),w,b
 11976  004FD6  23C3               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11977  004FD8  51C5               	movf	oled_putChar@index& (0+255),w,b
 11978  004FDA  27C2               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11979  004FDC  0E00               	movlw	0
 11980  004FDE  23C3               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11981  004FE0  51BE               	movf	??_oled_putChar& (0+255),w,b
 11982  004FE2  27C2               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11983  004FE4  51BF               	movf	(??_oled_putChar+1)& (0+255),w,b
 11984  004FE6  23C3               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11985  004FE8  C0C2  FFF6         	movff	??_oled_putChar+4,tblptrl
 11986  004FEC  C0C3  FFF7         	movff	??_oled_putChar+5,tblptrh
 11987  004FF0                     	if	0	;tblptru may be non-zero
 11988  004FF0                     	endif
 11989  004FF0                     	if	0	;tblptru may be non-zero
 11990  004FF0                     	endif
 11991  004FF0  0008               	tblrd		*
 11992  004FF2  50F5               	movf	tablat,w,c
 11993  004FF4  EC54  F021         	call	_oled_writeData
 11994  004FF8  0100               	movlb	0	; () banked
 11995  004FFA  2BC5               	incf	oled_putChar@index& (0+255),f,b
 11996                           
 11997                           ; BSR set to: 0
 11998  004FFC  0E07               	movlw	7
 11999  004FFE  65C5               	cpfsgt	oled_putChar@index& (0+255),b
 12000  005000  D7D5               	goto	l8711
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;SSD1306oLED.c: 269: }
 12004                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 12005  005002  888A               	bsf	3978,4,c	;volatile
 12006                           
 12007                           ; BSR set to: 0
 12008  005004  0C07               	retlw	7	;funcret
 12009  005006                     __end_of_oled_putChar:
 12010                           	opt stack 0
 12011                           tblptru	equ	0xFF8
 12012                           tblptrh	equ	0xFF7
 12013                           tblptrl	equ	0xFF6
 12014                           tablat	equ	0xFF5
 12015                           prodh	equ	0xFF4
 12016                           prodl	equ	0xFF3
 12017                           intcon	equ	0xFF2
 12018                           postinc0	equ	0xFEE
 12019                           wreg	equ	0xFE8
 12020                           indf1	equ	0xFE7
 12021                           postdec1	equ	0xFE5
 12022                           fsr1h	equ	0xFE2
 12023                           fsr1l	equ	0xFE1
 12024                           indf2	equ	0xFDF
 12025                           postinc2	equ	0xFDE
 12026                           postdec2	equ	0xFDD
 12027                           fsr2h	equ	0xFDA
 12028                           fsr2l	equ	0xFD9
 12029                           status	equ	0xFD8
 12030                           
 12031 ;; *************** function _oled_writeData *****************
 12032 ;; Defined at:
 12033 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;  data            1    wreg     unsigned char 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  data            1    1[BANK0 ] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : F/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0
 12048 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12050 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12051 ;;Total ram usage:        1 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:   12
 12054 ;; This function calls:
 12055 ;;		_SPI_Exchange8bit
 12056 ;; This function is called by:
 12057 ;;		_oled_putChar
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text47
 12062  0042A8                     __ptext47:
 12063                           	opt stack 0
 12064  0042A8                     _oled_writeData:
 12065                           	opt stack 16
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;incstack = 0
 12069                           ;oled_writeData@data stored from wreg
 12070  0042A8  6FBA               	movwf	oled_writeData@data& (0+255),b
 12071                           
 12072                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 12073  0042AA  8A8A               	bsf	3978,5,c	;volatile
 12074                           
 12075                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 12076  0042AC  0100               	movlb	0	; () banked
 12077  0042AE  51BA               	movf	oled_writeData@data& (0+255),w,b
 12078  0042B0  EF76  F021         	goto	_SPI_Exchange8bit
 12079  0042B4                     __end_of_oled_writeData:
 12080                           	opt stack 0
 12081                           tblptru	equ	0xFF8
 12082                           tblptrh	equ	0xFF7
 12083                           tblptrl	equ	0xFF6
 12084                           tablat	equ	0xFF5
 12085                           prodh	equ	0xFF4
 12086                           prodl	equ	0xFF3
 12087                           intcon	equ	0xFF2
 12088                           postinc0	equ	0xFEE
 12089                           wreg	equ	0xFE8
 12090                           indf1	equ	0xFE7
 12091                           postdec1	equ	0xFE5
 12092                           fsr1h	equ	0xFE2
 12093                           fsr1l	equ	0xFE1
 12094                           indf2	equ	0xFDF
 12095                           postinc2	equ	0xFDE
 12096                           postdec2	equ	0xFDD
 12097                           fsr2h	equ	0xFDA
 12098                           fsr2l	equ	0xFD9
 12099                           status	equ	0xFD8
 12100                           
 12101 ;; *************** function _Set_Page_Address *****************
 12102 ;; Defined at:
 12103 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;  address         1    wreg     unsigned char 
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;  address         1    2[BANK0 ] unsigned char 
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1    wreg      void 
 12110 ;; Registers used:
 12111 ;;		wreg, status,2, status,0, cstack
 12112 ;; Tracked objects:
 12113 ;;		On entry : F/0
 12114 ;;		On exit  : 0/0
 12115 ;;		Unchanged: 0/0
 12116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12117 ;;      Params:         0       0       0       0       0       0       0       0       0
 12118 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12120 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12121 ;;Total ram usage:        1 bytes
 12122 ;; Hardware stack levels used:    1
 12123 ;; Hardware stack levels required when called:   13
 12124 ;; This function calls:
 12125 ;;		_oled_writeCommand
 12126 ;; This function is called by:
 12127 ;;		_oled_putChar
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text48
 12132  004346                     __ptext48:
 12133                           	opt stack 0
 12134  004346                     _Set_Page_Address:
 12135                           	opt stack 15
 12136                           
 12137                           ;incstack = 0
 12138                           ;Set_Page_Address@address stored from wreg
 12139  004346  6FBB               	movwf	Set_Page_Address@address& (0+255),b
 12140                           
 12141                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 12142  004348  0EB0               	movlw	176
 12143  00434A  0100               	movlb	0	; () banked
 12144  00434C  13BB               	iorwf	Set_Page_Address@address& (0+255),f,b
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 12148  00434E  988A               	bcf	3978,4,c	;volatile
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 12152  004350  51BB               	movf	Set_Page_Address@address& (0+255),w,b
 12153  004352  EC4E  F021         	call	_oled_writeCommand
 12154                           
 12155                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 12156  004356  888A               	bsf	3978,4,c	;volatile
 12157  004358  0012               	return		;funcret
 12158  00435A                     __end_of_Set_Page_Address:
 12159                           	opt stack 0
 12160                           tblptru	equ	0xFF8
 12161                           tblptrh	equ	0xFF7
 12162                           tblptrl	equ	0xFF6
 12163                           tablat	equ	0xFF5
 12164                           prodh	equ	0xFF4
 12165                           prodl	equ	0xFF3
 12166                           intcon	equ	0xFF2
 12167                           postinc0	equ	0xFEE
 12168                           wreg	equ	0xFE8
 12169                           indf1	equ	0xFE7
 12170                           postdec1	equ	0xFE5
 12171                           fsr1h	equ	0xFE2
 12172                           fsr1l	equ	0xFE1
 12173                           indf2	equ	0xFDF
 12174                           postinc2	equ	0xFDE
 12175                           postdec2	equ	0xFDD
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function _Set_Column_Address *****************
 12181 ;; Defined at:
 12182 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  address         1    wreg     unsigned char 
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  address         1    2[BANK0 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2, status,0, cstack
 12191 ;; Tracked objects:
 12192 ;;		On entry : F/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0
 12197 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12199 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12200 ;;Total ram usage:        1 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:   13
 12203 ;; This function calls:
 12204 ;;		_oled_writeCommand
 12205 ;; This function is called by:
 12206 ;;		_oled_putChar
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text49
 12211  004408                     __ptext49:
 12212                           	opt stack 0
 12213  004408                     _Set_Column_Address:
 12214                           	opt stack 15
 12215                           
 12216                           ;incstack = 0
 12217                           ;Set_Column_Address@address stored from wreg
 12218  004408  6FBB               	movwf	Set_Column_Address@address& (0+255),b
 12219                           
 12220                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 12221  00440A  988A               	bcf	3978,4,c	;volatile
 12222                           
 12223                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 12224  00440C  0100               	movlb	0	; () banked
 12225  00440E  39BB               	swapf	Set_Column_Address@address& (0+255),w,b
 12226  004410  0B0F               	andlw	15
 12227  004412  0910               	iorlw	16
 12228  004414  EC4E  F021         	call	_oled_writeCommand
 12229                           
 12230                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 12231  004418  0100               	movlb	0	; () banked
 12232  00441A  51BB               	movf	Set_Column_Address@address& (0+255),w,b
 12233  00441C  0B0F               	andlw	15
 12234  00441E  EC4E  F021         	call	_oled_writeCommand
 12235                           
 12236                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 12237  004422  888A               	bsf	3978,4,c	;volatile
 12238  004424  0012               	return		;funcret
 12239  004426                     __end_of_Set_Column_Address:
 12240                           	opt stack 0
 12241                           tblptru	equ	0xFF8
 12242                           tblptrh	equ	0xFF7
 12243                           tblptrl	equ	0xFF6
 12244                           tablat	equ	0xFF5
 12245                           prodh	equ	0xFF4
 12246                           prodl	equ	0xFF3
 12247                           intcon	equ	0xFF2
 12248                           postinc0	equ	0xFEE
 12249                           wreg	equ	0xFE8
 12250                           indf1	equ	0xFE7
 12251                           postdec1	equ	0xFE5
 12252                           fsr1h	equ	0xFE2
 12253                           fsr1l	equ	0xFE1
 12254                           indf2	equ	0xFDF
 12255                           postinc2	equ	0xFDE
 12256                           postdec2	equ	0xFDD
 12257                           fsr2h	equ	0xFDA
 12258                           fsr2l	equ	0xFD9
 12259                           status	equ	0xFD8
 12260                           
 12261 ;; *************** function _oled_writeCommand *****************
 12262 ;; Defined at:
 12263 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;  command         1    wreg     unsigned char 
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  command         1    1[BANK0 ] unsigned char 
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  1    wreg      void 
 12270 ;; Registers used:
 12271 ;;		wreg, status,2, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0
 12278 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12280 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12281 ;;Total ram usage:        1 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; Hardware stack levels required when called:   12
 12284 ;; This function calls:
 12285 ;;		_SPI_Exchange8bit
 12286 ;; This function is called by:
 12287 ;;		_Set_Page_Address
 12288 ;;		_Set_Column_Address
 12289 ;;		_oled_devInit
 12290 ;;		_oled_setDisplay
 12291 ;;		_oled_displayOff
 12292 ;; This function uses a non-reentrant model
 12293 ;;
 12294                           
 12295                           	psect	text50
 12296  00429C                     __ptext50:
 12297                           	opt stack 0
 12298  00429C                     _oled_writeCommand:
 12299                           	opt stack 15
 12300                           
 12301                           ;incstack = 0
 12302                           ;oled_writeCommand@command stored from wreg
 12303  00429C  0100               	movlb	0	; () banked
 12304  00429E  6FBA               	movwf	oled_writeCommand@command& (0+255),b
 12305                           
 12306                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 12307  0042A0  9A8A               	bcf	3978,5,c	;volatile
 12308                           
 12309                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 12310  0042A2  51BA               	movf	oled_writeCommand@command& (0+255),w,b
 12311  0042A4  EF76  F021         	goto	_SPI_Exchange8bit
 12312  0042A8                     __end_of_oled_writeCommand:
 12313                           	opt stack 0
 12314                           tblptru	equ	0xFF8
 12315                           tblptrh	equ	0xFF7
 12316                           tblptrl	equ	0xFF6
 12317                           tablat	equ	0xFF5
 12318                           prodh	equ	0xFF4
 12319                           prodl	equ	0xFF3
 12320                           intcon	equ	0xFF2
 12321                           postinc0	equ	0xFEE
 12322                           wreg	equ	0xFE8
 12323                           indf1	equ	0xFE7
 12324                           postdec1	equ	0xFE5
 12325                           fsr1h	equ	0xFE2
 12326                           fsr1l	equ	0xFE1
 12327                           indf2	equ	0xFDF
 12328                           postinc2	equ	0xFDE
 12329                           postdec2	equ	0xFDD
 12330                           fsr2h	equ	0xFDA
 12331                           fsr2l	equ	0xFD9
 12332                           status	equ	0xFD8
 12333                           
 12334 ;; *************** function _SPI_Exchange8bit *****************
 12335 ;; Defined at:
 12336 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;  data            1    wreg     unsigned char 
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;  data            1    0[BANK0 ] unsigned char 
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  1    wreg      unsigned char 
 12343 ;; Registers used:
 12344 ;;		wreg, status,2
 12345 ;; Tracked objects:
 12346 ;;		On entry : F/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12350 ;;      Params:         0       0       0       0       0       0       0       0       0
 12351 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12352 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12353 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12354 ;;Total ram usage:        1 bytes
 12355 ;; Hardware stack levels used:    1
 12356 ;; Hardware stack levels required when called:   11
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		_oled_writeCommand
 12361 ;;		_oled_writeData
 12362 ;; This function uses a non-reentrant model
 12363 ;;
 12364                           
 12365                           	psect	text51
 12366  0042EC                     __ptext51:
 12367                           	opt stack 0
 12368  0042EC                     _SPI_Exchange8bit:
 12369                           	opt stack 16
 12370                           
 12371                           ;incstack = 0
 12372                           ;SPI_Exchange8bit@data stored from wreg
 12373  0042EC  6FB9               	movwf	SPI_Exchange8bit@data& (0+255),b
 12374                           
 12375                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 12376  0042EE  9EC6               	bcf	4038,7,c	;volatile
 12377                           
 12378                           ;spi.c: 86: SSPBUF = data;
 12379  0042F0  C0B9  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 12380  0042F4                     l1102:
 12381  0042F4  A0C7               	btfss	4039,0,c	;volatile
 12382  0042F6  D7FE               	goto	l1102
 12383                           
 12384                           ;spi.c: 90: }
 12385                           ;spi.c: 92: return (SSPBUF);
 12386  0042F8  50C9               	movf	4041,w,c	;volatile
 12387  0042FA  0012               	return		;funcret
 12388  0042FC                     __end_of_SPI_Exchange8bit:
 12389                           	opt stack 0
 12390                           tblptru	equ	0xFF8
 12391                           tblptrh	equ	0xFF7
 12392                           tblptrl	equ	0xFF6
 12393                           tablat	equ	0xFF5
 12394                           prodh	equ	0xFF4
 12395                           prodl	equ	0xFF3
 12396                           intcon	equ	0xFF2
 12397                           postinc0	equ	0xFEE
 12398                           wreg	equ	0xFE8
 12399                           indf1	equ	0xFE7
 12400                           postdec1	equ	0xFE5
 12401                           fsr1h	equ	0xFE2
 12402                           fsr1l	equ	0xFE1
 12403                           indf2	equ	0xFDF
 12404                           postinc2	equ	0xFDE
 12405                           postdec2	equ	0xFDD
 12406                           fsr2h	equ	0xFDA
 12407                           fsr2l	equ	0xFD9
 12408                           status	equ	0xFD8
 12409                           
 12410 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 12411 ;; Defined at:
 12412 ;;		line 125 in file "../Includes/Board/USBapp.c"
 12413 ;; Parameters:    Size  Location     Type
 12414 ;;		None
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;		None
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  1    wreg      void 
 12419 ;; Registers used:
 12420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12421 ;; Tracked objects:
 12422 ;;		On entry : F/0
 12423 ;;		On exit  : F/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12426 ;;      Params:         0       0       0       0       0       0       0       0       0
 12427 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12428 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12429 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12430 ;;Total ram usage:        1 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:   13
 12433 ;; This function calls:
 12434 ;;		_CDCTxService
 12435 ;;		_EUSART_Read
 12436 ;;		_EUSART_Write
 12437 ;;		_MOTEapp_setResponseReady
 12438 ;;		_USBapp_getrxByteFlag
 12439 ;;		_getsUSBUSART
 12440 ;;		_putUSBUSART
 12441 ;; This function is called by:
 12442 ;;		_USBapp_Handler
 12443 ;; This function uses a non-reentrant model
 12444 ;;
 12445                           
 12446                           	psect	text52
 12447  00577A                     __ptext52:
 12448                           	opt stack 0
 12449  00577A                     _USBapp_DeviceCdcEmulatorHandler:
 12450                           	opt stack 16
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 12454                           
 12455                           ;incstack = 0
 12456  00577A  0E1F               	movlw	31
 12457  00577C  6591               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 12458  00577E  0C1F               	retlw	31
 12459                           
 12460                           ; BSR set to: 0
 12461  005780  B260               	btfsc	3936,1,c	;volatile
 12462  005782  0C1F               	retlw	31
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 12466  005784  501B               	movf	_RS232_Out_Data_Rdy,w,c
 12467  005786  E10E               	bnz	l729
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;USBapp.c: 132: {
 12471                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 12472  005788  0E18               	movlw	low _USB_Buffer
 12473  00578A  6FC0               	movwf	getsUSBUSART@buffer& (0+255),b
 12474  00578C  0E01               	movlw	high _USB_Buffer
 12475  00578E  6FC1               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 12476  005790  0E40               	movlw	64
 12477  005792  6FC2               	movwf	getsUSBUSART@len& (0+255),b
 12478  005794  EC90  F029         	call	_getsUSBUSART	;wreg free
 12479  005798  6E19               	movwf	_LastRS232Out,c
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;USBapp.c: 134: if(LastRS232Out > 0)
 12483  00579A  5019               	movf	_LastRS232Out,w,c
 12484  00579C  E003               	bz	l729
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;USBapp.c: 135: {
 12488                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 12489  00579E  0E01               	movlw	1
 12490  0057A0  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 12491                           
 12492                           ; BSR set to: 0
 12493                           ;USBapp.c: 137: RS232cp = 0;
 12494  0057A2  6A1C               	clrf	_RS232cp,c
 12495  0057A4                     l729:
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;USBapp.c: 138: }
 12499                           ;USBapp.c: 139: }
 12500                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 12501  0057A4  501B               	movf	_RS232_Out_Data_Rdy,w,c
 12502  0057A6  E010               	bz	l10271
 12503                           
 12504                           ; BSR set to: 0
 12505  0057A8  A2AC               	btfss	4012,1,c	;volatile
 12506  0057AA  D00E               	goto	l10271
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;USBapp.c: 143: {
 12510                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 12511  0057AC  0E18               	movlw	low _USB_Buffer
 12512  0057AE  241C               	addwf	_RS232cp,w,c
 12513  0057B0  6ED9               	movwf	fsr2l,c
 12514  0057B2  6ADA               	clrf	fsr2h,c
 12515  0057B4  0E01               	movlw	high _USB_Buffer
 12516  0057B6  22DA               	addwfc	fsr2h,f,c
 12517  0057B8  50DF               	movf	indf2,w,c
 12518  0057BA  EC99  F023         	call	_EUSART_Write
 12519                           
 12520                           ;USBapp.c: 146: ++RS232cp;
 12521  0057BE  2A1C               	incf	_RS232cp,f,c
 12522                           
 12523                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 12524  0057C0  5019               	movf	_LastRS232Out,w,c
 12525  0057C2  181C               	xorwf	_RS232cp,w,c
 12526  0057C4  E101               	bnz	l10271
 12527                           
 12528                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 12529  0057C6  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 12530  0057C8                     l10271:
 12531                           
 12532                           ;USBapp.c: 149: }
 12533                           ;USBapp.c: 152: if ((eusartRxCount))
 12534  0057C8  5023               	movf	_eusartRxCount,w,c	;volatile
 12535  0057CA  E01C               	bz	l10287
 12536                           
 12537                           ;USBapp.c: 153: {
 12538                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 12539  0057CC  EC2E  F021         	call	_USBapp_getrxByteFlag	;wreg free
 12540  0057D0  0900               	iorlw	0
 12541  0057D2  E018               	bz	l10287
 12542  0057D4  0E3F               	movlw	63
 12543  0057D6  601A               	cpfslt	_NextUSBOut,c
 12544  0057D8  D015               	goto	l10287
 12545                           
 12546                           ;USBapp.c: 155: {
 12547                           ;USBapp.c: 156: __nop();
 12548  0057DA  F000               	nop	
 12549                           
 12550                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 12551  0057DC  EC82  F023         	call	_EUSART_Read	;wreg free
 12552  0057E0  6FC6               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 12553  0057E2  0E18               	movlw	low _USB_Buffer
 12554  0057E4  241A               	addwf	_NextUSBOut,w,c
 12555  0057E6  6ED9               	movwf	fsr2l,c
 12556  0057E8  6ADA               	clrf	fsr2h,c
 12557  0057EA  0E01               	movlw	high _USB_Buffer
 12558  0057EC  22DA               	addwfc	fsr2h,f,c
 12559  0057EE  C0C6  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;USBapp.c: 158: ++NextUSBOut;
 12563  0057F2  2A1A               	incf	_NextUSBOut,f,c
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 12567  0057F4  0E18               	movlw	low _USB_Buffer
 12568  0057F6  241A               	addwf	_NextUSBOut,w,c
 12569  0057F8  6ED9               	movwf	fsr2l,c
 12570  0057FA  6ADA               	clrf	fsr2h,c
 12571  0057FC  0E01               	movlw	high _USB_Buffer
 12572  0057FE  22DA               	addwfc	fsr2h,f,c
 12573  005800  6ADF               	clrf	indf2,c
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;USBapp.c: 160: rxByteFlag = 0;
 12577  005802  6A2A               	clrf	_rxByteFlag,c	;volatile
 12578  005804                     l10287:
 12579                           
 12580                           ;USBapp.c: 161: }
 12581                           ;USBapp.c: 162: }
 12582                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 12583  005804  5020               	movf	_cdc_trf_state,w,c
 12584  005806  E002 EFB8  F030    	bnz	_CDCTxService
 12585  00580C  501A               	movf	_NextUSBOut,w,c
 12586  00580E  E102 EFB8  F030    	bz	_CDCTxService
 12587                           
 12588                           ;USBapp.c: 167: {
 12589                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 12590  005814  0E18               	movlw	low _USB_Buffer
 12591  005816  0100               	movlb	0	; () banked
 12592  005818  6FB9               	movwf	putUSBUSART@data& (0+255),b
 12593  00581A  0E01               	movlw	high _USB_Buffer
 12594  00581C  6FBA               	movwf	(putUSBUSART@data+1)& (0+255),b
 12595  00581E  C01A  F0BB         	movff	_NextUSBOut,putUSBUSART@length
 12596  005822  ECD9  F021         	call	_putUSBUSART	;wreg free
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 12600  005826  EC02  F008         	call	_MOTEapp_setResponseReady	;wreg free
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;USBapp.c: 170: NextUSBOut = 0;
 12604  00582A  6A1A               	clrf	_NextUSBOut,c
 12605                           
 12606                           ;USBapp.c: 171: }
 12607                           ;USBapp.c: 173: CDCTxService();
 12608  00582C  EFB8  F030         	goto	_CDCTxService	;wreg free
 12609  005830                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 12610                           	opt stack 0
 12611                           tblptru	equ	0xFF8
 12612                           tblptrh	equ	0xFF7
 12613                           tblptrl	equ	0xFF6
 12614                           tablat	equ	0xFF5
 12615                           prodh	equ	0xFF4
 12616                           prodl	equ	0xFF3
 12617                           intcon	equ	0xFF2
 12618                           postinc0	equ	0xFEE
 12619                           wreg	equ	0xFE8
 12620                           indf1	equ	0xFE7
 12621                           postdec1	equ	0xFE5
 12622                           fsr1h	equ	0xFE2
 12623                           fsr1l	equ	0xFE1
 12624                           indf2	equ	0xFDF
 12625                           postinc2	equ	0xFDE
 12626                           postdec2	equ	0xFDD
 12627                           fsr2h	equ	0xFDA
 12628                           fsr2l	equ	0xFD9
 12629                           status	equ	0xFD8
 12630                           
 12631 ;; *************** function _putUSBUSART *****************
 12632 ;; Defined at:
 12633 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;  data            2    0[BANK0 ] PTR unsigned char 
 12636 ;;		 -> USB_Buffer(64), 
 12637 ;;  length          1    2[BANK0 ] unsigned char 
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;		None
 12640 ;; Return value:  Size  Location     Type
 12641 ;;                  1    wreg      void 
 12642 ;; Registers used:
 12643 ;;		wreg, status,2, status,0
 12644 ;; Tracked objects:
 12645 ;;		On entry : F/0
 12646 ;;		On exit  : F/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12649 ;;      Params:         0       3       0       0       0       0       0       0       0
 12650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12651 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12652 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12653 ;;Total ram usage:        3 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:   11
 12656 ;; This function calls:
 12657 ;;		Nothing
 12658 ;; This function is called by:
 12659 ;;		_USBapp_DeviceCdcEmulatorHandler
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text53
 12664  0043B2                     __ptext53:
 12665                           	opt stack 0
 12666  0043B2                     _putUSBUSART:
 12667                           	opt stack 17
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;incstack = 0
 12674  0043B2  94A3               	bcf	4003,2,c	;volatile
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 12678  0043B4  5020               	movf	_cdc_trf_state,w,c
 12679  0043B6  E109               	bnz	l9607
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;usb_device_cdc.c: 530: {
 12683                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 12684  0043B8  C0B9  F073         	movff	putUSBUSART@data,_pCDCSrc
 12685  0043BC  C0BA  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 12686                           
 12687                           ; BSR set to: 0
 12688  0043C0  C0BB  F099         	movff	putUSBUSART@length,_cdc_tx_len
 12689                           
 12690                           ; BSR set to: 0
 12691  0043C4  0E01               	movlw	1
 12692  0043C6  6F97               	movwf	_cdc_mem_type& (0+255),b
 12693                           
 12694                           ; BSR set to: 0
 12695  0043C8  6E20               	movwf	_cdc_trf_state,c
 12696  0043CA                     l9607:
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;usb_device_cdc.c: 532: }
 12700                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 12701  0043CA  84A3               	bsf	4003,2,c	;volatile
 12702                           
 12703                           ; BSR set to: 0
 12704  0043CC  0012               	return		;funcret
 12705  0043CE                     __end_of_putUSBUSART:
 12706                           	opt stack 0
 12707                           tblptru	equ	0xFF8
 12708                           tblptrh	equ	0xFF7
 12709                           tblptrl	equ	0xFF6
 12710                           tablat	equ	0xFF5
 12711                           prodh	equ	0xFF4
 12712                           prodl	equ	0xFF3
 12713                           intcon	equ	0xFF2
 12714                           postinc0	equ	0xFEE
 12715                           wreg	equ	0xFE8
 12716                           indf1	equ	0xFE7
 12717                           postdec1	equ	0xFE5
 12718                           fsr1h	equ	0xFE2
 12719                           fsr1l	equ	0xFE1
 12720                           indf2	equ	0xFDF
 12721                           postinc2	equ	0xFDE
 12722                           postdec2	equ	0xFDD
 12723                           fsr2h	equ	0xFDA
 12724                           fsr2l	equ	0xFD9
 12725                           status	equ	0xFD8
 12726                           
 12727 ;; *************** function _getsUSBUSART *****************
 12728 ;; Defined at:
 12729 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 12732 ;;		 -> USB_Buffer(64), 
 12733 ;;  len             1    9[BANK0 ] unsigned char 
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      unsigned char 
 12738 ;; Registers used:
 12739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : F/0
 12742 ;;		On exit  : F/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12745 ;;      Params:         0       3       0       0       0       0       0       0       0
 12746 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12747 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12748 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12749 ;;Total ram usage:        6 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:   12
 12752 ;; This function calls:
 12753 ;;		_USBTransferOnePacket
 12754 ;; This function is called by:
 12755 ;;		_USBapp_DeviceCdcEmulatorHandler
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           	psect	text54
 12760  005320                     __ptext54:
 12761                           	opt stack 0
 12762  005320                     _getsUSBUSART:
 12763                           	opt stack 16
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;incstack = 0
 12770  005320  6B98               	clrf	_cdc_rx_len& (0+255),b
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 12774  005322  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12775  005324  117C               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 12776  005326  E009               	bz	l1785
 12777                           
 12778                           ; BSR set to: 0
 12779  005328  C07B  FFD9         	movff	_CDCDataOutHandle,fsr2l
 12780  00532C  C07C  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 12781  005330  0E01               	movlw	1
 12782  005332  AEDF               	btfss	indf2,7,c
 12783  005334  0E00               	movlw	0
 12784  005336  6FC4               	movwf	_getsUSBUSART$5532& (0+255),b
 12785  005338  D001               	goto	L21
 12786  00533A                     l1785:
 12787                           
 12788                           ; BSR set to: 0
 12789  00533A  6BC4               	clrf	_getsUSBUSART$5532& (0+255),b
 12790  00533C                     L21:
 12791  00533C  6BC5               	clrf	(_getsUSBUSART$5532+1)& (0+255),b
 12792                           
 12793                           ; BSR set to: 0
 12794  00533E  51C4               	movf	_getsUSBUSART$5532& (0+255),w,b
 12795  005340  11C5               	iorwf	(_getsUSBUSART$5532+1)& (0+255),w,b
 12796  005342  E134               	bnz	l9587
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;usb_device_cdc.c: 437: {
 12800                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 12801  005344  EE20 F001          	lfsr	2,1
 12802  005348  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12803  00534A  26D9               	addwf	fsr2l,f,c
 12804  00534C  517C               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12805  00534E  22DA               	addwfc	fsr2h,f,c
 12806  005350  51C2               	movf	getsUSBUSART@len& (0+255),w,b
 12807  005352  5CDE               	subwf	postinc2,w,c
 12808  005354  E208               	bc	l9577
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 12812  005356  EE20 F001          	lfsr	2,1
 12813  00535A  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12814  00535C  26D9               	addwf	fsr2l,f,c
 12815  00535E  517C               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12816  005360  22DA               	addwfc	fsr2h,f,c
 12817  005362  50DF               	movf	indf2,w,c
 12818  005364  6FC2               	movwf	getsUSBUSART@len& (0+255),b
 12819  005366                     l9577:
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 12823  005366  6B98               	clrf	_cdc_rx_len& (0+255),b
 12824  005368  D00F               	goto	l9583
 12825  00536A                     l9579:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 12829  00536A  0E40               	movlw	64
 12830  00536C  2598               	addwf	_cdc_rx_len& (0+255),w,b
 12831  00536E  6ED9               	movwf	fsr2l,c
 12832  005370  6ADA               	clrf	fsr2h,c
 12833  005372  0E05               	movlw	5
 12834  005374  22DA               	addwfc	fsr2h,f,c
 12835  005376  5198               	movf	_cdc_rx_len& (0+255),w,b
 12836  005378  25C0               	addwf	getsUSBUSART@buffer& (0+255),w,b
 12837  00537A  6EE1               	movwf	fsr1l,c
 12838  00537C  0E00               	movlw	0
 12839  00537E  21C1               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 12840  005380  6EE2               	movwf	fsr1h,c
 12841  005382  CFDF FFE7          	movff	indf2,indf1
 12842                           
 12843                           ; BSR set to: 0
 12844  005386  2B98               	incf	_cdc_rx_len& (0+255),f,b
 12845  005388                     l9583:
 12846                           
 12847                           ; BSR set to: 0
 12848  005388  51C2               	movf	getsUSBUSART@len& (0+255),w,b
 12849  00538A  5D98               	subwf	_cdc_rx_len& (0+255),w,b
 12850  00538C  E3EE               	bnc	l9579
 12851                           
 12852                           ; BSR set to: 0
 12853                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12854  00538E  0E00               	movlw	0
 12855  005390  6FB9               	movwf	USBTransferOnePacket@dir& (0+255),b
 12856  005392  0E40               	movlw	64
 12857  005394  6FBA               	movwf	USBTransferOnePacket@data& (0+255),b
 12858  005396  0E05               	movlw	5
 12859  005398  6FBB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12860  00539A  0E40               	movlw	64
 12861  00539C  6FBC               	movwf	USBTransferOnePacket@len& (0+255),b
 12862  00539E  0E02               	movlw	2
 12863  0053A0  ECC0  F02A         	call	_USBTransferOnePacket
 12864  0053A4  C0B9  F07B         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12865  0053A8  C0BA  F07C         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12866  0053AC                     l9587:
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;usb_device_cdc.c: 457: }
 12870                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 12871  0053AC  5198               	movf	_cdc_rx_len& (0+255),w,b
 12872                           
 12873                           ; BSR set to: 0
 12874  0053AE  0012               	return		;funcret
 12875  0053B0                     __end_of_getsUSBUSART:
 12876                           	opt stack 0
 12877                           tblptru	equ	0xFF8
 12878                           tblptrh	equ	0xFF7
 12879                           tblptrl	equ	0xFF6
 12880                           tablat	equ	0xFF5
 12881                           prodh	equ	0xFF4
 12882                           prodl	equ	0xFF3
 12883                           intcon	equ	0xFF2
 12884                           postinc0	equ	0xFEE
 12885                           wreg	equ	0xFE8
 12886                           indf1	equ	0xFE7
 12887                           postdec1	equ	0xFE5
 12888                           fsr1h	equ	0xFE2
 12889                           fsr1l	equ	0xFE1
 12890                           indf2	equ	0xFDF
 12891                           postinc2	equ	0xFDE
 12892                           postdec2	equ	0xFDD
 12893                           fsr2h	equ	0xFDA
 12894                           fsr2l	equ	0xFD9
 12895                           status	equ	0xFD8
 12896                           
 12897 ;; *************** function _USBapp_getrxByteFlag *****************
 12898 ;; Defined at:
 12899 ;;		line 231 in file "../Includes/Board/USBapp.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;		None
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      unsigned char 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12913 ;;      Params:         0       0       0       0       0       0       0       0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12916 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12917 ;;Total ram usage:        0 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:   11
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_USBapp_DeviceCdcEmulatorHandler
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text55
 12928  00425C                     __ptext55:
 12929                           	opt stack 0
 12930  00425C                     _USBapp_getrxByteFlag:
 12931                           	opt stack 17
 12932                           
 12933                           ;USBapp.c: 233: return rxByteFlag;
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;incstack = 0
 12937  00425C  502A               	movf	_rxByteFlag,w,c	;volatile
 12938  00425E  0012               	return		;funcret
 12939  004260                     __end_of_USBapp_getrxByteFlag:
 12940                           	opt stack 0
 12941                           tblptru	equ	0xFF8
 12942                           tblptrh	equ	0xFF7
 12943                           tblptrl	equ	0xFF6
 12944                           tablat	equ	0xFF5
 12945                           prodh	equ	0xFF4
 12946                           prodl	equ	0xFF3
 12947                           intcon	equ	0xFF2
 12948                           postinc0	equ	0xFEE
 12949                           wreg	equ	0xFE8
 12950                           indf1	equ	0xFE7
 12951                           postdec1	equ	0xFE5
 12952                           fsr1h	equ	0xFE2
 12953                           fsr1l	equ	0xFE1
 12954                           indf2	equ	0xFDF
 12955                           postinc2	equ	0xFDE
 12956                           postdec2	equ	0xFDD
 12957                           fsr2h	equ	0xFDA
 12958                           fsr2l	equ	0xFD9
 12959                           status	equ	0xFD8
 12960                           
 12961 ;; *************** function _MOTEapp_setResponseReady *****************
 12962 ;; Defined at:
 12963 ;;		line 946 in file "../Includes/Board/MOTEapp.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;		None
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  1    wreg      void 
 12970 ;; Registers used:
 12971 ;;		None
 12972 ;; Tracked objects:
 12973 ;;		On entry : F/0
 12974 ;;		On exit  : F/0
 12975 ;;		Unchanged: F/0
 12976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12977 ;;      Params:         0       0       0       0       0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12980 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12981 ;;Total ram usage:        0 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:   11
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_USBapp_DeviceCdcEmulatorHandler
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text56
 12992  001004                     __ptext56:
 12993                           	opt stack 0
 12994  001004                     _MOTEapp_setResponseReady:
 12995                           	opt stack 17
 12996                           
 12997                           ; BSR set to: 0
 12998                           
 12999                           ;incstack = 0
 13000  001004  0012               	return		;funcret
 13001  001006                     __end_of_MOTEapp_setResponseReady:
 13002                           	opt stack 0
 13003                           tblptru	equ	0xFF8
 13004                           tblptrh	equ	0xFF7
 13005                           tblptrl	equ	0xFF6
 13006                           tablat	equ	0xFF5
 13007                           prodh	equ	0xFF4
 13008                           prodl	equ	0xFF3
 13009                           intcon	equ	0xFF2
 13010                           postinc0	equ	0xFEE
 13011                           wreg	equ	0xFE8
 13012                           indf1	equ	0xFE7
 13013                           postdec1	equ	0xFE5
 13014                           fsr1h	equ	0xFE2
 13015                           fsr1l	equ	0xFE1
 13016                           indf2	equ	0xFDF
 13017                           postinc2	equ	0xFDE
 13018                           postdec2	equ	0xFDD
 13019                           fsr2h	equ	0xFDA
 13020                           fsr2l	equ	0xFD9
 13021                           status	equ	0xFD8
 13022                           
 13023 ;; *************** function _EUSART_Write *****************
 13024 ;; Defined at:
 13025 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  txData          1    wreg     unsigned char 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;  txData          1    0[BANK0 ] unsigned char 
 13030 ;; Return value:  Size  Location     Type
 13031 ;;                  1    wreg      void 
 13032 ;; Registers used:
 13033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13034 ;; Tracked objects:
 13035 ;;		On entry : 0/0
 13036 ;;		On exit  : 0/0
 13037 ;;		Unchanged: 0/0
 13038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13039 ;;      Params:         0       0       0       0       0       0       0       0       0
 13040 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13042 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13043 ;;Total ram usage:        1 bytes
 13044 ;; Hardware stack levels used:    1
 13045 ;; Hardware stack levels required when called:   11
 13046 ;; This function calls:
 13047 ;;		Nothing
 13048 ;; This function is called by:
 13049 ;;		_EndLine
 13050 ;;		_sendCommand
 13051 ;;		_sendDataCommand
 13052 ;;		_USBapp_DeviceCdcEmulatorHandler
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           	psect	text57
 13057  004732                     __ptext57:
 13058                           	opt stack 0
 13059  004732                     _EUSART_Write:
 13060                           	opt stack 15
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;incstack = 0
 13064                           ;EUSART_Write@txData stored from wreg
 13065  004732  0100               	movlb	0	; () banked
 13066  004734  6FB9               	movwf	EUSART_Write@txData& (0+255),b
 13067  004736                     l8719:
 13068  004736  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 13069  004738  E0FE               	bz	l8719
 13070                           
 13071                           ;eusart.c: 143: }
 13072                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 13073  00473A  B89D               	btfsc	3997,4,c	;volatile
 13074  00473C  D003               	goto	l953
 13075                           
 13076                           ;eusart.c: 146: {
 13077                           ;eusart.c: 147: TXREG = txData;
 13078  00473E  C0B9  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 13079                           
 13080                           ;eusart.c: 148: }
 13081  004742  D00F               	goto	l8733
 13082  004744                     l953:
 13083                           
 13084                           ;eusart.c: 149: else
 13085                           ;eusart.c: 150: {
 13086                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 13087  004744  989D               	bcf	3997,4,c	;volatile
 13088                           
 13089                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 13090  004746  0E40               	movlw	low _eusartTxBuffer
 13091  004748  2427               	addwf	_eusartTxHead,w,c
 13092  00474A  6ED9               	movwf	fsr2l,c
 13093  00474C  6ADA               	clrf	fsr2h,c
 13094  00474E  0E02               	movlw	high _eusartTxBuffer
 13095  004750  22DA               	addwfc	fsr2h,f,c
 13096  004752  C0B9  FFDF         	movff	EUSART_Write@txData,indf2
 13097  004756  2A27               	incf	_eusartTxHead,f,c
 13098                           
 13099                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 13100  004758  0E3F               	movlw	63
 13101  00475A  6427               	cpfsgt	_eusartTxHead,c
 13102  00475C  D001               	goto	l8731
 13103                           
 13104                           ;eusart.c: 154: {
 13105                           ;eusart.c: 155: eusartTxHead = 0;
 13106  00475E  6A27               	clrf	_eusartTxHead,c
 13107  004760                     l8731:
 13108                           
 13109                           ;eusart.c: 156: }
 13110                           ;eusart.c: 157: eusartTxBufferRemaining--;
 13111  004760  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 13112  004762                     l8733:
 13113                           
 13114                           ;eusart.c: 158: }
 13115                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 13116  004762  889D               	bsf	3997,4,c	;volatile
 13117  004764  0012               	return		;funcret
 13118  004766                     __end_of_EUSART_Write:
 13119                           	opt stack 0
 13120                           tblptru	equ	0xFF8
 13121                           tblptrh	equ	0xFF7
 13122                           tblptrl	equ	0xFF6
 13123                           tablat	equ	0xFF5
 13124                           prodh	equ	0xFF4
 13125                           prodl	equ	0xFF3
 13126                           intcon	equ	0xFF2
 13127                           postinc0	equ	0xFEE
 13128                           wreg	equ	0xFE8
 13129                           indf1	equ	0xFE7
 13130                           postdec1	equ	0xFE5
 13131                           fsr1h	equ	0xFE2
 13132                           fsr1l	equ	0xFE1
 13133                           indf2	equ	0xFDF
 13134                           postinc2	equ	0xFDE
 13135                           postdec2	equ	0xFDD
 13136                           fsr2h	equ	0xFDA
 13137                           fsr2l	equ	0xFD9
 13138                           status	equ	0xFD8
 13139                           
 13140 ;; *************** function _EUSART_Read *****************
 13141 ;; Defined at:
 13142 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;		None
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  readValue       1    0[BANK0 ] unsigned char 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  1    wreg      unsigned char 
 13149 ;; Registers used:
 13150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : F/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13156 ;;      Params:         0       0       0       0       0       0       0       0       0
 13157 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13159 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13160 ;;Total ram usage:        1 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:   11
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_MOTEapp_getModemResponse
 13167 ;;		_USBapp_DeviceCdcEmulatorHandler
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           	psect	text58
 13172  004704                     __ptext58:
 13173                           	opt stack 0
 13174  004704                     _EUSART_Read:
 13175                           	opt stack 14
 13176                           
 13177                           ;eusart.c: 121: while(0 == eusartRxCount)
 13178                           
 13179                           ;incstack = 0
 13180  004704  D001               	goto	l8737
 13181  004706                     l944:
 13182                           
 13183                           ;eusart.c: 122: {
 13184                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 13185  004706  8E89               	bsf	3977,7,c	;volatile
 13186  004708                     l8737:
 13187  004708  5023               	movf	_eusartRxCount,w,c	;volatile
 13188  00470A  E0FD               	bz	l944
 13189                           
 13190                           ;eusart.c: 124: }
 13191                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 13192  00470C  9A9D               	bcf	3997,5,c	;volatile
 13193                           
 13194                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 13195  00470E  0E00               	movlw	low _eusartRxBuffer
 13196  004710  2425               	addwf	_eusartRxTail,w,c
 13197  004712  6ED9               	movwf	fsr2l,c
 13198  004714  6ADA               	clrf	fsr2h,c
 13199  004716  0E02               	movlw	high _eusartRxBuffer
 13200  004718  22DA               	addwfc	fsr2h,f,c
 13201  00471A  50DF               	movf	indf2,w,c
 13202  00471C  0100               	movlb	0	; () banked
 13203  00471E  6FB9               	movwf	EUSART_Read@readValue& (0+255),b
 13204                           
 13205                           ; BSR set to: 0
 13206  004720  2A25               	incf	_eusartRxTail,f,c
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 13210  004722  0E3F               	movlw	63
 13211  004724  6425               	cpfsgt	_eusartRxTail,c
 13212  004726  D001               	goto	l8747
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;eusart.c: 130: {
 13216                           ;eusart.c: 131: eusartRxTail = 0;
 13217  004728  6A25               	clrf	_eusartRxTail,c
 13218  00472A                     l8747:
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;eusart.c: 132: }
 13222                           ;eusart.c: 133: eusartRxCount--;
 13223  00472A  0623               	decf	_eusartRxCount,f,c	;volatile
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 13227  00472C  8A9D               	bsf	3997,5,c	;volatile
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;eusart.c: 136: return readValue;
 13231  00472E  51B9               	movf	EUSART_Read@readValue& (0+255),w,b
 13232                           
 13233                           ; BSR set to: 0
 13234  004730  0012               	return		;funcret
 13235  004732                     __end_of_EUSART_Read:
 13236                           	opt stack 0
 13237                           tblptru	equ	0xFF8
 13238                           tblptrh	equ	0xFF7
 13239                           tblptrl	equ	0xFF6
 13240                           tablat	equ	0xFF5
 13241                           prodh	equ	0xFF4
 13242                           prodl	equ	0xFF3
 13243                           intcon	equ	0xFF2
 13244                           postinc0	equ	0xFEE
 13245                           wreg	equ	0xFE8
 13246                           indf1	equ	0xFE7
 13247                           postdec1	equ	0xFE5
 13248                           fsr1h	equ	0xFE2
 13249                           fsr1l	equ	0xFE1
 13250                           indf2	equ	0xFDF
 13251                           postinc2	equ	0xFDE
 13252                           postdec2	equ	0xFDD
 13253                           fsr2h	equ	0xFDA
 13254                           fsr2l	equ	0xFD9
 13255                           status	equ	0xFD8
 13256                           
 13257 ;; *************** function _CDCTxService *****************
 13258 ;; Defined at:
 13259 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;		None
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 13264 ;;  i               1    9[BANK0 ] unsigned char 
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : F/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0
 13275 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13277 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13278 ;;Total ram usage:        4 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:   12
 13281 ;; This function calls:
 13282 ;;		_USBTransferOnePacket
 13283 ;; This function is called by:
 13284 ;;		_USBapp_DeviceCdcEmulatorHandler
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text59
 13289  006170                     __ptext59:
 13290                           	opt stack 0
 13291  006170                     _CDCTxService:
 13292                           	opt stack 16
 13293                           
 13294                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 13295                           ;usb_device_cdc.c: 786: uint8_t i;
 13296                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;incstack = 0
 13300  006170  94A3               	bcf	4003,2,c	;volatile
 13301                           
 13302                           ;usb_device_cdc.c: 790: {};
 13303                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 13304  006172  0100               	movlb	0	; () banked
 13305  006174  5179               	movf	_CDCDataInHandle& (0+255),w,b
 13306  006176  117A               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13307  006178  E009               	bz	l1815
 13308                           
 13309                           ; BSR set to: 0
 13310  00617A  C079  FFD9         	movff	_CDCDataInHandle,fsr2l
 13311  00617E  C07A  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13312  006182  0E01               	movlw	1
 13313  006184  AEDF               	btfss	indf2,7,c
 13314  006186  0E00               	movlw	0
 13315  006188  6FC0               	movwf	_CDCTxService$5580& (0+255),b
 13316  00618A  D001               	goto	L22
 13317  00618C                     l1815:
 13318                           
 13319                           ; BSR set to: 0
 13320  00618C  6BC0               	clrf	_CDCTxService$5580& (0+255),b
 13321  00618E                     L22:
 13322  00618E  6BC1               	clrf	(_CDCTxService$5580+1)& (0+255),b
 13323                           
 13324                           ; BSR set to: 0
 13325  006190  51C0               	movf	_CDCTxService$5580& (0+255),w,b
 13326  006192  11C1               	iorwf	(_CDCTxService$5580+1)& (0+255),w,b
 13327  006194  E002               	bz	l9619
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;usb_device_cdc.c: 793: {
 13331                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 13332  006196  84A3               	bsf	4003,2,c	;volatile
 13333                           
 13334                           ;usb_device_cdc.c: 795: return;
 13335  006198  0012               	return	
 13336  00619A                     l9619:
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;usb_device_cdc.c: 796: }
 13340                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 13341  00619A  0E03               	movlw	3
 13342  00619C  1820               	xorwf	_cdc_trf_state,w,c
 13343  00619E  E101               	bnz	l9623
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 13347  0061A0  6A20               	clrf	_cdc_trf_state,c
 13348  0061A2                     l9623:
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 13352  0061A2  5020               	movf	_cdc_trf_state,w,c
 13353  0061A4  E102               	bnz	l9627
 13354                           
 13355                           ; BSR set to: 0
 13356                           ;usb_device_cdc.c: 810: {
 13357                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 13358  0061A6  84A3               	bsf	4003,2,c	;volatile
 13359                           
 13360                           ;usb_device_cdc.c: 812: return;
 13361  0061A8  0012               	return	
 13362  0061AA                     l9627:
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;usb_device_cdc.c: 813: }
 13366                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 13367  0061AA  0E02               	movlw	2
 13368  0061AC  1820               	xorwf	_cdc_trf_state,w,c
 13369  0061AE  E110               	bnz	l9633
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;usb_device_cdc.c: 819: {
 13373                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13374  0061B0  0E01               	movlw	1
 13375  0061B2  6FB9               	movwf	USBTransferOnePacket@dir& (0+255),b
 13376  0061B4  0E00               	movlw	0
 13377  0061B6  6FBA               	movwf	USBTransferOnePacket@data& (0+255),b
 13378  0061B8  6FBB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13379  0061BA  6FBC               	movwf	USBTransferOnePacket@len& (0+255),b
 13380  0061BC  0E02               	movlw	2
 13381  0061BE  ECC0  F02A         	call	_USBTransferOnePacket
 13382  0061C2  C0B9  F079         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13383  0061C6  C0BA  F07A         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 13387  0061CA  0E03               	movlw	3
 13388  0061CC  6E20               	movwf	_cdc_trf_state,c
 13389                           
 13390                           ;usb_device_cdc.c: 823: }
 13391  0061CE  D04E               	goto	l9677
 13392  0061D0                     l9633:
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 13396  0061D0  0420               	decf	_cdc_trf_state,w,c
 13397  0061D2  E14C               	bnz	l9677
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;usb_device_cdc.c: 825: {
 13401                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 13402  0061D4  0E40               	movlw	64
 13403  0061D6  6599               	cpfsgt	_cdc_tx_len& (0+255),b
 13404  0061D8  D002               	goto	l1824
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 13408  0061DA  6FC3               	movwf	CDCTxService@byte_to_send& (0+255),b
 13409  0061DC  D002               	goto	l9639
 13410  0061DE                     l1824:
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;usb_device_cdc.c: 831: else
 13414                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 13415  0061DE  C099  F0C3         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13416  0061E2                     l9639:
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 13420  0061E2  51C3               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13421  0061E4  5F99               	subwf	_cdc_tx_len& (0+255),f,b
 13422                           
 13423                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13424  0061E6  0E00               	movlw	0
 13425  0061E8  6F70               	movwf	_pCDCDst& (0+255),b
 13426  0061EA  0E05               	movlw	5
 13427  0061EC  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;usb_device_cdc.c: 841: i = byte_to_send;
 13431  0061EE  C0C3  F0C2         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 13435  0061F2  5197               	movf	_cdc_mem_type& (0+255),w,b
 13436  0061F4  E010               	bz	l9655
 13437  0061F6  D021               	goto	l9665
 13438  0061F8                     l9647:
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;usb_device_cdc.c: 845: {
 13442                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 13443  0061F8  C073  FFD9         	movff	_pCDCSrc,fsr2l
 13444  0061FC  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 13445  006200  C070  FFE1         	movff	_pCDCDst,fsr1l
 13446  006204  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 13447  006208  CFDF FFE7          	movff	indf2,indf1
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 13451  00620C  4B70               	infsnz	_pCDCDst& (0+255),f,b
 13452  00620E  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 13456  006210  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 13457  006212  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;usb_device_cdc.c: 849: i--;
 13461  006214  07C2               	decf	CDCTxService@i& (0+255),f,b
 13462  006216                     l9655:
 13463                           
 13464                           ; BSR set to: 0
 13465  006216  51C2               	movf	CDCTxService@i& (0+255),w,b
 13466  006218  E012               	bz	l9667
 13467  00621A  D7EE               	goto	l9647
 13468  00621C                     l9657:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;usb_device_cdc.c: 855: {
 13472                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 13473  00621C  C073  FFD9         	movff	_pCDCSrc,fsr2l
 13474  006220  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 13475  006224  C070  FFE1         	movff	_pCDCDst,fsr1l
 13476  006228  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 13477  00622C  CFDF FFE7          	movff	indf2,indf1
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 13481  006230  4B70               	infsnz	_pCDCDst& (0+255),f,b
 13482  006232  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 13486  006234  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 13487  006236  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;usb_device_cdc.c: 859: i--;
 13491  006238  07C2               	decf	CDCTxService@i& (0+255),f,b
 13492  00623A                     l9665:
 13493                           
 13494                           ; BSR set to: 0
 13495  00623A  51C2               	movf	CDCTxService@i& (0+255),w,b
 13496  00623C  E1EF               	bnz	l9657
 13497  00623E                     l9667:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;usb_device_cdc.c: 860: }
 13501                           ;usb_device_cdc.c: 861: }
 13502                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 13503  00623E  5199               	movf	_cdc_tx_len& (0+255),w,b
 13504  006240  E106               	bnz	l9675
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;usb_device_cdc.c: 868: {
 13508                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 13509  006242  0E40               	movlw	64
 13510  006244  19C3               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 13514  006246  0E02               	movlw	2
 13515  006248  A4D8               	btfss	status,2,c
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;usb_device_cdc.c: 871: else
 13519                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 13520  00624A  0E03               	movlw	3
 13521  00624C  6E20               	movwf	_cdc_trf_state,c
 13522  00624E                     l9675:
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;usb_device_cdc.c: 873: }
 13526                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13527  00624E  0E01               	movlw	1
 13528  006250  6FB9               	movwf	USBTransferOnePacket@dir& (0+255),b
 13529  006252  0E00               	movlw	0
 13530  006254  6FBA               	movwf	USBTransferOnePacket@data& (0+255),b
 13531  006256  0E05               	movlw	5
 13532  006258  6FBB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13533  00625A  C0C3  F0BC         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13534  00625E  0E02               	movlw	2
 13535  006260  ECC0  F02A         	call	_USBTransferOnePacket
 13536  006264  C0B9  F079         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13537  006268  C0BA  F07A         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13538  00626C                     l9677:
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;usb_device_cdc.c: 876: }
 13542                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 13543  00626C  84A3               	bsf	4003,2,c	;volatile
 13544                           
 13545                           ; BSR set to: 0
 13546  00626E  0012               	return		;funcret
 13547  006270                     __end_of_CDCTxService:
 13548                           	opt stack 0
 13549                           tblptru	equ	0xFF8
 13550                           tblptrh	equ	0xFF7
 13551                           tblptrl	equ	0xFF6
 13552                           tablat	equ	0xFF5
 13553                           prodh	equ	0xFF4
 13554                           prodl	equ	0xFF3
 13555                           intcon	equ	0xFF2
 13556                           postinc0	equ	0xFEE
 13557                           wreg	equ	0xFE8
 13558                           indf1	equ	0xFE7
 13559                           postdec1	equ	0xFE5
 13560                           fsr1h	equ	0xFE2
 13561                           fsr1l	equ	0xFE1
 13562                           indf2	equ	0xFDF
 13563                           postinc2	equ	0xFDE
 13564                           postdec2	equ	0xFDD
 13565                           fsr2h	equ	0xFDA
 13566                           fsr2l	equ	0xFD9
 13567                           status	equ	0xFD8
 13568                           
 13569 ;; *************** function _USBTransferOnePacket *****************
 13570 ;; Defined at:
 13571 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 13572 ;; Parameters:    Size  Location     Type
 13573 ;;  ep              1    wreg     unsigned char 
 13574 ;;  dir             1    0[BANK0 ] unsigned char 
 13575 ;;  data            2    1[BANK0 ] PTR unsigned char 
 13576 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 13577 ;;  len             1    3[BANK0 ] unsigned char 
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;  ep              1    4[BANK0 ] unsigned char 
 13580 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 13581 ;;		 -> BDT(48), NULL(0), 
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  2    0[BANK0 ] PTR void 
 13584 ;; Registers used:
 13585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13586 ;; Tracked objects:
 13587 ;;		On entry : F/0
 13588 ;;		On exit  : F/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13591 ;;      Params:         0       4       0       0       0       0       0       0       0
 13592 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13594 ;;      Totals:         0       7       0       0       0       0       0       0       0
 13595 ;;Total ram usage:        7 bytes
 13596 ;; Hardware stack levels used:    1
 13597 ;; Hardware stack levels required when called:   11
 13598 ;; This function calls:
 13599 ;;		Nothing
 13600 ;; This function is called by:
 13601 ;;		_getsUSBUSART
 13602 ;;		_CDCTxService
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text60
 13607  005580                     __ptext60:
 13608                           	opt stack 0
 13609  005580                     _USBTransferOnePacket:
 13610                           	opt stack 16
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;incstack = 0
 13614                           ;USBTransferOnePacket@ep stored from wreg
 13615  005580  6FBD               	movwf	USBTransferOnePacket@ep& (0+255),b
 13616                           
 13617                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 13618                           ;usb_device.c: 762: if(dir != 0)
 13619  005582  0100               	movlb	0	; () banked
 13620  005584  51B9               	movf	USBTransferOnePacket@dir& (0+255),w,b
 13621  005586  E005               	bz	l9003
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;usb_device.c: 763: {
 13625                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 13626  005588  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13627  00558A  0D02               	mullw	2
 13628  00558C  50F3               	movf	prodl,w,c
 13629  00558E  0F0F               	addlw	low _pBDTEntryIn
 13630  005590  D004               	goto	L24
 13631  005592                     l9003:
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;usb_device.c: 767: else
 13635                           ;usb_device.c: 768: {
 13636                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 13637  005592  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13638  005594  0D02               	mullw	2
 13639  005596  50F3               	movf	prodl,w,c
 13640  005598  0F60               	addlw	low _pBDTEntryOut
 13641  00559A                     L24:
 13642  00559A  6ED9               	movwf	fsr2l,c
 13643  00559C  6ADA               	clrf	fsr2h,c
 13644  00559E  CFDE F0BE          	movff	postinc2,USBTransferOnePacket@handle
 13645  0055A2  CFDD F0BF          	movff	postdec2,USBTransferOnePacket@handle+1
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;usb_device.c: 771: }
 13649                           ;usb_device.c: 775: if(handle == 0)
 13650  0055A6  51BE               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13651  0055A8  11BF               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13652  0055AA  E103               	bnz	l9009
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;usb_device.c: 776: {
 13656                           ;usb_device.c: 777: return 0;
 13657  0055AC  6BB9               	clrf	?_USBTransferOnePacket& (0+255),b
 13658  0055AE  6BBA               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 13659  0055B0  0012               	return	
 13660  0055B2                     l9009:
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;usb_device.c: 778: }
 13664                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 13665  0055B2  EE20 F002          	lfsr	2,2
 13666  0055B6  51BE               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13667  0055B8  26D9               	addwf	fsr2l,f,c
 13668  0055BA  51BF               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13669  0055BC  22DA               	addwfc	fsr2h,f,c
 13670  0055BE  C0BA  FFDE         	movff	USBTransferOnePacket@data,postinc2
 13671  0055C2  C0BB  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 13672                           
 13673                           ;usb_device.c: 781: handle->CNT = len;
 13674  0055C6  EE20 F001          	lfsr	2,1
 13675  0055CA  51BE               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13676  0055CC  26D9               	addwf	fsr2l,f,c
 13677  0055CE  51BF               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13678  0055D0  22DA               	addwfc	fsr2h,f,c
 13679  0055D2  C0BC  FFDF         	movff	USBTransferOnePacket@len,indf2
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 13683  0055D6  C0BE  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13684  0055DA  C0BF  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13685  0055DE  0E40               	movlw	64
 13686  0055E0  16DF               	andwf	indf2,f,c
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 13690  0055E2  C0BE  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13691  0055E6  C0BF  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13692  0055EA  0E00               	movlw	0
 13693  0055EC  86DB               	bsf	plusw2,3,c
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 13697  0055EE  C0BE  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13698  0055F2  C0BF  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13699  0055F6  8EDB               	bsf	plusw2,7,c
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;usb_device.c: 787: if(dir != 0)
 13703  0055F8  51B9               	movf	USBTransferOnePacket@dir& (0+255),w,b
 13704  0055FA  E005               	bz	l9021
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;usb_device.c: 788: {
 13708                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 13709  0055FC  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13710  0055FE  0D02               	mullw	2
 13711  005600  50F3               	movf	prodl,w,c
 13712  005602  0F0F               	addlw	low _pBDTEntryIn
 13713  005604  D004               	goto	L25
 13714  005606                     l9021:
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;usb_device.c: 792: else
 13718                           ;usb_device.c: 793: {
 13719                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 13720  005606  51BD               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13721  005608  0D02               	mullw	2
 13722  00560A  50F3               	movf	prodl,w,c
 13723  00560C  0F60               	addlw	low _pBDTEntryOut
 13724  00560E                     L25:
 13725  00560E  6ED9               	movwf	fsr2l,c
 13726  005610  6ADA               	clrf	fsr2h,c
 13727  005612  0E04               	movlw	4
 13728  005614  1ADF               	xorwf	indf2,f,c
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;usb_device.c: 796: }
 13732                           ;usb_device.c: 797: return (void*)handle;
 13733  005616  C0BE  F0B9         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 13734  00561A  C0BF  F0BA         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 13735                           
 13736                           ; BSR set to: 0
 13737  00561E  0C04               	retlw	4	;funcret
 13738  005620                     __end_of_USBTransferOnePacket:
 13739                           	opt stack 0
 13740                           tblptru	equ	0xFF8
 13741                           tblptrh	equ	0xFF7
 13742                           tblptrl	equ	0xFF6
 13743                           tablat	equ	0xFF5
 13744                           prodh	equ	0xFF4
 13745                           prodl	equ	0xFF3
 13746                           intcon	equ	0xFF2
 13747                           postinc0	equ	0xFEE
 13748                           wreg	equ	0xFE8
 13749                           indf1	equ	0xFE7
 13750                           postdec1	equ	0xFE5
 13751                           fsr1h	equ	0xFE2
 13752                           fsr1l	equ	0xFE1
 13753                           indf2	equ	0xFDF
 13754                           postinc2	equ	0xFDE
 13755                           postdec2	equ	0xFDD
 13756                           plusw2	equ	0xFDB
 13757                           fsr2h	equ	0xFDA
 13758                           fsr2l	equ	0xFD9
 13759                           status	equ	0xFD8
 13760                           
 13761 ;; *************** function _USBDeviceInit *****************
 13762 ;; Defined at:
 13763 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;		None
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;  i               1    8[BANK0 ] unsigned char 
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  1    wreg      void 
 13770 ;; Registers used:
 13771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13772 ;; Tracked objects:
 13773 ;;		On entry : F/0
 13774 ;;		On exit  : F/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13777 ;;      Params:         0       0       0       0       0       0       0       0       0
 13778 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13780 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13781 ;;Total ram usage:        1 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; Hardware stack levels required when called:   12
 13784 ;; This function calls:
 13785 ;;		_memset
 13786 ;; This function is called by:
 13787 ;;		_main
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           	psect	text61
 13792  005B36                     __ptext61:
 13793                           	opt stack 0
 13794  005B36                     _USBDeviceInit:
 13795                           	opt stack 18
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;usb_device.c: 239: uint8_t i;
 13799                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;incstack = 0
 13803  005B36  94A3               	bcf	4003,2,c	;volatile
 13804                           
 13805                           ;usb_device.c: 244: {UEIR = 0;};
 13806  005B38  6A67               	clrf	3943,c	;volatile
 13807                           
 13808                           ;usb_device.c: 247: {UIR = 0;};
 13809  005B3A  6A65               	clrf	3941,c	;volatile
 13810                           
 13811                           ;usb_device.c: 250: UEP0 = 0;
 13812  005B3C  6A6A               	clrf	3946,c	;volatile
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 13816  005B3E  0E6B               	movlw	107
 13817  005B40  6FB9               	movwf	memset@p1& (0+255),b
 13818  005B42  0E0F               	movlw	15
 13819  005B44  6FBA               	movwf	(memset@p1+1)& (0+255),b
 13820  005B46  6BBC               	clrf	(memset@c+1)& (0+255),b
 13821  005B48  6BBB               	clrf	memset@c& (0+255),b
 13822  005B4A  6BBE               	clrf	(memset@n+1)& (0+255),b
 13823  005B4C  0E02               	movlw	2
 13824  005B4E  6FBD               	movwf	memset@n& (0+255),b
 13825  005B50  ECFF  F022         	call	_memset	;wreg free
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13829  005B54  0E16               	movlw	22
 13830  005B56  6E62               	movwf	3938,c	;volatile
 13831                           
 13832                           ; BSR set to: 0
 13833  005B58  0E9F               	movlw	159
 13834  005B5A  6E66               	movwf	3942,c	;volatile
 13835                           
 13836                           ; BSR set to: 0
 13837  005B5C  0E7B               	movlw	123
 13838  005B5E  6E64               	movwf	3940,c	;volatile
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;usb_device.c: 257: ;
 13842                           ;usb_device.c: 260: ;
 13843                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13844  005B60  6BC1               	clrf	USBDeviceInit@i& (0+255),b
 13845  005B62                     l10393:
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;usb_device.c: 264: {
 13849                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 13850  005B62  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13851  005B64  0D04               	mullw	4
 13852  005B66  0E00               	movlw	0
 13853  005B68  24F3               	addwf	prodl,w,c
 13854  005B6A  6ED9               	movwf	fsr2l,c
 13855  005B6C  0E04               	movlw	4
 13856  005B6E  20F4               	addwfc	prodh,w,c
 13857  005B70  6EDA               	movwf	fsr2h,c
 13858  005B72  6ADE               	clrf	postinc2,c
 13859  005B74  6ADE               	clrf	postinc2,c
 13860  005B76  6ADE               	clrf	postinc2,c
 13861  005B78  6ADD               	clrf	postdec2,c
 13862                           
 13863                           ; BSR set to: 0
 13864  005B7A  2BC1               	incf	USBDeviceInit@i& (0+255),f,b
 13865                           
 13866                           ; BSR set to: 0
 13867  005B7C  0E0B               	movlw	11
 13868  005B7E  65C1               	cpfsgt	USBDeviceInit@i& (0+255),b
 13869  005B80  D7F0               	goto	l10393
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;usb_device.c: 266: }
 13873                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 13874  005B82  8C60               	bsf	3936,6,c	;volatile
 13875                           
 13876                           ;usb_device.c: 272: UADDR = 0x00;
 13877  005B84  6A63               	clrf	3939,c	;volatile
 13878                           
 13879                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 13880  005B86  9860               	bcf	3936,4,c	;volatile
 13881                           
 13882                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 13883  005B88  9C60               	bcf	3936,6,c	;volatile
 13884                           
 13885                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 13886  005B8A  D005               	goto	l10407
 13887  005B8C                     l10399:
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;usb_device.c: 282: {
 13891                           ;usb_device.c: 283: (UIR &= 0xF7);
 13892  005B8C  9665               	bcf	3941,3,c	;volatile
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 13896  005B8E  6A0C               	clrf	_inPipes+3,c	;volatile
 13897                           
 13898                           ; BSR set to: 0
 13899                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 13900  005B90  6A04               	clrf	_outPipes+3,c	;volatile
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 13904  005B92  6A05               	clrf	_outPipes+4,c	;volatile
 13905  005B94  6A06               	clrf	_outPipes+5,c	;volatile
 13906  005B96                     l10407:
 13907                           
 13908                           ; BSR set to: 0
 13909  005B96  B665               	btfsc	3941,3,c	;volatile
 13910  005B98  D7F9               	goto	l10399
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;usb_device.c: 288: }
 13914                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 13915  005B9A  0E01               	movlw	1
 13916  005B9C  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13917                           
 13918                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 13919  005B9E  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 13923  005BA0  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 13927  005BA2  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 13931  005BA4  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 13935  005BA6  6BC1               	clrf	USBDeviceInit@i& (0+255),b
 13936  005BA8                     l10423:
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;usb_device.c: 302: {
 13940                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 13941  005BA8  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13942  005BAA  0D02               	mullw	2
 13943  005BAC  50F3               	movf	prodl,w,c
 13944  005BAE  0F0F               	addlw	low _pBDTEntryIn
 13945  005BB0  6ED9               	movwf	fsr2l,c
 13946  005BB2  6ADA               	clrf	fsr2h,c
 13947  005BB4  6ADE               	clrf	postinc2,c
 13948  005BB6  6ADD               	clrf	postdec2,c
 13949                           
 13950                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 13951  005BB8  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13952  005BBA  0D02               	mullw	2
 13953  005BBC  50F3               	movf	prodl,w,c
 13954  005BBE  0F60               	addlw	low _pBDTEntryOut
 13955  005BC0  6ED9               	movwf	fsr2l,c
 13956  005BC2  6ADA               	clrf	fsr2h,c
 13957  005BC4  6ADE               	clrf	postinc2,c
 13958  005BC6  6ADD               	clrf	postdec2,c
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 13962  005BC8  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13963  005BCA  0F6A               	addlw	low _ep_data_in
 13964  005BCC  6ED9               	movwf	fsr2l,c
 13965  005BCE  6ADA               	clrf	fsr2h,c
 13966  005BD0  6ADF               	clrf	indf2,c
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 13970  005BD2  51C1               	movf	USBDeviceInit@i& (0+255),w,b
 13971  005BD4  0F6D               	addlw	low _ep_data_out
 13972  005BD6  6ED9               	movwf	fsr2l,c
 13973  005BD8  6ADA               	clrf	fsr2h,c
 13974  005BDA  6ADF               	clrf	indf2,c
 13975                           
 13976                           ; BSR set to: 0
 13977  005BDC  2BC1               	incf	USBDeviceInit@i& (0+255),f,b
 13978                           
 13979                           ; BSR set to: 0
 13980  005BDE  0E02               	movlw	2
 13981  005BE0  65C1               	cpfsgt	USBDeviceInit@i& (0+255),b
 13982  005BE2  D7E2               	goto	l10423
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;usb_device.c: 307: }
 13986                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13987  005BE4  0E08               	movlw	8
 13988  005BE6  6E0F               	movwf	_pBDTEntryIn,c
 13989  005BE8  0E04               	movlw	4
 13990  005BEA  6E10               	movwf	_pBDTEntryIn+1,c
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 13994  005BEC  0E16               	movlw	22
 13995  005BEE  6E6A               	movwf	3946,c	;volatile
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13999  005BF0  0E04               	movlw	4
 14000  005BF2  0104               	movlb	4	; () banked
 14001  005BF4  6F03               	movwf	3,b	;volatile
 14002  005BF6  0E30               	movlw	48
 14003  005BF8  6F02               	movwf	2,b	;volatile
 14004                           
 14005                           ; BSR set to: 4
 14006                           ;usb_device.c: 315: BDT[0].CNT = 8;
 14007  005BFA  0E08               	movlw	8
 14008  005BFC  6F01               	movwf	1,b	;volatile
 14009                           
 14010                           ; BSR set to: 4
 14011                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 14012  005BFE  0E04               	movlw	4
 14013  005C00  6F00               	movwf	0,b	;volatile
 14014                           
 14015                           ; BSR set to: 4
 14016                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 14017  005C02  8F00               	bsf	0,7,b	;volatile
 14018                           
 14019                           ; BSR set to: 4
 14020                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 14021  005C04  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 14022                           
 14023                           ; BSR set to: 4
 14024                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 14025  005C06  0100               	movlb	0	; () banked
 14026  005C08  6B91               	clrf	_USBDeviceState& (0+255),b	;volatile
 14027                           
 14028                           ; BSR set to: 0
 14029  005C0A  0012               	return		;funcret
 14030  005C0C                     __end_of_USBDeviceInit:
 14031                           	opt stack 0
 14032                           tblptru	equ	0xFF8
 14033                           tblptrh	equ	0xFF7
 14034                           tblptrl	equ	0xFF6
 14035                           tablat	equ	0xFF5
 14036                           prodh	equ	0xFF4
 14037                           prodl	equ	0xFF3
 14038                           intcon	equ	0xFF2
 14039                           postinc0	equ	0xFEE
 14040                           wreg	equ	0xFE8
 14041                           indf1	equ	0xFE7
 14042                           postdec1	equ	0xFE5
 14043                           fsr1h	equ	0xFE2
 14044                           fsr1l	equ	0xFE1
 14045                           indf2	equ	0xFDF
 14046                           postinc2	equ	0xFDE
 14047                           postdec2	equ	0xFDD
 14048                           plusw2	equ	0xFDB
 14049                           fsr2h	equ	0xFDA
 14050                           fsr2l	equ	0xFD9
 14051                           status	equ	0xFD8
 14052                           
 14053 ;; *************** function _memset *****************
 14054 ;; Defined at:
 14055 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 14056 ;; Parameters:    Size  Location     Type
 14057 ;;  p1              2    0[BANK0 ] PTR void 
 14058 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14059 ;;  c               2    2[BANK0 ] int 
 14060 ;;  n               2    4[BANK0 ] unsigned int 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  p               2    6[BANK0 ] PTR unsigned char 
 14063 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  2    0[BANK0 ] PTR void 
 14066 ;; Registers used:
 14067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14068 ;; Tracked objects:
 14069 ;;		On entry : F/0
 14070 ;;		On exit  : F/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14073 ;;      Params:         0       6       0       0       0       0       0       0       0
 14074 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14076 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14077 ;;Total ram usage:        8 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; Hardware stack levels required when called:   11
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_USBDeviceInit
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text62
 14088  0045FE                     __ptext62:
 14089                           	opt stack 0
 14090  0045FE                     _memset:
 14091                           	opt stack 18
 14092                           
 14093                           ; BSR set to: 0
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;incstack = 0
 14097  0045FE  C0B9  F0BF         	movff	memset@p1,memset@p
 14098  004602  C0BA  F0C0         	movff	memset@p1+1,memset@p+1
 14099  004606  D008               	goto	l10359
 14100  004608                     l10355:
 14101                           
 14102                           ; BSR set to: 0
 14103  004608  C0BF  FFD9         	movff	memset@p,fsr2l
 14104  00460C  C0C0  FFDA         	movff	memset@p+1,fsr2h
 14105  004610  C0BB  FFDF         	movff	memset@c,indf2
 14106                           
 14107                           ; BSR set to: 0
 14108  004614  4BBF               	infsnz	memset@p& (0+255),f,b
 14109  004616  2BC0               	incf	(memset@p+1)& (0+255),f,b
 14110  004618                     l10359:
 14111                           
 14112                           ; BSR set to: 0
 14113  004618  07BD               	decf	memset@n& (0+255),f,b
 14114  00461A  A0D8               	btfss	status,0,c
 14115  00461C  07BE               	decf	(memset@n+1)& (0+255),f,b
 14116  00461E  29BD               	incf	memset@n& (0+255),w,b
 14117  004620  E1F3               	bnz	l10355
 14118  004622  29BE               	incf	(memset@n+1)& (0+255),w,b
 14119  004624  E1F1               	bnz	l10355
 14120                           
 14121                           ; BSR set to: 0
 14122  004626  0012               	return		;funcret
 14123  004628                     __end_of_memset:
 14124                           	opt stack 0
 14125                           tblptru	equ	0xFF8
 14126                           tblptrh	equ	0xFF7
 14127                           tblptrl	equ	0xFF6
 14128                           tablat	equ	0xFF5
 14129                           prodh	equ	0xFF4
 14130                           prodl	equ	0xFF3
 14131                           intcon	equ	0xFF2
 14132                           postinc0	equ	0xFEE
 14133                           wreg	equ	0xFE8
 14134                           indf1	equ	0xFE7
 14135                           postdec1	equ	0xFE5
 14136                           fsr1h	equ	0xFE2
 14137                           fsr1l	equ	0xFE1
 14138                           indf2	equ	0xFDF
 14139                           postinc2	equ	0xFDE
 14140                           postdec2	equ	0xFDD
 14141                           plusw2	equ	0xFDB
 14142                           fsr2h	equ	0xFDA
 14143                           fsr2l	equ	0xFD9
 14144                           status	equ	0xFD8
 14145                           
 14146 ;; *************** function _USBDeviceAttach *****************
 14147 ;; Defined at:
 14148 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;		None
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;		None
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  1    wreg      void 
 14155 ;; Registers used:
 14156 ;;		wreg, status,2
 14157 ;; Tracked objects:
 14158 ;;		On entry : F/0
 14159 ;;		On exit  : F/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14162 ;;      Params:         0       0       0       0       0       0       0       0       0
 14163 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14164 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14165 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14166 ;;Total ram usage:        0 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:   11
 14169 ;; This function calls:
 14170 ;;		Nothing
 14171 ;; This function is called by:
 14172 ;;		_main
 14173 ;; This function uses a non-reentrant model
 14174 ;;
 14175                           
 14176                           	psect	text63
 14177  0046AC                     __ptext63:
 14178                           	opt stack 0
 14179  0046AC                     _USBDeviceAttach:
 14180                           	opt stack 19
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;usb_device.c: 1050: {
 14184                           ;usb_device.c: 1051: if(1 == 1)
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;incstack = 0
 14188  0046AC  5191               	movf	_USBDeviceState& (0+255),w,b	;volatile
 14189  0046AE  A4D8               	btfss	status,2,c
 14190  0046B0  0012               	return	
 14191                           
 14192                           ; BSR set to: 0
 14193                           ;usb_device.c: 1052: {
 14194                           ;usb_device.c: 1054: UCON = 0;
 14195  0046B2  6A60               	clrf	3936,c	;volatile
 14196                           
 14197                           ;usb_device.c: 1057: UIE = 0;
 14198  0046B4  6A64               	clrf	3940,c	;volatile
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 14202  0046B6  0E16               	movlw	22
 14203  0046B8  6E62               	movwf	3938,c	;volatile
 14204  0046BA  0E9F               	movlw	159
 14205  0046BC  6E66               	movwf	3942,c	;volatile
 14206  0046BE  0E7B               	movlw	123
 14207  0046C0  6E64               	movwf	3940,c	;volatile
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 14211  0046C2  8ED0               	bsf	4048,7,c	;volatile
 14212                           
 14213                           ; BSR set to: 0
 14214  0046C4  84A5               	bsf	4005,2,c	;volatile
 14215                           
 14216                           ; BSR set to: 0
 14217  0046C6  84A3               	bsf	4003,2,c	;volatile
 14218                           
 14219                           ; BSR set to: 0
 14220  0046C8  8EF2               	bsf	intcon,7,c	;volatile
 14221                           
 14222                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 14223  0046CA  D001               	goto	l1520
 14224  0046CC                     l1521:
 14225                           
 14226                           ; BSR set to: 0
 14227  0046CC  8660               	bsf	3936,3,c	;volatile
 14228  0046CE                     l1520:
 14229                           
 14230                           ; BSR set to: 0
 14231  0046CE  A660               	btfss	3936,3,c	;volatile
 14232  0046D0  D7FD               	goto	l1521
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 14236  0046D2  0E01               	movlw	1
 14237  0046D4  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 14238                           
 14239                           ; BSR set to: 0
 14240  0046D6  0C01               	retlw	1	;funcret
 14241  0046D8                     __end_of_USBDeviceAttach:
 14242                           	opt stack 0
 14243                           tblptru	equ	0xFF8
 14244                           tblptrh	equ	0xFF7
 14245                           tblptrl	equ	0xFF6
 14246                           tablat	equ	0xFF5
 14247                           prodh	equ	0xFF4
 14248                           prodl	equ	0xFF3
 14249                           intcon	equ	0xFF2
 14250                           postinc0	equ	0xFEE
 14251                           wreg	equ	0xFE8
 14252                           indf1	equ	0xFE7
 14253                           postdec1	equ	0xFE5
 14254                           fsr1h	equ	0xFE2
 14255                           fsr1l	equ	0xFE1
 14256                           indf2	equ	0xFDF
 14257                           postinc2	equ	0xFDE
 14258                           postdec2	equ	0xFDD
 14259                           plusw2	equ	0xFDB
 14260                           fsr2h	equ	0xFDA
 14261                           fsr2l	equ	0xFD9
 14262                           status	equ	0xFD8
 14263                           
 14264 ;; *************** function _SYSTEM_Initialize *****************
 14265 ;; Defined at:
 14266 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;		None
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;		None
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  1    wreg      void 
 14273 ;; Registers used:
 14274 ;;		wreg, status,2, status,0, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14280 ;;      Params:         0       0       0       0       0       0       0       0       0
 14281 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14283 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14284 ;;Total ram usage:        0 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; Hardware stack levels required when called:   13
 14287 ;; This function calls:
 14288 ;;		_ADC_Initialize
 14289 ;;		_CMP1_Initialize
 14290 ;;		_EUSART_Initialize
 14291 ;;		_OSCILLATOR_Initialize
 14292 ;;		_PIN_MANAGER_Initialize
 14293 ;;		_SPI_Initialize
 14294 ;;		_TMR1_Initialize
 14295 ;;		_TMR2_Initialize
 14296 ;; This function is called by:
 14297 ;;		_main
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text64
 14302  004462                     __ptext64:
 14303                           	opt stack 0
 14304  004462                     _SYSTEM_Initialize:
 14305                           	opt stack 17
 14306                           
 14307                           ;mcc.c: 95: OSCILLATOR_Initialize();
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;incstack = 0
 14311  004462  ECC2  F021         	call	_OSCILLATOR_Initialize	;wreg free
 14312                           
 14313                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 14314  004466  EC36  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 14315                           
 14316                           ; BSR set to: 15
 14317                           ;mcc.c: 97: SPI_Initialize();
 14318  00446A  EC60  F021         	call	_SPI_Initialize	;wreg free
 14319                           
 14320                           ; BSR set to: 15
 14321                           ;mcc.c: 98: TMR1_Initialize();
 14322  00446E  EC40  F023         	call	_TMR1_Initialize	;wreg free
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;mcc.c: 99: TMR2_Initialize();
 14326  004472  EC6E  F021         	call	_TMR2_Initialize	;wreg free
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;mcc.c: 100: EUSART_Initialize();
 14330  004476  EC2A  F023         	call	_EUSART_Initialize	;wreg free
 14331                           
 14332                           ;mcc.c: 101: ADC_Initialize();
 14333  00447A  ECB7  F021         	call	_ADC_Initialize	;wreg free
 14334                           
 14335                           ;mcc.c: 102: CMP1_Initialize();
 14336  00447E  EF7E  F021         	goto	_CMP1_Initialize	;wreg free
 14337  004482                     __end_of_SYSTEM_Initialize:
 14338                           	opt stack 0
 14339                           tblptru	equ	0xFF8
 14340                           tblptrh	equ	0xFF7
 14341                           tblptrl	equ	0xFF6
 14342                           tablat	equ	0xFF5
 14343                           prodh	equ	0xFF4
 14344                           prodl	equ	0xFF3
 14345                           intcon	equ	0xFF2
 14346                           postinc0	equ	0xFEE
 14347                           wreg	equ	0xFE8
 14348                           indf1	equ	0xFE7
 14349                           postdec1	equ	0xFE5
 14350                           fsr1h	equ	0xFE2
 14351                           fsr1l	equ	0xFE1
 14352                           indf2	equ	0xFDF
 14353                           postinc2	equ	0xFDE
 14354                           postdec2	equ	0xFDD
 14355                           plusw2	equ	0xFDB
 14356                           fsr2h	equ	0xFDA
 14357                           fsr2l	equ	0xFD9
 14358                           status	equ	0xFD8
 14359                           
 14360 ;; *************** function _TMR2_Initialize *****************
 14361 ;; Defined at:
 14362 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;		None
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      void 
 14369 ;; Registers used:
 14370 ;;		wreg, status,2, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : F/0
 14373 ;;		On exit  : F/0
 14374 ;;		Unchanged: F/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14376 ;;      Params:         0       0       0       0       0       0       0       0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14379 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14380 ;;Total ram usage:        0 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:   12
 14383 ;; This function calls:
 14384 ;;		_TMR2_StartTimer
 14385 ;; This function is called by:
 14386 ;;		_SYSTEM_Initialize
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           	psect	text65
 14391  0042DC                     __ptext65:
 14392                           	opt stack 0
 14393  0042DC                     _TMR2_Initialize:
 14394                           	opt stack 17
 14395                           
 14396                           ; BSR set to: 0
 14397                           ;tmr2.c: 62: T2CON = 0x7A;
 14398                           
 14399                           ;incstack = 0
 14400  0042DC  0E7A               	movlw	122
 14401  0042DE  6EBA               	movwf	4026,c	;volatile
 14402                           
 14403                           ;tmr2.c: 65: PR2 = 0x9B;
 14404  0042E0  0E9B               	movlw	155
 14405  0042E2  6EBB               	movwf	4027,c	;volatile
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;tmr2.c: 68: TMR2 = 0x00;
 14409  0042E4  6ABC               	clrf	4028,c	;volatile
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 14413  0042E6  929E               	bcf	3998,1,c	;volatile
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;tmr2.c: 74: TMR2_StartTimer();
 14417  0042E8  EF2C  F021         	goto	_TMR2_StartTimer	;wreg free
 14418  0042EC                     __end_of_TMR2_Initialize:
 14419                           	opt stack 0
 14420                           tblptru	equ	0xFF8
 14421                           tblptrh	equ	0xFF7
 14422                           tblptrl	equ	0xFF6
 14423                           tablat	equ	0xFF5
 14424                           prodh	equ	0xFF4
 14425                           prodl	equ	0xFF3
 14426                           intcon	equ	0xFF2
 14427                           postinc0	equ	0xFEE
 14428                           wreg	equ	0xFE8
 14429                           indf1	equ	0xFE7
 14430                           postdec1	equ	0xFE5
 14431                           fsr1h	equ	0xFE2
 14432                           fsr1l	equ	0xFE1
 14433                           indf2	equ	0xFDF
 14434                           postinc2	equ	0xFDE
 14435                           postdec2	equ	0xFDD
 14436                           plusw2	equ	0xFDB
 14437                           fsr2h	equ	0xFDA
 14438                           fsr2l	equ	0xFD9
 14439                           status	equ	0xFD8
 14440                           
 14441 ;; *************** function _TMR2_StartTimer *****************
 14442 ;; Defined at:
 14443 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;		None
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		None
 14452 ;; Tracked objects:
 14453 ;;		On entry : F/0
 14454 ;;		On exit  : F/0
 14455 ;;		Unchanged: F/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14459 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14460 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14461 ;;Total ram usage:        0 bytes
 14462 ;; Hardware stack levels used:    1
 14463 ;; Hardware stack levels required when called:   11
 14464 ;; This function calls:
 14465 ;;		Nothing
 14466 ;; This function is called by:
 14467 ;;		_TMR2_Initialize
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text66
 14472  004258                     __ptext66:
 14473                           	opt stack 0
 14474  004258                     _TMR2_StartTimer:
 14475                           	opt stack 17
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 14479                           
 14480                           ; BSR set to: 0
 14481                           ;incstack = 0
 14482  004258  84BA               	bsf	4026,2,c	;volatile
 14483                           
 14484                           ; BSR set to: 0
 14485  00425A  0012               	return		;funcret
 14486  00425C                     __end_of_TMR2_StartTimer:
 14487                           	opt stack 0
 14488                           tblptru	equ	0xFF8
 14489                           tblptrh	equ	0xFF7
 14490                           tblptrl	equ	0xFF6
 14491                           tablat	equ	0xFF5
 14492                           prodh	equ	0xFF4
 14493                           prodl	equ	0xFF3
 14494                           intcon	equ	0xFF2
 14495                           postinc0	equ	0xFEE
 14496                           wreg	equ	0xFE8
 14497                           indf1	equ	0xFE7
 14498                           postdec1	equ	0xFE5
 14499                           fsr1h	equ	0xFE2
 14500                           fsr1l	equ	0xFE1
 14501                           indf2	equ	0xFDF
 14502                           postinc2	equ	0xFDE
 14503                           postdec2	equ	0xFDD
 14504                           plusw2	equ	0xFDB
 14505                           fsr2h	equ	0xFDA
 14506                           fsr2l	equ	0xFD9
 14507                           status	equ	0xFD8
 14508                           
 14509 ;; *************** function _TMR1_Initialize *****************
 14510 ;; Defined at:
 14511 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;		None
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;		None
 14516 ;; Return value:  Size  Location     Type
 14517 ;;                  1    wreg      void 
 14518 ;; Registers used:
 14519 ;;		wreg, status,2, status,0, cstack
 14520 ;; Tracked objects:
 14521 ;;		On entry : F/F
 14522 ;;		On exit  : F/0
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14525 ;;      Params:         0       0       0       0       0       0       0       0       0
 14526 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14527 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14528 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14529 ;;Total ram usage:        2 bytes
 14530 ;; Hardware stack levels used:    1
 14531 ;; Hardware stack levels required when called:   12
 14532 ;; This function calls:
 14533 ;;		_TMR1_StartTimer
 14534 ;; This function is called by:
 14535 ;;		_SYSTEM_Initialize
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           	psect	text67
 14540  004680                     __ptext67:
 14541                           	opt stack 0
 14542  004680                     _TMR1_Initialize:
 14543                           	opt stack 17
 14544                           
 14545                           ; BSR set to: 15
 14546                           ;tmr1.c: 68: T1CON = 0x00;
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;incstack = 0
 14550  004680  6ACD               	clrf	4045,c	;volatile
 14551                           
 14552                           ;tmr1.c: 71: T1GCON = 0x00;
 14553  004682  6ACC               	clrf	4044,c	;volatile
 14554                           
 14555                           ; BSR set to: 15
 14556                           ;tmr1.c: 74: TMR1H = 0xD0;
 14557  004684  0ED0               	movlw	208
 14558  004686  6ECF               	movwf	4047,c	;volatile
 14559                           
 14560                           ;tmr1.c: 77: TMR1L = 0x20;
 14561  004688  0E20               	movlw	32
 14562  00468A  6ECE               	movwf	4046,c	;volatile
 14563                           
 14564                           ; BSR set to: 15
 14565                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 14566  00468C  50CE               	movf	4046,w,c	;volatile
 14567  00468E  CFCF F0B9          	movff	4047,??_TMR1_Initialize	;volatile
 14568  004692  0100               	movlb	0	; () banked
 14569  004694  6BBA               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 14570  004696  C0B9  F0BA         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 14571  00469A  6BB9               	clrf	??_TMR1_Initialize& (0+255),b
 14572  00469C  11B9               	iorwf	??_TMR1_Initialize& (0+255),w,b
 14573  00469E  6F85               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 14574  0046A0  51BA               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 14575  0046A2  6F86               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 14576                           
 14577                           ; BSR set to: 0
 14578                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 14579  0046A4  909E               	bcf	3998,0,c	;volatile
 14580                           
 14581                           ; BSR set to: 0
 14582                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 14583  0046A6  809D               	bsf	3997,0,c	;volatile
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;tmr1.c: 89: TMR1_StartTimer();
 14587  0046A8  EF2A  F021         	goto	_TMR1_StartTimer	;wreg free
 14588  0046AC                     __end_of_TMR1_Initialize:
 14589                           	opt stack 0
 14590                           tblptru	equ	0xFF8
 14591                           tblptrh	equ	0xFF7
 14592                           tblptrl	equ	0xFF6
 14593                           tablat	equ	0xFF5
 14594                           prodh	equ	0xFF4
 14595                           prodl	equ	0xFF3
 14596                           intcon	equ	0xFF2
 14597                           postinc0	equ	0xFEE
 14598                           wreg	equ	0xFE8
 14599                           indf1	equ	0xFE7
 14600                           postdec1	equ	0xFE5
 14601                           fsr1h	equ	0xFE2
 14602                           fsr1l	equ	0xFE1
 14603                           indf2	equ	0xFDF
 14604                           postinc2	equ	0xFDE
 14605                           postdec2	equ	0xFDD
 14606                           plusw2	equ	0xFDB
 14607                           fsr2h	equ	0xFDA
 14608                           fsr2l	equ	0xFD9
 14609                           status	equ	0xFD8
 14610                           
 14611 ;; *************** function _TMR1_StartTimer *****************
 14612 ;; Defined at:
 14613 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 14614 ;; Parameters:    Size  Location     Type
 14615 ;;		None
 14616 ;; Auto vars:     Size  Location     Type
 14617 ;;		None
 14618 ;; Return value:  Size  Location     Type
 14619 ;;                  1    wreg      void 
 14620 ;; Registers used:
 14621 ;;		None
 14622 ;; Tracked objects:
 14623 ;;		On entry : F/0
 14624 ;;		On exit  : F/0
 14625 ;;		Unchanged: F/0
 14626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14627 ;;      Params:         0       0       0       0       0       0       0       0       0
 14628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14630 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14631 ;;Total ram usage:        0 bytes
 14632 ;; Hardware stack levels used:    1
 14633 ;; Hardware stack levels required when called:   11
 14634 ;; This function calls:
 14635 ;;		Nothing
 14636 ;; This function is called by:
 14637 ;;		_TMR1_Initialize
 14638 ;; This function uses a non-reentrant model
 14639 ;;
 14640                           
 14641                           	psect	text68
 14642  004254                     __ptext68:
 14643                           	opt stack 0
 14644  004254                     _TMR1_StartTimer:
 14645                           	opt stack 17
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;incstack = 0
 14652  004254  80CD               	bsf	4045,0,c	;volatile
 14653                           
 14654                           ; BSR set to: 0
 14655  004256  0012               	return		;funcret
 14656  004258                     __end_of_TMR1_StartTimer:
 14657                           	opt stack 0
 14658                           tblptru	equ	0xFF8
 14659                           tblptrh	equ	0xFF7
 14660                           tblptrl	equ	0xFF6
 14661                           tablat	equ	0xFF5
 14662                           prodh	equ	0xFF4
 14663                           prodl	equ	0xFF3
 14664                           intcon	equ	0xFF2
 14665                           postinc0	equ	0xFEE
 14666                           wreg	equ	0xFE8
 14667                           indf1	equ	0xFE7
 14668                           postdec1	equ	0xFE5
 14669                           fsr1h	equ	0xFE2
 14670                           fsr1l	equ	0xFE1
 14671                           indf2	equ	0xFDF
 14672                           postinc2	equ	0xFDE
 14673                           postdec2	equ	0xFDD
 14674                           plusw2	equ	0xFDB
 14675                           fsr2h	equ	0xFDA
 14676                           fsr2l	equ	0xFD9
 14677                           status	equ	0xFD8
 14678                           
 14679 ;; *************** function _SPI_Initialize *****************
 14680 ;; Defined at:
 14681 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 14682 ;; Parameters:    Size  Location     Type
 14683 ;;		None
 14684 ;; Auto vars:     Size  Location     Type
 14685 ;;		None
 14686 ;; Return value:  Size  Location     Type
 14687 ;;                  1    wreg      void 
 14688 ;; Registers used:
 14689 ;;		wreg, status,2
 14690 ;; Tracked objects:
 14691 ;;		On entry : F/F
 14692 ;;		On exit  : F/F
 14693 ;;		Unchanged: E/0
 14694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14695 ;;      Params:         0       0       0       0       0       0       0       0       0
 14696 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14698 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14699 ;;Total ram usage:        0 bytes
 14700 ;; Hardware stack levels used:    1
 14701 ;; Hardware stack levels required when called:   11
 14702 ;; This function calls:
 14703 ;;		Nothing
 14704 ;; This function is called by:
 14705 ;;		_SYSTEM_Initialize
 14706 ;; This function uses a non-reentrant model
 14707 ;;
 14708                           
 14709                           	psect	text69
 14710  0042C0                     __ptext69:
 14711                           	opt stack 0
 14712  0042C0                     _SPI_Initialize:
 14713                           	opt stack 18
 14714                           
 14715                           ; BSR set to: 15
 14716                           ;spi.c: 69: SSP1STAT = 0x00;
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;incstack = 0
 14720  0042C0  6AC7               	clrf	4039,c	;volatile
 14721                           
 14722                           ; BSR set to: 15
 14723                           ;spi.c: 72: SSP1CON1 = 0x21;
 14724  0042C2  0E21               	movlw	33
 14725  0042C4  6EC6               	movwf	4038,c	;volatile
 14726                           
 14727                           ; BSR set to: 15
 14728                           ;spi.c: 75: SSP1ADD = 0x00;
 14729  0042C6  6AC8               	clrf	4040,c	;volatile
 14730                           
 14731                           ; BSR set to: 15
 14732                           ;spi.c: 77: CKP = 1;
 14733  0042C8  88C6               	bsf	4038,4,c	;volatile
 14734                           
 14735                           ; BSR set to: 15
 14736                           ;spi.c: 78: CKE = 0;
 14737  0042CA  9CC7               	bcf	4039,6,c	;volatile
 14738                           
 14739                           ; BSR set to: 15
 14740  0042CC  0012               	return		;funcret
 14741  0042CE                     __end_of_SPI_Initialize:
 14742                           	opt stack 0
 14743                           tblptru	equ	0xFF8
 14744                           tblptrh	equ	0xFF7
 14745                           tblptrl	equ	0xFF6
 14746                           tablat	equ	0xFF5
 14747                           prodh	equ	0xFF4
 14748                           prodl	equ	0xFF3
 14749                           intcon	equ	0xFF2
 14750                           postinc0	equ	0xFEE
 14751                           wreg	equ	0xFE8
 14752                           indf1	equ	0xFE7
 14753                           postdec1	equ	0xFE5
 14754                           fsr1h	equ	0xFE2
 14755                           fsr1l	equ	0xFE1
 14756                           indf2	equ	0xFDF
 14757                           postinc2	equ	0xFDE
 14758                           postdec2	equ	0xFDD
 14759                           plusw2	equ	0xFDB
 14760                           fsr2h	equ	0xFDA
 14761                           fsr2l	equ	0xFD9
 14762                           status	equ	0xFD8
 14763                           
 14764 ;; *************** function _PIN_MANAGER_Initialize *****************
 14765 ;; Defined at:
 14766 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;		None
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;		None
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  1    wreg      void 
 14773 ;; Registers used:
 14774 ;;		None
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : F/F
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14780 ;;      Params:         0       0       0       0       0       0       0       0       0
 14781 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14782 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14783 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14784 ;;Total ram usage:        0 bytes
 14785 ;; Hardware stack levels used:    1
 14786 ;; Hardware stack levels required when called:   11
 14787 ;; This function calls:
 14788 ;;		Nothing
 14789 ;; This function is called by:
 14790 ;;		_moteApp_GoToSleep
 14791 ;;		_SYSTEM_Initialize
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           	psect	text70
 14796  004A6C                     __ptext70:
 14797                           	opt stack 0
 14798  004A6C                     _PIN_MANAGER_Initialize:
 14799                           	opt stack 16
 14800                           
 14801                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 14802                           
 14803                           ; BSR set to: 15
 14804                           ;incstack = 0
 14805  004A6C  8092               	bsf	3986,0,c	;volatile
 14806                           
 14807                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 14808  004A6E  8292               	bsf	3986,1,c	;volatile
 14809                           
 14810                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 14811  004A70  8492               	bsf	3986,2,c	;volatile
 14812                           
 14813                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 14814  004A72  8692               	bsf	3986,3,c	;volatile
 14815                           
 14816                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 14817  004A74  9892               	bcf	3986,4,c	;volatile
 14818                           
 14819                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 14820  004A76  9A92               	bcf	3986,5,c	;volatile
 14821                           
 14822                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 14823  004A78  9C92               	bcf	3986,6,c	;volatile
 14824                           
 14825                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 14826  004A7A  9E92               	bcf	3986,7,c	;volatile
 14827                           
 14828                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 14829  004A7C  9093               	bcf	3987,0,c	;volatile
 14830                           
 14831                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 14832  004A7E  9293               	bcf	3987,1,c	;volatile
 14833                           
 14834                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 14835  004A80  9493               	bcf	3987,2,c	;volatile
 14836                           
 14837                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 14838  004A82  9693               	bcf	3987,3,c	;volatile
 14839                           
 14840                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 14841  004A84  9A93               	bcf	3987,5,c	;volatile
 14842                           
 14843                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 14844  004A86  8094               	bsf	3988,0,c	;volatile
 14845                           
 14846                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 14847  004A88  8294               	bsf	3988,1,c	;volatile
 14848                           
 14849                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 14850  004A8A  8494               	bsf	3988,2,c	;volatile
 14851                           
 14852                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 14853  004A8C  9C94               	bcf	3988,6,c	;volatile
 14854                           
 14855                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 14856  004A8E  8E94               	bsf	3988,7,c	;volatile
 14857                           
 14858                           ;pin_manager.c: 75: TRISBbits.TRISB6 = 0;
 14859  004A90  9C93               	bcf	3987,6,c	;volatile
 14860                           
 14861                           ;pin_manager.c: 76: TRISBbits.TRISB7 = 1;
 14862  004A92  8E93               	bsf	3987,7,c	;volatile
 14863                           
 14864                           ;pin_manager.c: 79: LATAbits.LATA4 = 1;
 14865  004A94  8889               	bsf	3977,4,c	;volatile
 14866                           
 14867                           ;pin_manager.c: 80: LATAbits.LATA5 = 0;
 14868  004A96  9A89               	bcf	3977,5,c	;volatile
 14869                           
 14870                           ;pin_manager.c: 81: LATAbits.LATA6 = 0;
 14871  004A98  9C89               	bcf	3977,6,c	;volatile
 14872                           
 14873                           ;pin_manager.c: 82: LATAbits.LATA7 = 0;
 14874  004A9A  9E89               	bcf	3977,7,c	;volatile
 14875                           
 14876                           ;pin_manager.c: 84: LATBbits.LATB2 = 0;
 14877  004A9C  948A               	bcf	3978,2,c	;volatile
 14878                           
 14879                           ;pin_manager.c: 85: LATBbits.LATB0 = 0;
 14880  004A9E  908A               	bcf	3978,0,c	;volatile
 14881                           
 14882                           ;pin_manager.c: 86: LATBbits.LATB5 = 0;
 14883  004AA0  9A8A               	bcf	3978,5,c	;volatile
 14884                           
 14885                           ;pin_manager.c: 87: LATBbits.LATB6 = 0;
 14886  004AA2  9C8A               	bcf	3978,6,c	;volatile
 14887                           
 14888                           ;pin_manager.c: 88: LATBbits.LATB7 = 0;
 14889  004AA4  9E8A               	bcf	3978,7,c	;volatile
 14890                           
 14891                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 14892  004AA6  948B               	bcf	3979,2,c	;volatile
 14893                           
 14894                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 14895  004AA8  9C8B               	bcf	3979,6,c	;volatile
 14896                           
 14897                           ;pin_manager.c: 93: ANSELAbits.ANSA0 = 0;
 14898  004AAA  010F               	movlb	15	; () banked
 14899  004AAC  915B               	bcf	91,0,b	;volatile
 14900                           
 14901                           ;pin_manager.c: 94: ANSELAbits.ANSA1 = 1;
 14902  004AAE  835B               	bsf	91,1,b	;volatile
 14903                           
 14904                           ;pin_manager.c: 95: ANSELAbits.ANSA2 = 1;
 14905  004AB0  855B               	bsf	91,2,b	;volatile
 14906                           
 14907                           ;pin_manager.c: 96: ANSELAbits.ANSA3 = 1;
 14908  004AB2  875B               	bsf	91,3,b	;volatile
 14909                           
 14910                           ;pin_manager.c: 97: ANSELCbits.ANSC7 = 0;
 14911  004AB4  9F5D               	bcf	93,7,b	;volatile
 14912                           
 14913                           ;pin_manager.c: 98: ANSELCbits.ANSC6 = 0;
 14914  004AB6  9D5D               	bcf	93,6,b	;volatile
 14915                           
 14916                           ; BSR set to: 15
 14917  004AB8  0012               	return		;funcret
 14918  004ABA                     __end_of_PIN_MANAGER_Initialize:
 14919                           	opt stack 0
 14920                           tblptru	equ	0xFF8
 14921                           tblptrh	equ	0xFF7
 14922                           tblptrl	equ	0xFF6
 14923                           tablat	equ	0xFF5
 14924                           prodh	equ	0xFF4
 14925                           prodl	equ	0xFF3
 14926                           intcon	equ	0xFF2
 14927                           postinc0	equ	0xFEE
 14928                           wreg	equ	0xFE8
 14929                           indf1	equ	0xFE7
 14930                           postdec1	equ	0xFE5
 14931                           fsr1h	equ	0xFE2
 14932                           fsr1l	equ	0xFE1
 14933                           indf2	equ	0xFDF
 14934                           postinc2	equ	0xFDE
 14935                           postdec2	equ	0xFDD
 14936                           plusw2	equ	0xFDB
 14937                           fsr2h	equ	0xFDA
 14938                           fsr2l	equ	0xFD9
 14939                           status	equ	0xFD8
 14940                           
 14941 ;; *************** function _OSCILLATOR_Initialize *****************
 14942 ;; Defined at:
 14943 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;		None
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;		None
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      void 
 14950 ;; Registers used:
 14951 ;;		wreg, status,2
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14957 ;;      Params:         0       0       0       0       0       0       0       0       0
 14958 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14960 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14961 ;;Total ram usage:        0 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; Hardware stack levels required when called:   11
 14964 ;; This function calls:
 14965 ;;		Nothing
 14966 ;; This function is called by:
 14967 ;;		_SYSTEM_Initialize
 14968 ;; This function uses a non-reentrant model
 14969 ;;
 14970                           
 14971                           	psect	text71
 14972  004384                     __ptext71:
 14973                           	opt stack 0
 14974  004384                     _OSCILLATOR_Initialize:
 14975                           	opt stack 18
 14976                           
 14977                           ;mcc.c: 107: OSCTUNE = 0x80;
 14978                           
 14979                           ; BSR set to: 15
 14980                           ;incstack = 0
 14981  004384  0E80               	movlw	128
 14982  004386  6E9B               	movwf	3995,c	;volatile
 14983                           
 14984                           ;mcc.c: 108: OSCCON = 0x70;
 14985  004388  0E70               	movlw	112
 14986  00438A  6ED3               	movwf	4051,c	;volatile
 14987                           
 14988                           ;mcc.c: 109: OSCCON2 = 0x10;
 14989  00438C  0E10               	movlw	16
 14990  00438E  6ED2               	movwf	4050,c	;volatile
 14991  004390                     l1040:
 14992  004390  AED2               	btfss	4050,7,c	;volatile
 14993  004392  D7FE               	goto	l1040
 14994                           
 14995                           ;mcc.c: 111: ACTCON = 0x90;
 14996  004394  0E90               	movlw	144
 14997  004396  6EB5               	movwf	4021,c	;volatile
 14998  004398  0C90               	retlw	144	;funcret
 14999  00439A                     __end_of_OSCILLATOR_Initialize:
 15000                           	opt stack 0
 15001                           tblptru	equ	0xFF8
 15002                           tblptrh	equ	0xFF7
 15003                           tblptrl	equ	0xFF6
 15004                           tablat	equ	0xFF5
 15005                           prodh	equ	0xFF4
 15006                           prodl	equ	0xFF3
 15007                           intcon	equ	0xFF2
 15008                           postinc0	equ	0xFEE
 15009                           wreg	equ	0xFE8
 15010                           indf1	equ	0xFE7
 15011                           postdec1	equ	0xFE5
 15012                           fsr1h	equ	0xFE2
 15013                           fsr1l	equ	0xFE1
 15014                           indf2	equ	0xFDF
 15015                           postinc2	equ	0xFDE
 15016                           postdec2	equ	0xFDD
 15017                           plusw2	equ	0xFDB
 15018                           fsr2h	equ	0xFDA
 15019                           fsr2l	equ	0xFD9
 15020                           status	equ	0xFD8
 15021                           
 15022 ;; *************** function _EUSART_Initialize *****************
 15023 ;; Defined at:
 15024 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      void 
 15031 ;; Registers used:
 15032 ;;		wreg, status,2
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/F
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15041 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15042 ;;Total ram usage:        0 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; Hardware stack levels required when called:   11
 15045 ;; This function calls:
 15046 ;;		Nothing
 15047 ;; This function is called by:
 15048 ;;		_moteApp_GoToSleep
 15049 ;;		_SYSTEM_Initialize
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053                           	psect	text72
 15054  004654                     __ptext72:
 15055                           	opt stack 0
 15056  004654                     _EUSART_Initialize:
 15057                           	opt stack 16
 15058                           
 15059                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 15060                           
 15061                           ;incstack = 0
 15062  004654  9A9D               	bcf	3997,5,c	;volatile
 15063                           
 15064                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 15065  004656  989D               	bcf	3997,4,c	;volatile
 15066                           
 15067                           ;eusart.c: 85: BAUDCON = 0x48;
 15068  004658  0E48               	movlw	72
 15069  00465A  6EB8               	movwf	4024,c	;volatile
 15070                           
 15071                           ;eusart.c: 88: RCSTA = 0x90;
 15072  00465C  0E90               	movlw	144
 15073  00465E  6EAB               	movwf	4011,c	;volatile
 15074                           
 15075                           ;eusart.c: 91: TXSTA = 0x26;
 15076  004660  0E26               	movlw	38
 15077  004662  6EAC               	movwf	4012,c	;volatile
 15078                           
 15079                           ;eusart.c: 95: SPBRG = 0x71;
 15080  004664  0E71               	movlw	113
 15081  004666  6EAF               	movwf	4015,c	;volatile
 15082                           
 15083                           ;eusart.c: 100: SPBRGH = 0x02;
 15084  004668  0E02               	movlw	2
 15085  00466A  6EB0               	movwf	4016,c	;volatile
 15086                           
 15087                           ;eusart.c: 103: eusartTxHead = 0;
 15088  00466C  6A27               	clrf	_eusartTxHead,c
 15089                           
 15090                           ;eusart.c: 104: eusartTxTail = 0;
 15091  00466E  6A28               	clrf	_eusartTxTail,c
 15092                           
 15093                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 15094  004670  0E40               	movlw	64
 15095  004672  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 15096                           
 15097                           ;eusart.c: 107: eusartRxHead = 0;
 15098  004674  6A24               	clrf	_eusartRxHead,c
 15099                           
 15100                           ;eusart.c: 108: eusartRxTail = 0;
 15101  004676  6A25               	clrf	_eusartRxTail,c
 15102                           
 15103                           ;eusart.c: 109: eusartRxCount = 0;
 15104  004678  6A23               	clrf	_eusartRxCount,c	;volatile
 15105                           
 15106                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 15107  00467A  8A9D               	bsf	3997,5,c	;volatile
 15108                           
 15109                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 15110  00467C  88AB               	bsf	4011,4,c	;volatile
 15111  00467E  0012               	return		;funcret
 15112  004680                     __end_of_EUSART_Initialize:
 15113                           	opt stack 0
 15114                           tblptru	equ	0xFF8
 15115                           tblptrh	equ	0xFF7
 15116                           tblptrl	equ	0xFF6
 15117                           tablat	equ	0xFF5
 15118                           prodh	equ	0xFF4
 15119                           prodl	equ	0xFF3
 15120                           intcon	equ	0xFF2
 15121                           postinc0	equ	0xFEE
 15122                           wreg	equ	0xFE8
 15123                           indf1	equ	0xFE7
 15124                           postdec1	equ	0xFE5
 15125                           fsr1h	equ	0xFE2
 15126                           fsr1l	equ	0xFE1
 15127                           indf2	equ	0xFDF
 15128                           postinc2	equ	0xFDE
 15129                           postdec2	equ	0xFDD
 15130                           plusw2	equ	0xFDB
 15131                           fsr2h	equ	0xFDA
 15132                           fsr2l	equ	0xFD9
 15133                           status	equ	0xFD8
 15134                           
 15135 ;; *************** function _CMP1_Initialize *****************
 15136 ;; Defined at:
 15137 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 15138 ;; Parameters:    Size  Location     Type
 15139 ;;		None
 15140 ;; Auto vars:     Size  Location     Type
 15141 ;;		None
 15142 ;; Return value:  Size  Location     Type
 15143 ;;                  1    wreg      void 
 15144 ;; Registers used:
 15145 ;;		wreg, status,2
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15151 ;;      Params:         0       0       0       0       0       0       0       0       0
 15152 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15154 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15155 ;;Total ram usage:        0 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:   11
 15158 ;; This function calls:
 15159 ;;		Nothing
 15160 ;; This function is called by:
 15161 ;;		_SYSTEM_Initialize
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165                           	psect	text73
 15166  0042FC                     __ptext73:
 15167                           	opt stack 0
 15168  0042FC                     _CMP1_Initialize:
 15169                           	opt stack 18
 15170                           
 15171                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 15172                           
 15173                           ;incstack = 0
 15174  0042FC  9CA0               	bcf	4000,6,c	;volatile
 15175                           
 15176                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 15177  0042FE  0E9C               	movlw	156
 15178  004300  6E98               	movwf	3992,c	;volatile
 15179                           
 15180                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 15181  004302  8A9A               	bsf	3994,5,c	;volatile
 15182                           
 15183                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 15184  004304  929A               	bcf	3994,1,c	;volatile
 15185                           
 15186                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 15187  004306  969A               	bcf	3994,3,c	;volatile
 15188                           
 15189                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 15190  004308  9CA1               	bcf	4001,6,c	;volatile
 15191                           
 15192                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 15193  00430A  9CA0               	bcf	4000,6,c	;volatile
 15194  00430C  0C9C               	retlw	156	;funcret
 15195  00430E                     __end_of_CMP1_Initialize:
 15196                           	opt stack 0
 15197                           tblptru	equ	0xFF8
 15198                           tblptrh	equ	0xFF7
 15199                           tblptrl	equ	0xFF6
 15200                           tablat	equ	0xFF5
 15201                           prodh	equ	0xFF4
 15202                           prodl	equ	0xFF3
 15203                           intcon	equ	0xFF2
 15204                           postinc0	equ	0xFEE
 15205                           wreg	equ	0xFE8
 15206                           indf1	equ	0xFE7
 15207                           postdec1	equ	0xFE5
 15208                           fsr1h	equ	0xFE2
 15209                           fsr1l	equ	0xFE1
 15210                           indf2	equ	0xFDF
 15211                           postinc2	equ	0xFDE
 15212                           postdec2	equ	0xFDD
 15213                           plusw2	equ	0xFDB
 15214                           fsr2h	equ	0xFDA
 15215                           fsr2l	equ	0xFD9
 15216                           status	equ	0xFD8
 15217                           
 15218 ;; *************** function _ADC_Initialize *****************
 15219 ;; Defined at:
 15220 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1    wreg      void 
 15227 ;; Registers used:
 15228 ;;		wreg, status,2
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:   11
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_SYSTEM_Initialize
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           	psect	text74
 15249  00436E                     __ptext74:
 15250                           	opt stack 0
 15251  00436E                     _ADC_Initialize:
 15252                           	opt stack 18
 15253                           
 15254                           ;adc.c: 68: VREFCON0 = 0b10100000;
 15255                           
 15256                           ;incstack = 0
 15257  00436E  0EA0               	movlw	160
 15258  004370  6E7D               	movwf	3965,c	;volatile
 15259                           
 15260                           ;adc.c: 70: ADCON0 = 0x01;
 15261  004372  0E01               	movlw	1
 15262  004374  6EC2               	movwf	4034,c	;volatile
 15263                           
 15264                           ;adc.c: 73: ADCON1 = 0x08;
 15265  004376  0E08               	movlw	8
 15266  004378  6EC1               	movwf	4033,c	;volatile
 15267                           
 15268                           ;adc.c: 76: ADCON2 = 0b10001110;
 15269  00437A  0E8E               	movlw	142
 15270  00437C  6EC0               	movwf	4032,c	;volatile
 15271                           
 15272                           ;adc.c: 79: ADRESL = 0x00;
 15273  00437E  6AC3               	clrf	4035,c	;volatile
 15274                           
 15275                           ;adc.c: 82: ADRESH = 0x00;
 15276  004380  6AC4               	clrf	4036,c	;volatile
 15277  004382  0012               	return		;funcret
 15278  004384                     __end_of_ADC_Initialize:
 15279                           	opt stack 0
 15280                           tblptru	equ	0xFF8
 15281                           tblptrh	equ	0xFF7
 15282                           tblptrl	equ	0xFF6
 15283                           tablat	equ	0xFF5
 15284                           prodh	equ	0xFF4
 15285                           prodl	equ	0xFF3
 15286                           intcon	equ	0xFF2
 15287                           postinc0	equ	0xFEE
 15288                           wreg	equ	0xFE8
 15289                           indf1	equ	0xFE7
 15290                           postdec1	equ	0xFE5
 15291                           fsr1h	equ	0xFE2
 15292                           fsr1l	equ	0xFE1
 15293                           indf2	equ	0xFDF
 15294                           postinc2	equ	0xFDE
 15295                           postdec2	equ	0xFDD
 15296                           plusw2	equ	0xFDB
 15297                           fsr2h	equ	0xFDA
 15298                           fsr2l	equ	0xFD9
 15299                           status	equ	0xFD8
 15300                           
 15301 ;; *************** function _MOTEapp_handlerState *****************
 15302 ;; Defined at:
 15303 ;;		line 180 in file "../Includes/Board/MOTEapp.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;  state           1    wreg     enum E6355
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;  state           1    0[BANK0 ] enum E6355
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		wreg
 15312 ;; Tracked objects:
 15313 ;;		On entry : F/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0
 15318 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15320 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15321 ;;Total ram usage:        1 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:   11
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_main
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text75
 15332  004278                     __ptext75:
 15333                           	opt stack 0
 15334  004278                     _MOTEapp_handlerState:
 15335                           	opt stack 19
 15336                           
 15337                           ;incstack = 0
 15338                           ;MOTEapp_handlerState@state stored from wreg
 15339  004278  6FB9               	movwf	MOTEapp_handlerState@state& (0+255),b
 15340                           
 15341                           ;MOTEapp.c: 182: moteState = state;
 15342  00427A  C0B9  F0F5         	movff	MOTEapp_handlerState@state,_moteState
 15343  00427E  0012               	return		;funcret
 15344  004280                     __end_of_MOTEapp_handlerState:
 15345                           	opt stack 0
 15346                           tblptru	equ	0xFF8
 15347                           tblptrh	equ	0xFF7
 15348                           tblptrl	equ	0xFF6
 15349                           tablat	equ	0xFF5
 15350                           prodh	equ	0xFF4
 15351                           prodl	equ	0xFF3
 15352                           intcon	equ	0xFF2
 15353                           postinc0	equ	0xFEE
 15354                           wreg	equ	0xFE8
 15355                           indf1	equ	0xFE7
 15356                           postdec1	equ	0xFE5
 15357                           fsr1h	equ	0xFE2
 15358                           fsr1l	equ	0xFE1
 15359                           indf2	equ	0xFDF
 15360                           postinc2	equ	0xFDE
 15361                           postdec2	equ	0xFDD
 15362                           plusw2	equ	0xFDB
 15363                           fsr2h	equ	0xFDA
 15364                           fsr2l	equ	0xFD9
 15365                           status	equ	0xFD8
 15366                           
 15367 ;; *************** function _DATAEE_ReadByte *****************
 15368 ;; Defined at:
 15369 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;  bAdd            1    wreg     unsigned char 
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;  bAdd            1    0[BANK0 ] unsigned char 
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      unsigned char 
 15376 ;; Registers used:
 15377 ;;		wreg, status,2
 15378 ;; Tracked objects:
 15379 ;;		On entry : F/0
 15380 ;;		On exit  : 0/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15383 ;;      Params:         0       0       0       0       0       0       0       0       0
 15384 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15386 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15387 ;;Total ram usage:        1 bytes
 15388 ;; Hardware stack levels used:    1
 15389 ;; Hardware stack levels required when called:   11
 15390 ;; This function calls:
 15391 ;;		Nothing
 15392 ;; This function is called by:
 15393 ;;		_main
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397                           	psect	text76
 15398  004332                     __ptext76:
 15399                           	opt stack 0
 15400  004332                     _DATAEE_ReadByte:
 15401                           	opt stack 19
 15402                           
 15403                           ;incstack = 0
 15404                           ;DATAEE_ReadByte@bAdd stored from wreg
 15405  004332  6FB9               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 15406                           
 15407                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 15408  004334  C0B9  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 15409                           
 15410                           ;memory.c: 191: EECON1bits.CFGS = 0;
 15411  004338  9CA6               	bcf	4006,6,c	;volatile
 15412                           
 15413                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 15414  00433A  9EA6               	bcf	4006,7,c	;volatile
 15415                           
 15416                           ;memory.c: 193: EECON1bits.RD = 1;
 15417  00433C  80A6               	bsf	4006,0,c	;volatile
 15418                           
 15419                           ;memory.c: 194: __nop();
 15420  00433E  F000               	nop	
 15421                           
 15422                           ;memory.c: 195: __nop();
 15423  004340  F000               	nop	
 15424                           
 15425                           ;memory.c: 197: return (EEDATA);
 15426  004342  50A8               	movf	4008,w,c	;volatile
 15427  004344  0012               	return		;funcret
 15428  004346                     __end_of_DATAEE_ReadByte:
 15429                           	opt stack 0
 15430                           tblptru	equ	0xFF8
 15431                           tblptrh	equ	0xFF7
 15432                           tblptrl	equ	0xFF6
 15433                           tablat	equ	0xFF5
 15434                           prodh	equ	0xFF4
 15435                           prodl	equ	0xFF3
 15436                           intcon	equ	0xFF2
 15437                           postinc0	equ	0xFEE
 15438                           wreg	equ	0xFE8
 15439                           indf1	equ	0xFE7
 15440                           postdec1	equ	0xFE5
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           indf2	equ	0xFDF
 15444                           postinc2	equ	0xFDE
 15445                           postdec2	equ	0xFDD
 15446                           plusw2	equ	0xFDB
 15447                           fsr2h	equ	0xFDA
 15448                           fsr2l	equ	0xFD9
 15449                           status	equ	0xFD8
 15450                           
 15451 ;; *************** function _INTERRUPT_InterruptManager *****************
 15452 ;; Defined at:
 15453 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;		None
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;		None
 15458 ;; Return value:  Size  Location     Type
 15459 ;;                  1    wreg      void 
 15460 ;; Registers used:
 15461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15467 ;;      Params:         0       0       0       0       0       0       0       0       0
 15468 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15469 ;;      Temps:         12       0       0       0       0       0       0       0       0
 15470 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15471 ;;Total ram usage:       12 bytes
 15472 ;; Hardware stack levels used:    1
 15473 ;; Hardware stack levels required when called:   10
 15474 ;; This function calls:
 15475 ;;		_CMP1_ISR
 15476 ;;		_EUSART_Receive_ISR
 15477 ;;		_EUSART_Transmit_ISR
 15478 ;;		_TMR1_ISR
 15479 ;;		_TMRapp_Tick
 15480 ;;		_USBDeviceTasks
 15481 ;;		_USBapp_setrxByteFlag
 15482 ;; This function is called by:
 15483 ;;		Interrupt level 2
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	intcode
 15488  001008                     __pintcode:
 15489                           	opt stack 0
 15490  001008                     _INTERRUPT_InterruptManager:
 15491                           	opt stack 10
 15492                           
 15493                           ;incstack = 0
 15494  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15495  00100A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 15496  00100E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15497  001012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 15498  001016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 15499  00101A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 15500  00101E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 15501  001022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 15502  001026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 15503  00102A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 15504  00102E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 15505  001032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 15506  001036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 15507                           
 15508                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15509  00103A  B09D               	btfsc	3997,0,c	;volatile
 15510  00103C  A09E               	btfss	3998,0,c	;volatile
 15511  00103E  D005               	goto	i2l1000
 15512                           
 15513                           ;interrupt_manager.c: 59: {
 15514                           ;interrupt_manager.c: 60: TMR1_ISR();
 15515  001040  EC48  F021         	call	_TMR1_ISR	;wreg free
 15516                           
 15517                           ;interrupt_manager.c: 62: TMRapp_Tick();
 15518  001044  EC32  F021         	call	_TMRapp_Tick	;wreg free
 15519                           
 15520                           ;interrupt_manager.c: 63: }
 15521  001048  D016               	goto	i2l1008
 15522  00104A                     i2l1000:
 15523                           
 15524                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 15525  00104A  BA9D               	btfsc	3997,5,c	;volatile
 15526  00104C  AA9E               	btfss	3998,5,c	;volatile
 15527  00104E  D005               	goto	i2l1002
 15528                           
 15529                           ;interrupt_manager.c: 65: {
 15530                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 15531  001050  EC35  F021         	call	_USBapp_setrxByteFlag	;wreg free
 15532                           
 15533                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 15534  001054  EC9A  F022         	call	_EUSART_Receive_ISR	;wreg free
 15535                           
 15536                           ;interrupt_manager.c: 68: }
 15537  001058  D00E               	goto	i2l1008
 15538  00105A                     i2l1002:
 15539                           
 15540                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 15541  00105A  B89D               	btfsc	3997,4,c	;volatile
 15542  00105C  A89E               	btfss	3998,4,c	;volatile
 15543  00105E  D003               	goto	i2l1004
 15544                           
 15545                           ;interrupt_manager.c: 70: {
 15546                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 15547  001060  ECAE  F022         	call	_EUSART_Transmit_ISR	;wreg free
 15548                           
 15549                           ;interrupt_manager.c: 72: }
 15550  001064  D008               	goto	i2l1008
 15551  001066                     i2l1004:
 15552                           
 15553                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 15554  001066  BCA0               	btfsc	4000,6,c	;volatile
 15555  001068  ACA1               	btfss	4001,6,c	;volatile
 15556  00106A  D003               	goto	i2l8631
 15557                           
 15558                           ;interrupt_manager.c: 74: {
 15559                           ;interrupt_manager.c: 75: CMP1_ISR();
 15560  00106C  EC28  F021         	call	_CMP1_ISR	;wreg free
 15561                           
 15562                           ;interrupt_manager.c: 76: }
 15563  001070  D002               	goto	i2l1008
 15564  001072                     i2l8631:
 15565                           
 15566                           ;interrupt_manager.c: 77: else
 15567                           ;interrupt_manager.c: 78: {
 15568                           ;interrupt_manager.c: 80: USBDeviceTasks();
 15569  001072  EC39  F030         	call	_USBDeviceTasks	;wreg free
 15570  001076                     i2l1008:
 15571  001076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 15572  00107A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 15573  00107E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 15574  001082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 15575  001086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 15576  00108A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 15577  00108E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 15578  001092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 15579  001096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 15580  00109A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 15581  00109E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15582  0010A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15583  0010A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15584  0010A8  0011               	retfie		f
 15585  0010AA                     __end_of_INTERRUPT_InterruptManager:
 15586                           	opt stack 0
 15587                           pclatu	equ	0xFFB
 15588                           pclath	equ	0xFFA
 15589                           tblptru	equ	0xFF8
 15590                           tblptrh	equ	0xFF7
 15591                           tblptrl	equ	0xFF6
 15592                           tablat	equ	0xFF5
 15593                           prodh	equ	0xFF4
 15594                           prodl	equ	0xFF3
 15595                           intcon	equ	0xFF2
 15596                           postinc0	equ	0xFEE
 15597                           wreg	equ	0xFE8
 15598                           indf1	equ	0xFE7
 15599                           postdec1	equ	0xFE5
 15600                           fsr1h	equ	0xFE2
 15601                           fsr1l	equ	0xFE1
 15602                           indf2	equ	0xFDF
 15603                           postinc2	equ	0xFDE
 15604                           postdec2	equ	0xFDD
 15605                           plusw2	equ	0xFDB
 15606                           fsr2h	equ	0xFDA
 15607                           fsr2l	equ	0xFD9
 15608                           status	equ	0xFD8
 15609                           
 15610 ;; *************** function _USBapp_setrxByteFlag *****************
 15611 ;; Defined at:
 15612 ;;		line 226 in file "../Includes/Board/USBapp.c"
 15613 ;; Parameters:    Size  Location     Type
 15614 ;;		None
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;		None
 15617 ;; Return value:  Size  Location     Type
 15618 ;;                  1    wreg      void 
 15619 ;; Registers used:
 15620 ;;		wreg, status,2
 15621 ;; Tracked objects:
 15622 ;;		On entry : 0/0
 15623 ;;		On exit  : 0/0
 15624 ;;		Unchanged: 0/0
 15625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15626 ;;      Params:         0       0       0       0       0       0       0       0       0
 15627 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15629 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15630 ;;Total ram usage:        0 bytes
 15631 ;; Hardware stack levels used:    1
 15632 ;; This function calls:
 15633 ;;		Nothing
 15634 ;; This function is called by:
 15635 ;;		_INTERRUPT_InterruptManager
 15636 ;; This function uses a non-reentrant model
 15637 ;;
 15638                           
 15639                           	psect	text78
 15640  00426A                     __ptext78:
 15641                           	opt stack 0
 15642  00426A                     _USBapp_setrxByteFlag:
 15643                           	opt stack 19
 15644                           
 15645                           ;USBapp.c: 228: rxByteFlag = 1;
 15646                           
 15647                           ;incstack = 0
 15648  00426A  0E01               	movlw	1
 15649  00426C  6E2A               	movwf	_rxByteFlag,c	;volatile
 15650  00426E  0C01               	retlw	1	;funcret
 15651  004270                     __end_of_USBapp_setrxByteFlag:
 15652                           	opt stack 0
 15653                           pclatu	equ	0xFFB
 15654                           pclath	equ	0xFFA
 15655                           tblptru	equ	0xFF8
 15656                           tblptrh	equ	0xFF7
 15657                           tblptrl	equ	0xFF6
 15658                           tablat	equ	0xFF5
 15659                           prodh	equ	0xFF4
 15660                           prodl	equ	0xFF3
 15661                           intcon	equ	0xFF2
 15662                           postinc0	equ	0xFEE
 15663                           wreg	equ	0xFE8
 15664                           indf1	equ	0xFE7
 15665                           postdec1	equ	0xFE5
 15666                           fsr1h	equ	0xFE2
 15667                           fsr1l	equ	0xFE1
 15668                           indf2	equ	0xFDF
 15669                           postinc2	equ	0xFDE
 15670                           postdec2	equ	0xFDD
 15671                           plusw2	equ	0xFDB
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function _USBDeviceTasks *****************
 15677 ;; Defined at:
 15678 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;  i               1   32[COMRAM] unsigned char 
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      void 
 15685 ;; Registers used:
 15686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0
 15693 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15695 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15696 ;;Total ram usage:        1 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:    9
 15699 ;; This function calls:
 15700 ;;		_USBCtrlEPAllowStatusStage
 15701 ;;		_USBCtrlEPService
 15702 ;;		_USBStallHandler
 15703 ;;		_USBSuspend
 15704 ;;		_USBWakeFromSuspend
 15705 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15706 ;;		i2_USBDeviceInit
 15707 ;; This function is called by:
 15708 ;;		_INTERRUPT_InterruptManager
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text79
 15713  006072                     __ptext79:
 15714                           	opt stack 0
 15715  006072                     _USBDeviceTasks:
 15716                           	opt stack 10
 15717                           
 15718                           ;usb_device.c: 430: uint8_t i;
 15719                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 15720                           
 15721                           ;incstack = 0
 15722  006072  0100               	movlb	0	; () banked
 15723  006074  0591               	decf	_USBDeviceState& (0+255),w,b	;volatile
 15724  006076  E107               	bnz	i2l8469
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;usb_device.c: 433: {
 15728                           ;usb_device.c: 443: if(!UCONbits.SE0)
 15729  006078  BA60               	btfsc	3936,5,c	;volatile
 15730  00607A  D005               	goto	i2l8469
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;usb_device.c: 444: {
 15734                           ;usb_device.c: 445: {UIR = 0;};
 15735  00607C  6A65               	clrf	3941,c	;volatile
 15736                           
 15737                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 15738  00607E  8064               	bsf	3940,0,c	;volatile
 15739                           
 15740                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 15741  006080  8864               	bsf	3940,4,c	;volatile
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 15745  006082  0E02               	movlw	2
 15746  006084  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 15747  006086                     i2l8469:
 15748                           
 15749                           ; BSR set to: 0
 15750                           ;usb_device.c: 449: }
 15751                           ;usb_device.c: 450: }
 15752                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 15753  006086  B465               	btfsc	3941,2,c	;volatile
 15754                           
 15755                           ; BSR set to: 0
 15756  006088  A464               	btfss	3940,2,c	;volatile
 15757  00608A  D003               	goto	i2l8477
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;usb_device.c: 455: {
 15761                           ;usb_device.c: 456: (UIR &= 0xFB);
 15762  00608C  9465               	bcf	3941,2,c	;volatile
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;usb_device.c: 457: USBWakeFromSuspend();
 15766  00608E  EC41  F022         	call	_USBWakeFromSuspend	;wreg free
 15767  006092                     i2l8477:
 15768                           
 15769                           ;usb_device.c: 458: }
 15770                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 15771  006092  A260               	btfss	3936,1,c	;volatile
 15772  006094  D002               	goto	i2l1471
 15773                           
 15774                           ;usb_device.c: 464: {
 15775                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 15776  006096  94A4               	bcf	4004,2,c	;volatile
 15777                           
 15778                           ;usb_device.c: 466: return;
 15779  006098  0012               	return	
 15780  00609A                     i2l1471:
 15781                           
 15782                           ;usb_device.c: 467: }
 15783                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 15784  00609A  B065               	btfsc	3941,0,c	;volatile
 15785  00609C  A064               	btfss	3940,0,c	;volatile
 15786  00609E  D006               	goto	i2l8491
 15787                           
 15788                           ;usb_device.c: 480: {
 15789                           ;usb_device.c: 481: USBDeviceInit();
 15790  0060A0  EC06  F02E         	call	i2_USBDeviceInit	;wreg free
 15791                           
 15792                           ; BSR set to: 0
 15793                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 15794  0060A4  84A3               	bsf	4003,2,c	;volatile
 15795                           
 15796                           ; BSR set to: 0
 15797                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 15798  0060A6  0E04               	movlw	4
 15799  0060A8  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;usb_device.c: 489: (UIR &= 0xFE);
 15803  0060AA  9065               	bcf	3941,0,c	;volatile
 15804  0060AC                     i2l8491:
 15805                           
 15806                           ;usb_device.c: 490: }
 15807                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 15808  0060AC  B865               	btfsc	3941,4,c	;volatile
 15809  0060AE  A864               	btfss	3940,4,c	;volatile
 15810  0060B0  D003               	goto	i2l8499
 15811                           
 15812                           ;usb_device.c: 496: {
 15813                           ;usb_device.c: 497: USBSuspend();
 15814  0060B2  ECF5  F021         	call	_USBSuspend	;wreg free
 15815                           
 15816                           ;usb_device.c: 498: (UIR &= 0xEF);
 15817  0060B6  9865               	bcf	3941,4,c	;volatile
 15818  0060B8                     i2l8499:
 15819                           
 15820                           ;usb_device.c: 499: }
 15821                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 15822  0060B8  AC65               	btfss	3941,6,c	;volatile
 15823  0060BA  D014               	goto	i2l8515
 15824                           
 15825                           ;usb_device.c: 502: {
 15826                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 15827  0060BC  AC64               	btfss	3940,6,c	;volatile
 15828  0060BE  D00A               	goto	i2l8505
 15829                           
 15830                           ;usb_device.c: 504: {
 15831                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15832  0060C0  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15833  0060C2  0E73               	movlw	115
 15834  0060C4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15835  0060C6  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15836  0060C8  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15837  0060CA  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15838  0060CC  0E01               	movlw	1
 15839  0060CE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15840  0060D0  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15841  0060D4                     i2l8505:
 15842                           
 15843                           ;usb_device.c: 506: }
 15844                           ;usb_device.c: 507: (UIR &= 0xBF);
 15845  0060D4  9C65               	bcf	3941,6,c	;volatile
 15846                           
 15847                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 15848  0060D6  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 15849  0060D8  E001               	bz	i2l8511
 15850                           
 15851                           ;usb_device.c: 513: {
 15852                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 15853  0060DA  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 15854  0060DC                     i2l8511:
 15855                           
 15856                           ;usb_device.c: 515: }
 15857                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 15858  0060DC  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15859  0060DE  E102               	bnz	i2l8515
 15860                           
 15861                           ;usb_device.c: 522: {
 15862                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 15863  0060E0  EC75  F02C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15864  0060E4                     i2l8515:
 15865                           
 15866                           ;usb_device.c: 524: }
 15867                           ;usb_device.c: 525: }
 15868                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 15869  0060E4  BA65               	btfsc	3941,5,c	;volatile
 15870  0060E6  AA64               	btfss	3940,5,c	;volatile
 15871  0060E8  D002               	goto	i2l8521
 15872                           
 15873                           ;usb_device.c: 528: {
 15874                           ;usb_device.c: 529: USBStallHandler();
 15875  0060EA  EC3F  F024         	call	_USBStallHandler	;wreg free
 15876  0060EE                     i2l8521:
 15877                           
 15878                           ;usb_device.c: 530: }
 15879                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15880  0060EE  B265               	btfsc	3941,1,c	;volatile
 15881  0060F0  A264               	btfss	3940,1,c	;volatile
 15882  0060F2  D00B               	goto	i2l8529
 15883                           
 15884                           ;usb_device.c: 533: {
 15885                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 15886  0060F4  0E7F               	movlw	127
 15887  0060F6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15888  0060F8  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15889  0060FA  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15890  0060FC  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15891  0060FE  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15892  006100  0E01               	movlw	1
 15893  006102  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15894  006104  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15895                           
 15896                           ;usb_device.c: 535: {UEIR = 0;};
 15897  006108  6A67               	clrf	3943,c	;volatile
 15898  00610A                     i2l8529:
 15899                           
 15900                           ;usb_device.c: 536: }
 15901                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 15902  00610A  0E04               	movlw	4
 15903  00610C  0100               	movlb	0	; () banked
 15904  00610E  6191               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 15905  006110  D002               	goto	i2l1481
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;usb_device.c: 544: {
 15909                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 15910  006112  94A4               	bcf	4004,2,c	;volatile
 15911                           
 15912                           ;usb_device.c: 546: return;
 15913  006114  0C04               	retlw	4
 15914  006116                     i2l1481:
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;usb_device.c: 547: }
 15918                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 15919  006116  A664               	btfss	3940,3,c	;volatile
 15920  006118  D029               	goto	i2l1482
 15921                           
 15922                           ; BSR set to: 0
 15923                           ;usb_device.c: 553: {
 15924                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 15925  00611A  6A4E               	clrf	USBDeviceTasks@i,c
 15926  00611C                     i2l1483:
 15927                           
 15928                           ;usb_device.c: 555: {
 15929                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 15930  00611C  A665               	btfss	3941,3,c	;volatile
 15931  00611E  D026               	goto	i2l1482
 15932                           
 15933                           ;usb_device.c: 557: {
 15934                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 15935  006120  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 15936                           
 15937                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 15938  006124  302D               	rrcf	_USTATcopy,w,c	;volatile
 15939  006126  32E8               	rrcf	wreg,f,c
 15940  006128  32E8               	rrcf	wreg,f,c
 15941  00612A  0B0F               	andlw	15
 15942  00612C  6E22               	movwf	_endpoint_number,c	;volatile
 15943                           
 15944                           ;usb_device.c: 562: (UIR &= 0xF7);
 15945  00612E  9665               	bcf	3941,3,c	;volatile
 15946                           
 15947                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 15948  006130  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15949  006132  D003               	goto	i2l8549
 15950                           
 15951                           ;usb_device.c: 567: {
 15952                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15953  006134  5022               	movf	_endpoint_number,w,c
 15954  006136  0F6D               	addlw	low _ep_data_out
 15955  006138  D002               	goto	L26
 15956  00613A                     i2l8549:
 15957                           
 15958                           ;usb_device.c: 570: else
 15959                           ;usb_device.c: 571: {
 15960                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15961  00613A  5022               	movf	_endpoint_number,w,c
 15962  00613C  0F6A               	addlw	low _ep_data_in
 15963  00613E                     L26:
 15964  00613E  6ED9               	movwf	fsr2l,c
 15965  006140  6ADA               	clrf	fsr2h,c
 15966  006142  0100               	movlb	0	; () banked
 15967  006144  70DF               	btg	indf2,0,c
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;usb_device.c: 573: }
 15971                           ;usb_device.c: 577: if(endpoint_number == 0)
 15972  006146  5022               	movf	_endpoint_number,w,c	;volatile
 15973  006148  E103               	bnz	i2l8555
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;usb_device.c: 578: {
 15977                           ;usb_device.c: 579: USBCtrlEPService();
 15978  00614A  EC64  F02B         	call	_USBCtrlEPService	;wreg free
 15979                           
 15980                           ;usb_device.c: 580: }
 15981  00614E  D00A               	goto	i2l8557
 15982  006150                     i2l8555:
 15983                           
 15984                           ; BSR set to: 0
 15985                           ;usb_device.c: 581: else
 15986                           ;usb_device.c: 582: {
 15987                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15988  006150  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15989  006152  0E72               	movlw	114
 15990  006154  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15991  006156  0E2D               	movlw	low _USTATcopy
 15992  006158  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15993  00615A  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15994  00615C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15995  00615E  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15996  006160  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15997  006164                     i2l8557:
 15998  006164  2A4E               	incf	USBDeviceTasks@i,f,c
 15999  006166  0E03               	movlw	3
 16000  006168  644E               	cpfsgt	USBDeviceTasks@i,c
 16001  00616A  D7D8               	goto	i2l1483
 16002  00616C                     i2l1482:
 16003                           
 16004                           ;usb_device.c: 589: }
 16005                           ;usb_device.c: 590: }
 16006                           ;usb_device.c: 591: }
 16007                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 16008  00616C  94A4               	bcf	4004,2,c	;volatile
 16009  00616E  0012               	return		;funcret
 16010  006170                     __end_of_USBDeviceTasks:
 16011                           	opt stack 0
 16012                           pclatu	equ	0xFFB
 16013                           pclath	equ	0xFFA
 16014                           tblptru	equ	0xFF8
 16015                           tblptrh	equ	0xFF7
 16016                           tblptrl	equ	0xFF6
 16017                           tablat	equ	0xFF5
 16018                           prodh	equ	0xFF4
 16019                           prodl	equ	0xFF3
 16020                           intcon	equ	0xFF2
 16021                           postinc0	equ	0xFEE
 16022                           wreg	equ	0xFE8
 16023                           indf1	equ	0xFE7
 16024                           postdec1	equ	0xFE5
 16025                           fsr1h	equ	0xFE2
 16026                           fsr1l	equ	0xFE1
 16027                           indf2	equ	0xFDF
 16028                           postinc2	equ	0xFDE
 16029                           postdec2	equ	0xFDD
 16030                           plusw2	equ	0xFDB
 16031                           fsr2h	equ	0xFDA
 16032                           fsr2l	equ	0xFD9
 16033                           status	equ	0xFD8
 16034                           
 16035 ;; *************** function i2_USBDeviceInit *****************
 16036 ;; Defined at:
 16037 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 16038 ;; Parameters:    Size  Location     Type
 16039 ;;		None
 16040 ;; Auto vars:     Size  Location     Type
 16041 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 16042 ;; Return value:  Size  Location     Type
 16043 ;;                  1    wreg      void 
 16044 ;; Registers used:
 16045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16046 ;; Tracked objects:
 16047 ;;		On entry : 0/0
 16048 ;;		On exit  : F/0
 16049 ;;		Unchanged: 0/0
 16050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16051 ;;      Params:         0       0       0       0       0       0       0       0       0
 16052 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16054 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16055 ;;Total ram usage:        1 bytes
 16056 ;; Hardware stack levels used:    1
 16057 ;; Hardware stack levels required when called:    1
 16058 ;; This function calls:
 16059 ;;		i2_memset
 16060 ;; This function is called by:
 16061 ;;		_USBDeviceTasks
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           	psect	text80
 16066  005C0C                     __ptext80:
 16067                           	opt stack 0
 16068  005C0C                     i2_USBDeviceInit:
 16069                           	opt stack 17
 16070                           
 16071                           ;usb_device.c: 239: uint8_t i;
 16072                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 16073                           
 16074                           ;incstack = 0
 16075  005C0C  94A3               	bcf	4003,2,c	;volatile
 16076                           
 16077                           ;usb_device.c: 244: {UEIR = 0;};
 16078  005C0E  6A67               	clrf	3943,c	;volatile
 16079                           
 16080                           ;usb_device.c: 247: {UIR = 0;};
 16081  005C10  6A65               	clrf	3941,c	;volatile
 16082                           
 16083                           ;usb_device.c: 250: UEP0 = 0;
 16084  005C12  6A6A               	clrf	3946,c	;volatile
 16085                           
 16086                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 16087  005C14  0E6B               	movlw	107
 16088  005C16  6E2E               	movwf	i2memset@p1,c
 16089  005C18  0E0F               	movlw	15
 16090  005C1A  6E2F               	movwf	i2memset@p1+1,c
 16091  005C1C  6A31               	clrf	i2memset@c+1,c
 16092  005C1E  6A30               	clrf	i2memset@c,c
 16093  005C20  6A33               	clrf	i2memset@n+1,c
 16094  005C22  0E02               	movlw	2
 16095  005C24  6E32               	movwf	i2memset@n,c
 16096  005C26  ECEA  F022         	call	i2_memset	;wreg free
 16097                           
 16098                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16099  005C2A  0E16               	movlw	22
 16100  005C2C  6E62               	movwf	3938,c	;volatile
 16101  005C2E  0E9F               	movlw	159
 16102  005C30  6E66               	movwf	3942,c	;volatile
 16103  005C32  0E7B               	movlw	123
 16104  005C34  6E64               	movwf	3940,c	;volatile
 16105                           
 16106                           ;usb_device.c: 257: ;
 16107                           ;usb_device.c: 260: ;
 16108                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16109  005C36  6A36               	clrf	i2USBDeviceInit@i,c
 16110  005C38                     i2l8113:
 16111                           
 16112                           ;usb_device.c: 264: {
 16113                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 16114  005C38  5036               	movf	i2USBDeviceInit@i,w,c
 16115  005C3A  0D04               	mullw	4
 16116  005C3C  0E00               	movlw	0
 16117  005C3E  24F3               	addwf	prodl,w,c
 16118  005C40  6ED9               	movwf	fsr2l,c
 16119  005C42  0E04               	movlw	4
 16120  005C44  20F4               	addwfc	prodh,w,c
 16121  005C46  6EDA               	movwf	fsr2h,c
 16122  005C48  6ADE               	clrf	postinc2,c
 16123  005C4A  6ADE               	clrf	postinc2,c
 16124  005C4C  6ADE               	clrf	postinc2,c
 16125  005C4E  6ADD               	clrf	postdec2,c
 16126  005C50  2A36               	incf	i2USBDeviceInit@i,f,c
 16127  005C52  0E0B               	movlw	11
 16128  005C54  6436               	cpfsgt	i2USBDeviceInit@i,c
 16129  005C56  D7F0               	goto	i2l8113
 16130                           
 16131                           ;usb_device.c: 266: }
 16132                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 16133  005C58  8C60               	bsf	3936,6,c	;volatile
 16134                           
 16135                           ;usb_device.c: 272: UADDR = 0x00;
 16136  005C5A  6A63               	clrf	3939,c	;volatile
 16137                           
 16138                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 16139  005C5C  9860               	bcf	3936,4,c	;volatile
 16140                           
 16141                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 16142  005C5E  9C60               	bcf	3936,6,c	;volatile
 16143                           
 16144                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 16145  005C60  D005               	goto	i2l8127
 16146  005C62                     i2l8119:
 16147                           
 16148                           ;usb_device.c: 282: {
 16149                           ;usb_device.c: 283: (UIR &= 0xF7);
 16150  005C62  9665               	bcf	3941,3,c	;volatile
 16151                           
 16152                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 16153  005C64  6A0C               	clrf	_inPipes+3,c	;volatile
 16154                           
 16155                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 16156  005C66  6A04               	clrf	_outPipes+3,c	;volatile
 16157                           
 16158                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 16159  005C68  6A05               	clrf	_outPipes+4,c	;volatile
 16160  005C6A  6A06               	clrf	_outPipes+5,c	;volatile
 16161  005C6C                     i2l8127:
 16162  005C6C  B665               	btfsc	3941,3,c	;volatile
 16163  005C6E  D7F9               	goto	i2l8119
 16164                           
 16165                           ;usb_device.c: 288: }
 16166                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 16167  005C70  0E01               	movlw	1
 16168  005C72  0100               	movlb	0	; () banked
 16169  005C74  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16170                           
 16171                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 16172  005C76  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 16176  005C78  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16177                           
 16178                           ; BSR set to: 0
 16179                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 16180  005C7A  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16181                           
 16182                           ; BSR set to: 0
 16183                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 16184  005C7C  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 16188  005C7E  6A36               	clrf	i2USBDeviceInit@i,c
 16189  005C80                     i2l8143:
 16190                           
 16191                           ;usb_device.c: 302: {
 16192                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 16193  005C80  5036               	movf	i2USBDeviceInit@i,w,c
 16194  005C82  0D02               	mullw	2
 16195  005C84  50F3               	movf	prodl,w,c
 16196  005C86  0F0F               	addlw	low _pBDTEntryIn
 16197  005C88  6ED9               	movwf	fsr2l,c
 16198  005C8A  6ADA               	clrf	fsr2h,c
 16199  005C8C  6ADE               	clrf	postinc2,c
 16200  005C8E  6ADD               	clrf	postdec2,c
 16201                           
 16202                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 16203  005C90  5036               	movf	i2USBDeviceInit@i,w,c
 16204  005C92  0D02               	mullw	2
 16205  005C94  50F3               	movf	prodl,w,c
 16206  005C96  0F60               	addlw	low _pBDTEntryOut
 16207  005C98  6ED9               	movwf	fsr2l,c
 16208  005C9A  6ADA               	clrf	fsr2h,c
 16209  005C9C  6ADE               	clrf	postinc2,c
 16210  005C9E  6ADD               	clrf	postdec2,c
 16211                           
 16212                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 16213  005CA0  5036               	movf	i2USBDeviceInit@i,w,c
 16214  005CA2  0F6A               	addlw	low _ep_data_in
 16215  005CA4  6ED9               	movwf	fsr2l,c
 16216  005CA6  6ADA               	clrf	fsr2h,c
 16217  005CA8  6ADF               	clrf	indf2,c
 16218                           
 16219                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 16220  005CAA  5036               	movf	i2USBDeviceInit@i,w,c
 16221  005CAC  0F6D               	addlw	low _ep_data_out
 16222  005CAE  6ED9               	movwf	fsr2l,c
 16223  005CB0  6ADA               	clrf	fsr2h,c
 16224  005CB2  6ADF               	clrf	indf2,c
 16225  005CB4  2A36               	incf	i2USBDeviceInit@i,f,c
 16226  005CB6  0E02               	movlw	2
 16227  005CB8  6436               	cpfsgt	i2USBDeviceInit@i,c
 16228  005CBA  D7E2               	goto	i2l8143
 16229                           
 16230                           ;usb_device.c: 307: }
 16231                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16232  005CBC  0E08               	movlw	8
 16233  005CBE  6E0F               	movwf	_pBDTEntryIn,c
 16234  005CC0  0E04               	movlw	4
 16235  005CC2  6E10               	movwf	_pBDTEntryIn+1,c
 16236                           
 16237                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 16238  005CC4  0E16               	movlw	22
 16239  005CC6  6E6A               	movwf	3946,c	;volatile
 16240                           
 16241                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16242  005CC8  0E04               	movlw	4
 16243  005CCA  0104               	movlb	4	; () banked
 16244  005CCC  6F03               	movwf	3,b	;volatile
 16245  005CCE  0E30               	movlw	48
 16246  005CD0  6F02               	movwf	2,b	;volatile
 16247                           
 16248                           ; BSR set to: 4
 16249                           ;usb_device.c: 315: BDT[0].CNT = 8;
 16250  005CD2  0E08               	movlw	8
 16251  005CD4  6F01               	movwf	1,b	;volatile
 16252                           
 16253                           ; BSR set to: 4
 16254                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 16255  005CD6  0E04               	movlw	4
 16256  005CD8  6F00               	movwf	0,b	;volatile
 16257                           
 16258                           ; BSR set to: 4
 16259                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 16260  005CDA  8F00               	bsf	0,7,b	;volatile
 16261                           
 16262                           ; BSR set to: 4
 16263                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 16264  005CDC  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 16265                           
 16266                           ; BSR set to: 4
 16267                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 16268  005CDE  0100               	movlb	0	; () banked
 16269  005CE0  6B91               	clrf	_USBDeviceState& (0+255),b	;volatile
 16270                           
 16271                           ; BSR set to: 0
 16272  005CE2  0012               	return		;funcret
 16273  005CE4                     __end_ofi2_USBDeviceInit:
 16274                           	opt stack 0
 16275                           pclatu	equ	0xFFB
 16276                           pclath	equ	0xFFA
 16277                           tblptru	equ	0xFF8
 16278                           tblptrh	equ	0xFF7
 16279                           tblptrl	equ	0xFF6
 16280                           tablat	equ	0xFF5
 16281                           prodh	equ	0xFF4
 16282                           prodl	equ	0xFF3
 16283                           intcon	equ	0xFF2
 16284                           postinc0	equ	0xFEE
 16285                           wreg	equ	0xFE8
 16286                           indf1	equ	0xFE7
 16287                           postdec1	equ	0xFE5
 16288                           fsr1h	equ	0xFE2
 16289                           fsr1l	equ	0xFE1
 16290                           indf2	equ	0xFDF
 16291                           postinc2	equ	0xFDE
 16292                           postdec2	equ	0xFDD
 16293                           plusw2	equ	0xFDB
 16294                           fsr2h	equ	0xFDA
 16295                           fsr2l	equ	0xFD9
 16296                           status	equ	0xFD8
 16297                           
 16298 ;; *************** function _USBWakeFromSuspend *****************
 16299 ;; Defined at:
 16300 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 16301 ;; Parameters:    Size  Location     Type
 16302 ;;		None
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;		None
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16309 ;; Tracked objects:
 16310 ;;		On entry : F/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16314 ;;      Params:         0       0       0       0       0       0       0       0       0
 16315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16317 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16318 ;;Total ram usage:        0 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    5
 16321 ;; This function calls:
 16322 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16323 ;; This function is called by:
 16324 ;;		_USBDeviceTasks
 16325 ;; This function uses a non-reentrant model
 16326 ;;
 16327                           
 16328                           	psect	text81
 16329  004482                     __ptext81:
 16330                           	opt stack 0
 16331  004482                     _USBWakeFromSuspend:
 16332                           	opt stack 13
 16333                           
 16334                           ; BSR set to: 0
 16335                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;incstack = 0
 16339  004482  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16343  004484  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16344  004486  0E74               	movlw	116
 16345  004488  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16346  00448A  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16347  00448C  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16348  00448E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16349  004490  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16350  004492  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16351                           
 16352                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 16353  004496  9260               	bcf	3936,1,c	;volatile
 16354                           
 16355                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 16356  004498  9464               	bcf	3940,2,c	;volatile
 16357                           
 16358                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 16359  00449A  D001               	goto	i2l8037
 16360  00449C                     i2l8035:
 16361                           
 16362                           ;usb_device.c: 1977: {
 16363                           ;usb_device.c: 1978: (UIR &= 0xFB);
 16364  00449C  9465               	bcf	3941,2,c	;volatile
 16365  00449E                     i2l8037:
 16366  00449E  A465               	btfss	3941,2,c	;volatile
 16367  0044A0  0012               	return		;funcret
 16368  0044A2  D7FC               	goto	i2l8035
 16369  0044A4                     __end_of_USBWakeFromSuspend:
 16370                           	opt stack 0
 16371                           pclatu	equ	0xFFB
 16372                           pclath	equ	0xFFA
 16373                           tblptru	equ	0xFF8
 16374                           tblptrh	equ	0xFF7
 16375                           tblptrl	equ	0xFF6
 16376                           tablat	equ	0xFF5
 16377                           prodh	equ	0xFF4
 16378                           prodl	equ	0xFF3
 16379                           intcon	equ	0xFF2
 16380                           postinc0	equ	0xFEE
 16381                           wreg	equ	0xFE8
 16382                           indf1	equ	0xFE7
 16383                           postdec1	equ	0xFE5
 16384                           fsr1h	equ	0xFE2
 16385                           fsr1l	equ	0xFE1
 16386                           indf2	equ	0xFDF
 16387                           postinc2	equ	0xFDE
 16388                           postdec2	equ	0xFDD
 16389                           plusw2	equ	0xFDB
 16390                           fsr2h	equ	0xFDA
 16391                           fsr2l	equ	0xFD9
 16392                           status	equ	0xFD8
 16393                           
 16394 ;; *************** function _USBSuspend *****************
 16395 ;; Defined at:
 16396 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;		None
 16399 ;; Auto vars:     Size  Location     Type
 16400 ;;		None
 16401 ;; Return value:  Size  Location     Type
 16402 ;;                  1    wreg      void 
 16403 ;; Registers used:
 16404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16405 ;; Tracked objects:
 16406 ;;		On entry : 0/0
 16407 ;;		On exit  : 0/0
 16408 ;;		Unchanged: 0/0
 16409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16410 ;;      Params:         0       0       0       0       0       0       0       0       0
 16411 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16413 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16414 ;;Total ram usage:        0 bytes
 16415 ;; Hardware stack levels used:    1
 16416 ;; Hardware stack levels required when called:    5
 16417 ;; This function calls:
 16418 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16419 ;; This function is called by:
 16420 ;;		_USBDeviceTasks
 16421 ;; This function uses a non-reentrant model
 16422 ;;
 16423                           
 16424                           	psect	text82
 16425  0043EA                     __ptext82:
 16426                           	opt stack 0
 16427  0043EA                     _USBSuspend:
 16428                           	opt stack 13
 16429                           
 16430                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 16431                           
 16432                           ;incstack = 0
 16433  0043EA  8464               	bsf	3940,2,c	;volatile
 16434                           
 16435                           ;usb_device.c: 1915: (UIR &= 0xEF);
 16436  0043EC  9865               	bcf	3941,4,c	;volatile
 16437                           
 16438                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 16439  0043EE  8260               	bsf	3936,1,c	;volatile
 16440                           
 16441                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 16442  0043F0  0E01               	movlw	1
 16443  0043F2  0100               	movlb	0	; () banked
 16444  0043F4  6F8E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16448  0043F6  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16449  0043F8  0E75               	movlw	117
 16450  0043FA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16451  0043FC  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16452  0043FE  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16453  004400  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16454  004402  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16455  004404  EFA1  F024         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16456  004408                     __end_of_USBSuspend:
 16457                           	opt stack 0
 16458                           pclatu	equ	0xFFB
 16459                           pclath	equ	0xFFA
 16460                           tblptru	equ	0xFF8
 16461                           tblptrh	equ	0xFF7
 16462                           tblptrl	equ	0xFF6
 16463                           tablat	equ	0xFF5
 16464                           prodh	equ	0xFF4
 16465                           prodl	equ	0xFF3
 16466                           intcon	equ	0xFF2
 16467                           postinc0	equ	0xFEE
 16468                           wreg	equ	0xFE8
 16469                           indf1	equ	0xFE7
 16470                           postdec1	equ	0xFE5
 16471                           fsr1h	equ	0xFE2
 16472                           fsr1l	equ	0xFE1
 16473                           indf2	equ	0xFDF
 16474                           postinc2	equ	0xFDE
 16475                           postdec2	equ	0xFDD
 16476                           plusw2	equ	0xFDB
 16477                           fsr2h	equ	0xFDA
 16478                           fsr2l	equ	0xFD9
 16479                           status	equ	0xFD8
 16480                           
 16481 ;; *************** function _USBStallHandler *****************
 16482 ;; Defined at:
 16483 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 16484 ;; Parameters:    Size  Location     Type
 16485 ;;		None
 16486 ;; Auto vars:     Size  Location     Type
 16487 ;;		None
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  1    wreg      void 
 16490 ;; Registers used:
 16491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16492 ;; Tracked objects:
 16493 ;;		On entry : 0/0
 16494 ;;		On exit  : 0/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16497 ;;      Params:         0       0       0       0       0       0       0       0       0
 16498 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16499 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16500 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16501 ;;Total ram usage:        1 bytes
 16502 ;; Hardware stack levels used:    1
 16503 ;; This function calls:
 16504 ;;		Nothing
 16505 ;; This function is called by:
 16506 ;;		_USBDeviceTasks
 16507 ;; This function uses a non-reentrant model
 16508 ;;
 16509                           
 16510                           	psect	text83
 16511  00487E                     __ptext83:
 16512                           	opt stack 0
 16513  00487E                     _USBStallHandler:
 16514                           	opt stack 18
 16515                           
 16516                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 16517                           
 16518                           ;incstack = 0
 16519  00487E  A06A               	btfss	3946,0,c	;volatile
 16520  004880  D01B               	goto	i2l1621
 16521                           
 16522                           ;usb_device.c: 1859: {
 16523                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 16524  004882  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16525  004886  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16526  00488A  0E80               	movlw	128
 16527  00488C  18DE               	xorwf	postinc2,w,c
 16528  00488E  E113               	bnz	i2l8059
 16529  004890  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16530  004894  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16531  004898  0E84               	movlw	132
 16532  00489A  18DE               	xorwf	postinc2,w,c
 16533  00489C  E10C               	bnz	i2l8059
 16534                           
 16535                           ;usb_device.c: 1862: {
 16536                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16537  00489E  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16538  0048A2  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16539  0048A6  0E0C               	movlw	12
 16540  0048A8  6EDF               	movwf	indf2,c
 16541                           
 16542                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16543  0048AA  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16544  0048AE  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16545  0048B2  0E00               	movlw	0
 16546  0048B4  8EDB               	bsf	plusw2,7,c
 16547  0048B6                     i2l8059:
 16548                           
 16549                           ;usb_device.c: 1866: }
 16550                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 16551  0048B6  906A               	bcf	3946,0,c	;volatile
 16552  0048B8                     i2l1621:
 16553                           
 16554                           ;usb_device.c: 1868: }
 16555                           ;usb_device.c: 1870: (UIR &= 0xDF);
 16556  0048B8  9A65               	bcf	3941,5,c	;volatile
 16557  0048BA  0012               	return		;funcret
 16558  0048BC                     __end_of_USBStallHandler:
 16559                           	opt stack 0
 16560                           pclatu	equ	0xFFB
 16561                           pclath	equ	0xFFA
 16562                           tblptru	equ	0xFF8
 16563                           tblptrh	equ	0xFF7
 16564                           tblptrl	equ	0xFF6
 16565                           tablat	equ	0xFF5
 16566                           prodh	equ	0xFF4
 16567                           prodl	equ	0xFF3
 16568                           intcon	equ	0xFF2
 16569                           postinc0	equ	0xFEE
 16570                           wreg	equ	0xFE8
 16571                           indf1	equ	0xFE7
 16572                           postdec1	equ	0xFE5
 16573                           fsr1h	equ	0xFE2
 16574                           fsr1l	equ	0xFE1
 16575                           indf2	equ	0xFDF
 16576                           postinc2	equ	0xFDE
 16577                           postdec2	equ	0xFDD
 16578                           plusw2	equ	0xFDB
 16579                           fsr2h	equ	0xFDA
 16580                           fsr2l	equ	0xFD9
 16581                           status	equ	0xFD8
 16582                           
 16583 ;; *************** function _USBCtrlEPService *****************
 16584 ;; Defined at:
 16585 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 16586 ;; Parameters:    Size  Location     Type
 16587 ;;		None
 16588 ;; Auto vars:     Size  Location     Type
 16589 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 16590 ;; Return value:  Size  Location     Type
 16591 ;;                  1    wreg      void 
 16592 ;; Registers used:
 16593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16594 ;; Tracked objects:
 16595 ;;		On entry : F/0
 16596 ;;		On exit  : 0/0
 16597 ;;		Unchanged: 0/0
 16598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16599 ;;      Params:         0       0       0       0       0       0       0       0       0
 16600 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16601 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16602 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16603 ;;Total ram usage:        3 bytes
 16604 ;; Hardware stack levels used:    1
 16605 ;; Hardware stack levels required when called:    8
 16606 ;; This function calls:
 16607 ;;		_USBCtrlTrfInHandler
 16608 ;;		_USBCtrlTrfOutHandler
 16609 ;;		_USBCtrlTrfSetupHandler
 16610 ;; This function is called by:
 16611 ;;		_USBDeviceTasks
 16612 ;; This function uses a non-reentrant model
 16613 ;;
 16614                           
 16615                           	psect	text84
 16616  0056C8                     __ptext84:
 16617                           	opt stack 0
 16618  0056C8                     _USBCtrlEPService:
 16619                           	opt stack 10
 16620                           
 16621                           ; BSR set to: 0
 16622                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 16623                           
 16624                           ;incstack = 0
 16625  0056C8  0E2D               	movlw	45
 16626  0056CA  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 16630  0056CC  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 16631  0056D0  0EFD               	movlw	253
 16632  0056D2  164B               	andwf	??_USBCtrlEPService,f,c
 16633  0056D4  E14B               	bnz	i2l8093
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;usb_device.c: 2013: {
 16637                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 16638  0056D6  90D8               	bcf	status,0,c
 16639  0056D8  302D               	rrcf	_USTATcopy,w,c	;volatile
 16640  0056DA  0B3F               	andlw	63
 16641  0056DC  0D04               	mullw	4
 16642  0056DE  0E00               	movlw	0
 16643  0056E0  24F3               	addwf	prodl,w,c
 16644  0056E2  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 16645  0056E4  0E04               	movlw	4
 16646  0056E6  20F4               	addwfc	prodh,w,c
 16647  0056E8  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16651  0056EA  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16652  0056EE  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 16656  0056F2  0E04               	movlw	4
 16657  0056F4  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 16661  0056F6  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16662  0056FA  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16663  0056FE  30DF               	rrcf	indf2,w,c
 16664  005700  32E8               	rrcf	wreg,f,c
 16665  005702  0B0F               	andlw	15
 16666  005704  0A0D               	xorlw	13
 16667  005706  E002 EF5D  F025    	bnz	_USBCtrlTrfOutHandler
 16668                           
 16669                           ; BSR set to: 0
 16670                           ;usb_device.c: 2025: {
 16671                           ;usb_device.c: 2026: unsigned char setup_cnt;
 16672                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 16673  00570C  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 16674  00570E                     i2l8079:
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;usb_device.c: 2033: {
 16678                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 16679  00570E  EE20 F002          	lfsr	2,2
 16680  005712  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16681  005714  26D9               	addwf	fsr2l,f,c
 16682  005716  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16683  005718  22DA               	addwfc	fsr2h,f,c
 16684  00571A  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 16685  00571E  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 16686  005722  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 16687  005726  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 16688  00572A  0E30               	movlw	48
 16689  00572C  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 16690  00572E  6EE1               	movwf	fsr1l,c
 16691  005730  6AE2               	clrf	fsr1h,c
 16692  005732  0E04               	movlw	4
 16693  005734  22E2               	addwfc	fsr1h,f,c
 16694  005736  CFDF FFE7          	movff	indf2,indf1
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 16698  00573A  EE20 F002          	lfsr	2,2
 16699  00573E  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16700  005740  26D9               	addwf	fsr2l,f,c
 16701  005742  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16702  005744  22DA               	addwfc	fsr2h,f,c
 16703  005746  2ADE               	incf	postinc2,f,c
 16704  005748  0E00               	movlw	0
 16705  00574A  22DD               	addwfc	postdec2,f,c
 16706                           
 16707                           ; BSR set to: 0
 16708  00574C  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 16709                           
 16710                           ; BSR set to: 0
 16711  00574E  0E07               	movlw	7
 16712  005750  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 16713  005752  D7DD               	goto	i2l8079
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;usb_device.c: 2036: }
 16717                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16718  005754  EE20 F002          	lfsr	2,2
 16719  005758  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16720  00575A  26D9               	addwf	fsr2l,f,c
 16721  00575C  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16722  00575E  22DA               	addwfc	fsr2h,f,c
 16723  005760  0E30               	movlw	48
 16724  005762  6EDE               	movwf	postinc2,c
 16725  005764  0E04               	movlw	4
 16726  005766  6EDD               	movwf	postdec2,c
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 16730  005768  EF30  F026         	goto	_USBCtrlTrfSetupHandler	;wreg free
 16731  00576C                     i2l8093:
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 16735  00576C  502D               	movf	_USTATcopy,w,c	;volatile
 16736  00576E  0BFD               	andlw	253
 16737  005770  0A04               	xorlw	4
 16738  005772  B4D8               	btfsc	status,2,c
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;usb_device.c: 2049: {
 16742                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 16743  005774  EC34  F02D         	call	_USBCtrlTrfInHandler	;wreg free
 16744  005778  0012               	return		;funcret
 16745  00577A                     __end_of_USBCtrlEPService:
 16746                           	opt stack 0
 16747                           pclatu	equ	0xFFB
 16748                           pclath	equ	0xFFA
 16749                           tblptru	equ	0xFF8
 16750                           tblptrh	equ	0xFF7
 16751                           tblptrl	equ	0xFF6
 16752                           tablat	equ	0xFF5
 16753                           prodh	equ	0xFF4
 16754                           prodl	equ	0xFF3
 16755                           intcon	equ	0xFF2
 16756                           postinc0	equ	0xFEE
 16757                           wreg	equ	0xFE8
 16758                           indf1	equ	0xFE7
 16759                           postdec1	equ	0xFE5
 16760                           fsr1h	equ	0xFE2
 16761                           fsr1l	equ	0xFE1
 16762                           indf2	equ	0xFDF
 16763                           postinc2	equ	0xFDE
 16764                           postdec2	equ	0xFDD
 16765                           plusw2	equ	0xFDB
 16766                           fsr2h	equ	0xFDA
 16767                           fsr2l	equ	0xFD9
 16768                           status	equ	0xFD8
 16769                           
 16770 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16771 ;; Defined at:
 16772 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;		None
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      void 
 16779 ;; Registers used:
 16780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : F/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16786 ;;      Params:         0       0       0       0       0       0       0       0       0
 16787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16789 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16790 ;;Total ram usage:        0 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; Hardware stack levels required when called:    7
 16793 ;; This function calls:
 16794 ;;		_USBCheckStdRequest
 16795 ;;		_USBCtrlEPServiceComplete
 16796 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16797 ;; This function is called by:
 16798 ;;		_USBCtrlEPService
 16799 ;; This function uses a non-reentrant model
 16800 ;;
 16801                           
 16802                           	psect	text85
 16803  004C60                     __ptext85:
 16804                           	opt stack 0
 16805  004C60                     _USBCtrlTrfSetupHandler:
 16806                           	opt stack 10
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;usb_device.c: 2102: shortPacketStatus = 0;
 16810                           
 16811                           ;incstack = 0
 16812  004C60  6A2B               	clrf	_shortPacketStatus,c	;volatile
 16813                           
 16814                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 16815  004C62  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 16816                           
 16817                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 16818  004C64  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16819                           
 16820                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 16821  004C66  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16822                           
 16823                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 16824  004C68  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 16825                           
 16826                           ;usb_device.c: 2107: controlTransferState = 0;
 16827  004C6A  6A21               	clrf	_controlTransferState,c	;volatile
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16831  004C6C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16832  004C70  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16833  004C74  0E7F               	movlw	127
 16834  004C76  16DF               	andwf	indf2,f,c
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16838  004C78  0E04               	movlw	4
 16839  004C7A  1A0F               	xorwf	_pBDTEntryIn,f,c
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16843  004C7C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16844  004C80  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16845  004C84  0E7F               	movlw	127
 16846  004C86  16DF               	andwf	indf2,f,c
 16847                           
 16848                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16849  004C88  0E04               	movlw	4
 16850  004C8A  1A0F               	xorwf	_pBDTEntryIn,f,c
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16854  004C8C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16855  004C90  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16856  004C94  0E7F               	movlw	127
 16857  004C96  16DF               	andwf	indf2,f,c
 16858                           
 16859                           ; BSR set to: 0
 16860                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 16861  004C98  6A0C               	clrf	_inPipes+3,c	;volatile
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 16865  004C9A  6A0D               	clrf	_inPipes+4,c	;volatile
 16866  004C9C  6A0E               	clrf	_inPipes+5,c	;volatile
 16867                           
 16868                           ; BSR set to: 0
 16869                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 16870  004C9E  6A04               	clrf	_outPipes+3,c	;volatile
 16871                           
 16872                           ; BSR set to: 0
 16873                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 16874  004CA0  6A05               	clrf	_outPipes+4,c	;volatile
 16875  004CA2  6A06               	clrf	_outPipes+5,c	;volatile
 16876                           
 16877                           ; BSR set to: 0
 16878                           ;usb_device.c: 2131: USBCheckStdRequest();
 16879  004CA4  EC71  F02A         	call	_USBCheckStdRequest	;wreg free
 16880                           
 16881                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16882  004CA8  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16883  004CAA  0E03               	movlw	3
 16884  004CAC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16885  004CAE  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16886  004CB0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16887  004CB2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16888  004CB4  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16889  004CB6  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16890                           
 16891                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 16892  004CBA  EF4D  F02F         	goto	_USBCtrlEPServiceComplete	;wreg free
 16893  004CBE                     __end_of_USBCtrlTrfSetupHandler:
 16894                           	opt stack 0
 16895                           pclatu	equ	0xFFB
 16896                           pclath	equ	0xFFA
 16897                           tblptru	equ	0xFF8
 16898                           tblptrh	equ	0xFF7
 16899                           tblptrl	equ	0xFF6
 16900                           tablat	equ	0xFF5
 16901                           prodh	equ	0xFF4
 16902                           prodl	equ	0xFF3
 16903                           intcon	equ	0xFF2
 16904                           postinc0	equ	0xFEE
 16905                           wreg	equ	0xFE8
 16906                           indf1	equ	0xFE7
 16907                           postdec1	equ	0xFE5
 16908                           fsr1h	equ	0xFE2
 16909                           fsr1l	equ	0xFE1
 16910                           indf2	equ	0xFDF
 16911                           postinc2	equ	0xFDE
 16912                           postdec2	equ	0xFDD
 16913                           plusw2	equ	0xFDB
 16914                           fsr2h	equ	0xFDA
 16915                           fsr2l	equ	0xFD9
 16916                           status	equ	0xFD8
 16917                           
 16918 ;; *************** function _USBCtrlEPServiceComplete *****************
 16919 ;; Defined at:
 16920 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;		None
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;		None
 16925 ;; Return value:  Size  Location     Type
 16926 ;;                  1    wreg      void 
 16927 ;; Registers used:
 16928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16929 ;; Tracked objects:
 16930 ;;		On entry : 0/0
 16931 ;;		On exit  : 0/0
 16932 ;;		Unchanged: 0/0
 16933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16934 ;;      Params:         0       0       0       0       0       0       0       0       0
 16935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16937 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16938 ;;Total ram usage:        0 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:    2
 16941 ;; This function calls:
 16942 ;;		_USBCtrlEPAllowDataStage
 16943 ;;		_USBCtrlEPAllowStatusStage
 16944 ;; This function is called by:
 16945 ;;		_USBCtrlTrfSetupHandler
 16946 ;; This function uses a non-reentrant model
 16947 ;;
 16948                           
 16949                           	psect	text86
 16950  005E9A                     __ptext86:
 16951                           	opt stack 0
 16952  005E9A                     _USBCtrlEPServiceComplete:
 16953                           	opt stack 14
 16954                           
 16955                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 16956                           
 16957                           ;incstack = 0
 16958  005E9A  9860               	bcf	3936,4,c	;volatile
 16959                           
 16960                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 16961  005E9C  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 16962  005E9E  D037               	goto	i2l1545
 16963                           
 16964                           ;usb_device.c: 1295: {
 16965                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 16966  005EA0  AE04               	btfss	_outPipes+3,7,c	;volatile
 16967  005EA2  D00A               	goto	i2l6489
 16968                           
 16969                           ;usb_device.c: 1297: {
 16970                           ;usb_device.c: 1298: controlTransferState = 2;
 16971  005EA4  0E02               	movlw	2
 16972  005EA6  6E21               	movwf	_controlTransferState,c	;volatile
 16973                           
 16974                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 16975  005EA8  0100               	movlb	0	; () banked
 16976  005EAA  5190               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 16977  005EAC  E102               	bnz	i2l6485
 16978                           
 16979                           ; BSR set to: 0
 16980                           ;usb_device.c: 1310: {
 16981                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 16982  005EAE  EC49  F029         	call	_USBCtrlEPAllowDataStage	;wreg free
 16983  005EB2                     i2l6485:
 16984                           
 16985                           ; BSR set to: 0
 16986                           ;usb_device.c: 1312: }
 16987                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 16988  005EB2  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 16992  005EB4  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16993                           
 16994                           ;usb_device.c: 1318: }
 16995  005EB6  0012               	return	
 16996  005EB8                     i2l6489:
 16997                           
 16998                           ;usb_device.c: 1319: else
 16999                           ;usb_device.c: 1320: {
 17000                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 17001  005EB8  EE20 F001          	lfsr	2,1
 17002  005EBC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17003  005EBE  26D9               	addwf	fsr2l,f,c
 17004  005EC0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17005  005EC2  22DA               	addwfc	fsr2h,f,c
 17006  005EC4  0E08               	movlw	8
 17007  005EC6  6EDF               	movwf	indf2,c
 17008                           
 17009                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17010  005EC8  EE20 F002          	lfsr	2,2
 17011  005ECC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17012  005ECE  26D9               	addwf	fsr2l,f,c
 17013  005ED0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17014  005ED2  22DA               	addwfc	fsr2h,f,c
 17015  005ED4  0E30               	movlw	48
 17016  005ED6  6EDE               	movwf	postinc2,c
 17017  005ED8  0E04               	movlw	4
 17018  005EDA  6EDD               	movwf	postdec2,c
 17019                           
 17020                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17021  005EDC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17022  005EE0  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17023  005EE4  0E0C               	movlw	12
 17024  005EE6  6EDF               	movwf	indf2,c
 17025                           
 17026                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17027  005EE8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17028  005EEC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17029  005EF0  0E00               	movlw	0
 17030  005EF2  8EDB               	bsf	plusw2,7,c
 17031                           
 17032                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 17033  005EF4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17034  005EF8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17035  005EFC  0E04               	movlw	4
 17036  005EFE  6EDF               	movwf	indf2,c
 17037                           
 17038                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17039  005F00  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17040  005F04  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17041  005F08  0E00               	movlw	0
 17042  005F0A  8EDB               	bsf	plusw2,7,c
 17043  005F0C  0C00               	retlw	0
 17044  005F0E                     i2l1545:
 17045                           
 17046                           ;usb_device.c: 1333: else
 17047                           ;usb_device.c: 1334: {
 17048                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 17049  005F0E  0104               	movlb	4	; () banked
 17050  005F10  AF30               	btfss	48,7,b	;volatile
 17051  005F12  D00E               	goto	i2l6509
 17052                           
 17053                           ; BSR set to: 4
 17054                           ;usb_device.c: 1336: {
 17055                           ;usb_device.c: 1337: controlTransferState = 1;
 17056  005F14  0E01               	movlw	1
 17057  005F16  6E21               	movwf	_controlTransferState,c	;volatile
 17058                           
 17059                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 17060  005F18  0100               	movlb	0	; () banked
 17061  005F1A  518F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17062  005F1C  E102               	bnz	i2l6501
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;usb_device.c: 1352: {
 17066                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 17067  005F1E  EC49  F029         	call	_USBCtrlEPAllowDataStage	;wreg free
 17068  005F22                     i2l6501:
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;usb_device.c: 1354: }
 17072                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 17073  005F22  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17074                           
 17075                           ; BSR set to: 0
 17076                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 17077  005F24  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 17081  005F26  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 17082  005F28  A4D8               	btfss	status,2,c
 17083  005F2A  0012               	return	
 17084                           
 17085                           ; BSR set to: 0
 17086                           ;usb_device.c: 1379: {
 17087                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 17088  005F2C  EF75  F02C         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 17089  005F30                     i2l6509:
 17090                           
 17091                           ; BSR set to: 4
 17092                           ;usb_device.c: 1383: else
 17093                           ;usb_device.c: 1384: {
 17094                           ;usb_device.c: 1395: controlTransferState = 2;
 17095  005F30  0E02               	movlw	2
 17096  005F32  6E21               	movwf	_controlTransferState,c	;volatile
 17097                           
 17098                           ; BSR set to: 4
 17099                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 17100  005F34  EE20 F001          	lfsr	2,1
 17101  005F38  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17102  005F3A  26D9               	addwf	fsr2l,f,c
 17103  005F3C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17104  005F3E  22DA               	addwfc	fsr2h,f,c
 17105  005F40  0E08               	movlw	8
 17106  005F42  6EDF               	movwf	indf2,c
 17107                           
 17108                           ; BSR set to: 4
 17109                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17110  005F44  EE20 F002          	lfsr	2,2
 17111  005F48  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17112  005F4A  26D9               	addwf	fsr2l,f,c
 17113  005F4C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17114  005F4E  22DA               	addwfc	fsr2h,f,c
 17115  005F50  0E30               	movlw	48
 17116  005F52  6EDE               	movwf	postinc2,c
 17117  005F54  0E04               	movlw	4
 17118  005F56  6EDD               	movwf	postdec2,c
 17119                           
 17120                           ; BSR set to: 4
 17121                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17122  005F58  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17123  005F5C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17124  005F60  6EDF               	movwf	indf2,c
 17125                           
 17126                           ; BSR set to: 4
 17127                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17128  005F62  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17129  005F66  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17130  005F6A  0E00               	movlw	0
 17131  005F6C  8EDB               	bsf	plusw2,7,c
 17132                           
 17133                           ; BSR set to: 4
 17134                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 17135  005F6E  0100               	movlb	0	; () banked
 17136  005F70  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17137                           
 17138                           ; BSR set to: 0
 17139                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 17140  005F72  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17141                           
 17142                           ; BSR set to: 0
 17143                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 17144  005F74  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 17145  005F76  E102 EF75  F02C    	bz	_USBCtrlEPAllowStatusStage
 17146  005F7C  0012               	return	
 17147  005F7E                     __end_of_USBCtrlEPServiceComplete:
 17148                           	opt stack 0
 17149                           pclatu	equ	0xFFB
 17150                           pclath	equ	0xFFA
 17151                           tblptru	equ	0xFF8
 17152                           tblptrh	equ	0xFF7
 17153                           tblptrl	equ	0xFF6
 17154                           tablat	equ	0xFF5
 17155                           prodh	equ	0xFF4
 17156                           prodl	equ	0xFF3
 17157                           intcon	equ	0xFF2
 17158                           postinc0	equ	0xFEE
 17159                           wreg	equ	0xFE8
 17160                           indf1	equ	0xFE7
 17161                           postdec1	equ	0xFE5
 17162                           fsr1h	equ	0xFE2
 17163                           fsr1l	equ	0xFE1
 17164                           indf2	equ	0xFDF
 17165                           postinc2	equ	0xFDE
 17166                           postdec2	equ	0xFDD
 17167                           plusw2	equ	0xFDB
 17168                           fsr2h	equ	0xFDA
 17169                           fsr2l	equ	0xFD9
 17170                           status	equ	0xFD8
 17171                           
 17172 ;; *************** function _USBCtrlEPAllowDataStage *****************
 17173 ;; Defined at:
 17174 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;		None
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;		None
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      void 
 17181 ;; Registers used:
 17182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : F/0
 17185 ;;		On exit  : F/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0
 17189 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17191 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17192 ;;Total ram usage:        0 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:    1
 17195 ;; This function calls:
 17196 ;;		_USBCtrlTrfTxService
 17197 ;; This function is called by:
 17198 ;;		_USBCtrlEPServiceComplete
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           	psect	text87
 17203  005292                     __ptext87:
 17204                           	opt stack 0
 17205  005292                     _USBCtrlEPAllowDataStage:
 17206                           	opt stack 14
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 17210                           
 17211                           ;incstack = 0
 17212  005292  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17213                           
 17214                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 17215  005294  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17216                           
 17217                           ; BSR set to: 0
 17218                           ;usb_device.c: 1178: if(controlTransferState == 2)
 17219  005296  0E02               	movlw	2
 17220  005298  1821               	xorwf	_controlTransferState,w,c	;volatile
 17221  00529A  E11F               	bnz	i2l6149
 17222                           
 17223                           ; BSR set to: 0
 17224                           ;usb_device.c: 1179: {
 17225                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 17226  00529C  EE20 F001          	lfsr	2,1
 17227  0052A0  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17228  0052A2  26D9               	addwf	fsr2l,f,c
 17229  0052A4  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17230  0052A6  22DA               	addwfc	fsr2h,f,c
 17231  0052A8  0E08               	movlw	8
 17232  0052AA  6EDF               	movwf	indf2,c
 17233                           
 17234                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17235  0052AC  EE20 F002          	lfsr	2,2
 17236  0052B0  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17237  0052B2  26D9               	addwf	fsr2l,f,c
 17238  0052B4  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17239  0052B6  22DA               	addwfc	fsr2h,f,c
 17240  0052B8  0E38               	movlw	56
 17241  0052BA  6EDE               	movwf	postinc2,c
 17242  0052BC  0E04               	movlw	4
 17243  0052BE  6EDD               	movwf	postdec2,c
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 17247  0052C0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17248  0052C4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17249  0052C8  0E48               	movlw	72
 17250  0052CA  6EDF               	movwf	indf2,c
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17254  0052CC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17255  0052D0  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17256  0052D4  0E00               	movlw	0
 17257  0052D6  8EDB               	bsf	plusw2,7,c
 17258                           
 17259                           ;usb_device.c: 1185: }
 17260  0052D8  0C00               	retlw	0
 17261  0052DA                     i2l6149:
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;usb_device.c: 1186: else
 17265                           ;usb_device.c: 1187: {
 17266                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 17267  0052DA  500D               	movf	_inPipes+4,w,c	;volatile
 17268  0052DC  0104               	movlb	4	; () banked
 17269  0052DE  5D36               	subwf	54,w,b	;volatile
 17270  0052E0  500E               	movf	_inPipes+5,w,c	;volatile
 17271  0052E2  5937               	subwfb	55,w,b	;volatile
 17272  0052E4  E204               	bc	i2l6153
 17273                           
 17274                           ; BSR set to: 4
 17275                           ;usb_device.c: 1191: {
 17276                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 17277  0052E6  C436 F00D          	movff	1078,_inPipes+4	;volatile
 17278  0052EA  C437 F00E          	movff	1079,_inPipes+5	;volatile
 17279  0052EE                     i2l6153:
 17280                           
 17281                           ; BSR set to: 4
 17282                           ;usb_device.c: 1193: }
 17283                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 17284  0052EE  ECD3  F02C         	call	_USBCtrlTrfTxService	;wreg free
 17285                           
 17286                           ; BSR set to: 0
 17287                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 17288  0052F2  EE20 F002          	lfsr	2,2
 17289  0052F6  500F               	movf	_pBDTEntryIn,w,c
 17290  0052F8  26D9               	addwf	fsr2l,f,c
 17291  0052FA  5010               	movf	_pBDTEntryIn+1,w,c
 17292  0052FC  22DA               	addwfc	fsr2h,f,c
 17293  0052FE  0E38               	movlw	56
 17294  005300  6EDE               	movwf	postinc2,c
 17295  005302  0E04               	movlw	4
 17296  005304  6EDD               	movwf	postdec2,c
 17297                           
 17298                           ; BSR set to: 0
 17299                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17300  005306  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17301  00530A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17302  00530E  0E48               	movlw	72
 17303  005310  6EDF               	movwf	indf2,c
 17304                           
 17305                           ; BSR set to: 0
 17306                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17307  005312  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17308  005316  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17309  00531A  0E00               	movlw	0
 17310  00531C  8EDB               	bsf	plusw2,7,c
 17311                           
 17312                           ; BSR set to: 0
 17313  00531E  0C00               	retlw	0	;funcret
 17314  005320                     __end_of_USBCtrlEPAllowDataStage:
 17315                           	opt stack 0
 17316                           pclatu	equ	0xFFB
 17317                           pclath	equ	0xFFA
 17318                           tblptru	equ	0xFF8
 17319                           tblptrh	equ	0xFF7
 17320                           tblptrl	equ	0xFF6
 17321                           tablat	equ	0xFF5
 17322                           prodh	equ	0xFF4
 17323                           prodl	equ	0xFF3
 17324                           intcon	equ	0xFF2
 17325                           postinc0	equ	0xFEE
 17326                           wreg	equ	0xFE8
 17327                           indf1	equ	0xFE7
 17328                           postdec1	equ	0xFE5
 17329                           fsr1h	equ	0xFE2
 17330                           fsr1l	equ	0xFE1
 17331                           indf2	equ	0xFDF
 17332                           postinc2	equ	0xFDE
 17333                           postdec2	equ	0xFDD
 17334                           plusw2	equ	0xFDB
 17335                           fsr2h	equ	0xFDA
 17336                           fsr2l	equ	0xFD9
 17337                           status	equ	0xFD8
 17338                           
 17339 ;; *************** function _USBCheckStdRequest *****************
 17340 ;; Defined at:
 17341 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 17342 ;; Parameters:    Size  Location     Type
 17343 ;;		None
 17344 ;; Auto vars:     Size  Location     Type
 17345 ;;		None
 17346 ;; Return value:  Size  Location     Type
 17347 ;;                  1    wreg      void 
 17348 ;; Registers used:
 17349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17350 ;; Tracked objects:
 17351 ;;		On entry : F/0
 17352 ;;		On exit  : 0/0
 17353 ;;		Unchanged: 0/0
 17354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17355 ;;      Params:         0       0       0       0       0       0       0       0       0
 17356 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17357 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17358 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17359 ;;Total ram usage:        1 bytes
 17360 ;; Hardware stack levels used:    1
 17361 ;; Hardware stack levels required when called:    6
 17362 ;; This function calls:
 17363 ;;		_USBStdFeatureReqHandler
 17364 ;;		_USBStdGetDscHandler
 17365 ;;		_USBStdGetStatusHandler
 17366 ;;		_USBStdSetCfgHandler
 17367 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17368 ;; This function is called by:
 17369 ;;		_USBCtrlTrfSetupHandler
 17370 ;; This function uses a non-reentrant model
 17371 ;;
 17372                           
 17373                           	psect	text88
 17374  0054E2                     __ptext88:
 17375                           	opt stack 0
 17376  0054E2                     _USBCheckStdRequest:
 17377                           	opt stack 10
 17378                           
 17379                           ; BSR set to: 0
 17380                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;incstack = 0
 17384  0054E2  0104               	movlb	4	; () banked
 17385  0054E4  3930               	swapf	48,w,b	;volatile
 17386  0054E6  32E8               	rrcf	wreg,f,c
 17387  0054E8  0B03               	andlw	3
 17388  0054EA  E02A               	bz	i2l6611
 17389  0054EC  0012               	return	
 17390  0054EE                     i2l1672:
 17391                           
 17392                           ; BSR set to: 4
 17393                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 17394  0054EE  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17395                           
 17396                           ; BSR set to: 4
 17397                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 17398  0054F0  0E08               	movlw	8
 17399  0054F2  0100               	movlb	0	; () banked
 17400  0054F4  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17401                           
 17402                           ;usb_device.c: 2327: break;
 17403  0054F6  0C08               	retlw	8
 17404  0054F8                     i2l6585:
 17405                           
 17406                           ; BSR set to: 4
 17407                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 17408  0054F8  0E2C               	movlw	low _USBActiveConfiguration
 17409  0054FA  6E09               	movwf	_inPipes,c	;volatile
 17410  0054FC  6A0A               	clrf	_inPipes+1,c	;volatile
 17411                           
 17412                           ; BSR set to: 4
 17413                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17414  0054FE  800C               	bsf	_inPipes+3,0,c	;volatile
 17415                           
 17416                           ; BSR set to: 4
 17417                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 17418  005500  0E01               	movlw	1
 17419  005502  6E0D               	movwf	_inPipes+4,c	;volatile
 17420                           
 17421                           ; BSR set to: 4
 17422                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 17423  005504  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17424                           
 17425                           ;usb_device.c: 2339: break;
 17426  005506  0C01               	retlw	1
 17427  005508                     i2l6597:
 17428                           
 17429                           ; BSR set to: 4
 17430                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 17431  005508  5134               	movf	52,w,b	;volatile
 17432  00550A  0FB7               	addlw	low _USBAlternateInterface
 17433  00550C  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 17434  00550E  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 17435  005512  6A0A               	clrf	_inPipes+1,c	;volatile
 17436                           
 17437                           ; BSR set to: 4
 17438                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17439  005514  800C               	bsf	_inPipes+3,0,c	;volatile
 17440                           
 17441                           ; BSR set to: 4
 17442                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 17443  005516  0E01               	movlw	1
 17444  005518  6E0D               	movwf	_inPipes+4,c	;volatile
 17445                           
 17446                           ; BSR set to: 4
 17447                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 17448  00551A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17449                           
 17450                           ;usb_device.c: 2352: break;
 17451  00551C  0C01               	retlw	1
 17452  00551E                     i2l1681:
 17453                           
 17454                           ; BSR set to: 4
 17455                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 17456  00551E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17457                           
 17458                           ; BSR set to: 4
 17459                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 17460  005520  5134               	movf	52,w,b	;volatile
 17461  005522  0FB7               	addlw	low _USBAlternateInterface
 17462  005524  6ED9               	movwf	fsr2l,c
 17463  005526  6ADA               	clrf	fsr2h,c
 17464  005528  C432 FFDF          	movff	1074,indf2	;volatile
 17465                           
 17466                           ;usb_device.c: 2356: break;
 17467  00552C  0012               	return	
 17468  00552E                     i2l6607:
 17469                           
 17470                           ; BSR set to: 4
 17471                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 17472  00552E  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17473  005530  0E02               	movlw	2
 17474  005532  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17475  005534  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17476  005536  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17477  005538  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17478  00553A  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17479  00553C  EFA1  F024         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17480  005540                     i2l6611:
 17481                           
 17482                           ; BSR set to: 4
 17483  005540  5131               	movf	49,w,b	;volatile
 17484                           
 17485                           ; Switch size 1, requested type "speed"
 17486                           ; Number of cases is 11, Range of values is 0 to 12
 17487                           ; switch strategies available:
 17488                           ; Name         Instructions Cycles
 17489                           ; simple_byte           34    18 (average)
 17490                           ;	Chosen strategy is simple_byte
 17491  005542  E102 EF3E  F028    	bz	_USBStdGetStatusHandler
 17492  005548  0A01               	xorlw	1	; case 1
 17493  00554A  E102 EF84  F034    	bz	_USBStdFeatureReqHandler
 17494  005550  0A02               	xorlw	2	; case 3
 17495  005552  E102 EF84  F034    	bz	_USBStdFeatureReqHandler
 17496  005558  0A06               	xorlw	6	; case 5
 17497  00555A  E0C9               	bz	i2l1672
 17498  00555C  0A03               	xorlw	3	; case 6
 17499  00555E  E102 EF38  F031    	bz	_USBStdGetDscHandler
 17500  005564  0A01               	xorlw	1	; case 7
 17501  005566  E0E3               	bz	i2l6607
 17502  005568  0A0F               	xorlw	15	; case 8
 17503  00556A  E0C6               	bz	i2l6585
 17504  00556C  0A01               	xorlw	1	; case 9
 17505  00556E  E102 EF10  F02B    	bz	_USBStdSetCfgHandler
 17506  005574  0A03               	xorlw	3	; case 10
 17507  005576  E0C8               	bz	i2l6597
 17508  005578  0A01               	xorlw	1	; case 11
 17509  00557A  E0D1               	bz	i2l1681
 17510  00557C  0A07               	xorlw	7	; case 12
 17511  00557E  0012               	return	
 17512  005580                     __end_of_USBCheckStdRequest:
 17513                           	opt stack 0
 17514                           pclatu	equ	0xFFB
 17515                           pclath	equ	0xFFA
 17516                           tblptru	equ	0xFF8
 17517                           tblptrh	equ	0xFF7
 17518                           tblptrl	equ	0xFF6
 17519                           tablat	equ	0xFF5
 17520                           prodh	equ	0xFF4
 17521                           prodl	equ	0xFF3
 17522                           intcon	equ	0xFF2
 17523                           postinc0	equ	0xFEE
 17524                           wreg	equ	0xFE8
 17525                           indf1	equ	0xFE7
 17526                           postdec1	equ	0xFE5
 17527                           fsr1h	equ	0xFE2
 17528                           fsr1l	equ	0xFE1
 17529                           indf2	equ	0xFDF
 17530                           postinc2	equ	0xFDE
 17531                           postdec2	equ	0xFDD
 17532                           plusw2	equ	0xFDB
 17533                           fsr2h	equ	0xFDA
 17534                           fsr2l	equ	0xFD9
 17535                           status	equ	0xFD8
 17536                           
 17537 ;; *************** function _USBStdSetCfgHandler *****************
 17538 ;; Defined at:
 17539 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 17540 ;; Parameters:    Size  Location     Type
 17541 ;;		None
 17542 ;; Auto vars:     Size  Location     Type
 17543 ;;  i               1   21[COMRAM] unsigned char 
 17544 ;; Return value:  Size  Location     Type
 17545 ;;                  1    wreg      void 
 17546 ;; Registers used:
 17547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17548 ;; Tracked objects:
 17549 ;;		On entry : B/4
 17550 ;;		On exit  : F/0
 17551 ;;		Unchanged: 0/0
 17552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17553 ;;      Params:         0       0       0       0       0       0       0       0       0
 17554 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17555 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17556 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17557 ;;Total ram usage:        1 bytes
 17558 ;; Hardware stack levels used:    1
 17559 ;; Hardware stack levels required when called:    5
 17560 ;; This function calls:
 17561 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17562 ;;		i2_memset
 17563 ;; This function is called by:
 17564 ;;		_USBCheckStdRequest
 17565 ;; This function uses a non-reentrant model
 17566 ;;
 17567                           
 17568                           	psect	text89
 17569  005620                     __ptext89:
 17570                           	opt stack 0
 17571  005620                     _USBStdSetCfgHandler:
 17572                           	opt stack 10
 17573                           
 17574                           ;usb_device.c: 1631: uint8_t i;
 17575                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 17576                           
 17577                           ;incstack = 0
 17578  005620  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17579                           
 17580                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 17581  005622  0E6B               	movlw	107
 17582  005624  6E2E               	movwf	i2memset@p1,c
 17583  005626  0E0F               	movlw	15
 17584  005628  6E2F               	movwf	i2memset@p1+1,c
 17585  00562A  6A31               	clrf	i2memset@c+1,c
 17586  00562C  6A30               	clrf	i2memset@c,c
 17587  00562E  6A33               	clrf	i2memset@n+1,c
 17588  005630  0E02               	movlw	2
 17589  005632  6E32               	movwf	i2memset@n,c
 17590  005634  ECEA  F022         	call	i2_memset	;wreg free
 17591                           
 17592                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 17593  005638  6A2E               	clrf	i2memset@p1,c
 17594  00563A  0E04               	movlw	4
 17595  00563C  6E2F               	movwf	i2memset@p1+1,c
 17596  00563E  6A31               	clrf	i2memset@c+1,c
 17597  005640  6A30               	clrf	i2memset@c,c
 17598  005642  6A33               	clrf	i2memset@n+1,c
 17599  005644  0E30               	movlw	48
 17600  005646  6E32               	movwf	i2memset@n,c
 17601  005648  ECEA  F022         	call	i2_memset	;wreg free
 17602                           
 17603                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 17604  00564C  8C60               	bsf	3936,6,c	;volatile
 17605                           
 17606                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 17607  00564E  6A43               	clrf	USBStdSetCfgHandler@i,c
 17608  005650                     i2l6173:
 17609                           
 17610                           ;usb_device.c: 1649: {
 17611                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 17612  005650  5043               	movf	USBStdSetCfgHandler@i,w,c
 17613  005652  0F6A               	addlw	low _ep_data_in
 17614  005654  6ED9               	movwf	fsr2l,c
 17615  005656  6ADA               	clrf	fsr2h,c
 17616  005658  6ADF               	clrf	indf2,c
 17617                           
 17618                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 17619  00565A  5043               	movf	USBStdSetCfgHandler@i,w,c
 17620  00565C  0F6D               	addlw	low _ep_data_out
 17621  00565E  6ED9               	movwf	fsr2l,c
 17622  005660  6ADA               	clrf	fsr2h,c
 17623  005662  6ADF               	clrf	indf2,c
 17624  005664  2A43               	incf	USBStdSetCfgHandler@i,f,c
 17625  005666  0E02               	movlw	2
 17626  005668  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 17627  00566A  D7F2               	goto	i2l6173
 17628                           
 17629                           ;usb_device.c: 1652: }
 17630                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 17631  00566C  0EB7               	movlw	low _USBAlternateInterface
 17632  00566E  6E2E               	movwf	i2memset@p1,c
 17633  005670  6A2F               	clrf	i2memset@p1+1,c
 17634  005672  6A31               	clrf	i2memset@c+1,c
 17635  005674  6A30               	clrf	i2memset@c,c
 17636  005676  6A33               	clrf	i2memset@n+1,c
 17637  005678  0E02               	movlw	2
 17638  00567A  6E32               	movwf	i2memset@n,c
 17639  00567C  ECEA  F022         	call	i2_memset	;wreg free
 17640                           
 17641                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 17642  005680  9C60               	bcf	3936,6,c	;volatile
 17643                           
 17644                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17645  005682  0E08               	movlw	8
 17646  005684  6E0F               	movwf	_pBDTEntryIn,c
 17647  005686  0E04               	movlw	4
 17648  005688  6E10               	movwf	_pBDTEntryIn+1,c
 17649                           
 17650                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17651  00568A  0E00               	movlw	0
 17652  00568C  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 17653  00568E  0E04               	movlw	4
 17654  005690  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17655                           
 17656                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17657  005692  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17658  005696  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17659                           
 17660                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17661  00569A  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 17662                           
 17663                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 17664  00569E  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17665  0056A0  E104               	bnz	i2l6195
 17666                           
 17667                           ;usb_device.c: 1671: {
 17668                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 17669  0056A2  0E10               	movlw	16
 17670  0056A4  0100               	movlb	0	; () banked
 17671  0056A6  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17672                           
 17673                           ;usb_device.c: 1674: }
 17674  0056A8  0C10               	retlw	16
 17675  0056AA                     i2l6195:
 17676                           
 17677                           ;usb_device.c: 1675: else
 17678                           ;usb_device.c: 1676: {
 17679                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17680  0056AA  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17681  0056AC  0E01               	movlw	1
 17682  0056AE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17683  0056B0  0E2C               	movlw	low _USBActiveConfiguration
 17684  0056B2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17685  0056B4  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17686  0056B6  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17687  0056B8  0E01               	movlw	1
 17688  0056BA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17689  0056BC  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17690                           
 17691                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 17692  0056C0  0E20               	movlw	32
 17693  0056C2  0100               	movlb	0	; () banked
 17694  0056C4  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17695                           
 17696                           ; BSR set to: 0
 17697  0056C6  0C20               	retlw	32	;funcret
 17698  0056C8                     __end_of_USBStdSetCfgHandler:
 17699                           	opt stack 0
 17700                           pclatu	equ	0xFFB
 17701                           pclath	equ	0xFFA
 17702                           tblptru	equ	0xFF8
 17703                           tblptrh	equ	0xFF7
 17704                           tblptrl	equ	0xFF6
 17705                           tablat	equ	0xFF5
 17706                           prodh	equ	0xFF4
 17707                           prodl	equ	0xFF3
 17708                           intcon	equ	0xFF2
 17709                           postinc0	equ	0xFEE
 17710                           wreg	equ	0xFE8
 17711                           indf1	equ	0xFE7
 17712                           postdec1	equ	0xFE5
 17713                           fsr1h	equ	0xFE2
 17714                           fsr1l	equ	0xFE1
 17715                           indf2	equ	0xFDF
 17716                           postinc2	equ	0xFDE
 17717                           postdec2	equ	0xFDD
 17718                           plusw2	equ	0xFDB
 17719                           fsr2h	equ	0xFDA
 17720                           fsr2l	equ	0xFD9
 17721                           status	equ	0xFD8
 17722                           
 17723 ;; *************** function i2_memset *****************
 17724 ;; Defined at:
 17725 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;  p1              2    0[COMRAM] PTR void 
 17728 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17729 ;;  c               2    2[COMRAM] int 
 17730 ;;  n               2    4[COMRAM] unsigned int 
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17733 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17734 ;; Return value:  Size  Location     Type
 17735 ;;                  2    0[COMRAM] PTR void 
 17736 ;; Registers used:
 17737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17743 ;;      Params:         6       0       0       0       0       0       0       0       0
 17744 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17746 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17747 ;;Total ram usage:        8 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; This function calls:
 17750 ;;		Nothing
 17751 ;; This function is called by:
 17752 ;;		_USBStdSetCfgHandler
 17753 ;;		i2_USBDeviceInit
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text90
 17758  0045D4                     __ptext90:
 17759                           	opt stack 0
 17760  0045D4                     i2_memset:
 17761                           	opt stack 17
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;incstack = 0
 17765  0045D4  C02E  F034         	movff	i2memset@p1,i2memset@p
 17766  0045D8  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17767  0045DC  D008               	goto	i2l5977
 17768  0045DE                     i2l5973:
 17769  0045DE  C034  FFD9         	movff	i2memset@p,fsr2l
 17770  0045E2  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17771  0045E6  C030  FFDF         	movff	i2memset@c,indf2
 17772  0045EA  4A34               	infsnz	i2memset@p,f,c
 17773  0045EC  2A35               	incf	i2memset@p+1,f,c
 17774  0045EE                     i2l5977:
 17775  0045EE  0632               	decf	i2memset@n,f,c
 17776  0045F0  A0D8               	btfss	status,0,c
 17777  0045F2  0633               	decf	i2memset@n+1,f,c
 17778  0045F4  2832               	incf	i2memset@n,w,c
 17779  0045F6  E1F3               	bnz	i2l5973
 17780  0045F8  2833               	incf	i2memset@n+1,w,c
 17781  0045FA  E1F1               	bnz	i2l5973
 17782  0045FC  0012               	return		;funcret
 17783  0045FE                     __end_ofi2_memset:
 17784                           	opt stack 0
 17785                           pclatu	equ	0xFFB
 17786                           pclath	equ	0xFFA
 17787                           tblptru	equ	0xFF8
 17788                           tblptrh	equ	0xFF7
 17789                           tblptrl	equ	0xFF6
 17790                           tablat	equ	0xFF5
 17791                           prodh	equ	0xFF4
 17792                           prodl	equ	0xFF3
 17793                           intcon	equ	0xFF2
 17794                           postinc0	equ	0xFEE
 17795                           wreg	equ	0xFE8
 17796                           indf1	equ	0xFE7
 17797                           postdec1	equ	0xFE5
 17798                           fsr1h	equ	0xFE2
 17799                           fsr1l	equ	0xFE1
 17800                           indf2	equ	0xFDF
 17801                           postinc2	equ	0xFDE
 17802                           postdec2	equ	0xFDD
 17803                           plusw2	equ	0xFDB
 17804                           fsr2h	equ	0xFDA
 17805                           fsr2l	equ	0xFD9
 17806                           status	equ	0xFD8
 17807                           
 17808 ;; *************** function _USBStdGetStatusHandler *****************
 17809 ;; Defined at:
 17810 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;		None
 17813 ;; Auto vars:     Size  Location     Type
 17814 ;;  p               2    0[COMRAM] PTR struct __BDT
 17815 ;;		 -> BDT(48), NULL(0), 
 17816 ;; Return value:  Size  Location     Type
 17817 ;;                  1    wreg      void 
 17818 ;; Registers used:
 17819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17820 ;; Tracked objects:
 17821 ;;		On entry : B/4
 17822 ;;		On exit  : F/4
 17823 ;;		Unchanged: 0/0
 17824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17825 ;;      Params:         0       0       0       0       0       0       0       0       0
 17826 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17828 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17829 ;;Total ram usage:        2 bytes
 17830 ;; Hardware stack levels used:    1
 17831 ;; This function calls:
 17832 ;;		Nothing
 17833 ;; This function is called by:
 17834 ;;		_USBCheckStdRequest
 17835 ;; This function uses a non-reentrant model
 17836 ;;
 17837                           
 17838                           	psect	text91
 17839  00507C                     __ptext91:
 17840                           	opt stack 0
 17841  00507C                     _USBStdGetStatusHandler:
 17842                           	opt stack 15
 17843                           
 17844                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 17845                           
 17846                           ;incstack = 0
 17847  00507C  0104               	movlb	4	; () banked
 17848  00507E  6B38               	clrf	56,b	;volatile
 17849                           
 17850                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 17851  005080  6B39               	clrf	57,b	;volatile
 17852                           
 17853                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 17854  005082  D02A               	goto	i2l6245
 17855  005084                     i2l1608:
 17856                           
 17857                           ; BSR set to: 4
 17858                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 17859  005084  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17860                           
 17861                           ; BSR set to: 4
 17862                           ;usb_device.c: 1789: }
 17863                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 17864                           
 17865                           ;usb_device.c: 1786: if(0 == 1)
 17866  005086  041D               	decf	_RemoteWakeup,w,c	;volatile
 17867  005088  E12E               	bnz	i2l1611
 17868                           
 17869                           ; BSR set to: 4
 17870                           ;usb_device.c: 1792: {
 17871                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 17872  00508A  8338               	bsf	56,1,b	;volatile
 17873  00508C  D02C               	goto	i2l1611
 17874  00508E                     i2l1612:
 17875                           
 17876                           ; BSR set to: 4
 17877                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 17878  00508E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17879                           
 17880                           ;usb_device.c: 1798: break;
 17881  005090  D02A               	goto	i2l1611
 17882  005092                     i2l1613:
 17883                           
 17884                           ; BSR set to: 4
 17885                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 17886  005092  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17887                           
 17888                           ;usb_device.c: 1804: {
 17889                           ;usb_device.c: 1805: BDT_ENTRY *p;
 17890                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 17891  005094  BF34               	btfsc	52,7,b	;volatile
 17892  005096  D006               	goto	i2l6235
 17893                           
 17894                           ; BSR set to: 4
 17895                           ;usb_device.c: 1808: {
 17896                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17897  005098  5134               	movf	52,w,b	;volatile
 17898  00509A  0B0F               	andlw	15
 17899  00509C  0D02               	mullw	2
 17900  00509E  50F3               	movf	prodl,w,c
 17901  0050A0  0F60               	addlw	low _pBDTEntryOut
 17902  0050A2  D005               	goto	L27
 17903  0050A4                     i2l6235:
 17904                           
 17905                           ; BSR set to: 4
 17906                           ;usb_device.c: 1811: else
 17907                           ;usb_device.c: 1812: {
 17908                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17909  0050A4  5134               	movf	52,w,b	;volatile
 17910  0050A6  0B0F               	andlw	15
 17911  0050A8  0D02               	mullw	2
 17912  0050AA  50F3               	movf	prodl,w,c
 17913  0050AC  0F0F               	addlw	low _pBDTEntryIn
 17914  0050AE                     L27:
 17915  0050AE  6ED9               	movwf	fsr2l,c
 17916  0050B0  6ADA               	clrf	fsr2h,c
 17917  0050B2  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 17918  0050B6  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 17919                           
 17920                           ; BSR set to: 4
 17921                           ;usb_device.c: 1814: }
 17922                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17923  0050BA  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17924  0050BE  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17925  0050C2  AEDF               	btfss	indf2,7,c
 17926  0050C4  D010               	goto	i2l1611
 17927                           
 17928                           ; BSR set to: 4
 17929  0050C6  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17930  0050CA  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17931  0050CE  A4DF               	btfss	indf2,2,c
 17932  0050D0  D00A               	goto	i2l1611
 17933                           
 17934                           ; BSR set to: 4
 17935                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 17936  0050D2  0E01               	movlw	1
 17937  0050D4  6F38               	movwf	56,b	;volatile
 17938  0050D6  D007               	goto	i2l1611
 17939  0050D8                     i2l6245:
 17940                           
 17941                           ; BSR set to: 4
 17942  0050D8  5130               	movf	48,w,b	;volatile
 17943  0050DA  0B1F               	andlw	31
 17944                           
 17945                           ; Switch size 1, requested type "speed"
 17946                           ; Number of cases is 3, Range of values is 0 to 2
 17947                           ; switch strategies available:
 17948                           ; Name         Instructions Cycles
 17949                           ; simple_byte           10     6 (average)
 17950                           ;	Chosen strategy is simple_byte
 17951  0050DC  E0D3               	bz	i2l1608
 17952  0050DE  0A01               	xorlw	1	; case 1
 17953  0050E0  E0D6               	bz	i2l1612
 17954  0050E2  0A03               	xorlw	3	; case 2
 17955  0050E4  E0D6               	bz	i2l1613
 17956  0050E6                     i2l1611:
 17957                           
 17958                           ; BSR set to: 4
 17959                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 17960  0050E6  AE0C               	btfss	_inPipes+3,7,c	;volatile
 17961  0050E8  0012               	return	
 17962                           
 17963                           ; BSR set to: 4
 17964                           ;usb_device.c: 1823: {
 17965                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17966  0050EA  0E38               	movlw	56
 17967  0050EC  6E09               	movwf	_inPipes,c	;volatile
 17968  0050EE  0E04               	movlw	4
 17969  0050F0  6E0A               	movwf	_inPipes+1,c	;volatile
 17970                           
 17971                           ; BSR set to: 4
 17972                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17973  0050F2  800C               	bsf	_inPipes+3,0,c	;volatile
 17974                           
 17975                           ; BSR set to: 4
 17976                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 17977  0050F4  0E02               	movlw	2
 17978  0050F6  6E0D               	movwf	_inPipes+4,c	;volatile
 17979                           
 17980                           ; BSR set to: 4
 17981  0050F8  0C02               	retlw	2	;funcret
 17982  0050FA                     __end_of_USBStdGetStatusHandler:
 17983                           	opt stack 0
 17984                           pclatu	equ	0xFFB
 17985                           pclath	equ	0xFFA
 17986                           tblptru	equ	0xFF8
 17987                           tblptrh	equ	0xFF7
 17988                           tblptrl	equ	0xFF6
 17989                           tablat	equ	0xFF5
 17990                           prodh	equ	0xFF4
 17991                           prodl	equ	0xFF3
 17992                           intcon	equ	0xFF2
 17993                           postinc0	equ	0xFEE
 17994                           wreg	equ	0xFE8
 17995                           indf1	equ	0xFE7
 17996                           postdec1	equ	0xFE5
 17997                           fsr1h	equ	0xFE2
 17998                           fsr1l	equ	0xFE1
 17999                           indf2	equ	0xFDF
 18000                           postinc2	equ	0xFDE
 18001                           postdec2	equ	0xFDD
 18002                           plusw2	equ	0xFDB
 18003                           fsr2h	equ	0xFDA
 18004                           fsr2l	equ	0xFD9
 18005                           status	equ	0xFD8
 18006                           
 18007 ;; *************** function _USBStdGetDscHandler *****************
 18008 ;; Defined at:
 18009 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;		None
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;		None
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  1    wreg      void 
 18016 ;; Registers used:
 18017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18018 ;; Tracked objects:
 18019 ;;		On entry : B/4
 18020 ;;		On exit  : 0/0
 18021 ;;		Unchanged: 0/0
 18022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18023 ;;      Params:         0       0       0       0       0       0       0       0       0
 18024 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18025 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18026 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18027 ;;Total ram usage:        2 bytes
 18028 ;; Hardware stack levels used:    1
 18029 ;; This function calls:
 18030 ;;		Nothing
 18031 ;; This function is called by:
 18032 ;;		_USBCheckStdRequest
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           	psect	text92
 18037  006270                     __ptext92:
 18038                           	opt stack 0
 18039  006270                     _USBStdGetDscHandler:
 18040                           	opt stack 15
 18041                           
 18042                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 18043                           
 18044                           ; BSR set to: 4
 18045                           ;incstack = 0
 18046  006270  0E80               	movlw	128
 18047  006272  0104               	movlb	4	; () banked
 18048  006274  1930               	xorwf	48,w,b	;volatile
 18049  006276  A4D8               	btfss	status,2,c
 18050  006278  0012               	return	
 18051                           
 18052                           ; BSR set to: 4
 18053                           ;usb_device.c: 1707: {
 18054                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 18055  00627A  0EC0               	movlw	192
 18056  00627C  6E0C               	movwf	_inPipes+3,c	;volatile
 18057                           
 18058                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 18059  00627E  D071               	goto	i2l6223
 18060  006280                     i2l6203:
 18061                           
 18062                           ; BSR set to: 4
 18063                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 18064  006280  0E40               	movlw	low _device_dsc
 18065  006282  6E09               	movwf	_inPipes,c	;volatile
 18066  006284  0E7B               	movlw	high _device_dsc
 18067  006286  6E0A               	movwf	_inPipes+1,c	;volatile
 18068                           
 18069                           ; BSR set to: 4
 18070                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 18071  006288  6A0E               	clrf	_inPipes+5,c	;volatile
 18072  00628A  0E12               	movlw	18
 18073  00628C  6E0D               	movwf	_inPipes+4,c	;volatile
 18074                           
 18075                           ;usb_device.c: 1715: break;
 18076  00628E  0C12               	retlw	18
 18077  006290                     i2l6207:
 18078                           
 18079                           ; BSR set to: 4
 18080                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 18081  006290  5132               	movf	50,w,b	;volatile
 18082  006292  E13D               	bnz	i2l1598
 18083                           
 18084                           ; BSR set to: 4
 18085                           ;usb_device.c: 1721: {
 18086                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 18087  006294  5132               	movf	50,w,b	;volatile
 18088  006296  0D02               	mullw	2
 18089  006298  0E93               	movlw	low _USB_CD_Ptr
 18090  00629A  24F3               	addwf	prodl,w,c
 18091  00629C  6EF6               	movwf	tblptrl,c
 18092  00629E  0E77               	movlw	high _USB_CD_Ptr
 18093  0062A0  20F4               	addwfc	prodh,w,c
 18094  0062A2  6EF7               	movwf	tblptrh,c
 18095  0062A4                     	if	0	;There are less than 3 active tblptr bytes
 18096  0062A4                     	endif
 18097  0062A4  0009               	tblrd		*+
 18098  0062A6  CFF5 F009          	movff	tablat,_inPipes	;volatile
 18099  0062AA  000A               	tblrd		*-
 18100  0062AC  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 18101                           
 18102                           ; BSR set to: 4
 18103                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 18104  0062B0  0E02               	movlw	2
 18105  0062B2  2409               	addwf	_inPipes,w,c	;volatile
 18106  0062B4  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 18107  0062B6  0E00               	movlw	0
 18108  0062B8  200A               	addwfc	_inPipes+1,w,c	;volatile
 18109  0062BA  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18110  0062BC  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18111  0062C0  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18112  0062C4  6AF8               	clrf	tblptru,c
 18113  0062C6  0E07               	movlw	(high __ramtop+-1)
 18114  0062C8  64F7               	cpfsgt	tblptrh,c
 18115  0062CA  D003               	bra	i2u391_47
 18116  0062CC  0008               	tblrd		*
 18117  0062CE  50F5               	movf	tablat,w,c
 18118  0062D0  D005               	bra	i2u391_40
 18119  0062D2                     i2u391_47:
 18120  0062D2  CFF6 FFE1          	movff	tblptrl,fsr1l
 18121  0062D6  CFF7 FFE2          	movff	tblptrh,fsr1h
 18122  0062DA  50E7               	movf	indf1,w,c
 18123  0062DC                     i2u391_40:
 18124  0062DC  6E0D               	movwf	_inPipes+4,c	;volatile
 18125                           
 18126                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 18127  0062DE  0E03               	movlw	3
 18128  0062E0  2409               	addwf	_inPipes,w,c	;volatile
 18129  0062E2  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 18130  0062E4  0E00               	movlw	0
 18131  0062E6  200A               	addwfc	_inPipes+1,w,c	;volatile
 18132  0062E8  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18133  0062EA  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18134  0062EE  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18135  0062F2  6AF8               	clrf	tblptru,c
 18136  0062F4  0E07               	movlw	(high __ramtop+-1)
 18137  0062F6  64F7               	cpfsgt	tblptrh,c
 18138  0062F8  D003               	bra	i2u392_47
 18139  0062FA  0008               	tblrd		*
 18140  0062FC  50F5               	movf	tablat,w,c
 18141  0062FE  D005               	bra	i2u392_40
 18142  006300                     i2u392_47:
 18143  006300  CFF6 FFE1          	movff	tblptrl,fsr1l
 18144  006304  CFF7 FFE2          	movff	tblptrh,fsr1h
 18145  006308  50E7               	movf	indf1,w,c
 18146  00630A                     i2u392_40:
 18147  00630A  6E0E               	movwf	_inPipes+5,c	;volatile
 18148                           
 18149                           ;usb_device.c: 1729: }
 18150  00630C  0012               	return	
 18151  00630E                     i2l1598:
 18152                           
 18153                           ; BSR set to: 4
 18154                           ;usb_device.c: 1730: else
 18155                           ;usb_device.c: 1731: {
 18156                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 18157  00630E  6A0C               	clrf	_inPipes+3,c	;volatile
 18158  006310  0012               	return	
 18159  006312                     i2l6215:
 18160                           
 18161                           ; BSR set to: 4
 18162                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 18163  006312  0E03               	movlw	3
 18164  006314  6132               	cpfslt	50,b	;volatile
 18165  006316  D021               	goto	i2l1601
 18166                           
 18167                           ; BSR set to: 4
 18168                           ;usb_device.c: 1740: {
 18169                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 18170  006318  5132               	movf	50,w,b	;volatile
 18171  00631A  0D02               	mullw	2
 18172  00631C  0E8D               	movlw	low _USB_SD_Ptr
 18173  00631E  24F3               	addwf	prodl,w,c
 18174  006320  6EF6               	movwf	tblptrl,c
 18175  006322  0E77               	movlw	high _USB_SD_Ptr
 18176  006324  20F4               	addwfc	prodh,w,c
 18177  006326  6EF7               	movwf	tblptrh,c
 18178  006328                     	if	0	;There are less than 3 active tblptr bytes
 18179  006328                     	endif
 18180  006328  0009               	tblrd		*+
 18181  00632A  CFF5 F009          	movff	tablat,_inPipes	;volatile
 18182  00632E  000A               	tblrd		*-
 18183  006330  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 18184                           
 18185                           ; BSR set to: 4
 18186                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 18187  006334  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 18188  006338  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18189  00633C  6AF8               	clrf	tblptru,c
 18190  00633E  0E07               	movlw	(high __ramtop+-1)
 18191  006340  64F7               	cpfsgt	tblptrh,c
 18192  006342  D003               	bra	i2u394_47
 18193  006344  0008               	tblrd		*
 18194  006346  50F5               	movf	tablat,w,c
 18195  006348  D005               	bra	i2u394_40
 18196  00634A                     i2u394_47:
 18197  00634A  CFF6 FFE1          	movff	tblptrl,fsr1l
 18198  00634E  CFF7 FFE2          	movff	tblptrh,fsr1h
 18199  006352  50E7               	movf	indf1,w,c
 18200  006354                     i2u394_40:
 18201  006354  6E0D               	movwf	_inPipes+4,c	;volatile
 18202  006356  6A0E               	clrf	_inPipes+5,c	;volatile
 18203                           
 18204                           ;usb_device.c: 1745: }
 18205  006358  0012               	return	
 18206  00635A                     i2l1601:
 18207                           
 18208                           ; BSR set to: 4
 18209                           ;usb_device.c: 1746: else
 18210                           ;usb_device.c: 1747: {
 18211                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 18212  00635A  6A0C               	clrf	_inPipes+3,c	;volatile
 18213  00635C  0012               	return	
 18214  00635E                     i2l1603:
 18215                           
 18216                           ; BSR set to: 4
 18217                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 18218  00635E  6A0C               	clrf	_inPipes+3,c	;volatile
 18219                           
 18220                           ;usb_device.c: 1753: break;
 18221  006360  0012               	return	
 18222  006362                     i2l6223:
 18223                           
 18224                           ; BSR set to: 4
 18225  006362  5133               	movf	51,w,b	;volatile
 18226                           
 18227                           ; Switch size 1, requested type "speed"
 18228                           ; Number of cases is 3, Range of values is 1 to 3
 18229                           ; switch strategies available:
 18230                           ; Name         Instructions Cycles
 18231                           ; simple_byte           10     6 (average)
 18232                           ;	Chosen strategy is simple_byte
 18233  006364  0A01               	xorlw	1	; case 1
 18234  006366  E08C               	bz	i2l6203
 18235  006368  0A03               	xorlw	3	; case 2
 18236  00636A  E092               	bz	i2l6207
 18237  00636C  0A01               	xorlw	1	; case 3
 18238  00636E  E0D1               	bz	i2l6215
 18239  006370  D7F6               	goto	i2l1603
 18240  006372                     __end_of_USBStdGetDscHandler:
 18241                           	opt stack 0
 18242                           pclatu	equ	0xFFB
 18243                           pclath	equ	0xFFA
 18244                           tblptru	equ	0xFF8
 18245                           tblptrh	equ	0xFF7
 18246                           tblptrl	equ	0xFF6
 18247                           tablat	equ	0xFF5
 18248                           prodh	equ	0xFF4
 18249                           prodl	equ	0xFF3
 18250                           intcon	equ	0xFF2
 18251                           postinc0	equ	0xFEE
 18252                           wreg	equ	0xFE8
 18253                           indf1	equ	0xFE7
 18254                           postdec1	equ	0xFE5
 18255                           fsr1h	equ	0xFE2
 18256                           fsr1l	equ	0xFE1
 18257                           indf2	equ	0xFDF
 18258                           postinc2	equ	0xFDE
 18259                           postdec2	equ	0xFDD
 18260                           plusw2	equ	0xFDB
 18261                           fsr2h	equ	0xFDA
 18262                           fsr2l	equ	0xFD9
 18263                           status	equ	0xFD8
 18264                           
 18265 ;; *************** function _USBStdFeatureReqHandler *****************
 18266 ;; Defined at:
 18267 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;		None
 18270 ;; Auto vars:     Size  Location     Type
 18271 ;;  p               2   26[COMRAM] PTR struct __BDT
 18272 ;;		 -> BDT(48), NULL(0), 
 18273 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 18274 ;;		 -> UEP0(1), 
 18275 ;;  current_ep_d    1   25[COMRAM] struct .
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      void 
 18278 ;; Registers used:
 18279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18280 ;; Tracked objects:
 18281 ;;		On entry : B/4
 18282 ;;		On exit  : B/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0
 18286 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18287 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18288 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18289 ;;Total ram usage:        7 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:    5
 18292 ;; This function calls:
 18293 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18294 ;; This function is called by:
 18295 ;;		_USBCheckStdRequest
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text93
 18300  006908                     __ptext93:
 18301                           	opt stack 0
 18302  006908                     _USBStdFeatureReqHandler:
 18303                           	opt stack 10
 18304                           
 18305                           ;usb_device.c: 2387: BDT_ENTRY *p;
 18306                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 18307                           ;usb_device.c: 2390: unsigned char* pUEP;
 18308                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 18309                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 18310                           
 18311                           ;incstack = 0
 18312  006908  0104               	movlb	4	; () banked
 18313  00690A  0532               	decf	50,w,b	;volatile
 18314  00690C  E10B               	bnz	i2l6263
 18315                           
 18316                           ; BSR set to: 4
 18317  00690E  5130               	movf	48,w,b	;volatile
 18318  006910  0B1F               	andlw	31
 18319  006912  E108               	bnz	i2l6263
 18320                           
 18321                           ; BSR set to: 4
 18322                           ;usb_device.c: 2395: {
 18323                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 18324  006914  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18325                           
 18326                           ; BSR set to: 4
 18327                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 18328  006916  0E03               	movlw	3
 18329  006918  1931               	xorwf	49,w,b	;volatile
 18330  00691A  E103               	bnz	i2l1688
 18331                           
 18332                           ; BSR set to: 4
 18333                           ;usb_device.c: 2398: RemoteWakeup = 1;
 18334  00691C  0E01               	movlw	1
 18335  00691E  6E1D               	movwf	_RemoteWakeup,c	;volatile
 18336  006920  D001               	goto	i2l6263
 18337  006922                     i2l1688:
 18338                           
 18339                           ; BSR set to: 4
 18340                           ;usb_device.c: 2399: else
 18341                           ;usb_device.c: 2400: RemoteWakeup = 0;
 18342  006922  6A1D               	clrf	_RemoteWakeup,c	;volatile
 18343  006924                     i2l6263:
 18344                           
 18345                           ; BSR set to: 4
 18346                           ;usb_device.c: 2401: }
 18347                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 18348                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 18349                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 18350                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 18351  006924  5132               	movf	50,w,b	;volatile
 18352  006926  A4D8               	btfss	status,2,c
 18353  006928  0012               	return	
 18354                           
 18355                           ; BSR set to: 4
 18356  00692A  5130               	movf	48,w,b	;volatile
 18357  00692C  0B1F               	andlw	31
 18358  00692E  0A02               	xorlw	2
 18359  006930  A4D8               	btfss	status,2,c
 18360  006932  0012               	return	
 18361                           
 18362                           ; BSR set to: 4
 18363  006934  5134               	movf	52,w,b	;volatile
 18364  006936  0B0F               	andlw	15
 18365  006938  B4D8               	btfsc	status,2,c
 18366  00693A  0012               	return	
 18367                           
 18368                           ; BSR set to: 4
 18369  00693C  5134               	movf	52,w,b	;volatile
 18370  00693E  0B0F               	andlw	15
 18371  006940  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18372  006942  0E03               	movlw	3
 18373  006944  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 18374  006946  0C03               	retlw	3
 18375                           
 18376                           ; BSR set to: 4
 18377  006948  0E20               	movlw	32
 18378  00694A  0100               	movlb	0	; () banked
 18379  00694C  1991               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 18380  00694E  A4D8               	btfss	status,2,c
 18381  006950  0012               	return	
 18382                           
 18383                           ; BSR set to: 0
 18384                           ;usb_device.c: 2408: {
 18385                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 18386  006952  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18387                           
 18388                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 18389  006954  0104               	movlb	4	; () banked
 18390  006956  BF34               	btfsc	52,7,b	;volatile
 18391  006958  D011               	goto	i2l6279
 18392                           
 18393                           ; BSR set to: 4
 18394                           ;usb_device.c: 2415: {
 18395                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18396  00695A  5134               	movf	52,w,b	;volatile
 18397  00695C  0B0F               	andlw	15
 18398  00695E  0D02               	mullw	2
 18399  006960  50F3               	movf	prodl,w,c
 18400  006962  0F60               	addlw	low _pBDTEntryOut
 18401  006964  6ED9               	movwf	fsr2l,c
 18402  006966  6ADA               	clrf	fsr2h,c
 18403  006968  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 18404  00696C  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18405                           
 18406                           ; BSR set to: 4
 18407                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 18408  006970  5134               	movf	52,w,b	;volatile
 18409  006972  0B0F               	andlw	15
 18410  006974  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18411  006976  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18412  006978  0F6D               	addlw	low _ep_data_out
 18413  00697A  D010               	goto	L28
 18414  00697C                     i2l6279:
 18415                           
 18416                           ; BSR set to: 4
 18417                           ;usb_device.c: 2419: else
 18418                           ;usb_device.c: 2420: {
 18419                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 18420  00697C  5134               	movf	52,w,b	;volatile
 18421  00697E  0B0F               	andlw	15
 18422  006980  0D02               	mullw	2
 18423  006982  50F3               	movf	prodl,w,c
 18424  006984  0F0F               	addlw	low _pBDTEntryIn
 18425  006986  6ED9               	movwf	fsr2l,c
 18426  006988  6ADA               	clrf	fsr2h,c
 18427  00698A  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 18428  00698E  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18429                           
 18430                           ; BSR set to: 4
 18431                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 18432  006992  5134               	movf	52,w,b	;volatile
 18433  006994  0B0F               	andlw	15
 18434  006996  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18435  006998  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18436  00699A  0F6A               	addlw	low _ep_data_in
 18437  00699C                     L28:
 18438  00699C  6ED9               	movwf	fsr2l,c
 18439  00699E  6ADA               	clrf	fsr2h,c
 18440  0069A0  50DF               	movf	indf2,w,c
 18441  0069A2  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 18442                           
 18443                           ; BSR set to: 4
 18444                           ;usb_device.c: 2423: }
 18445                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 18446  0069A4  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 18447  0069A6  D002               	goto	i2l6287
 18448                           
 18449                           ; BSR set to: 4
 18450                           ;usb_device.c: 2429: {
 18451                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 18452  0069A8  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 18453                           
 18454                           ;usb_device.c: 2431: }
 18455  0069AA  D001               	goto	i2l6289
 18456  0069AC                     i2l6287:
 18457                           
 18458                           ; BSR set to: 4
 18459                           ;usb_device.c: 2432: else
 18460                           ;usb_device.c: 2433: {
 18461                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 18462  0069AC  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 18463  0069AE                     i2l6289:
 18464                           
 18465                           ; BSR set to: 4
 18466                           ;usb_device.c: 2435: }
 18467                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 18468  0069AE  BF34               	btfsc	52,7,b	;volatile
 18469  0069B0  D006               	goto	i2l6293
 18470                           
 18471                           ; BSR set to: 4
 18472                           ;usb_device.c: 2440: {
 18473                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18474  0069B2  5134               	movf	52,w,b	;volatile
 18475  0069B4  0B0F               	andlw	15
 18476  0069B6  0D02               	mullw	2
 18477  0069B8  50F3               	movf	prodl,w,c
 18478  0069BA  0F60               	addlw	low _pBDTEntryOut
 18479  0069BC  D005               	goto	L29
 18480  0069BE                     i2l6293:
 18481                           
 18482                           ; BSR set to: 4
 18483                           ;usb_device.c: 2443: else
 18484                           ;usb_device.c: 2444: {
 18485                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18486  0069BE  5134               	movf	52,w,b	;volatile
 18487  0069C0  0B0F               	andlw	15
 18488  0069C2  0D02               	mullw	2
 18489  0069C4  50F3               	movf	prodl,w,c
 18490  0069C6  0F0F               	addlw	low _pBDTEntryIn
 18491  0069C8                     L29:
 18492  0069C8  6ED9               	movwf	fsr2l,c
 18493  0069CA  6ADA               	clrf	fsr2h,c
 18494  0069CC  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 18495  0069D0  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 18496                           
 18497                           ; BSR set to: 4
 18498                           ;usb_device.c: 2446: }
 18499                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 18500  0069D4  0E03               	movlw	3
 18501  0069D6  1931               	xorwf	49,w,b	;volatile
 18502  0069D8  E123               	bnz	i2l6305
 18503                           
 18504                           ; BSR set to: 4
 18505                           ;usb_device.c: 2450: {
 18506                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 18507  0069DA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18508  0069DE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18509  0069E2  AEDF               	btfss	indf2,7,c
 18510  0069E4  D011               	goto	i2l1698
 18511                           
 18512                           ; BSR set to: 4
 18513                           ;usb_device.c: 2452: {
 18514                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 18515  0069E6  BF34               	btfsc	52,7,b	;volatile
 18516  0069E8  D006               	goto	i2l6303
 18517                           
 18518                           ; BSR set to: 4
 18519                           ;usb_device.c: 2456: {
 18520                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18521  0069EA  5134               	movf	52,w,b	;volatile
 18522  0069EC  0B0F               	andlw	15
 18523  0069EE  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18524  0069F0  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18525  0069F2  0F6D               	addlw	low _ep_data_out
 18526  0069F4  D005               	goto	L30
 18527  0069F6                     i2l6303:
 18528                           
 18529                           ; BSR set to: 4
 18530                           ;usb_device.c: 2459: else
 18531                           ;usb_device.c: 2460: {
 18532                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18533  0069F6  5134               	movf	52,w,b	;volatile
 18534  0069F8  0B0F               	andlw	15
 18535  0069FA  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18536  0069FC  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18537  0069FE  0F6A               	addlw	low _ep_data_in
 18538  006A00                     L30:
 18539  006A00  6ED9               	movwf	fsr2l,c
 18540  006A02  6ADA               	clrf	fsr2h,c
 18541  006A04  0100               	movlb	0	; () banked
 18542  006A06  82DF               	bsf	indf2,1,c
 18543  006A08                     i2l1698:
 18544                           
 18545                           ;usb_device.c: 2462: }
 18546                           ;usb_device.c: 2463: }
 18547                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 18548  006A08  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18549  006A0C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18550  006A10  0E00               	movlw	0
 18551  006A12  84DB               	bsf	plusw2,2,c
 18552                           
 18553                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 18554  006A14  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18555  006A18  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18556  006A1C  8EDB               	bsf	plusw2,7,c
 18557                           
 18558                           ;usb_device.c: 2468: }
 18559  006A1E  0C00               	retlw	0
 18560  006A20                     i2l6305:
 18561                           
 18562                           ; BSR set to: 4
 18563                           ;usb_device.c: 2469: else
 18564                           ;usb_device.c: 2470: {
 18565                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18566  006A20  0E04               	movlw	4
 18567  006A22  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 18568                           
 18569                           ; BSR set to: 4
 18570                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 18571  006A24  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18572  006A28  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18573  006A2C  AEDF               	btfss	indf2,7,c
 18574  006A2E  D019               	goto	i2l6315
 18575                           
 18576                           ; BSR set to: 4
 18577                           ;usb_device.c: 2476: {
 18578                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 18579  006A30  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18580  006A34  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18581  006A38  0E7F               	movlw	127
 18582  006A3A  16DF               	andwf	indf2,f,c
 18583                           
 18584                           ; BSR set to: 4
 18585                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 18586  006A3C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18587  006A40  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18588  006A44  0E00               	movlw	0
 18589  006A46  8CDB               	bsf	plusw2,6,c
 18590                           
 18591                           ; BSR set to: 4
 18592                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18593  006A48  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18594  006A4A  0E05               	movlw	5
 18595  006A4C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18596  006A4E  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18597  006A52  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18598  006A56  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18599  006A58  0E02               	movlw	2
 18600  006A5A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18601  006A5C  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18602                           
 18603                           ;usb_device.c: 2482: }
 18604  006A60  D006               	goto	i2l6317
 18605  006A62                     i2l6315:
 18606                           
 18607                           ; BSR set to: 4
 18608                           ;usb_device.c: 2483: else
 18609                           ;usb_device.c: 2484: {
 18610                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 18611  006A62  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18612  006A66  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18613  006A6A  0E00               	movlw	0
 18614  006A6C  8CDB               	bsf	plusw2,6,c
 18615  006A6E                     i2l6317:
 18616                           
 18617                           ;usb_device.c: 2487: }
 18618                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18619  006A6E  0E04               	movlw	4
 18620  006A70  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 18621                           
 18622                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18623  006A72  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18624  006A74  D006               	goto	i2l1706
 18625  006A76  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18626  006A7A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18627  006A7E  AEDF               	btfss	indf2,7,c
 18628  006A80  D025               	goto	i2l6331
 18629  006A82                     i2l1706:
 18630                           
 18631                           ;usb_device.c: 2498: {
 18632                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 18633  006A82  0104               	movlb	4	; () banked
 18634  006A84  BF34               	btfsc	52,7,b	;volatile
 18635  006A86  D006               	goto	i2l6325
 18636                           
 18637                           ; BSR set to: 4
 18638                           ;usb_device.c: 2500: {
 18639                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18640  006A88  5134               	movf	52,w,b	;volatile
 18641  006A8A  0B0F               	andlw	15
 18642  006A8C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18643  006A8E  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18644  006A90  0F6D               	addlw	low _ep_data_out
 18645  006A92  D005               	goto	L31
 18646  006A94                     i2l6325:
 18647                           
 18648                           ; BSR set to: 4
 18649                           ;usb_device.c: 2503: else
 18650                           ;usb_device.c: 2504: {
 18651                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18652  006A94  5134               	movf	52,w,b	;volatile
 18653  006A96  0B0F               	andlw	15
 18654  006A98  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18655  006A9A  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18656  006A9C  0F6A               	addlw	low _ep_data_in
 18657  006A9E                     L31:
 18658  006A9E  6ED9               	movwf	fsr2l,c
 18659  006AA0  6ADA               	clrf	fsr2h,c
 18660  006AA2  0100               	movlb	0	; () banked
 18661  006AA4  92DF               	bcf	indf2,1,c
 18662                           
 18663                           ; BSR set to: 0
 18664                           ;usb_device.c: 2506: }
 18665                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18666  006AA6  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18667  006AAA  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18668  006AAE  0E3B               	movlw	59
 18669  006AB0  16DF               	andwf	indf2,f,c
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18673  006AB2  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18674  006AB4  0E05               	movlw	5
 18675  006AB6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18676  006AB8  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18677  006ABC  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18678  006AC0  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18679  006AC2  0E02               	movlw	2
 18680  006AC4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18681  006AC6  ECA1  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18682                           
 18683                           ;usb_device.c: 2512: }
 18684  006ACA  D006               	goto	i2l6333
 18685  006ACC                     i2l6331:
 18686                           
 18687                           ;usb_device.c: 2513: else
 18688                           ;usb_device.c: 2514: {
 18689                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18690  006ACC  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18691  006AD0  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18692  006AD4  0E3B               	movlw	59
 18693  006AD6  16DF               	andwf	indf2,f,c
 18694  006AD8                     i2l6333:
 18695                           
 18696                           ;usb_device.c: 2517: }
 18697                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18698  006AD8  0104               	movlb	4	; () banked
 18699  006ADA  5134               	movf	52,w,b	;volatile
 18700  006ADC  0B0F               	andlw	15
 18701  006ADE  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18702  006AE0  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 18703  006AE2  0E6A               	movlw	106
 18704  006AE4  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 18705  006AE6  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 18706  006AE8  0E0F               	movlw	15
 18707  006AEA  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 18708  006AEC  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18709                           
 18710                           ; BSR set to: 4
 18711                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 18712  006AEE  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18713  006AF2  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18714  006AF6  0EFE               	movlw	254
 18715  006AF8  16DF               	andwf	indf2,f,c
 18716  006AFA  0CFE               	retlw	254	;funcret
 18717  006AFC                     __end_of_USBStdFeatureReqHandler:
 18718                           	opt stack 0
 18719                           pclatu	equ	0xFFB
 18720                           pclath	equ	0xFFA
 18721                           tblptru	equ	0xFF8
 18722                           tblptrh	equ	0xFF7
 18723                           tblptrl	equ	0xFF6
 18724                           tablat	equ	0xFF5
 18725                           prodh	equ	0xFF4
 18726                           prodl	equ	0xFF3
 18727                           intcon	equ	0xFF2
 18728                           postinc0	equ	0xFEE
 18729                           wreg	equ	0xFE8
 18730                           indf1	equ	0xFE7
 18731                           postdec1	equ	0xFE5
 18732                           fsr1h	equ	0xFE2
 18733                           fsr1l	equ	0xFE1
 18734                           indf2	equ	0xFDF
 18735                           postinc2	equ	0xFDE
 18736                           postdec2	equ	0xFDD
 18737                           plusw2	equ	0xFDB
 18738                           fsr2h	equ	0xFDA
 18739                           fsr2l	equ	0xFD9
 18740                           status	equ	0xFD8
 18741                           
 18742 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18743 ;; Defined at:
 18744 ;;		line 271 in file "../Includes/Board/USBapp.c"
 18745 ;; Parameters:    Size  Location     Type
 18746 ;;  event           2   13[COMRAM] enum E6400
 18747 ;;  pdata           2   15[COMRAM] PTR void 
 18748 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 18749 ;;  size            2   17[COMRAM] unsigned int 
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;		None
 18752 ;; Return value:  Size  Location     Type
 18753 ;;                  1    wreg      unsigned char 
 18754 ;; Registers used:
 18755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18756 ;; Tracked objects:
 18757 ;;		On entry : 0/0
 18758 ;;		On exit  : 0/0
 18759 ;;		Unchanged: 0/0
 18760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18761 ;;      Params:         6       0       0       0       0       0       0       0       0
 18762 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18763 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18764 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18765 ;;Total ram usage:        8 bytes
 18766 ;; Hardware stack levels used:    1
 18767 ;; Hardware stack levels required when called:    4
 18768 ;; This function calls:
 18769 ;;		_USBCheckCDCRequest
 18770 ;;		_USBapp_CdcEmulatorInitialize
 18771 ;; This function is called by:
 18772 ;;		_USBDeviceTasks
 18773 ;;		_USBStdSetCfgHandler
 18774 ;;		_USBSuspend
 18775 ;;		_USBWakeFromSuspend
 18776 ;;		_USBCtrlTrfSetupHandler
 18777 ;;		_USBCheckStdRequest
 18778 ;;		_USBStdFeatureReqHandler
 18779 ;; This function uses a non-reentrant model
 18780 ;;
 18781                           
 18782                           	psect	text94
 18783  004942                     __ptext94:
 18784                           	opt stack 0
 18785  004942                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18786                           	opt stack 14
 18787                           
 18788                           ;USBapp.c: 307: break;
 18789                           
 18790                           ;USBapp.c: 306: USBCheckCDCRequest();
 18791                           
 18792                           ;USBapp.c: 298: break;
 18793                           
 18794                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 18795                           
 18796                           ;USBapp.c: 273: switch( (int) event )
 18797                           
 18798                           ;incstack = 0
 18799  004942  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18800  004946  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18801                           
 18802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18803                           ; Switch size 1, requested type "speed"
 18804                           ; Number of cases is 2, Range of values is 0 to 127
 18805                           ; switch strategies available:
 18806                           ; Name         Instructions Cycles
 18807                           ; simple_byte            7     4 (average)
 18808                           ;	Chosen strategy is simple_byte
 18809  00494A  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18810  00494C  E004               	bz	i2l10713
 18811  00494E  0A7F               	xorlw	127	; case 127
 18812  004950  A4D8               	btfss	status,2,c
 18813  004952  0012               	return	
 18814  004954  D019               	goto	i2l10715
 18815  004956                     i2l10713:
 18816                           
 18817                           ; Switch size 1, requested type "speed"
 18818                           ; Number of cases is 8, Range of values is 1 to 117
 18819                           ; switch strategies available:
 18820                           ; Name         Instructions Cycles
 18821                           ; simple_byte           25    13 (average)
 18822                           ;	Chosen strategy is simple_byte
 18823  004956  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18824  004958  0A01               	xorlw	1	; case 1
 18825  00495A  E102 EFE9  F023    	bz	_USBapp_CdcEmulatorInitialize
 18826  004960  0A03               	xorlw	3	; case 2
 18827  004962  B4D8               	btfsc	status,2,c
 18828  004964  0012               	return	
 18829  004966  0A01               	xorlw	1	; case 3
 18830  004968  E102 EF03  F029    	bz	_USBCheckCDCRequest
 18831  00496E  0A06               	xorlw	6	; case 5
 18832  004970  B4D8               	btfsc	status,2,c
 18833  004972  0012               	return	
 18834  004974  0A77               	xorlw	119	; case 114
 18835  004976  B4D8               	btfsc	status,2,c
 18836  004978  0012               	return	
 18837  00497A  0A01               	xorlw	1	; case 115
 18838  00497C  B4D8               	btfsc	status,2,c
 18839  00497E  0012               	return	
 18840  004980  0A07               	xorlw	7	; case 116
 18841  004982  A4D8               	btfss	status,2,c
 18842  004984  0A01               	xorlw	1	; case 117
 18843  004986  0012               	return	
 18844  004988                     i2l10715:
 18845                           
 18846                           ; Switch size 1, requested type "speed"
 18847                           ; Number of cases is 1, Range of values is 255 to 255
 18848                           ; switch strategies available:
 18849                           ; Name         Instructions Cycles
 18850                           ; simple_byte            4     3 (average)
 18851                           ;	Chosen strategy is simple_byte
 18852  004988  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18853  00498A  0012               	return	
 18854  00498C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18855                           	opt stack 0
 18856                           pclatu	equ	0xFFB
 18857                           pclath	equ	0xFFA
 18858                           tblptru	equ	0xFF8
 18859                           tblptrh	equ	0xFF7
 18860                           tblptrl	equ	0xFF6
 18861                           tablat	equ	0xFF5
 18862                           prodh	equ	0xFF4
 18863                           prodl	equ	0xFF3
 18864                           intcon	equ	0xFF2
 18865                           postinc0	equ	0xFEE
 18866                           wreg	equ	0xFE8
 18867                           indf1	equ	0xFE7
 18868                           postdec1	equ	0xFE5
 18869                           fsr1h	equ	0xFE2
 18870                           fsr1l	equ	0xFE1
 18871                           indf2	equ	0xFDF
 18872                           postinc2	equ	0xFDE
 18873                           postdec2	equ	0xFDD
 18874                           plusw2	equ	0xFDB
 18875                           fsr2h	equ	0xFDA
 18876                           fsr2l	equ	0xFD9
 18877                           status	equ	0xFD8
 18878                           
 18879 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 18880 ;; Defined at:
 18881 ;;		line 107 in file "../Includes/Board/USBapp.c"
 18882 ;; Parameters:    Size  Location     Type
 18883 ;;		None
 18884 ;; Auto vars:     Size  Location     Type
 18885 ;;  i               1   12[COMRAM] unsigned char 
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  1    wreg      void 
 18888 ;; Registers used:
 18889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18895 ;;      Params:         0       0       0       0       0       0       0       0       0
 18896 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18897 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18898 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18899 ;;Total ram usage:        1 bytes
 18900 ;; Hardware stack levels used:    1
 18901 ;; Hardware stack levels required when called:    3
 18902 ;; This function calls:
 18903 ;;		_CDCInitEP
 18904 ;;		i2_EUSART_Initialize
 18905 ;; This function is called by:
 18906 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18907 ;; This function uses a non-reentrant model
 18908 ;;
 18909                           
 18910                           	psect	text95
 18911  0047D2                     __ptext95:
 18912                           	opt stack 0
 18913  0047D2                     _USBapp_CdcEmulatorInitialize:
 18914                           	opt stack 14
 18915                           
 18916                           ;USBapp.c: 110: CDCInitEP();
 18917                           
 18918                           ;incstack = 0
 18919  0047D2  EC86  F025         	call	_CDCInitEP	;wreg free
 18920                           
 18921                           ; BSR set to: 0
 18922                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 18923  0047D6  6BB4               	clrf	(_line_coding+4)& (0+255),b
 18924                           
 18925                           ; BSR set to: 0
 18926                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 18927  0047D8  0E08               	movlw	8
 18928  0047DA  6FB6               	movwf	(_line_coding+6)& (0+255),b
 18929                           
 18930                           ; BSR set to: 0
 18931                           ;USBapp.c: 113: line_coding.bParityType = 0;
 18932  0047DC  6BB5               	clrf	(_line_coding+5)& (0+255),b
 18933                           
 18934                           ; BSR set to: 0
 18935                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 18936  0047DE  6BB0               	clrf	_line_coding& (0+255),b
 18937  0047E0  0E4B               	movlw	75
 18938  0047E2  6FB1               	movwf	(_line_coding+1)& (0+255),b
 18939  0047E4  6BB2               	clrf	(_line_coding+2)& (0+255),b
 18940  0047E6  6BB3               	clrf	(_line_coding+3)& (0+255),b
 18941                           
 18942                           ; BSR set to: 0
 18943                           ;USBapp.c: 115: EUSART_Initialize();
 18944  0047E8  EC14  F023         	call	i2_EUSART_Initialize	;wreg free
 18945                           
 18946                           ; BSR set to: 0
 18947                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 18948  0047EC  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 18949  0047EE                     i2l5803:
 18950                           
 18951                           ;USBapp.c: 118: {
 18952                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 18953  0047EE  0E18               	movlw	low _USB_Buffer
 18954  0047F0  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 18955  0047F2  6ED9               	movwf	fsr2l,c
 18956  0047F4  6ADA               	clrf	fsr2h,c
 18957  0047F6  0E01               	movlw	high _USB_Buffer
 18958  0047F8  22DA               	addwfc	fsr2h,f,c
 18959  0047FA  6ADF               	clrf	indf2,c
 18960  0047FC  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 18961  0047FE  0E3F               	movlw	63
 18962  004800  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 18963  004802  D7F5               	goto	i2l5803
 18964                           
 18965                           ;USBapp.c: 120: }
 18966                           ;USBapp.c: 121: NextUSBOut = 0;
 18967  004804  6A1A               	clrf	_NextUSBOut,c
 18968                           
 18969                           ;USBapp.c: 122: LastRS232Out = 0;
 18970  004806  6A19               	clrf	_LastRS232Out,c
 18971  004808  0012               	return		;funcret
 18972  00480A                     __end_of_USBapp_CdcEmulatorInitialize:
 18973                           	opt stack 0
 18974                           pclatu	equ	0xFFB
 18975                           pclath	equ	0xFFA
 18976                           tblptru	equ	0xFF8
 18977                           tblptrh	equ	0xFF7
 18978                           tblptrl	equ	0xFF6
 18979                           tablat	equ	0xFF5
 18980                           prodh	equ	0xFF4
 18981                           prodl	equ	0xFF3
 18982                           intcon	equ	0xFF2
 18983                           postinc0	equ	0xFEE
 18984                           wreg	equ	0xFE8
 18985                           indf1	equ	0xFE7
 18986                           postdec1	equ	0xFE5
 18987                           fsr1h	equ	0xFE2
 18988                           fsr1l	equ	0xFE1
 18989                           indf2	equ	0xFDF
 18990                           postinc2	equ	0xFDE
 18991                           postdec2	equ	0xFDD
 18992                           plusw2	equ	0xFDB
 18993                           fsr2h	equ	0xFDA
 18994                           fsr2l	equ	0xFD9
 18995                           status	equ	0xFD8
 18996                           
 18997 ;; *************** function _CDCInitEP *****************
 18998 ;; Defined at:
 18999 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;		None
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;		None
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  1    wreg      void 
 19006 ;; Registers used:
 19007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : F/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19013 ;;      Params:         0       0       0       0       0       0       0       0       0
 19014 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19015 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19016 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19017 ;;Total ram usage:        0 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; Hardware stack levels required when called:    2
 19020 ;; This function calls:
 19021 ;;		_USBEnableEndpoint
 19022 ;;		i2_USBTransferOnePacket
 19023 ;; This function is called by:
 19024 ;;		_USBapp_CdcEmulatorInitialize
 19025 ;; This function uses a non-reentrant model
 19026 ;;
 19027                           
 19028                           	psect	text96
 19029  004B0C                     __ptext96:
 19030                           	opt stack 0
 19031  004B0C                     _CDCInitEP:
 19032                           	opt stack 14
 19033                           
 19034                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 19035                           
 19036                           ;incstack = 0
 19037  004B0C  0100               	movlb	0	; () banked
 19038  004B0E  6BB0               	clrf	_line_coding& (0+255),b
 19039  004B10  0E4B               	movlw	75
 19040  004B12  6FB1               	movwf	(_line_coding+1)& (0+255),b
 19041  004B14  6BB2               	clrf	(_line_coding+2)& (0+255),b
 19042  004B16  6BB3               	clrf	(_line_coding+3)& (0+255),b
 19043                           
 19044                           ; BSR set to: 0
 19045                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 19046  004B18  6BB4               	clrf	(_line_coding+4)& (0+255),b
 19047                           
 19048                           ; BSR set to: 0
 19049                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 19050  004B1A  6BB5               	clrf	(_line_coding+5)& (0+255),b
 19051                           
 19052                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 19053  004B1C  0E08               	movlw	8
 19054  004B1E  6FB6               	movwf	(_line_coding+6)& (0+255),b
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 19058  004B20  6B98               	clrf	_cdc_rx_len& (0+255),b
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 19062  004B22  0E1A               	movlw	26
 19063  004B24  6E36               	movwf	USBEnableEndpoint@options,c
 19064  004B26  0E01               	movlw	1
 19065  004B28  ECB3  F023         	call	_USBEnableEndpoint
 19066                           
 19067                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 19068  004B2C  0E1E               	movlw	30
 19069  004B2E  6E36               	movwf	USBEnableEndpoint@options,c
 19070  004B30  0E02               	movlw	2
 19071  004B32  ECB3  F023         	call	_USBEnableEndpoint
 19072                           
 19073                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 19074  004B36  0E00               	movlw	0
 19075  004B38  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 19076  004B3A  0E40               	movlw	64
 19077  004B3C  6E2F               	movwf	i2USBTransferOnePacket@data,c
 19078  004B3E  0E05               	movlw	5
 19079  004B40  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 19080  004B42  0E40               	movlw	64
 19081  004B44  6E31               	movwf	i2USBTransferOnePacket@len,c
 19082  004B46  0E02               	movlw	2
 19083  004B48  EC22  F02A         	call	i2_USBTransferOnePacket
 19084  004B4C  C02E  F07B         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 19085  004B50  C02F  F07C         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 19086                           
 19087                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 19088  004B54  0100               	movlb	0	; () banked
 19089  004B56  6B79               	clrf	_CDCDataInHandle& (0+255),b
 19090  004B58  6B7A               	clrf	(_CDCDataInHandle+1)& (0+255),b
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 19094  004B5A  6A20               	clrf	_cdc_trf_state,c
 19095                           
 19096                           ; BSR set to: 0
 19097  004B5C  0012               	return		;funcret
 19098  004B5E                     __end_of_CDCInitEP:
 19099                           	opt stack 0
 19100                           pclatu	equ	0xFFB
 19101                           pclath	equ	0xFFA
 19102                           tblptru	equ	0xFF8
 19103                           tblptrh	equ	0xFF7
 19104                           tblptrl	equ	0xFF6
 19105                           tablat	equ	0xFF5
 19106                           prodh	equ	0xFF4
 19107                           prodl	equ	0xFF3
 19108                           intcon	equ	0xFF2
 19109                           postinc0	equ	0xFEE
 19110                           wreg	equ	0xFE8
 19111                           indf1	equ	0xFE7
 19112                           postdec1	equ	0xFE5
 19113                           fsr1h	equ	0xFE2
 19114                           fsr1l	equ	0xFE1
 19115                           indf2	equ	0xFDF
 19116                           postinc2	equ	0xFDE
 19117                           postdec2	equ	0xFDD
 19118                           plusw2	equ	0xFDB
 19119                           fsr2h	equ	0xFDA
 19120                           fsr2l	equ	0xFD9
 19121                           status	equ	0xFD8
 19122                           
 19123 ;; *************** function i2_USBTransferOnePacket *****************
 19124 ;; Defined at:
 19125 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 19126 ;; Parameters:    Size  Location     Type
 19127 ;;  ep              1    wreg     unsigned char 
 19128 ;;  dir             1    0[COMRAM] unsigned char 
 19129 ;;  data            2    1[COMRAM] PTR unsigned char 
 19130 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 19131 ;;  len             1    3[COMRAM] unsigned char 
 19132 ;; Auto vars:     Size  Location     Type
 19133 ;;  ep              1    4[COMRAM] unsigned char 
 19134 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 19135 ;;		 -> BDT(48), NULL(0), 
 19136 ;; Return value:  Size  Location     Type
 19137 ;;                  2    0[COMRAM] PTR void 
 19138 ;; Registers used:
 19139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19140 ;; Tracked objects:
 19141 ;;		On entry : 0/0
 19142 ;;		On exit  : 0/0
 19143 ;;		Unchanged: 0/0
 19144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19145 ;;      Params:         4       0       0       0       0       0       0       0       0
 19146 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19148 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19149 ;;Total ram usage:        7 bytes
 19150 ;; Hardware stack levels used:    1
 19151 ;; This function calls:
 19152 ;;		Nothing
 19153 ;; This function is called by:
 19154 ;;		_CDCInitEP
 19155 ;; This function uses a non-reentrant model
 19156 ;;
 19157                           
 19158                           	psect	text97
 19159  005444                     __ptext97:
 19160                           	opt stack 0
 19161  005444                     i2_USBTransferOnePacket:
 19162                           	opt stack 15
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;incstack = 0
 19166                           ;i2USBTransferOnePacket@ep stored from wreg
 19167  005444  6E32               	movwf	i2USBTransferOnePacket@ep,c
 19168                           
 19169                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 19170                           ;usb_device.c: 762: if(dir != 0)
 19171  005446  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19172  005448  E005               	bz	i2l5671
 19173                           
 19174                           ;usb_device.c: 763: {
 19175                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 19176  00544A  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19177  00544C  0D02               	mullw	2
 19178  00544E  50F3               	movf	prodl,w,c
 19179  005450  0F0F               	addlw	low _pBDTEntryIn
 19180  005452  D004               	goto	L32
 19181  005454                     i2l5671:
 19182                           
 19183                           ;usb_device.c: 767: else
 19184                           ;usb_device.c: 768: {
 19185                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 19186  005454  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19187  005456  0D02               	mullw	2
 19188  005458  50F3               	movf	prodl,w,c
 19189  00545A  0F60               	addlw	low _pBDTEntryOut
 19190  00545C                     L32:
 19191  00545C  6ED9               	movwf	fsr2l,c
 19192  00545E  6ADA               	clrf	fsr2h,c
 19193  005460  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 19194  005464  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 19195                           
 19196                           ;usb_device.c: 771: }
 19197                           ;usb_device.c: 775: if(handle == 0)
 19198  005468  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19199  00546A  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 19200  00546C  E103               	bnz	i2l5677
 19201                           
 19202                           ;usb_device.c: 776: {
 19203                           ;usb_device.c: 777: return 0;
 19204  00546E  6A2E               	clrf	?i2_USBTransferOnePacket,c
 19205  005470  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 19206  005472  0012               	return	
 19207  005474                     i2l5677:
 19208                           
 19209                           ;usb_device.c: 778: }
 19210                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 19211  005474  EE20 F002          	lfsr	2,2
 19212  005478  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19213  00547A  26D9               	addwf	fsr2l,f,c
 19214  00547C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 19215  00547E  22DA               	addwfc	fsr2h,f,c
 19216  005480  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 19217  005484  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 19218                           
 19219                           ;usb_device.c: 781: handle->CNT = len;
 19220  005488  EE20 F001          	lfsr	2,1
 19221  00548C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19222  00548E  26D9               	addwf	fsr2l,f,c
 19223  005490  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 19224  005492  22DA               	addwfc	fsr2h,f,c
 19225  005494  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 19226                           
 19227                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 19228  005498  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19229  00549C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19230  0054A0  0E40               	movlw	64
 19231  0054A2  16DF               	andwf	indf2,f,c
 19232                           
 19233                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 19234  0054A4  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19235  0054A8  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19236  0054AC  0E00               	movlw	0
 19237  0054AE  86DB               	bsf	plusw2,3,c
 19238                           
 19239                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 19240  0054B0  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19241  0054B4  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19242  0054B8  8EDB               	bsf	plusw2,7,c
 19243                           
 19244                           ;usb_device.c: 787: if(dir != 0)
 19245  0054BA  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19246  0054BC  E005               	bz	i2l5689
 19247                           
 19248                           ;usb_device.c: 788: {
 19249                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19250  0054BE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19251  0054C0  0D02               	mullw	2
 19252  0054C2  50F3               	movf	prodl,w,c
 19253  0054C4  0F0F               	addlw	low _pBDTEntryIn
 19254  0054C6  D004               	goto	L33
 19255  0054C8                     i2l5689:
 19256                           
 19257                           ;usb_device.c: 792: else
 19258                           ;usb_device.c: 793: {
 19259                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19260  0054C8  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19261  0054CA  0D02               	mullw	2
 19262  0054CC  50F3               	movf	prodl,w,c
 19263  0054CE  0F60               	addlw	low _pBDTEntryOut
 19264  0054D0                     L33:
 19265  0054D0  6ED9               	movwf	fsr2l,c
 19266  0054D2  6ADA               	clrf	fsr2h,c
 19267  0054D4  0E04               	movlw	4
 19268  0054D6  1ADF               	xorwf	indf2,f,c
 19269                           
 19270                           ;usb_device.c: 796: }
 19271                           ;usb_device.c: 797: return (void*)handle;
 19272  0054D8  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 19273  0054DC  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 19274  0054E0  0C04               	retlw	4	;funcret
 19275  0054E2                     __end_ofi2_USBTransferOnePacket:
 19276                           	opt stack 0
 19277                           pclatu	equ	0xFFB
 19278                           pclath	equ	0xFFA
 19279                           tblptru	equ	0xFF8
 19280                           tblptrh	equ	0xFF7
 19281                           tblptrl	equ	0xFF6
 19282                           tablat	equ	0xFF5
 19283                           prodh	equ	0xFF4
 19284                           prodl	equ	0xFF3
 19285                           intcon	equ	0xFF2
 19286                           postinc0	equ	0xFEE
 19287                           wreg	equ	0xFE8
 19288                           indf1	equ	0xFE7
 19289                           postdec1	equ	0xFE5
 19290                           fsr1h	equ	0xFE2
 19291                           fsr1l	equ	0xFE1
 19292                           indf2	equ	0xFDF
 19293                           postinc2	equ	0xFDE
 19294                           postdec2	equ	0xFDD
 19295                           plusw2	equ	0xFDB
 19296                           fsr2h	equ	0xFDA
 19297                           fsr2l	equ	0xFD9
 19298                           status	equ	0xFD8
 19299                           
 19300 ;; *************** function _USBEnableEndpoint *****************
 19301 ;; Defined at:
 19302 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;  ep              1    wreg     unsigned char 
 19305 ;;  options         1    8[COMRAM] unsigned char 
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;  ep              1   11[COMRAM] unsigned char 
 19308 ;;  p               2    9[COMRAM] PTR unsigned char 
 19309 ;;		 -> UEP0(1), 
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  1    wreg      void 
 19312 ;; Registers used:
 19313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/0
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19319 ;;      Params:         1       0       0       0       0       0       0       0       0
 19320 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19321 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19322 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19323 ;;Total ram usage:        4 bytes
 19324 ;; Hardware stack levels used:    1
 19325 ;; Hardware stack levels required when called:    1
 19326 ;; This function calls:
 19327 ;;		_USBConfigureEndpoint
 19328 ;; This function is called by:
 19329 ;;		_CDCInitEP
 19330 ;; This function uses a non-reentrant model
 19331 ;;
 19332                           
 19333                           	psect	text98
 19334  004766                     __ptext98:
 19335                           	opt stack 0
 19336  004766                     _USBEnableEndpoint:
 19337                           	opt stack 14
 19338                           
 19339                           ;incstack = 0
 19340                           ;USBEnableEndpoint@ep stored from wreg
 19341  004766  6E39               	movwf	USBEnableEndpoint@ep,c
 19342                           
 19343                           ;usb_device.c: 647: unsigned char* p;
 19344                           ;usb_device.c: 651: if(options & 0x04)
 19345  004768  A436               	btfss	USBEnableEndpoint@options,2,c
 19346  00476A  D004               	goto	i2l5659
 19347                           
 19348                           ;usb_device.c: 652: {
 19349                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 19350  00476C  6A2E               	clrf	USBConfigureEndpoint@direction,c
 19351  00476E  5039               	movf	USBEnableEndpoint@ep,w,c
 19352  004770  ECBF  F028         	call	_USBConfigureEndpoint
 19353  004774                     i2l5659:
 19354                           
 19355                           ;usb_device.c: 654: }
 19356                           ;usb_device.c: 655: if(options & 0x02)
 19357  004774  A236               	btfss	USBEnableEndpoint@options,1,c
 19358  004776  D005               	goto	i2l5663
 19359                           
 19360                           ;usb_device.c: 656: {
 19361                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 19362  004778  0E01               	movlw	1
 19363  00477A  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19364  00477C  5039               	movf	USBEnableEndpoint@ep,w,c
 19365  00477E  ECBF  F028         	call	_USBConfigureEndpoint
 19366  004782                     i2l5663:
 19367                           
 19368                           ;usb_device.c: 658: }
 19369                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 19370  004782  0E6A               	movlw	106
 19371  004784  2439               	addwf	USBEnableEndpoint@ep,w,c
 19372  004786  6E37               	movwf	USBEnableEndpoint@p,c
 19373  004788  6A38               	clrf	USBEnableEndpoint@p+1,c
 19374  00478A  0E0F               	movlw	15
 19375  00478C  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 19376                           
 19377                           ;usb_device.c: 664: *p = options;
 19378  00478E  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19379  004792  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19380  004796  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19381  00479A  0C0F               	retlw	15	;funcret
 19382  00479C                     __end_of_USBEnableEndpoint:
 19383                           	opt stack 0
 19384                           pclatu	equ	0xFFB
 19385                           pclath	equ	0xFFA
 19386                           tblptru	equ	0xFF8
 19387                           tblptrh	equ	0xFF7
 19388                           tblptrl	equ	0xFF6
 19389                           tablat	equ	0xFF5
 19390                           prodh	equ	0xFF4
 19391                           prodl	equ	0xFF3
 19392                           intcon	equ	0xFF2
 19393                           postinc0	equ	0xFEE
 19394                           wreg	equ	0xFE8
 19395                           indf1	equ	0xFE7
 19396                           postdec1	equ	0xFE5
 19397                           fsr1h	equ	0xFE2
 19398                           fsr1l	equ	0xFE1
 19399                           indf2	equ	0xFDF
 19400                           postinc2	equ	0xFDE
 19401                           postdec2	equ	0xFDD
 19402                           plusw2	equ	0xFDB
 19403                           fsr2h	equ	0xFDA
 19404                           fsr2l	equ	0xFD9
 19405                           status	equ	0xFD8
 19406                           
 19407 ;; *************** function _USBConfigureEndpoint *****************
 19408 ;; Defined at:
 19409 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 19410 ;; Parameters:    Size  Location     Type
 19411 ;;  EPNum           1    wreg     unsigned char 
 19412 ;;  direction       1    0[COMRAM] unsigned char 
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;  EPNum           1    5[COMRAM] unsigned char 
 19415 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19416 ;;		 -> BDT(48), 
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19426 ;;      Params:         1       0       0       0       0       0       0       0       0
 19427 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19428 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19429 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19430 ;;Total ram usage:        8 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; This function calls:
 19433 ;;		Nothing
 19434 ;; This function is called by:
 19435 ;;		_USBEnableEndpoint
 19436 ;; This function uses a non-reentrant model
 19437 ;;
 19438                           
 19439                           	psect	text99
 19440  00517E                     __ptext99:
 19441                           	opt stack 0
 19442  00517E                     _USBConfigureEndpoint:
 19443                           	opt stack 14
 19444                           
 19445                           ;incstack = 0
 19446                           ;USBConfigureEndpoint@EPNum stored from wreg
 19447  00517E  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19448                           
 19449                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 19450                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 19451  005180  6A34               	clrf	USBConfigureEndpoint@handle,c
 19452  005182  0E04               	movlw	4
 19453  005184  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19454                           
 19455                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 19456  005186  502E               	movf	USBConfigureEndpoint@direction,w,c
 19457  005188  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19458  00518A  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19459  00518C  90D8               	bcf	status,0,c
 19460  00518E  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19461  005190  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19462  005192  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19463  005194  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19464  005196  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19465  005198  90D8               	bcf	status,0,c
 19466  00519A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19467  00519C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19468  00519E  90D8               	bcf	status,0,c
 19469  0051A0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19470  0051A2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19471  0051A4  502F               	movf	??_USBConfigureEndpoint,w,c
 19472  0051A6  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19473  0051A8  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19474  0051AA  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19475  0051AC  90D8               	bcf	status,0,c
 19476  0051AE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19477  0051B0  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19478  0051B2  90D8               	bcf	status,0,c
 19479  0051B4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19480  0051B6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19481  0051B8  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19482  0051BA  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19483  0051BC  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19484  0051BE  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19485                           
 19486                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 19487  0051C0  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19488  0051C4  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19489  0051C8  9EDF               	bcf	indf2,7,c
 19490                           
 19491                           ;usb_device.c: 1242: if(direction == 0)
 19492  0051CA  502E               	movf	USBConfigureEndpoint@direction,w,c
 19493  0051CC  E105               	bnz	i2l5645
 19494                           
 19495                           ;usb_device.c: 1243: {
 19496                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 19497  0051CE  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19498  0051D0  0D02               	mullw	2
 19499  0051D2  50F3               	movf	prodl,w,c
 19500  0051D4  0F60               	addlw	low _pBDTEntryOut
 19501  0051D6  D004               	goto	L34
 19502  0051D8                     i2l5645:
 19503                           
 19504                           ;usb_device.c: 1246: else
 19505                           ;usb_device.c: 1247: {
 19506                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 19507  0051D8  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19508  0051DA  0D02               	mullw	2
 19509  0051DC  50F3               	movf	prodl,w,c
 19510  0051DE  0F0F               	addlw	low _pBDTEntryIn
 19511  0051E0                     L34:
 19512  0051E0  6ED9               	movwf	fsr2l,c
 19513  0051E2  6ADA               	clrf	fsr2h,c
 19514  0051E4  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19515  0051E8  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19516                           
 19517                           ;usb_device.c: 1249: }
 19518                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 19519  0051EC  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19520  0051F0  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19521  0051F4  9CDF               	bcf	indf2,6,c
 19522                           
 19523                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 19524  0051F6  EE20 F004          	lfsr	2,4
 19525  0051FA  5034               	movf	USBConfigureEndpoint@handle,w,c
 19526  0051FC  26D9               	addwf	fsr2l,f,c
 19527  0051FE  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19528  005200  22DA               	addwfc	fsr2h,f,c
 19529  005202  8CDF               	bsf	indf2,6,c
 19530  005204  0012               	return		;funcret
 19531  005206                     __end_of_USBConfigureEndpoint:
 19532                           	opt stack 0
 19533                           pclatu	equ	0xFFB
 19534                           pclath	equ	0xFFA
 19535                           tblptru	equ	0xFF8
 19536                           tblptrh	equ	0xFF7
 19537                           tblptrl	equ	0xFF6
 19538                           tablat	equ	0xFF5
 19539                           prodh	equ	0xFF4
 19540                           prodl	equ	0xFF3
 19541                           intcon	equ	0xFF2
 19542                           postinc0	equ	0xFEE
 19543                           wreg	equ	0xFE8
 19544                           indf1	equ	0xFE7
 19545                           postdec1	equ	0xFE5
 19546                           fsr1h	equ	0xFE2
 19547                           fsr1l	equ	0xFE1
 19548                           indf2	equ	0xFDF
 19549                           postinc2	equ	0xFDE
 19550                           postdec2	equ	0xFDD
 19551                           plusw2	equ	0xFDB
 19552                           fsr2h	equ	0xFDA
 19553                           fsr2l	equ	0xFD9
 19554                           status	equ	0xFD8
 19555                           
 19556 ;; *************** function _USBCheckCDCRequest *****************
 19557 ;; Defined at:
 19558 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 19559 ;; Parameters:    Size  Location     Type
 19560 ;;		None
 19561 ;; Auto vars:     Size  Location     Type
 19562 ;;		None
 19563 ;; Return value:  Size  Location     Type
 19564 ;;                  1    wreg      void 
 19565 ;; Registers used:
 19566 ;;		wreg, status,2, status,0
 19567 ;; Tracked objects:
 19568 ;;		On entry : 0/0
 19569 ;;		On exit  : F/4
 19570 ;;		Unchanged: 0/0
 19571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19572 ;;      Params:         0       0       0       0       0       0       0       0       0
 19573 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19574 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19575 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19576 ;;Total ram usage:        0 bytes
 19577 ;; Hardware stack levels used:    1
 19578 ;; This function calls:
 19579 ;;		Nothing
 19580 ;; This function is called by:
 19581 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19582 ;; This function uses a non-reentrant model
 19583 ;;
 19584                           
 19585                           	psect	text100
 19586  005206                     __ptext100:
 19587                           	opt stack 0
 19588  005206                     _USBCheckCDCRequest:
 19589                           	opt stack 17
 19590                           
 19591                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 19592                           
 19593                           ;incstack = 0
 19594  005206  0104               	movlb	4	; () banked
 19595  005208  5130               	movf	48,w,b	;volatile
 19596  00520A  0B1F               	andlw	31
 19597  00520C  06E8               	decf	wreg,f,c
 19598  00520E  E001               	bz	i2l5813
 19599  005210  0012               	return	
 19600  005212                     i2l5813:
 19601                           
 19602                           ; BSR set to: 4
 19603                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 19604  005212  3930               	swapf	48,w,b	;volatile
 19605  005214  32E8               	rrcf	wreg,f,c
 19606  005216  0B03               	andlw	3
 19607  005218  06E8               	decf	wreg,f,c
 19608  00521A  E001               	bz	i2l5817
 19609  00521C  0012               	return	
 19610  00521E                     i2l5817:
 19611                           
 19612                           ; BSR set to: 4
 19613                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 19614                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 19615  00521E  5134               	movf	52,w,b	;volatile
 19616  005220  E02D               	bz	i2l5851
 19617                           
 19618                           ; BSR set to: 4
 19619  005222  0534               	decf	52,w,b	;volatile
 19620  005224  E02B               	bz	i2l5851
 19621  005226  0012               	return	
 19622  005228                     i2l5823:
 19623                           
 19624                           ; BSR set to: 4
 19625                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 19626  005228  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 19627  00522A  6E09               	movwf	_inPipes,c	;volatile
 19628  00522C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 19629  00522E  6E0A               	movwf	_inPipes+1,c	;volatile
 19630                           
 19631                           ; BSR set to: 4
 19632                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 19633  005230  6A0E               	clrf	_inPipes+5,c	;volatile
 19634  005232  0E08               	movlw	8
 19635  005234  6E0D               	movwf	_inPipes+4,c	;volatile
 19636                           
 19637                           ; BSR set to: 4
 19638                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19639  005236  800C               	bsf	_inPipes+3,0,c	;volatile
 19640                           
 19641                           ; BSR set to: 4
 19642                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 19643  005238  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19644                           
 19645                           ;usb_device_cdc.c: 212: break;
 19646  00523A  0C08               	retlw	8
 19647  00523C                     i2l5831:
 19648                           
 19649                           ; BSR set to: 4
 19650                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 19651  00523C  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 19652  00523E  6E09               	movwf	_inPipes,c	;volatile
 19653  005240  0E01               	movlw	high _dummy_encapsulated_cmd_response
 19654  005242  6E0A               	movwf	_inPipes+1,c	;volatile
 19655                           
 19656                           ; BSR set to: 4
 19657                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 19658  005244  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19659                           
 19660                           ;usb_device_cdc.c: 217: break;
 19661  005246  0012               	return	
 19662  005248                     i2l1765:
 19663                           
 19664                           ; BSR set to: 4
 19665                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 19666  005248  C436 F005          	movff	1078,_outPipes+4	;volatile
 19667  00524C  C437 F006          	movff	1079,_outPipes+5	;volatile
 19668                           
 19669                           ; BSR set to: 4
 19670                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 19671  005250  0ED8               	movlw	low _cdc_notice
 19672  005252  6E01               	movwf	_outPipes,c	;volatile
 19673  005254  0E01               	movlw	high _cdc_notice
 19674  005256  6E02               	movwf	_outPipes+1,c	;volatile
 19675                           
 19676                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 19677  005258  0E5E               	movlw	low _USART_mySetLineCodingHandler
 19678  00525A  6E07               	movwf	_outPipes+6,c	;volatile
 19679  00525C  0E4B               	movlw	high _USART_mySetLineCodingHandler
 19680  00525E  6E08               	movwf	_outPipes+7,c	;volatile
 19681                           
 19682                           ; BSR set to: 4
 19683                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 19684  005260  8E04               	bsf	_outPipes+3,7,c	;volatile
 19685                           
 19686                           ;usb_device_cdc.c: 224: break;
 19687  005262  0012               	return	
 19688  005264                     i2l5839:
 19689                           
 19690                           ; BSR set to: 4
 19691                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19692  005264  0EB0               	movlw	low _line_coding
 19693  005266  6E09               	movwf	_inPipes,c	;volatile
 19694  005268  6A0A               	clrf	_inPipes+1,c	;volatile
 19695                           
 19696                           ; BSR set to: 4
 19697  00526A  6A0E               	clrf	_inPipes+5,c	;volatile
 19698  00526C  0E07               	movlw	7
 19699  00526E  6E0D               	movwf	_inPipes+4,c	;volatile
 19700                           
 19701                           ; BSR set to: 4
 19702  005270  0EC1               	movlw	193
 19703  005272  6E0C               	movwf	_inPipes+3,c	;volatile
 19704                           
 19705                           ;usb_device_cdc.c: 231: break;
 19706  005274  0CC1               	retlw	193
 19707  005276                     i2l5845:
 19708                           
 19709                           ; BSR set to: 4
 19710                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 19711  005276  5132               	movf	50,w,b	;volatile
 19712                           
 19713                           ; BSR set to: 4
 19714                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 19715  005278  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19716                           
 19717                           ;usb_device_cdc.c: 256: break;
 19718  00527A  0012               	return	
 19719  00527C                     i2l5851:
 19720                           
 19721                           ; BSR set to: 4
 19722  00527C  5131               	movf	49,w,b	;volatile
 19723                           
 19724                           ; Switch size 1, requested type "speed"
 19725                           ; Number of cases is 5, Range of values is 0 to 34
 19726                           ; switch strategies available:
 19727                           ; Name         Instructions Cycles
 19728                           ; simple_byte           16     9 (average)
 19729                           ;	Chosen strategy is simple_byte
 19730  00527E  E0D4               	bz	i2l5823
 19731  005280  0A01               	xorlw	1	; case 1
 19732  005282  E0DC               	bz	i2l5831
 19733  005284  0A21               	xorlw	33	; case 32
 19734  005286  E0E0               	bz	i2l1765
 19735  005288  0A01               	xorlw	1	; case 33
 19736  00528A  E0EC               	bz	i2l5839
 19737  00528C  0A03               	xorlw	3	; case 34
 19738  00528E  E0F3               	bz	i2l5845
 19739                           
 19740                           ; BSR set to: 4
 19741  005290  0012               	return		;funcret
 19742  005292                     __end_of_USBCheckCDCRequest:
 19743                           	opt stack 0
 19744                           pclatu	equ	0xFFB
 19745                           pclath	equ	0xFFA
 19746                           tblptru	equ	0xFF8
 19747                           tblptrh	equ	0xFF7
 19748                           tblptrl	equ	0xFF6
 19749                           tablat	equ	0xFF5
 19750                           prodh	equ	0xFF4
 19751                           prodl	equ	0xFF3
 19752                           intcon	equ	0xFF2
 19753                           postinc0	equ	0xFEE
 19754                           wreg	equ	0xFE8
 19755                           indf1	equ	0xFE7
 19756                           postdec1	equ	0xFE5
 19757                           fsr1h	equ	0xFE2
 19758                           fsr1l	equ	0xFE1
 19759                           indf2	equ	0xFDF
 19760                           postinc2	equ	0xFDE
 19761                           postdec2	equ	0xFDD
 19762                           plusw2	equ	0xFDB
 19763                           fsr2h	equ	0xFDA
 19764                           fsr2l	equ	0xFD9
 19765                           status	equ	0xFD8
 19766                           
 19767 ;; *************** function _USBCtrlTrfOutHandler *****************
 19768 ;; Defined at:
 19769 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 19770 ;; Parameters:    Size  Location     Type
 19771 ;;		None
 19772 ;; Auto vars:     Size  Location     Type
 19773 ;;		None
 19774 ;; Return value:  Size  Location     Type
 19775 ;;                  1    wreg      void 
 19776 ;; Registers used:
 19777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 19778 ;; Tracked objects:
 19779 ;;		On entry : F/0
 19780 ;;		On exit  : F/0
 19781 ;;		Unchanged: 0/0
 19782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19783 ;;      Params:         0       0       0       0       0       0       0       0       0
 19784 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19786 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19787 ;;Total ram usage:        0 bytes
 19788 ;; Hardware stack levels used:    1
 19789 ;; Hardware stack levels required when called:    3
 19790 ;; This function calls:
 19791 ;;		_USBCtrlTrfRxService
 19792 ;; This function is called by:
 19793 ;;		_USBCtrlEPService
 19794 ;; This function uses a non-reentrant model
 19795 ;;
 19796                           
 19797                           	psect	text101
 19798  004ABA                     __ptext101:
 19799                           	opt stack 0
 19800  004ABA                     _USBCtrlTrfOutHandler:
 19801                           	opt stack 14
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;usb_device.c: 2171: if(controlTransferState == 2)
 19805                           
 19806                           ; BSR set to: 4
 19807                           ;incstack = 0
 19808  004ABA  0E02               	movlw	2
 19809  004ABC  1821               	xorwf	_controlTransferState,w,c	;volatile
 19810  004ABE  E102               	bnz	i2l1648
 19811                           
 19812                           ; BSR set to: 0
 19813                           ;usb_device.c: 2172: {
 19814                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 19815  004AC0  EF3E  F032         	goto	_USBCtrlTrfRxService	;wreg free
 19816  004AC4                     i2l1648:
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;usb_device.c: 2175: else
 19820                           ;usb_device.c: 2176: {
 19821                           ;usb_device.c: 2179: controlTransferState = 0;
 19822  004AC4  6A21               	clrf	_controlTransferState,c	;volatile
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 19826  004AC6  518D               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 19827  004AC8  E11F               	bnz	i2l1650
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;usb_device.c: 2187: {
 19831                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 19832  004ACA  EE20 F001          	lfsr	2,1
 19833  004ACE  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19834  004AD0  26D9               	addwf	fsr2l,f,c
 19835  004AD2  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19836  004AD4  22DA               	addwfc	fsr2h,f,c
 19837  004AD6  0E08               	movlw	8
 19838  004AD8  6EDF               	movwf	indf2,c
 19839                           
 19840                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19841  004ADA  EE20 F002          	lfsr	2,2
 19842  004ADE  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19843  004AE0  26D9               	addwf	fsr2l,f,c
 19844  004AE2  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19845  004AE4  22DA               	addwfc	fsr2h,f,c
 19846  004AE6  0E30               	movlw	48
 19847  004AE8  6EDE               	movwf	postinc2,c
 19848  004AEA  0E04               	movlw	4
 19849  004AEC  6EDD               	movwf	postdec2,c
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19853  004AEE  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19854  004AF2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19855  004AF6  0E0C               	movlw	12
 19856  004AF8  6EDF               	movwf	indf2,c
 19857                           
 19858                           ; BSR set to: 0
 19859                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19860  004AFA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19861  004AFE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19862  004B02  0E00               	movlw	0
 19863  004B04  8EDB               	bsf	plusw2,7,c
 19864                           
 19865                           ;usb_device.c: 2192: }
 19866  004B06  0C00               	retlw	0
 19867  004B08                     i2l1650:
 19868                           
 19869                           ; BSR set to: 0
 19870                           ;usb_device.c: 2193: else
 19871                           ;usb_device.c: 2194: {
 19872                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 19873  004B08  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19874                           
 19875                           ; BSR set to: 0
 19876  004B0A  0012               	return		;funcret
 19877  004B0C                     __end_of_USBCtrlTrfOutHandler:
 19878                           	opt stack 0
 19879                           pclatu	equ	0xFFB
 19880                           pclath	equ	0xFFA
 19881                           tblptru	equ	0xFF8
 19882                           tblptrh	equ	0xFF7
 19883                           tblptrl	equ	0xFF6
 19884                           tablat	equ	0xFF5
 19885                           prodh	equ	0xFF4
 19886                           prodl	equ	0xFF3
 19887                           intcon	equ	0xFF2
 19888                           postinc0	equ	0xFEE
 19889                           wreg	equ	0xFE8
 19890                           indf1	equ	0xFE7
 19891                           postdec1	equ	0xFE5
 19892                           fsr1h	equ	0xFE2
 19893                           fsr1l	equ	0xFE1
 19894                           indf2	equ	0xFDF
 19895                           postinc2	equ	0xFDE
 19896                           postdec2	equ	0xFDD
 19897                           plusw2	equ	0xFDB
 19898                           fsr2h	equ	0xFDA
 19899                           fsr2l	equ	0xFD9
 19900                           status	equ	0xFD8
 19901                           
 19902 ;; *************** function _USBCtrlTrfRxService *****************
 19903 ;; Defined at:
 19904 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 19905 ;; Parameters:    Size  Location     Type
 19906 ;;		None
 19907 ;; Auto vars:     Size  Location     Type
 19908 ;;  byteToRead      1   18[COMRAM] unsigned char 
 19909 ;;  i               1   17[COMRAM] unsigned char 
 19910 ;; Return value:  Size  Location     Type
 19911 ;;                  1    wreg      void 
 19912 ;; Registers used:
 19913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 19914 ;; Tracked objects:
 19915 ;;		On entry : F/0
 19916 ;;		On exit  : F/0
 19917 ;;		Unchanged: 0/0
 19918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19919 ;;      Params:         0       0       0       0       0       0       0       0       0
 19920 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19921 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19922 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19923 ;;Total ram usage:        2 bytes
 19924 ;; Hardware stack levels used:    1
 19925 ;; Hardware stack levels required when called:    2
 19926 ;; This function calls:
 19927 ;;		_USART_mySetLineCodingHandler
 19928 ;;		_USBCtrlEPAllowStatusStage
 19929 ;; This function is called by:
 19930 ;;		_USBCtrlTrfOutHandler
 19931 ;; This function uses a non-reentrant model
 19932 ;;
 19933                           
 19934                           	psect	text102
 19935  00647C                     __ptext102:
 19936                           	opt stack 0
 19937  00647C                     _USBCtrlTrfRxService:
 19938                           	opt stack 14
 19939                           
 19940                           ; BSR set to: 0
 19941                           ;usb_device.c: 1520: uint8_t byteToRead;
 19942                           ;usb_device.c: 1521: uint8_t i;
 19943                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;incstack = 0
 19947  00647C  EE20 F001          	lfsr	2,1
 19948  006480  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19949  006482  26D9               	addwf	fsr2l,f,c
 19950  006484  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19951  006486  22DA               	addwfc	fsr2h,f,c
 19952  006488  50DF               	movf	indf2,w,c
 19953  00648A  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 19954                           
 19955                           ; BSR set to: 0
 19956                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 19957  00648C  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19958  00648E  5C05               	subwf	_outPipes+4,w,c	;volatile
 19959  006490  0E00               	movlw	0
 19960  006492  5806               	subwfb	_outPipes+5,w,c	;volatile
 19961  006494  E202               	bc	i2l6533
 19962                           
 19963                           ; BSR set to: 0
 19964                           ;usb_device.c: 1532: {
 19965                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 19966  006496  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19967  00649A                     i2l6533:
 19968                           
 19969                           ; BSR set to: 0
 19970                           ;usb_device.c: 1534: }
 19971                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 19972  00649A  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19973  00649C  5E05               	subwf	_outPipes+4,f,c	;volatile
 19974  00649E  0E00               	movlw	0
 19975  0064A0  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 19979  0064A2  6A3F               	clrf	USBCtrlTrfRxService@i,c
 19980  0064A4  D00F               	goto	i2l6543
 19981  0064A6                     i2l6537:
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;usb_device.c: 1541: {
 19985                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19986  0064A6  0E38               	movlw	56
 19987  0064A8  243F               	addwf	USBCtrlTrfRxService@i,w,c
 19988  0064AA  6ED9               	movwf	fsr2l,c
 19989  0064AC  6ADA               	clrf	fsr2h,c
 19990  0064AE  0E04               	movlw	4
 19991  0064B0  22DA               	addwfc	fsr2h,f,c
 19992  0064B2  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19993  0064B6  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19994  0064BA  CFDF FFE7          	movff	indf2,indf1
 19995                           
 19996                           ; BSR set to: 0
 19997  0064BE  4A01               	infsnz	_outPipes,f,c	;volatile
 19998  0064C0  2A02               	incf	_outPipes+1,f,c	;volatile
 19999                           
 20000                           ; BSR set to: 0
 20001  0064C2  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 20002  0064C4                     i2l6543:
 20003                           
 20004                           ; BSR set to: 0
 20005  0064C4  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 20006  0064C6  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 20007  0064C8  E3EE               	bnc	i2l6537
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;usb_device.c: 1543: }
 20011                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 20012  0064CA  5005               	movf	_outPipes+4,w,c	;volatile
 20013  0064CC  1006               	iorwf	_outPipes+5,w,c	;volatile
 20014  0064CE  E032               	bz	i2l6559
 20015                           
 20016                           ; BSR set to: 0
 20017                           ;usb_device.c: 1548: {
 20018                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 20019  0064D0  EE20 F001          	lfsr	2,1
 20020  0064D4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20021  0064D6  26D9               	addwf	fsr2l,f,c
 20022  0064D8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20023  0064DA  22DA               	addwfc	fsr2h,f,c
 20024  0064DC  0E08               	movlw	8
 20025  0064DE  6EDF               	movwf	indf2,c
 20026                           
 20027                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20028  0064E0  EE20 F002          	lfsr	2,2
 20029  0064E4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20030  0064E6  26D9               	addwf	fsr2l,f,c
 20031  0064E8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20032  0064EA  22DA               	addwfc	fsr2h,f,c
 20033  0064EC  0E38               	movlw	56
 20034  0064EE  6EDE               	movwf	postinc2,c
 20035  0064F0  0E04               	movlw	4
 20036  0064F2  6EDD               	movwf	postdec2,c
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 20040  0064F4  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20041  0064F8  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20042  0064FC  BCDF               	btfsc	indf2,6,c
 20043  0064FE  D00D               	goto	i2l6555
 20044                           
 20045                           ; BSR set to: 0
 20046                           ;usb_device.c: 1552: {
 20047                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20048  006500  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20049  006504  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20050  006508  0E48               	movlw	72
 20051  00650A  6EDF               	movwf	indf2,c
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20055  00650C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20056  006510  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20057  006514  0E00               	movlw	0
 20058  006516  8EDB               	bsf	plusw2,7,c
 20059                           
 20060                           ;usb_device.c: 1555: }
 20061  006518  0C00               	retlw	0
 20062  00651A                     i2l6555:
 20063                           
 20064                           ; BSR set to: 0
 20065                           ;usb_device.c: 1556: else
 20066                           ;usb_device.c: 1557: {
 20067                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 20068  00651A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20069  00651E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20070  006522  0E08               	movlw	8
 20071  006524  6EDF               	movwf	indf2,c
 20072                           
 20073                           ; BSR set to: 0
 20074                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20075  006526  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20076  00652A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20077  00652E  0E00               	movlw	0
 20078  006530  8EDB               	bsf	plusw2,7,c
 20079  006532  0C00               	retlw	0
 20080  006534                     i2l6559:
 20081                           
 20082                           ; BSR set to: 0
 20083                           ;usb_device.c: 1562: else
 20084                           ;usb_device.c: 1563: {
 20085                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 20086  006534  EE20 F001          	lfsr	2,1
 20087  006538  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20088  00653A  26D9               	addwf	fsr2l,f,c
 20089  00653C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20090  00653E  22DA               	addwfc	fsr2h,f,c
 20091  006540  0E08               	movlw	8
 20092  006542  6EDF               	movwf	indf2,c
 20093                           
 20094                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20095  006544  EE20 F002          	lfsr	2,2
 20096  006548  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20097  00654A  26D9               	addwf	fsr2l,f,c
 20098  00654C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20099  00654E  22DA               	addwfc	fsr2h,f,c
 20100  006550  0E30               	movlw	48
 20101  006552  6EDE               	movwf	postinc2,c
 20102  006554  0E04               	movlw	4
 20103  006556  6EDD               	movwf	postdec2,c
 20104                           
 20105                           ; BSR set to: 0
 20106                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20107  006558  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20108  00655C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20109  006560  6EDF               	movwf	indf2,c
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20113  006562  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20114  006566  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20115  00656A  0E00               	movlw	0
 20116  00656C  8EDB               	bsf	plusw2,7,c
 20117                           
 20118                           ; BSR set to: 0
 20119                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 20120  00656E  5007               	movf	_outPipes+6,w,c	;volatile
 20121  006570  1008               	iorwf	_outPipes+7,w,c	;volatile
 20122  006572  E00E               	bz	i2l6569
 20123                           
 20124                           ; BSR set to: 0
 20125                           ;usb_device.c: 1581: {
 20126                           ;usb_device.c: 1586: outPipes[0].pFunc();
 20127  006574  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 20128  006578  D801               	call	i2u446_48
 20129  00657A  D00A               	goto	i2l6569
 20130  00657C                     i2u446_48:
 20131  00657C  0005               	push	
 20132  00657E  6EFA               	movwf	pclath,c
 20133  006580  50DE               	movf	postinc2,w,c
 20134  006582  6EFD               	movwf	tosl,c
 20135  006584  50DE               	movf	postinc2,w,c
 20136  006586  6EFE               	movwf	tosh,c
 20137  006588  50F8               	movf	tblptru,w,c
 20138  00658A  6EFF               	movwf	tosu,c
 20139  00658C  50FA               	movf	pclath,w,c
 20140  00658E  0012               	return		;indir
 20141  006590                     i2l6569:
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;usb_device.c: 1588: }
 20145                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 20146  006590  9E04               	bcf	_outPipes+3,7,c	;volatile
 20147                           
 20148                           ; BSR set to: 0
 20149                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 20150  006592  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20151  006594  B4D8               	btfsc	status,2,c
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;usb_device.c: 1604: {
 20155                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 20156  006596  EC75  F02C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20157                           
 20158                           ; BSR set to: 0
 20159  00659A  0012               	return		;funcret
 20160  00659C                     __end_of_USBCtrlTrfRxService:
 20161                           	opt stack 0
 20162                           tosu	equ	0xFFF
 20163                           tosh	equ	0xFFE
 20164                           tosl	equ	0xFFD
 20165                           pclatu	equ	0xFFB
 20166                           pclath	equ	0xFFA
 20167                           tblptru	equ	0xFF8
 20168                           tblptrh	equ	0xFF7
 20169                           tblptrl	equ	0xFF6
 20170                           tablat	equ	0xFF5
 20171                           prodh	equ	0xFF4
 20172                           prodl	equ	0xFF3
 20173                           intcon	equ	0xFF2
 20174                           postinc0	equ	0xFEE
 20175                           wreg	equ	0xFE8
 20176                           indf1	equ	0xFE7
 20177                           postdec1	equ	0xFE5
 20178                           fsr1h	equ	0xFE2
 20179                           fsr1l	equ	0xFE1
 20180                           indf2	equ	0xFDF
 20181                           postinc2	equ	0xFDE
 20182                           postdec2	equ	0xFDD
 20183                           plusw2	equ	0xFDB
 20184                           fsr2h	equ	0xFDA
 20185                           fsr2l	equ	0xFD9
 20186                           status	equ	0xFD8
 20187                           
 20188 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 20189 ;; Defined at:
 20190 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 20191 ;; Parameters:    Size  Location     Type
 20192 ;;		None
 20193 ;; Auto vars:     Size  Location     Type
 20194 ;;		None
 20195 ;; Return value:  Size  Location     Type
 20196 ;;                  1    wreg      void 
 20197 ;; Registers used:
 20198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20199 ;; Tracked objects:
 20200 ;;		On entry : 0/0
 20201 ;;		On exit  : F/0
 20202 ;;		Unchanged: 0/0
 20203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20204 ;;      Params:         0       0       0       0       0       0       0       0       0
 20205 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20206 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20207 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20208 ;;Total ram usage:        0 bytes
 20209 ;; Hardware stack levels used:    1
 20210 ;; This function calls:
 20211 ;;		Nothing
 20212 ;; This function is called by:
 20213 ;;		_USBDeviceTasks
 20214 ;;		_USBCtrlEPServiceComplete
 20215 ;;		_USBCtrlTrfRxService
 20216 ;; This function uses a non-reentrant model
 20217 ;;
 20218                           
 20219                           	psect	text103
 20220  0058EA                     __ptext103:
 20221                           	opt stack 0
 20222  0058EA                     _USBCtrlEPAllowStatusStage:
 20223                           	opt stack 15
 20224                           
 20225                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;incstack = 0
 20229  0058EA  0100               	movlb	0	; () banked
 20230  0058EC  5192               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 20231  0058EE  A4D8               	btfss	status,2,c
 20232  0058F0  0012               	return	
 20233                           
 20234                           ; BSR set to: 0
 20235                           ;usb_device.c: 1112: {
 20236                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 20237  0058F2  0E01               	movlw	1
 20238  0058F4  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20239                           
 20240                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 20241  0058F6  5193               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 20242  0058F8  A4D8               	btfss	status,2,c
 20243  0058FA  0012               	return	
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;usb_device.c: 1115: {
 20247                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 20248  0058FC  0E01               	movlw	1
 20249  0058FE  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;usb_device.c: 1120: if(controlTransferState == 2)
 20253  005900  0E02               	movlw	2
 20254  005902  1821               	xorwf	_controlTransferState,w,c	;volatile
 20255  005904  E114               	bnz	i2l6121
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;usb_device.c: 1121: {
 20259                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 20260  005906  EE20 F001          	lfsr	2,1
 20261  00590A  500F               	movf	_pBDTEntryIn,w,c
 20262  00590C  26D9               	addwf	fsr2l,f,c
 20263  00590E  5010               	movf	_pBDTEntryIn+1,w,c
 20264  005910  22DA               	addwfc	fsr2h,f,c
 20265  005912  6ADF               	clrf	indf2,c
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20269  005914  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20270  005918  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20271  00591C  0E48               	movlw	72
 20272  00591E  6EDF               	movwf	indf2,c
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20276  005920  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20277  005924  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20278  005928  0E00               	movlw	0
 20279  00592A  8EDB               	bsf	plusw2,7,c
 20280                           
 20281                           ;usb_device.c: 1125: }
 20282  00592C  0C00               	retlw	0
 20283  00592E                     i2l6121:
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 20287  00592E  0421               	decf	_controlTransferState,w,c	;volatile
 20288  005930  A4D8               	btfss	status,2,c
 20289  005932  0012               	return	
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;usb_device.c: 1127: {
 20293                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 20294  005934  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 20298  005936  EE20 F001          	lfsr	2,1
 20299  00593A  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 20300  00593C  26D9               	addwf	fsr2l,f,c
 20301  00593E  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 20302  005940  22DA               	addwfc	fsr2h,f,c
 20303  005942  0E08               	movlw	8
 20304  005944  6EDF               	movwf	indf2,c
 20305                           
 20306                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 20307  005946  EE20 F002          	lfsr	2,2
 20308  00594A  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 20309  00594C  26D9               	addwf	fsr2l,f,c
 20310  00594E  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 20311  005950  22DA               	addwfc	fsr2h,f,c
 20312  005952  0E30               	movlw	48
 20313  005954  6EDE               	movwf	postinc2,c
 20314  005956  0E04               	movlw	4
 20315  005958  6EDD               	movwf	postdec2,c
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 20319  00595A  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20320  00595E  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20321  005962  6EDF               	movwf	indf2,c
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 20325  005964  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20326  005968  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20327  00596C  0E00               	movlw	0
 20328  00596E  8EDB               	bsf	plusw2,7,c
 20329                           
 20330                           ; BSR set to: 0
 20331                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 20332  005970  0E01               	movlw	1
 20333  005972  6F8D               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 20337  005974  EE20 F001          	lfsr	2,1
 20338  005978  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20339  00597A  26D9               	addwf	fsr2l,f,c
 20340  00597C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20341  00597E  22DA               	addwfc	fsr2h,f,c
 20342  005980  0E08               	movlw	8
 20343  005982  6EDF               	movwf	indf2,c
 20344                           
 20345                           ; BSR set to: 0
 20346                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20347  005984  EE20 F002          	lfsr	2,2
 20348  005988  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20349  00598A  26D9               	addwf	fsr2l,f,c
 20350  00598C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20351  00598E  22DA               	addwfc	fsr2h,f,c
 20352  005990  0E30               	movlw	48
 20353  005992  6EDE               	movwf	postinc2,c
 20354  005994  0E04               	movlw	4
 20355  005996  6EDD               	movwf	postdec2,c
 20356                           
 20357                           ; BSR set to: 0
 20358                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 20359  005998  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20360  00599C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20361  0059A0  0E80               	movlw	128
 20362  0059A2  6EDF               	movwf	indf2,c
 20363  0059A4  0C80               	retlw	128
 20364  0059A6                     __end_of_USBCtrlEPAllowStatusStage:
 20365                           	opt stack 0
 20366                           tosu	equ	0xFFF
 20367                           tosh	equ	0xFFE
 20368                           tosl	equ	0xFFD
 20369                           pclatu	equ	0xFFB
 20370                           pclath	equ	0xFFA
 20371                           tblptru	equ	0xFF8
 20372                           tblptrh	equ	0xFF7
 20373                           tblptrl	equ	0xFF6
 20374                           tablat	equ	0xFF5
 20375                           prodh	equ	0xFF4
 20376                           prodl	equ	0xFF3
 20377                           intcon	equ	0xFF2
 20378                           postinc0	equ	0xFEE
 20379                           wreg	equ	0xFE8
 20380                           indf1	equ	0xFE7
 20381                           postdec1	equ	0xFE5
 20382                           fsr1h	equ	0xFE2
 20383                           fsr1l	equ	0xFE1
 20384                           indf2	equ	0xFDF
 20385                           postinc2	equ	0xFDE
 20386                           postdec2	equ	0xFDD
 20387                           plusw2	equ	0xFDB
 20388                           fsr2h	equ	0xFDA
 20389                           fsr2l	equ	0xFD9
 20390                           status	equ	0xFD8
 20391                           
 20392 ;; *************** function _USBCtrlTrfInHandler *****************
 20393 ;; Defined at:
 20394 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 20395 ;; Parameters:    Size  Location     Type
 20396 ;;		None
 20397 ;; Auto vars:     Size  Location     Type
 20398 ;;  lastDTS         1   17[COMRAM] unsigned char 
 20399 ;; Return value:  Size  Location     Type
 20400 ;;                  1    wreg      void 
 20401 ;; Registers used:
 20402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 20403 ;; Tracked objects:
 20404 ;;		On entry : F/0
 20405 ;;		On exit  : F/0
 20406 ;;		Unchanged: 0/0
 20407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20408 ;;      Params:         0       0       0       0       0       0       0       0       0
 20409 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20410 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20411 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20412 ;;Total ram usage:        1 bytes
 20413 ;; Hardware stack levels used:    1
 20414 ;; Hardware stack levels required when called:    2
 20415 ;; This function calls:
 20416 ;;		_USART_mySetLineCodingHandler
 20417 ;;		_USBCtrlTrfTxService
 20418 ;; This function is called by:
 20419 ;;		_USBCtrlEPService
 20420 ;; This function uses a non-reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text104
 20424  005A68                     __ptext104:
 20425                           	opt stack 0
 20426  005A68                     _USBCtrlTrfInHandler:
 20427                           	opt stack 15
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;usb_device.c: 2225: uint8_t lastDTS;
 20431                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 20432                           
 20433                           ; BSR set to: 0
 20434                           ;incstack = 0
 20435  005A68  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20436  005A6C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20437  005A70  0E00               	movlw	0
 20438  005A72  BCDF               	btfsc	indf2,6,c
 20439  005A74  0E01               	movlw	1
 20440  005A76  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 20441                           
 20442                           ; BSR set to: 0
 20443                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 20444  005A78  0E04               	movlw	4
 20445  005A7A  1A0F               	xorwf	_pBDTEntryIn,f,c
 20446                           
 20447                           ; BSR set to: 0
 20448                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 20449  005A7C  0E08               	movlw	8
 20450  005A7E  1991               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 20451  005A80  E10A               	bnz	i2l7319
 20452                           
 20453                           ; BSR set to: 0
 20454                           ;usb_device.c: 2236: {
 20455                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 20456  005A82  0104               	movlb	4	; () banked
 20457  005A84  5132               	movf	50,w,b	;volatile
 20458  005A86  0B7F               	andlw	127
 20459  005A88  6E63               	movwf	3939,c	;volatile
 20460                           
 20461                           ; BSR set to: 4
 20462                           ;usb_device.c: 2238: if(UADDR != 0u)
 20463  005A8A  5063               	movf	3939,w,c
 20464                           
 20465                           ; BSR set to: 4
 20466                           ;usb_device.c: 2239: {
 20467                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 20468  005A8C  0E10               	movlw	16
 20469  005A8E  B4D8               	btfsc	status,2,c
 20470                           
 20471                           ; BSR set to: 4
 20472                           ;usb_device.c: 2242: else
 20473                           ;usb_device.c: 2243: {
 20474                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 20475  005A90  0E04               	movlw	4
 20476                           
 20477                           ;usb_device.c: 2241: }
 20478  005A92  0100               	movlb	0	; () banked
 20479  005A94  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 20480  005A96                     i2l7319:
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;usb_device.c: 2245: }
 20484                           ;usb_device.c: 2246: }
 20485                           ;usb_device.c: 2249: if(controlTransferState == 1)
 20486  005A96  0421               	decf	_controlTransferState,w,c	;volatile
 20487  005A98  E138               	bnz	i2l1658
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;usb_device.c: 2250: {
 20491                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 20492  005A9A  EE20 F002          	lfsr	2,2
 20493  005A9E  500F               	movf	_pBDTEntryIn,w,c
 20494  005AA0  26D9               	addwf	fsr2l,f,c
 20495  005AA2  5010               	movf	_pBDTEntryIn+1,w,c
 20496  005AA4  22DA               	addwfc	fsr2h,f,c
 20497  005AA6  0E38               	movlw	56
 20498  005AA8  6EDE               	movwf	postinc2,c
 20499  005AAA  0E04               	movlw	4
 20500  005AAC  6EDD               	movwf	postdec2,c
 20501                           
 20502                           ; BSR set to: 0
 20503                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 20504  005AAE  ECD3  F02C         	call	_USBCtrlTrfTxService	;wreg free
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 20508  005AB2  0E02               	movlw	2
 20509  005AB4  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 20510  005AB6  E10D               	bnz	i2l7331
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;usb_device.c: 2259: {
 20514                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 20515  005AB8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20516  005ABC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20517  005AC0  0E04               	movlw	4
 20518  005AC2  6EDF               	movwf	indf2,c
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20522  005AC4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20523  005AC8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20524  005ACC  0E00               	movlw	0
 20525  005ACE  8EDB               	bsf	plusw2,7,c
 20526                           
 20527                           ;usb_device.c: 2264: }
 20528  005AD0  0C00               	retlw	0
 20529  005AD2                     i2l7331:
 20530                           
 20531                           ; BSR set to: 0
 20532                           ;usb_device.c: 2265: else
 20533                           ;usb_device.c: 2266: {
 20534                           ;usb_device.c: 2267: if(lastDTS == 0)
 20535  005AD2  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 20536  005AD4  E10D               	bnz	i2l7337
 20537                           
 20538                           ; BSR set to: 0
 20539                           ;usb_device.c: 2268: {
 20540                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20541  005AD6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20542  005ADA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20543  005ADE  0E48               	movlw	72
 20544  005AE0  6EDF               	movwf	indf2,c
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20548  005AE2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20549  005AE6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20550  005AEA  0E00               	movlw	0
 20551  005AEC  8EDB               	bsf	plusw2,7,c
 20552                           
 20553                           ;usb_device.c: 2271: }
 20554  005AEE  0C00               	retlw	0
 20555  005AF0                     i2l7337:
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;usb_device.c: 2272: else
 20559                           ;usb_device.c: 2273: {
 20560                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 20561  005AF0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20562  005AF4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20563  005AF8  0E08               	movlw	8
 20564  005AFA  6EDF               	movwf	indf2,c
 20565                           
 20566                           ; BSR set to: 0
 20567                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20568  005AFC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20569  005B00  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20570  005B04  0E00               	movlw	0
 20571  005B06  8EDB               	bsf	plusw2,7,c
 20572  005B08  0C00               	retlw	0
 20573  005B0A                     i2l1658:
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;usb_device.c: 2279: else
 20577                           ;usb_device.c: 2280: {
 20578                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 20579  005B0A  AE04               	btfss	_outPipes+3,7,c	;volatile
 20580  005B0C  D012               	goto	i2l7347
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;usb_device.c: 2285: {
 20584                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 20585  005B0E  5007               	movf	_outPipes+6,w,c	;volatile
 20586  005B10  1008               	iorwf	_outPipes+7,w,c	;volatile
 20587  005B12  E00E               	bz	i2l7345
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;usb_device.c: 2287: {
 20591                           ;usb_device.c: 2288: outPipes[0].pFunc();
 20592  005B14  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 20593  005B18  D801               	call	i2u533_48
 20594  005B1A  D00A               	goto	i2l7345
 20595  005B1C                     i2u533_48:
 20596  005B1C  0005               	push	
 20597  005B1E  6EFA               	movwf	pclath,c
 20598  005B20  50DE               	movf	postinc2,w,c
 20599  005B22  6EFD               	movwf	tosl,c
 20600  005B24  50DE               	movf	postinc2,w,c
 20601  005B26  6EFE               	movwf	tosh,c
 20602  005B28  50F8               	movf	tblptru,w,c
 20603  005B2A  6EFF               	movwf	tosu,c
 20604  005B2C  50FA               	movf	pclath,w,c
 20605  005B2E  0012               	return		;indir
 20606  005B30                     i2l7345:
 20607                           
 20608                           ; BSR set to: 0
 20609                           ;usb_device.c: 2289: }
 20610                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 20611  005B30  9E04               	bcf	_outPipes+3,7,c	;volatile
 20612  005B32                     i2l7347:
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;usb_device.c: 2291: }
 20616                           ;usb_device.c: 2293: controlTransferState = 0;
 20617  005B32  6A21               	clrf	_controlTransferState,c	;volatile
 20618                           
 20619                           ; BSR set to: 0
 20620  005B34  0012               	return		;funcret
 20621  005B36                     __end_of_USBCtrlTrfInHandler:
 20622                           	opt stack 0
 20623                           tosu	equ	0xFFF
 20624                           tosh	equ	0xFFE
 20625                           tosl	equ	0xFFD
 20626                           pclatu	equ	0xFFB
 20627                           pclath	equ	0xFFA
 20628                           tblptru	equ	0xFF8
 20629                           tblptrh	equ	0xFF7
 20630                           tblptrl	equ	0xFF6
 20631                           tablat	equ	0xFF5
 20632                           prodh	equ	0xFF4
 20633                           prodl	equ	0xFF3
 20634                           intcon	equ	0xFF2
 20635                           postinc0	equ	0xFEE
 20636                           wreg	equ	0xFE8
 20637                           indf1	equ	0xFE7
 20638                           postdec1	equ	0xFE5
 20639                           fsr1h	equ	0xFE2
 20640                           fsr1l	equ	0xFE1
 20641                           indf2	equ	0xFDF
 20642                           postinc2	equ	0xFDE
 20643                           postdec2	equ	0xFDD
 20644                           plusw2	equ	0xFDB
 20645                           fsr2h	equ	0xFDA
 20646                           fsr2l	equ	0xFD9
 20647                           status	equ	0xFD8
 20648                           
 20649 ;; *************** function _USBCtrlTrfTxService *****************
 20650 ;; Defined at:
 20651 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 20652 ;; Parameters:    Size  Location     Type
 20653 ;;		None
 20654 ;; Auto vars:     Size  Location     Type
 20655 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20656 ;; Return value:  Size  Location     Type
 20657 ;;                  1    wreg      void 
 20658 ;; Registers used:
 20659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20660 ;; Tracked objects:
 20661 ;;		On entry : B/4
 20662 ;;		On exit  : F/0
 20663 ;;		Unchanged: 0/0
 20664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20665 ;;      Params:         0       0       0       0       0       0       0       0       0
 20666 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20667 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20668 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20669 ;;Total ram usage:        1 bytes
 20670 ;; Hardware stack levels used:    1
 20671 ;; This function calls:
 20672 ;;		Nothing
 20673 ;; This function is called by:
 20674 ;;		_USBCtrlEPAllowDataStage
 20675 ;;		_USBCtrlTrfInHandler
 20676 ;; This function uses a non-reentrant model
 20677 ;;
 20678                           
 20679                           	psect	text105
 20680  0059A6                     __ptext105:
 20681                           	opt stack 0
 20682  0059A6                     _USBCtrlTrfTxService:
 20683                           	opt stack 14
 20684                           
 20685                           ;usb_device.c: 1439: uint8_t byteToSend;
 20686                           ;usb_device.c: 1443: byteToSend = 8;
 20687                           
 20688                           ; BSR set to: 0
 20689                           ;incstack = 0
 20690  0059A6  0E08               	movlw	8
 20691  0059A8  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20692                           
 20693                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 20694  0059AA  500E               	movf	_inPipes+5,w,c	;volatile
 20695  0059AC  E10D               	bnz	i2l5919
 20696  0059AE  0E08               	movlw	8
 20697  0059B0  5C0D               	subwf	_inPipes+4,w,c	;volatile
 20698  0059B2  E20A               	bc	i2l5919
 20699                           
 20700                           ;usb_device.c: 1445: {
 20701                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 20702  0059B4  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20703                           
 20704                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 20705  0059B8  502B               	movf	_shortPacketStatus,w,c	;volatile
 20706  0059BA  E102               	bnz	i2l5915
 20707                           
 20708                           ;usb_device.c: 1454: {
 20709                           ;usb_device.c: 1455: shortPacketStatus = 1;
 20710  0059BC  0E01               	movlw	1
 20711  0059BE  D003               	goto	L36
 20712  0059C0                     i2l5915:
 20713                           
 20714                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 20715  0059C0  042B               	decf	_shortPacketStatus,w,c	;volatile
 20716  0059C2  E102               	bnz	i2l5919
 20717                           
 20718                           ;usb_device.c: 1458: {
 20719                           ;usb_device.c: 1459: shortPacketStatus = 2;
 20720  0059C4  0E02               	movlw	2
 20721  0059C6                     L36:
 20722  0059C6  6E2B               	movwf	_shortPacketStatus,c	;volatile
 20723  0059C8                     i2l5919:
 20724                           
 20725                           ;usb_device.c: 1460: }
 20726                           ;usb_device.c: 1461: }
 20727                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 20728  0059C8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20729  0059CA  5E0D               	subwf	_inPipes+4,f,c	;volatile
 20730  0059CC  0E00               	movlw	0
 20731  0059CE  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 20732                           
 20733                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 20734  0059D0  EE20 F001          	lfsr	2,1
 20735  0059D4  500F               	movf	_pBDTEntryIn,w,c
 20736  0059D6  26D9               	addwf	fsr2l,f,c
 20737  0059D8  5010               	movf	_pBDTEntryIn+1,w,c
 20738  0059DA  22DA               	addwfc	fsr2h,f,c
 20739  0059DC  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20740                           
 20741                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 20742  0059E0  0E38               	movlw	56
 20743  0059E2  0100               	movlb	0	; () banked
 20744  0059E4  6F7F               	movwf	_pDst& (0+255),b
 20745  0059E6  0E04               	movlw	4
 20746  0059E8  6F80               	movwf	(_pDst+1)& (0+255),b
 20747                           
 20748                           ; BSR set to: 0
 20749                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20750  0059EA  B00C               	btfsc	_inPipes+3,0,c	;volatile
 20751  0059EC  D03A               	goto	i2l5947
 20752  0059EE  D01B               	goto	i2l5937
 20753  0059F0                     i2l5929:
 20754                           
 20755                           ; BSR set to: 0
 20756                           ;usb_device.c: 1478: {
 20757                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 20758  0059F0  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 20759  0059F4  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20760  0059F8  6AF8               	clrf	tblptru,c
 20761  0059FA  C07F  FFD9         	movff	_pDst,fsr2l
 20762  0059FE  C080  FFDA         	movff	_pDst+1,fsr2h
 20763  005A02  0E07               	movlw	(high __ramtop+-1)
 20764  005A04  64F7               	cpfsgt	tblptrh,c
 20765  005A06  D003               	bra	i2u364_47
 20766  005A08  0008               	tblrd		*
 20767  005A0A  50F5               	movf	tablat,w,c
 20768  005A0C  D005               	bra	i2u364_40
 20769  005A0E                     i2u364_47:
 20770  005A0E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20771  005A12  CFF7 FFE2          	movff	tblptrh,fsr1h
 20772  005A16  50E7               	movf	indf1,w,c
 20773  005A18                     i2u364_40:
 20774  005A18  6EDF               	movwf	indf2,c
 20775  005A1A  4A09               	infsnz	_inPipes,f,c	;volatile
 20776  005A1C  2A0A               	incf	_inPipes+1,f,c	;volatile
 20777  005A1E  0100               	movlb	0	; () banked
 20778  005A20  4B7F               	infsnz	_pDst& (0+255),f,b
 20779  005A22  2B80               	incf	(_pDst+1)& (0+255),f,b
 20780                           
 20781                           ; BSR set to: 0
 20782                           ;usb_device.c: 1480: byteToSend--;
 20783  005A24  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20784  005A26                     i2l5937:
 20785                           
 20786                           ; BSR set to: 0
 20787  005A26  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20788  005A28  E1E3               	bnz	i2l5929
 20789  005A2A  0012               	return	
 20790  005A2C                     i2l5939:
 20791                           
 20792                           ; BSR set to: 0
 20793                           ;usb_device.c: 1486: {
 20794                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 20795  005A2C  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 20796  005A30  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20797  005A34  6AF8               	clrf	tblptru,c
 20798  005A36  C07F  FFD9         	movff	_pDst,fsr2l
 20799  005A3A  C080  FFDA         	movff	_pDst+1,fsr2h
 20800  005A3E  0E07               	movlw	(high __ramtop+-1)
 20801  005A40  64F7               	cpfsgt	tblptrh,c
 20802  005A42  D003               	bra	i2u366_47
 20803  005A44  0008               	tblrd		*
 20804  005A46  50F5               	movf	tablat,w,c
 20805  005A48  D005               	bra	i2u366_40
 20806  005A4A                     i2u366_47:
 20807  005A4A  CFF6 FFE1          	movff	tblptrl,fsr1l
 20808  005A4E  CFF7 FFE2          	movff	tblptrh,fsr1h
 20809  005A52  50E7               	movf	indf1,w,c
 20810  005A54                     i2u366_40:
 20811  005A54  6EDF               	movwf	indf2,c
 20812  005A56  4A09               	infsnz	_inPipes,f,c	;volatile
 20813  005A58  2A0A               	incf	_inPipes+1,f,c	;volatile
 20814  005A5A  0100               	movlb	0	; () banked
 20815  005A5C  4B7F               	infsnz	_pDst& (0+255),f,b
 20816  005A5E  2B80               	incf	(_pDst+1)& (0+255),f,b
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;usb_device.c: 1488: byteToSend--;
 20820  005A60  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20821  005A62                     i2l5947:
 20822                           
 20823                           ; BSR set to: 0
 20824  005A62  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20825  005A64  E1E3               	bnz	i2l5939
 20826                           
 20827                           ; BSR set to: 0
 20828  005A66  0012               	return		;funcret
 20829  005A68                     __end_of_USBCtrlTrfTxService:
 20830                           	opt stack 0
 20831                           tosu	equ	0xFFF
 20832                           tosh	equ	0xFFE
 20833                           tosl	equ	0xFFD
 20834                           pclatu	equ	0xFFB
 20835                           pclath	equ	0xFFA
 20836                           tblptru	equ	0xFF8
 20837                           tblptrh	equ	0xFF7
 20838                           tblptrl	equ	0xFF6
 20839                           tablat	equ	0xFF5
 20840                           prodh	equ	0xFF4
 20841                           prodl	equ	0xFF3
 20842                           intcon	equ	0xFF2
 20843                           postinc0	equ	0xFEE
 20844                           wreg	equ	0xFE8
 20845                           indf1	equ	0xFE7
 20846                           postdec1	equ	0xFE5
 20847                           fsr1h	equ	0xFE2
 20848                           fsr1l	equ	0xFE1
 20849                           indf2	equ	0xFDF
 20850                           postinc2	equ	0xFDE
 20851                           postdec2	equ	0xFDD
 20852                           plusw2	equ	0xFDB
 20853                           fsr2h	equ	0xFDA
 20854                           fsr2l	equ	0xFD9
 20855                           status	equ	0xFD8
 20856                           
 20857 ;; *************** function _USART_mySetLineCodingHandler *****************
 20858 ;; Defined at:
 20859 ;;		line 236 in file "../Includes/Board/USBapp.c"
 20860 ;; Parameters:    Size  Location     Type
 20861 ;;		None
 20862 ;; Auto vars:     Size  Location     Type
 20863 ;;  dwBaud          4   13[COMRAM] unsigned long 
 20864 ;; Return value:  Size  Location     Type
 20865 ;;                  1    wreg      void 
 20866 ;; Registers used:
 20867 ;;		wreg, status,2, status,0, cstack
 20868 ;; Tracked objects:
 20869 ;;		On entry : F/0
 20870 ;;		On exit  : F/0
 20871 ;;		Unchanged: F/0
 20872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20873 ;;      Params:         0       0       0       0       0       0       0       0       0
 20874 ;;      Locals:         4       0       0       0       0       0       0       0       0
 20875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20876 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20877 ;;Total ram usage:        4 bytes
 20878 ;; Hardware stack levels used:    1
 20879 ;; Hardware stack levels required when called:    1
 20880 ;; This function calls:
 20881 ;;		___lldiv
 20882 ;;		i2_EUSART_Initialize
 20883 ;; This function is called by:
 20884 ;;		_USBCheckCDCRequest
 20885 ;;		_USBCtrlTrfRxService
 20886 ;;		_USBCtrlTrfInHandler
 20887 ;; This function uses a non-reentrant model
 20888 ;;
 20889                           
 20890                           	psect	text106
 20891  004B5E                     __ptext106:
 20892                           	opt stack 0
 20893  004B5E                     _USART_mySetLineCodingHandler:
 20894                           	opt stack 14
 20895                           
 20896                           ; BSR set to: 0
 20897                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 20898                           
 20899                           ; BSR set to: 0
 20900                           ;incstack = 0
 20901  004B5E  C1D8  F0B0         	movff	_cdc_notice,_line_coding
 20902  004B62  C1D9  F0B1         	movff	_cdc_notice+1,_line_coding+1
 20903  004B66  C1DA  F0B2         	movff	_cdc_notice+2,_line_coding+2
 20904  004B6A  C1DB  F0B3         	movff	_cdc_notice+3,_line_coding+3
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;USBapp.c: 241: uint32_t dwBaud;
 20908                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 20909  004B6E  6A2E               	clrf	___lldiv@dividend,c
 20910  004B70  0E1B               	movlw	27
 20911  004B72  6E2F               	movwf	___lldiv@dividend+1,c
 20912  004B74  0EB7               	movlw	183
 20913  004B76  6E30               	movwf	___lldiv@dividend+2,c
 20914  004B78  6A31               	clrf	___lldiv@dividend+3,c
 20915  004B7A  C0B0  F032         	movff	_line_coding,___lldiv@divisor
 20916  004B7E  C0B1  F033         	movff	_line_coding+1,___lldiv@divisor+1
 20917  004B82  C0B2  F034         	movff	_line_coding+2,___lldiv@divisor+2
 20918  004B86  C0B3  F035         	movff	_line_coding+3,___lldiv@divisor+3
 20919  004B8A  EC8D  F027         	call	___lldiv	;wreg free
 20920  004B8E  0EFF               	movlw	255
 20921  004B90  242E               	addwf	?___lldiv,w,c
 20922  004B92  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 20923  004B94  0EFF               	movlw	255
 20924  004B96  202F               	addwfc	?___lldiv+1,w,c
 20925  004B98  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 20926  004B9A  0EFF               	movlw	255
 20927  004B9C  2030               	addwfc	?___lldiv+2,w,c
 20928  004B9E  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 20929  004BA0  0EFF               	movlw	255
 20930  004BA2  2031               	addwfc	?___lldiv+3,w,c
 20931  004BA4  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 20935  004BA6  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 20936                           
 20937                           ; BSR set to: 0
 20938                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 20939  004BAA  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 20940                           
 20941                           ; BSR set to: 0
 20942                           ;USBapp.c: 246: EUSART_Initialize();
 20943  004BAE  EF14  F023         	goto	i2_EUSART_Initialize	;wreg free
 20944  004BB2                     __end_of_USART_mySetLineCodingHandler:
 20945                           	opt stack 0
 20946                           tosu	equ	0xFFF
 20947                           tosh	equ	0xFFE
 20948                           tosl	equ	0xFFD
 20949                           pclatu	equ	0xFFB
 20950                           pclath	equ	0xFFA
 20951                           tblptru	equ	0xFF8
 20952                           tblptrh	equ	0xFF7
 20953                           tblptrl	equ	0xFF6
 20954                           tablat	equ	0xFF5
 20955                           prodh	equ	0xFF4
 20956                           prodl	equ	0xFF3
 20957                           intcon	equ	0xFF2
 20958                           postinc0	equ	0xFEE
 20959                           wreg	equ	0xFE8
 20960                           indf1	equ	0xFE7
 20961                           postdec1	equ	0xFE5
 20962                           fsr1h	equ	0xFE2
 20963                           fsr1l	equ	0xFE1
 20964                           indf2	equ	0xFDF
 20965                           postinc2	equ	0xFDE
 20966                           postdec2	equ	0xFDD
 20967                           plusw2	equ	0xFDB
 20968                           fsr2h	equ	0xFDA
 20969                           fsr2l	equ	0xFD9
 20970                           status	equ	0xFD8
 20971                           
 20972 ;; *************** function i2_EUSART_Initialize *****************
 20973 ;; Defined at:
 20974 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 20975 ;; Parameters:    Size  Location     Type
 20976 ;;		None
 20977 ;; Auto vars:     Size  Location     Type
 20978 ;;		None
 20979 ;; Return value:  Size  Location     Type
 20980 ;;                  1    wreg      void 
 20981 ;; Registers used:
 20982 ;;		wreg, status,2
 20983 ;; Tracked objects:
 20984 ;;		On entry : F/0
 20985 ;;		On exit  : F/0
 20986 ;;		Unchanged: F/0
 20987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20988 ;;      Params:         0       0       0       0       0       0       0       0       0
 20989 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20990 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20991 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20992 ;;Total ram usage:        0 bytes
 20993 ;; Hardware stack levels used:    1
 20994 ;; This function calls:
 20995 ;;		Nothing
 20996 ;; This function is called by:
 20997 ;;		_USBapp_CdcEmulatorInitialize
 20998 ;;		_USART_mySetLineCodingHandler
 20999 ;; This function uses a non-reentrant model
 21000 ;;
 21001                           
 21002                           	psect	text107
 21003  004628                     __ptext107:
 21004                           	opt stack 0
 21005  004628                     i2_EUSART_Initialize:
 21006                           	opt stack 16
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 21010                           
 21011                           ; BSR set to: 0
 21012                           ;incstack = 0
 21013  004628  9A9D               	bcf	3997,5,c	;volatile
 21014                           
 21015                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 21016  00462A  989D               	bcf	3997,4,c	;volatile
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;eusart.c: 85: BAUDCON = 0x48;
 21020  00462C  0E48               	movlw	72
 21021  00462E  6EB8               	movwf	4024,c	;volatile
 21022                           
 21023                           ;eusart.c: 88: RCSTA = 0x90;
 21024  004630  0E90               	movlw	144
 21025  004632  6EAB               	movwf	4011,c	;volatile
 21026                           
 21027                           ;eusart.c: 91: TXSTA = 0x26;
 21028  004634  0E26               	movlw	38
 21029  004636  6EAC               	movwf	4012,c	;volatile
 21030                           
 21031                           ;eusart.c: 95: SPBRG = 0x71;
 21032  004638  0E71               	movlw	113
 21033  00463A  6EAF               	movwf	4015,c	;volatile
 21034                           
 21035                           ;eusart.c: 100: SPBRGH = 0x02;
 21036  00463C  0E02               	movlw	2
 21037  00463E  6EB0               	movwf	4016,c	;volatile
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;eusart.c: 103: eusartTxHead = 0;
 21041  004640  6A27               	clrf	_eusartTxHead,c
 21042                           
 21043                           ; BSR set to: 0
 21044                           ;eusart.c: 104: eusartTxTail = 0;
 21045  004642  6A28               	clrf	_eusartTxTail,c
 21046                           
 21047                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 21048  004644  0E40               	movlw	64
 21049  004646  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;eusart.c: 107: eusartRxHead = 0;
 21053  004648  6A24               	clrf	_eusartRxHead,c
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;eusart.c: 108: eusartRxTail = 0;
 21057  00464A  6A25               	clrf	_eusartRxTail,c
 21058                           
 21059                           ; BSR set to: 0
 21060                           ;eusart.c: 109: eusartRxCount = 0;
 21061  00464C  6A23               	clrf	_eusartRxCount,c	;volatile
 21062                           
 21063                           ; BSR set to: 0
 21064                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 21065  00464E  8A9D               	bsf	3997,5,c	;volatile
 21066                           
 21067                           ; BSR set to: 0
 21068                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 21069  004650  88AB               	bsf	4011,4,c	;volatile
 21070                           
 21071                           ; BSR set to: 0
 21072  004652  0012               	return		;funcret
 21073  004654                     __end_ofi2_EUSART_Initialize:
 21074                           	opt stack 0
 21075                           tosu	equ	0xFFF
 21076                           tosh	equ	0xFFE
 21077                           tosl	equ	0xFFD
 21078                           pclatu	equ	0xFFB
 21079                           pclath	equ	0xFFA
 21080                           tblptru	equ	0xFF8
 21081                           tblptrh	equ	0xFF7
 21082                           tblptrl	equ	0xFF6
 21083                           tablat	equ	0xFF5
 21084                           prodh	equ	0xFF4
 21085                           prodl	equ	0xFF3
 21086                           intcon	equ	0xFF2
 21087                           postinc0	equ	0xFEE
 21088                           wreg	equ	0xFE8
 21089                           indf1	equ	0xFE7
 21090                           postdec1	equ	0xFE5
 21091                           fsr1h	equ	0xFE2
 21092                           fsr1l	equ	0xFE1
 21093                           indf2	equ	0xFDF
 21094                           postinc2	equ	0xFDE
 21095                           postdec2	equ	0xFDD
 21096                           plusw2	equ	0xFDB
 21097                           fsr2h	equ	0xFDA
 21098                           fsr2l	equ	0xFD9
 21099                           status	equ	0xFD8
 21100                           
 21101 ;; *************** function ___lldiv *****************
 21102 ;; Defined at:
 21103 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 21104 ;; Parameters:    Size  Location     Type
 21105 ;;  dividend        4    0[COMRAM] unsigned long 
 21106 ;;  divisor         4    4[COMRAM] unsigned long 
 21107 ;; Auto vars:     Size  Location     Type
 21108 ;;  quotient        4    8[COMRAM] unsigned long 
 21109 ;;  counter         1   12[COMRAM] unsigned char 
 21110 ;; Return value:  Size  Location     Type
 21111 ;;                  4    0[COMRAM] unsigned long 
 21112 ;; Registers used:
 21113 ;;		wreg, status,2, status,0
 21114 ;; Tracked objects:
 21115 ;;		On entry : F/0
 21116 ;;		On exit  : F/0
 21117 ;;		Unchanged: F/0
 21118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21119 ;;      Params:         8       0       0       0       0       0       0       0       0
 21120 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21121 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21122 ;;      Totals:        13       0       0       0       0       0       0       0       0
 21123 ;;Total ram usage:       13 bytes
 21124 ;; Hardware stack levels used:    1
 21125 ;; This function calls:
 21126 ;;		Nothing
 21127 ;; This function is called by:
 21128 ;;		_USART_mySetLineCodingHandler
 21129 ;; This function uses a non-reentrant model
 21130 ;;
 21131                           
 21132                           	psect	text108
 21133  004F1A                     __ptext108:
 21134                           	opt stack 0
 21135  004F1A                     ___lldiv:
 21136                           	opt stack 14
 21137                           
 21138                           ; BSR set to: 0
 21139                           
 21140                           ; BSR set to: 0
 21141                           ;incstack = 0
 21142  004F1A  6A36               	clrf	___lldiv@quotient,c
 21143  004F1C  6A37               	clrf	___lldiv@quotient+1,c
 21144  004F1E  6A38               	clrf	___lldiv@quotient+2,c
 21145  004F20  6A39               	clrf	___lldiv@quotient+3,c
 21146                           
 21147                           ; BSR set to: 0
 21148  004F22  5032               	movf	___lldiv@divisor,w,c
 21149  004F24  1033               	iorwf	___lldiv@divisor+1,w,c
 21150  004F26  1034               	iorwf	___lldiv@divisor+2,w,c
 21151  004F28  1035               	iorwf	___lldiv@divisor+3,w,c
 21152  004F2A  E029               	bz	i2l2280
 21153                           
 21154                           ; BSR set to: 0
 21155  004F2C  0E01               	movlw	1
 21156  004F2E  6E3A               	movwf	___lldiv@counter,c
 21157  004F30  D006               	goto	i2l5957
 21158  004F32                     i2l5955:
 21159                           
 21160                           ; BSR set to: 0
 21161  004F32  90D8               	bcf	status,0,c
 21162  004F34  3632               	rlcf	___lldiv@divisor,f,c
 21163  004F36  3633               	rlcf	___lldiv@divisor+1,f,c
 21164  004F38  3634               	rlcf	___lldiv@divisor+2,f,c
 21165  004F3A  3635               	rlcf	___lldiv@divisor+3,f,c
 21166  004F3C  2A3A               	incf	___lldiv@counter,f,c
 21167  004F3E                     i2l5957:
 21168                           
 21169                           ; BSR set to: 0
 21170  004F3E  AE35               	btfss	___lldiv@divisor+3,7,c
 21171  004F40  D7F8               	goto	i2l5955
 21172  004F42                     i2l5959:
 21173                           
 21174                           ; BSR set to: 0
 21175  004F42  90D8               	bcf	status,0,c
 21176  004F44  3636               	rlcf	___lldiv@quotient,f,c
 21177  004F46  3637               	rlcf	___lldiv@quotient+1,f,c
 21178  004F48  3638               	rlcf	___lldiv@quotient+2,f,c
 21179  004F4A  3639               	rlcf	___lldiv@quotient+3,f,c
 21180                           
 21181                           ; BSR set to: 0
 21182  004F4C  5032               	movf	___lldiv@divisor,w,c
 21183  004F4E  5C2E               	subwf	___lldiv@dividend,w,c
 21184  004F50  5033               	movf	___lldiv@divisor+1,w,c
 21185  004F52  582F               	subwfb	___lldiv@dividend+1,w,c
 21186  004F54  5034               	movf	___lldiv@divisor+2,w,c
 21187  004F56  5830               	subwfb	___lldiv@dividend+2,w,c
 21188  004F58  5035               	movf	___lldiv@divisor+3,w,c
 21189  004F5A  5831               	subwfb	___lldiv@dividend+3,w,c
 21190  004F5C  E309               	bnc	i2l5967
 21191                           
 21192                           ; BSR set to: 0
 21193  004F5E  5032               	movf	___lldiv@divisor,w,c
 21194  004F60  5E2E               	subwf	___lldiv@dividend,f,c
 21195  004F62  5033               	movf	___lldiv@divisor+1,w,c
 21196  004F64  5A2F               	subwfb	___lldiv@dividend+1,f,c
 21197  004F66  5034               	movf	___lldiv@divisor+2,w,c
 21198  004F68  5A30               	subwfb	___lldiv@dividend+2,f,c
 21199  004F6A  5035               	movf	___lldiv@divisor+3,w,c
 21200  004F6C  5A31               	subwfb	___lldiv@dividend+3,f,c
 21201                           
 21202                           ; BSR set to: 0
 21203  004F6E  8036               	bsf	___lldiv@quotient,0,c
 21204  004F70                     i2l5967:
 21205                           
 21206                           ; BSR set to: 0
 21207  004F70  90D8               	bcf	status,0,c
 21208  004F72  3235               	rrcf	___lldiv@divisor+3,f,c
 21209  004F74  3234               	rrcf	___lldiv@divisor+2,f,c
 21210  004F76  3233               	rrcf	___lldiv@divisor+1,f,c
 21211  004F78  3232               	rrcf	___lldiv@divisor,f,c
 21212                           
 21213                           ; BSR set to: 0
 21214  004F7A  2E3A               	decfsz	___lldiv@counter,f,c
 21215  004F7C  D7E2               	goto	i2l5959
 21216  004F7E                     i2l2280:
 21217                           
 21218                           ; BSR set to: 0
 21219  004F7E  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 21220  004F82  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 21221  004F86  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 21222  004F8A  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 21223                           
 21224                           ; BSR set to: 0
 21225  004F8E  0012               	return		;funcret
 21226  004F90                     __end_of___lldiv:
 21227                           	opt stack 0
 21228                           tosu	equ	0xFFF
 21229                           tosh	equ	0xFFE
 21230                           tosl	equ	0xFFD
 21231                           pclatu	equ	0xFFB
 21232                           pclath	equ	0xFFA
 21233                           tblptru	equ	0xFF8
 21234                           tblptrh	equ	0xFF7
 21235                           tblptrl	equ	0xFF6
 21236                           tablat	equ	0xFF5
 21237                           prodh	equ	0xFF4
 21238                           prodl	equ	0xFF3
 21239                           intcon	equ	0xFF2
 21240                           postinc0	equ	0xFEE
 21241                           wreg	equ	0xFE8
 21242                           indf1	equ	0xFE7
 21243                           postdec1	equ	0xFE5
 21244                           fsr1h	equ	0xFE2
 21245                           fsr1l	equ	0xFE1
 21246                           indf2	equ	0xFDF
 21247                           postinc2	equ	0xFDE
 21248                           postdec2	equ	0xFDD
 21249                           plusw2	equ	0xFDB
 21250                           fsr2h	equ	0xFDA
 21251                           fsr2l	equ	0xFD9
 21252                           status	equ	0xFD8
 21253                           
 21254 ;; *************** function _TMRapp_Tick *****************
 21255 ;; Defined at:
 21256 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 21257 ;; Parameters:    Size  Location     Type
 21258 ;;		None
 21259 ;; Auto vars:     Size  Location     Type
 21260 ;;		None
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  1    wreg      void 
 21263 ;; Registers used:
 21264 ;;		None
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : F/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21270 ;;      Params:         0       0       0       0       0       0       0       0       0
 21271 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21273 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21274 ;;Total ram usage:        0 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; This function calls:
 21277 ;;		Nothing
 21278 ;; This function is called by:
 21279 ;;		_INTERRUPT_InterruptManager
 21280 ;; This function uses a non-reentrant model
 21281 ;;
 21282                           
 21283                           	psect	text109
 21284  004264                     __ptext109:
 21285                           	opt stack 0
 21286  004264                     _TMRapp_Tick:
 21287                           	opt stack 19
 21288                           
 21289                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 21290                           
 21291                           ; BSR set to: 0
 21292                           ;incstack = 0
 21293  004264  0100               	movlb	0	; () banked
 21294  004266  8195               	bsf	_appTimer& (0+255),0,b
 21295                           
 21296                           ; BSR set to: 0
 21297  004268  0012               	return		;funcret
 21298  00426A                     __end_of_TMRapp_Tick:
 21299                           	opt stack 0
 21300                           tosu	equ	0xFFF
 21301                           tosh	equ	0xFFE
 21302                           tosl	equ	0xFFD
 21303                           pclatu	equ	0xFFB
 21304                           pclath	equ	0xFFA
 21305                           tblptru	equ	0xFF8
 21306                           tblptrh	equ	0xFF7
 21307                           tblptrl	equ	0xFF6
 21308                           tablat	equ	0xFF5
 21309                           prodh	equ	0xFF4
 21310                           prodl	equ	0xFF3
 21311                           intcon	equ	0xFF2
 21312                           postinc0	equ	0xFEE
 21313                           wreg	equ	0xFE8
 21314                           indf1	equ	0xFE7
 21315                           postdec1	equ	0xFE5
 21316                           fsr1h	equ	0xFE2
 21317                           fsr1l	equ	0xFE1
 21318                           indf2	equ	0xFDF
 21319                           postinc2	equ	0xFDE
 21320                           postdec2	equ	0xFDD
 21321                           plusw2	equ	0xFDB
 21322                           fsr2h	equ	0xFDA
 21323                           fsr2l	equ	0xFD9
 21324                           status	equ	0xFD8
 21325                           
 21326 ;; *************** function _TMR1_ISR *****************
 21327 ;; Defined at:
 21328 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 21329 ;; Parameters:    Size  Location     Type
 21330 ;;		None
 21331 ;; Auto vars:     Size  Location     Type
 21332 ;;		None
 21333 ;; Return value:  Size  Location     Type
 21334 ;;                  1    wreg      void 
 21335 ;; Registers used:
 21336 ;;		None
 21337 ;; Tracked objects:
 21338 ;;		On entry : 0/0
 21339 ;;		On exit  : 0/0
 21340 ;;		Unchanged: 0/0
 21341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21342 ;;      Params:         0       0       0       0       0       0       0       0       0
 21343 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21344 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21345 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21346 ;;Total ram usage:        0 bytes
 21347 ;; Hardware stack levels used:    1
 21348 ;; This function calls:
 21349 ;;		Nothing
 21350 ;; This function is called by:
 21351 ;;		_INTERRUPT_InterruptManager
 21352 ;; This function uses a non-reentrant model
 21353 ;;
 21354                           
 21355                           	psect	text110
 21356  004290                     __ptext110:
 21357                           	opt stack 0
 21358  004290                     _TMR1_ISR:
 21359                           	opt stack 19
 21360                           
 21361                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 21362                           
 21363                           ; BSR set to: 0
 21364                           ;incstack = 0
 21365  004290  909E               	bcf	3998,0,c	;volatile
 21366                           
 21367                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 21368  004292  C086  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 21369                           
 21370                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 21371  004296  C085  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 21372  00429A  0012               	return		;funcret
 21373  00429C                     __end_of_TMR1_ISR:
 21374                           	opt stack 0
 21375                           tosu	equ	0xFFF
 21376                           tosh	equ	0xFFE
 21377                           tosl	equ	0xFFD
 21378                           pclatu	equ	0xFFB
 21379                           pclath	equ	0xFFA
 21380                           tblptru	equ	0xFF8
 21381                           tblptrh	equ	0xFF7
 21382                           tblptrl	equ	0xFF6
 21383                           tablat	equ	0xFF5
 21384                           prodh	equ	0xFF4
 21385                           prodl	equ	0xFF3
 21386                           intcon	equ	0xFF2
 21387                           postinc0	equ	0xFEE
 21388                           wreg	equ	0xFE8
 21389                           indf1	equ	0xFE7
 21390                           postdec1	equ	0xFE5
 21391                           fsr1h	equ	0xFE2
 21392                           fsr1l	equ	0xFE1
 21393                           indf2	equ	0xFDF
 21394                           postinc2	equ	0xFDE
 21395                           postdec2	equ	0xFDD
 21396                           plusw2	equ	0xFDB
 21397                           fsr2h	equ	0xFDA
 21398                           fsr2l	equ	0xFD9
 21399                           status	equ	0xFD8
 21400                           
 21401 ;; *************** function _EUSART_Transmit_ISR *****************
 21402 ;; Defined at:
 21403 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 21404 ;; Parameters:    Size  Location     Type
 21405 ;;		None
 21406 ;; Auto vars:     Size  Location     Type
 21407 ;;		None
 21408 ;; Return value:  Size  Location     Type
 21409 ;;                  1    wreg      void 
 21410 ;; Registers used:
 21411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21412 ;; Tracked objects:
 21413 ;;		On entry : 0/0
 21414 ;;		On exit  : 0/0
 21415 ;;		Unchanged: 0/0
 21416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21417 ;;      Params:         0       0       0       0       0       0       0       0       0
 21418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21420 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21421 ;;Total ram usage:        0 bytes
 21422 ;; Hardware stack levels used:    1
 21423 ;; This function calls:
 21424 ;;		Nothing
 21425 ;; This function is called by:
 21426 ;;		_INTERRUPT_InterruptManager
 21427 ;; This function uses a non-reentrant model
 21428 ;;
 21429                           
 21430                           	psect	text111
 21431  00455C                     __ptext111:
 21432                           	opt stack 0
 21433  00455C                     _EUSART_Transmit_ISR:
 21434                           	opt stack 19
 21435                           
 21436                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21437                           
 21438                           ;incstack = 0
 21439  00455C  0E40               	movlw	64
 21440  00455E  6026               	cpfslt	_eusartTxBufferRemaining,c
 21441  004560  D00F               	goto	i2l959
 21442                           
 21443                           ;eusart.c: 167: {
 21444                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 21445  004562  0E40               	movlw	low _eusartTxBuffer
 21446  004564  2428               	addwf	_eusartTxTail,w,c
 21447  004566  6ED9               	movwf	fsr2l,c
 21448  004568  6ADA               	clrf	fsr2h,c
 21449  00456A  0E02               	movlw	high _eusartTxBuffer
 21450  00456C  22DA               	addwfc	fsr2h,f,c
 21451  00456E  50DF               	movf	indf2,w,c
 21452  004570  6EAD               	movwf	4013,c	;volatile
 21453  004572  2A28               	incf	_eusartTxTail,f,c
 21454                           
 21455                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 21456  004574  0E3F               	movlw	63
 21457  004576  6428               	cpfsgt	_eusartTxTail,c
 21458  004578  D001               	goto	i2l8443
 21459                           
 21460                           ;eusart.c: 170: {
 21461                           ;eusart.c: 171: eusartTxTail = 0;
 21462  00457A  6A28               	clrf	_eusartTxTail,c
 21463  00457C                     i2l8443:
 21464                           
 21465                           ;eusart.c: 172: }
 21466                           ;eusart.c: 173: eusartTxBufferRemaining++;
 21467  00457C  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 21468                           
 21469                           ;eusart.c: 174: }
 21470  00457E  0012               	return	
 21471  004580                     i2l959:
 21472                           
 21473                           ;eusart.c: 175: else
 21474                           ;eusart.c: 176: {
 21475                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 21476  004580  989D               	bcf	3997,4,c	;volatile
 21477  004582  0012               	return		;funcret
 21478  004584                     __end_of_EUSART_Transmit_ISR:
 21479                           	opt stack 0
 21480                           tosu	equ	0xFFF
 21481                           tosh	equ	0xFFE
 21482                           tosl	equ	0xFFD
 21483                           pclatu	equ	0xFFB
 21484                           pclath	equ	0xFFA
 21485                           tblptru	equ	0xFF8
 21486                           tblptrh	equ	0xFF7
 21487                           tblptrl	equ	0xFF6
 21488                           tablat	equ	0xFF5
 21489                           prodh	equ	0xFF4
 21490                           prodl	equ	0xFF3
 21491                           intcon	equ	0xFF2
 21492                           postinc0	equ	0xFEE
 21493                           wreg	equ	0xFE8
 21494                           indf1	equ	0xFE7
 21495                           postdec1	equ	0xFE5
 21496                           fsr1h	equ	0xFE2
 21497                           fsr1l	equ	0xFE1
 21498                           indf2	equ	0xFDF
 21499                           postinc2	equ	0xFDE
 21500                           postdec2	equ	0xFDD
 21501                           plusw2	equ	0xFDB
 21502                           fsr2h	equ	0xFDA
 21503                           fsr2l	equ	0xFD9
 21504                           status	equ	0xFD8
 21505                           
 21506 ;; *************** function _EUSART_Receive_ISR *****************
 21507 ;; Defined at:
 21508 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 21509 ;; Parameters:    Size  Location     Type
 21510 ;;		None
 21511 ;; Auto vars:     Size  Location     Type
 21512 ;;		None
 21513 ;; Return value:  Size  Location     Type
 21514 ;;                  1    wreg      void 
 21515 ;; Registers used:
 21516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21517 ;; Tracked objects:
 21518 ;;		On entry : 0/0
 21519 ;;		On exit  : 0/0
 21520 ;;		Unchanged: 0/0
 21521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21522 ;;      Params:         0       0       0       0       0       0       0       0       0
 21523 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21524 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21525 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21526 ;;Total ram usage:        0 bytes
 21527 ;; Hardware stack levels used:    1
 21528 ;; This function calls:
 21529 ;;		Nothing
 21530 ;; This function is called by:
 21531 ;;		_INTERRUPT_InterruptManager
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           	psect	text112
 21536  004534                     __ptext112:
 21537                           	opt stack 0
 21538  004534                     _EUSART_Receive_ISR:
 21539                           	opt stack 19
 21540                           
 21541                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 21542                           
 21543                           ;incstack = 0
 21544  004534  A2AB               	btfss	4011,1,c	;volatile
 21545  004536  D003               	goto	i2l8449
 21546                           
 21547                           ;eusart.c: 184: {
 21548                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 21549  004538  98AB               	bcf	4011,4,c	;volatile
 21550                           
 21551                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 21552  00453A  88AB               	bsf	4011,4,c	;volatile
 21553                           
 21554                           ;eusart.c: 189: }
 21555  00453C  0012               	return	
 21556  00453E                     i2l8449:
 21557                           
 21558                           ;eusart.c: 190: else
 21559                           ;eusart.c: 191: {
 21560                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 21561  00453E  0E00               	movlw	low _eusartRxBuffer
 21562  004540  2424               	addwf	_eusartRxHead,w,c
 21563  004542  6ED9               	movwf	fsr2l,c
 21564  004544  6ADA               	clrf	fsr2h,c
 21565  004546  0E02               	movlw	high _eusartRxBuffer
 21566  004548  22DA               	addwfc	fsr2h,f,c
 21567  00454A  CFAE FFDF          	movff	4014,indf2	;volatile
 21568  00454E  2A24               	incf	_eusartRxHead,f,c
 21569                           
 21570                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 21571  004550  0E3F               	movlw	63
 21572  004552  6424               	cpfsgt	_eusartRxHead,c
 21573  004554  D001               	goto	i2l8457
 21574                           
 21575                           ;eusart.c: 195: {
 21576                           ;eusart.c: 196: eusartRxHead = 0;
 21577  004556  6A24               	clrf	_eusartRxHead,c
 21578  004558                     i2l8457:
 21579                           
 21580                           ;eusart.c: 197: }
 21581                           ;eusart.c: 198: eusartRxCount++;
 21582  004558  2A23               	incf	_eusartRxCount,f,c	;volatile
 21583  00455A  0012               	return		;funcret
 21584  00455C                     __end_of_EUSART_Receive_ISR:
 21585                           	opt stack 0
 21586                           tosu	equ	0xFFF
 21587                           tosh	equ	0xFFE
 21588                           tosl	equ	0xFFD
 21589                           pclatu	equ	0xFFB
 21590                           pclath	equ	0xFFA
 21591                           tblptru	equ	0xFF8
 21592                           tblptrh	equ	0xFF7
 21593                           tblptrl	equ	0xFF6
 21594                           tablat	equ	0xFF5
 21595                           prodh	equ	0xFF4
 21596                           prodl	equ	0xFF3
 21597                           intcon	equ	0xFF2
 21598                           postinc0	equ	0xFEE
 21599                           wreg	equ	0xFE8
 21600                           indf1	equ	0xFE7
 21601                           postdec1	equ	0xFE5
 21602                           fsr1h	equ	0xFE2
 21603                           fsr1l	equ	0xFE1
 21604                           indf2	equ	0xFDF
 21605                           postinc2	equ	0xFDE
 21606                           postdec2	equ	0xFDD
 21607                           plusw2	equ	0xFDB
 21608                           fsr2h	equ	0xFDA
 21609                           fsr2l	equ	0xFD9
 21610                           status	equ	0xFD8
 21611                           
 21612 ;; *************** function _CMP1_ISR *****************
 21613 ;; Defined at:
 21614 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 21615 ;; Parameters:    Size  Location     Type
 21616 ;;		None
 21617 ;; Auto vars:     Size  Location     Type
 21618 ;;		None
 21619 ;; Return value:  Size  Location     Type
 21620 ;;                  1    wreg      void 
 21621 ;; Registers used:
 21622 ;;		None
 21623 ;; Tracked objects:
 21624 ;;		On entry : 0/0
 21625 ;;		On exit  : 0/0
 21626 ;;		Unchanged: 0/0
 21627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21628 ;;      Params:         0       0       0       0       0       0       0       0       0
 21629 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21630 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21631 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21632 ;;Total ram usage:        0 bytes
 21633 ;; Hardware stack levels used:    1
 21634 ;; This function calls:
 21635 ;;		Nothing
 21636 ;; This function is called by:
 21637 ;;		_INTERRUPT_InterruptManager
 21638 ;; This function uses a non-reentrant model
 21639 ;;
 21640                           
 21641                           	psect	text113
 21642  004250                     __ptext113:
 21643                           	opt stack 0
 21644  004250                     _CMP1_ISR:
 21645                           	opt stack 19
 21646                           
 21647                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 21648                           
 21649                           ;incstack = 0
 21650  004250  9CA1               	bcf	4001,6,c	;volatile
 21651  004252  0012               	return		;funcret
 21652  004254                     __end_of_CMP1_ISR:
 21653                           	opt stack 0
 21654                           tosu	equ	0xFFF
 21655                           tosh	equ	0xFFE
 21656                           tosl	equ	0xFFD
 21657                           pclatu	equ	0xFFB
 21658                           pclath	equ	0xFFA
 21659                           tblptru	equ	0xFF8
 21660                           tblptrh	equ	0xFF7
 21661                           tblptrl	equ	0xFF6
 21662                           tablat	equ	0xFF5
 21663                           prodh	equ	0xFF4
 21664                           prodl	equ	0xFF3
 21665                           intcon	equ	0xFF2
 21666                           postinc0	equ	0xFEE
 21667                           wreg	equ	0xFE8
 21668                           indf1	equ	0xFE7
 21669                           postdec1	equ	0xFE5
 21670                           fsr1h	equ	0xFE2
 21671                           fsr1l	equ	0xFE1
 21672                           indf2	equ	0xFDF
 21673                           postinc2	equ	0xFDE
 21674                           postdec2	equ	0xFDD
 21675                           plusw2	equ	0xFDB
 21676                           fsr2h	equ	0xFDA
 21677                           fsr2l	equ	0xFD9
 21678                           status	equ	0xFD8
 21679                           tosu	equ	0xFFF
 21680                           tosh	equ	0xFFE
 21681                           tosl	equ	0xFFD
 21682                           pclatu	equ	0xFFB
 21683                           pclath	equ	0xFFA
 21684                           tblptru	equ	0xFF8
 21685                           tblptrh	equ	0xFF7
 21686                           tblptrl	equ	0xFF6
 21687                           tablat	equ	0xFF5
 21688                           prodh	equ	0xFF4
 21689                           prodl	equ	0xFF3
 21690                           intcon	equ	0xFF2
 21691                           postinc0	equ	0xFEE
 21692                           wreg	equ	0xFE8
 21693                           indf1	equ	0xFE7
 21694                           postdec1	equ	0xFE5
 21695                           fsr1h	equ	0xFE2
 21696                           fsr1l	equ	0xFE1
 21697                           indf2	equ	0xFDF
 21698                           postinc2	equ	0xFDE
 21699                           postdec2	equ	0xFDD
 21700                           plusw2	equ	0xFDB
 21701                           fsr2h	equ	0xFDA
 21702                           fsr2l	equ	0xFD9
 21703                           status	equ	0xFD8
 21704                           
 21705                           	psect	text114
 21706  000000                     __ptext114:
 21707                           	opt stack 0
 21708                           tosu	equ	0xFFF
 21709                           tosh	equ	0xFFE
 21710                           tosl	equ	0xFFD
 21711                           pclatu	equ	0xFFB
 21712                           pclath	equ	0xFFA
 21713                           tblptru	equ	0xFF8
 21714                           tblptrh	equ	0xFF7
 21715                           tblptrl	equ	0xFF6
 21716                           tablat	equ	0xFF5
 21717                           prodh	equ	0xFF4
 21718                           prodl	equ	0xFF3
 21719                           intcon	equ	0xFF2
 21720                           postinc0	equ	0xFEE
 21721                           wreg	equ	0xFE8
 21722                           indf1	equ	0xFE7
 21723                           postdec1	equ	0xFE5
 21724                           fsr1h	equ	0xFE2
 21725                           fsr1l	equ	0xFE1
 21726                           indf2	equ	0xFDF
 21727                           postinc2	equ	0xFDE
 21728                           postdec2	equ	0xFDD
 21729                           plusw2	equ	0xFDB
 21730                           fsr2h	equ	0xFDA
 21731                           fsr2l	equ	0xFD9
 21732                           status	equ	0xFD8
 21733                           
 21734                           	psect	rparam
 21735  0000                     tosu	equ	0xFFF
 21736                           tosh	equ	0xFFE
 21737                           tosl	equ	0xFFD
 21738                           pclatu	equ	0xFFB
 21739                           pclath	equ	0xFFA
 21740                           tblptru	equ	0xFF8
 21741                           tblptrh	equ	0xFF7
 21742                           tblptrl	equ	0xFF6
 21743                           tablat	equ	0xFF5
 21744                           prodh	equ	0xFF4
 21745                           prodl	equ	0xFF3
 21746                           intcon	equ	0xFF2
 21747                           postinc0	equ	0xFEE
 21748                           wreg	equ	0xFE8
 21749                           indf1	equ	0xFE7
 21750                           postdec1	equ	0xFE5
 21751                           fsr1h	equ	0xFE2
 21752                           fsr1l	equ	0xFE1
 21753                           indf2	equ	0xFDF
 21754                           postinc2	equ	0xFDE
 21755                           postdec2	equ	0xFDD
 21756                           plusw2	equ	0xFDB
 21757                           fsr2h	equ	0xFDA
 21758                           fsr2l	equ	0xFD9
 21759                           status	equ	0xFD8
 21760                           
 21761                           	psect	temp
 21762  00005B                     btemp:
 21763                           	opt stack 0
 21764  00005B                     	ds	1
 21765  0000                     int$flags	set	btemp
 21766                           tosu	equ	0xFFF
 21767                           tosh	equ	0xFFE
 21768                           tosl	equ	0xFFD
 21769                           pclatu	equ	0xFFB
 21770                           pclath	equ	0xFFA
 21771                           tblptru	equ	0xFF8
 21772                           tblptrh	equ	0xFF7
 21773                           tblptrl	equ	0xFF6
 21774                           tablat	equ	0xFF5
 21775                           prodh	equ	0xFF4
 21776                           prodl	equ	0xFF3
 21777                           intcon	equ	0xFF2
 21778                           postinc0	equ	0xFEE
 21779                           wreg	equ	0xFE8
 21780                           indf1	equ	0xFE7
 21781                           postdec1	equ	0xFE5
 21782                           fsr1h	equ	0xFE2
 21783                           fsr1l	equ	0xFE1
 21784                           indf2	equ	0xFDF
 21785                           postinc2	equ	0xFDE
 21786                           postdec2	equ	0xFDD
 21787                           plusw2	equ	0xFDB
 21788                           fsr2h	equ	0xFDA
 21789                           fsr2l	equ	0xFD9
 21790                           status	equ	0xFD8


Data Sizes:
    Strings     1193
    Constant    987
    Data        7
    BSS         496
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     56     152
    BANK1           256      9     243
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_86(CODE[3]), STR_83(CODE[10]), STR_63(CODE[3]), STR_59(CODE[9]), 
		 -> STR_57(CODE[3]), STR_54(CODE[3]), STR_49(CODE[3]), STR_46(CODE[3]), 
		 -> STR_43(CODE[3]), STR_40(CODE[3]), STR_37(CODE[3]), STR_34(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_112(CODE[7]), STR_52(CODE[4]), STR_51(CODE[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_84(CODE[14]), STR_81(CODE[24]), STR_50(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> cmd(BANK1[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5164_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5164_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5164_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5164_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S3887$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S3877$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3877$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3853$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3853$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3853$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3853$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_111(CODE[12]), STR_110(CODE[8]), 
		 -> STR_109(CODE[9]), STR_91(CODE[2]), STR_90(CODE[16]), STR_89(CODE[13]), 
		 -> STR_88(CODE[12]), STR_87(CODE[17]), STR_85(CODE[7]), STR_82(CODE[7]), 
		 -> STR_80(CODE[7]), STR_79(CODE[2]), STR_78(CODE[7]), STR_77(CODE[7]), 
		 -> STR_76(CODE[7]), STR_75(CODE[7]), STR_74(CODE[7]), STR_73(CODE[7]), 
		 -> STR_72(CODE[7]), STR_71(CODE[7]), STR_70(CODE[17]), STR_69(CODE[17]), 
		 -> STR_68(CODE[7]), STR_67(CODE[7]), STR_66(CODE[7]), STR_65(CODE[10]), 
		 -> STR_64(CODE[15]), STR_62(CODE[17]), STR_61(CODE[7]), STR_58(CODE[17]), 
		 -> STR_56(CODE[9]), STR_53(CODE[7]), cmd(BANK1[64]), STR_48(CODE[8]), 
		 -> STR_45(CODE[9]), STR_42(CODE[8]), STR_39(CODE[12]), STR_36(CODE[12]), 
		 -> STR_33(CODE[12]), modemResonseBuffer(BANK1[64]), STR_30(CODE[8]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), 
		 -> STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[16]), STR_2(CODE[10]), 
		 -> STR_1(CODE[12]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_92(CODE[10]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_108(CODE[26]), STR_107(CODE[26]), STR_106(CODE[26]), STR_105(CODE[26]), 
		 -> STR_104(CODE[1]), STR_103(CODE[9]), STR_102(CODE[13]), STR_101(CODE[13]), 
		 -> STR_100(CODE[13]), STR_99(CODE[13]), STR_98(CODE[13]), STR_97(CODE[13]), 
		 -> STR_96(CODE[13]), STR_95(CODE[13]), STR_94(CODE[16]), STR_93(CODE[15]), 
		 -> STR_60(CODE[24]), STR_55(CODE[13]), cmd(BANK1[64]), STR_47(CODE[24]), 
		 -> STR_44(CODE[16]), STR_41(CODE[16]), STR_38(CODE[49]), STR_35(CODE[49]), 
		 -> STR_32(CODE[25]), STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 

    moteJoiningProcess$1374	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_76(CODE[7]), STR_75(CODE[7]), 

    moteJoiningProcess$1366	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_73(CODE[7]), STR_72(CODE[7]), 

    moteJoiningProcess$1359	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_68(CODE[7]), STR_67(CODE[7]), 

    moteJoiningProcess$1341	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_52(CODE[4]), STR_51(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteJoiningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _moteJoiningProcess->_sprintf
    _sprintf->___lwmod
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _oled_putUint16->_oled_putString
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _TMRapp_Handler->___lwmod
    ___lwmod->___lwdiv
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  292824
                    _DATAEE_ReadByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  226537
                                             54 BANK0      2     2      0
                                              0 BANK1      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  11     8      3  114183
                                             28 BANK0      9     6      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1012
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   23327
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    1975
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    7159
                                             12 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   19393
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1512
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8693
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8971
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                  67    66      1   77053
                                             37 BANK0     17    16      1
                  _ADC_GetConversion
                 _ADC_TempConversion
                   _DATAEE_WriteByte
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                        _sendCommand
                            _sprintf
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     443
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2312
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             29    21      8    9573
                                             12 BANK0     25    17      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sendCommand                                          2     0      2    2989
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   30063
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    5704
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     200
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2594
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2529
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3976
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3976
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   26602
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   20856
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1188
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1188
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1058
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
         ___lwdiv (ARG)
     _moteApp_delayms
     _moteJoiningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _DATAEE_WriteByte
       _MOTEapp_getModemResponse
         _EUSART_Read
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      F3       7       94.9%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      98       5       95.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     265      14        0.0%
DATA                 0      0     265       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Jun 23 14:46:31 2016

                            _SPI_Initialize 42C0                                  _USB_SD_Ptr 778D  
               ?_moteApp_add16bToDataBuffer 00C5                                          l50 58BC  
                         ??_CMP1_Initialize 00B9                                          _S1 00F3  
                                        _S2 00F4                                  _USB_Buffer 0118  
                       moteRunningProcess@i 00DC                                          _dr 009A  
                             _USBDeviceInit 5B36                         ___wmul@multiplicand 00BB  
                   EUSART_FlushBuffer@index 00B9                      __end_of_oled_writeData 42B4  
                        __size_of_CDCInitEP 0052                      moteJoiningProcess@Traw 00EA  
                  USBapp_handlerState@state 00B9                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000        USER_USB_CALLBACK_EVENT_HANDLER@event 003B  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D                                         l312 4DA0  
                                       l315 4DDA                                         l324 43DA  
               __end_of_USBStdGetDscHandler 6372                                         l352 683A  
                                       l505 6726                                         l338 6786  
                                       l438 7362                                         l382 6EB4  
                                       l623 45A0                                         l471 76E8  
                                       l714 5074                                         l378 6EB2  
                                       l707 5008                                         l591 4EAE  
                                       l729 57A4                                         _BDT 000400  
                                       l791 4A4C                                         _CKE 007E3E  
                                       l944 4706                                         l953 4744  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 6EA8  
                                       _UIE 000F64                                         _UIR 000F65  
                           _timer1ReloadVal 0085                                         _cmd 0158  
                                _USBSuspend 43EA                __end_of_moteApp_clearBuffers 4942  
                      USBStdSetCfgHandler@i 0043                             _TMR2_Initialize 42DC  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                              _USBDeviceTasks 6072  
                            _USBDeviceState 0091                       moteApp_delayms@length 00B9  
                     ??_USBCtrlTrfRxService 003F                    __size_ofi2_USBDeviceInit 00D8  
                            ??_getsUSBUSART 00C3                                ?_EUSART_Read 002E  
                  USBEnableEndpoint@options 0036                                __CFG_LVP$OFF 000000  
                       ?_moteJoiningProcess 00DE                                        l1102 42F4  
                                      l1040 4390                                        l1074 482A  
                                      l1246 486A                                        l1520 46CE  
                                      l1521 46CC                                        l2333 49CC  
                                      l2343 48F0                  USBConfigureEndpoint@handle 0034  
                                      l1815 618C                                        l1911 6D5E  
                                      l1824 61DE                                        l1912 6D62  
                                      l1880 6C88                                        l1785 533A  
                                      l1865 6B1A                                        l1888 6C04  
                                      l9003 5592                                        l9021 5606  
                                      l9009 55B2                                        l9201 5170  
                                      l9123 48E6                                        l9115 48C8  
                                      l9107 49C2                                        l9035 445A  
                                      l9051 47AC                                        l9117 48D0  
                                      l9213 6B22                                        l9119 48D4  
                                      l9303 6CF4                                        l9231 6BA8  
                                      l9223 6B50                                        l9207 6B02  
                                      l9063 47C6                                        l9055 47B2  
                                      l9321 6D3C                                        l9313 6D1C  
                                      l9241 6BCC                                        l9233 6BAC  
                                      l9217 6B28                                        l9057 47B6  
                                      l9331 6D80                                        l9315 6D26  
                                      l9251 6C0A                                        l9243 6BD2  
                                      l9171 50FA                                        l9163 4E6E  
                                      l9067 47CE                                        l9083 45CC  
                                      l9075 45B6                                        l9403 48FE  
                                      l9341 6DA4                                        l9245 6BD6  
                                      l9413 4912                                        l8711 4FAC  
                                      l9095 499C                                        l9263 6C48  
                                      l9255 6C1A                                        l9167 4E92  
                                      l9159 4E48                                        l9423 492A  
                                      l9097 49A4                                        l9353 6DDA  
                                      l9257 6C2A                                        l9193 5160  
                                      l9169 4E9A                                        l8731 4760  
                                      l9099 49A8                                        l8803 4A00  
                                      l8811 4A1C                                        l9363 6E64  
                                      l9355 6DE0                                        l9347 6DC0  
                                      l9339 6D9E                                        l9283 6CC4  
                                      l9267 6C5A                                        l9371 6E84  
                                      l8733 4762                                        l9357 6E22  
                                      l9365 6E6E                                        l9373 6E9C  
                                      l9189 5152                                        l9623 61A2  
                                      l8719 4736                                        l9607 43CA  
                                      l9279 6CB0                                        l8911 4DC6  
                                      l9551 4F02                                        l9463 53C8  
                                      l9633 61D0                                        l8737 4708  
                                      l9369 6E7E                                        l9297 6CF0  
                                      l9289 6CC8                                        l8913 4DCC  
                                      l9627 61AA                                        l9619 619A  
                                      l8747 472A                                        l8763 442C  
                                      l8923 4DEC                                        l8771 458A  
                                      l9555 4F08                                        l9483 543A  
                                      l9459 53B2                                        l8909 4DBE  
                                      l9469 53D8                                        l9647 61F8  
                                      l9655 6216                                        l9639 61E2  
                                      l9583 5388                                        l8919 4DE4  
                                      l8783 4BDE                                        l9823 7014  
                                      l9479 5408                                        l9751 4A62  
                                      l9657 621C                                        l9665 623A  
                                      l9577 5366                                        l9809 6FC4  
                                      l9761 6EB8                                        l8945 4522  
                                      l9753 4A64                                        l9745 4A48  
                                      l9675 624E                                        l9667 623E  
                                      l9579 536A                                        l9587 53AC  
                                      l8779 4BB4                                        l9915 7230  
                                      l9851 70B6                                        l8971 46DC  
                                      l9755 4A68                                        l9747 4A50  
                                      l9739 4A28                                        l9677 626C  
                                      l9837 7064                                        l9773 6EF0  
                                      l9943 72CA                                        l9927 7276  
                                      STR_1 7EE9                                        STR_2 7F28  
                                      l9953 72F0                                        l9865 7108  
                                      l9793 6F6C                                        STR_3 7D97  
                                      STR_4 7F5F                                        l9875 714A  
                                      l9867 710C                                        l9795 6F72  
                                      l9787 6F48                                        l9965 7336  
                                      l9877 7152                                        STR_7 7D87  
                                      STR_8 7ED1                                        l9967 733A  
                                      STR_9 7F68                                        l9985 7388  
                                      l9897 71D0                                        l9899 71D4  
                                      l9997 73DA                                        l9999 73DE  
           __size_of_MOTEapp_TimerBasedTask 000E                                        _PEIE 007F96  
                                      u7030 4E0C                                        u7050 4E3A  
                                      u7037 4E02                                        u7057 4E30  
                     ??_USBCtrlTrfTxService 002E                                        u6900 4BD4  
                                      u8180 713C                                        u6910 4BFE  
                                      u8190 714A                                        u7615 487A  
                                      _UCFG 000F62                                        u7616 487C  
                                      u6907 4BCA                                        _UEP0 000F6A  
                                      u6917 4BF4                                        _UEP1 000F6B  
                                      u8390 7474                                        _UEIE 000F66  
                                      u8907 5CEC                                        u8917 5CFA  
                                      u8927 5D10                                        _UEIR 000F67  
                                      _UCON 000F60                                        u8937 5D24  
                                      u8947 4590                                        u8957 4824  
                                      _TMR2 000FBC                             _CDCDataInHandle 0079  
    USBStdFeatureReqHandler@current_ep_data 0047                                        _pDst 007F  
                                      _main 5830                    ??i2_USBTransferOnePacket 0032  
         __end_of_moteApp_add8bToDataBuffer 4D7C                                        _pkts 0081  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf1 000FE7                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                           _USBDeviceAttach 46AC                                        btemp 005B  
                             __CFG_BORV$190 000000                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                      _USBapp_setrxByteFlag 426A                                        start 10AA  
                           ?_oled_putUint16 00CB                    moteJoiningProcess@i_1369 00ED  
                             __CFG_IESO$OFF 000000                             __end_of_EndLine 42C0  
                    __end_of_SPI_Initialize 42CE                            __end_of_CMP1_ISR 4254  
                           ?_oled_putString 00C6                  __end_of_USBCheckStdRequest 5580  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 018C  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0029                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 4264  
                      ??_moteJoiningProcess 00DF                      moteApp_delayms@counter 00BC  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 00BC  
                         sendCommand@string 00BA                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 4260                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 00CB              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 439A  
                                     l10003 73E6                                       l10005 73EA  
                                     l10023 7434                                       l10113 762E  
                                     l10033 745C                                       l10107 75F6  
                                     l10027 744E                                       l10045 748C  
                                     l10143 76F0                                       l10135 76D0  
                                     l10055 74B0                                       l10215 66B4  
                                     l10129 76AE                                       l10139 76E0  
                                     l10083 7514                                       l10059 74BE  
                                     l10147 7700                                       l10219 66BE  
                                     l10243 6722                                       l10069 74E2  
                                     l10149 7774                                       l10181 65EC  
                                     l10237 671C                                       l10423 5BA8  
                                     l10407 5B96                                       l10271 57C8  
                                     l10503 5064                                       l10167 65BC  
                                     l10355 4608                                       l10523 674E  
                                     l10515 673A                                       l10613 68DA  
                                     l10359 4618                                       l10287 5804  
                                     l10543 6798                                       l10535 6776  
                                     l10393 5B62                                       l10617 68F0  
                                     l10529 6766                                       l10483 500A  
                                     l10619 6902                                       l10555 67B6  
                                     l10539 678A                                       l10493 5050  
                                     l10399 5B8C                                       l10663 58CE  
                                     l10671 58DE                                       l10497 5058  
                                     l10569 67EC                                       l10657 58BE  
                                     l10499 505E                                       l10587 683C  
                                     l10579 6824                                       l10599 6884  
                                     ?_main 002E                             __end_of___lbdiv 47D2  
                                     _EEADR 000FA9                                       STR_10 7E55  
                                     STR_11 7EDD                                       STR_20 7F71  
                                     STR_12 7E7C                                       STR_21 7FFD  
                                     STR_13 7E62                                       STR_30 7EB1  
                                     STR_14 7E6F                                       STR_22 7C99  
                                     STR_31 7FF8                                       STR_23 7F0A  
                                     STR_15 7EF5                                       STR_40 7DB3  
                                     STR_24 7F56                                       STR_16 7F1E  
                                     STR_32 7C20                                       STR_17 7F7A  
                                     STR_33 7EA1                                       STR_41 7D77  
                                     STR_25 7CE0                                       STR_34 7DB3  
                                     STR_18 7F9B                                       STR_42 7F93  
                                     STR_26 7D35                                       STR_50 7C81  
                                     STR_43 7DB3                                       STR_51 7DC2  
                                     STR_19 7FA3                                       STR_27 7D46  
                                     STR_35 7B87                                       STR_52 7D83  
                                     STR_36 7EC5                                       STR_44 7D67  
                                     STR_28 7CBE                                       STR_60 7C39  
                                     STR_37 7DB3                                       STR_61 7FF1  
                                     STR_53 7FEA                                       STR_45 7F3B  
                                     STR_29 7EAD                                       STR_54 7DB3  
                                     STR_46 7DB3                                       STR_70 7D13  
                                     STR_62 7D02                                       STR_38 7B56  
                                     STR_71 7FB9                                       STR_63 7DB3  
                                     STR_39 7EB9                                       STR_55 7E48  
                                     STR_47 7C51                                       STR_72 7FB2  
                                     STR_56 7E4C                                       STR_80 7FDC  
                                     STR_48 7F8B                                       STR_64 7DA7  
                                     STR_73 7FE3                                       STR_57 7DB3  
                                     STR_49 7DB3                                       STR_65 7F14  
                                     STR_81 7C69                                       STR_74 7FB9  
                                     STR_82 7FCE                                       STR_66 7FB9  
                                     STR_90 7D57                                       STR_58 7CCF  
                                     STR_75 7FB2                                       STR_91 7B85  
                                     STR_83 7DAC                                       STR_67 7FB2  
                                     STR_59 7F44                                       STR_76 7FE3  
                                     STR_68 7FE3                                       STR_92 7F00  
                                     STR_84 7DC5                             __end_of___lbmod 45D4  
                                     STR_77 7FD5                                       STR_85 7FC7  
                                     STR_93 7DB6                                       STR_69 7D24  
                                     STR_86 7DB3                                       STR_78 7FC0  
                                     STR_79 7B85                                       STR_95 7DE0  
                                     STR_87 7CF1                                       STR_88 7E95  
                                     STR_96 7DED                                       STR_97 7DFA  
                                     STR_89 7DD3                                       STR_98 7E07  
                                     STR_99 7E14           __size_of_USBCtrlEPServiceComplete 00E4  
                           _TMR1_StartTimer 4254                             __end_of___lldiv 4F90  
         __size_of_MOTEapp_setResponseReady 0002                                       _T1CON 000FCD  
                    __end_of_USBDeviceTasks 6170                                       _T2CON 000FBA  
                   __end_of_sendDataCommand 5444                   ?_USBCtrlEPServiceComplete 002E  
                           __end_of___lwdiv 49D6                             __end_of___lwmod 48FA  
                 ?_MOTEapp_setResponseReady 002E                         oled_putUint8@number 00CD  
                                     _UADDR 000F63                                       i2l959 4580  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF    moteApp_add16bToDataBuffer@bufferLocation 00C7  
   moteApp_add8bToDataBuffer@bufferLocation 00BD                                       _USTAT 000F61  
                                     _TXREG 000FAD                                       _TXSTA 000FAC  
                             __CFG_WRT0$OFF 000000          __size_of_USBCtrlEPAllowStatusStage 00BC  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                             __CFG_WRT3$OFF 000000                           moteHandler@i_1298 01F1  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000             __end_of_USBCtrlEPAllowDataStage 5320  
                         oled_putChar@index 00C5                            __end_of_TMR1_ISR 429C  
                                     _sd000 7B52                                       _sd001 7AD8  
           service_pushbutton@Release_Timer 00A3                                       _sd002 7B0C  
                             __CFG_WRTB$OFF 000000                      moteRunningProcess@Traw 00DA  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                           _DATAEE_ReadByte 4332                              __CFG_EBTRB$OFF 000000  
                                i2memset@p1 002E                             __end_of_dpowers 7785  
                                     _light 007D                             __end_of_isdigit 4462  
                   __end_of_TMR1_Initialize 46AC                                _runningState 009F  
                                     pclath 000FFA                                       tablat 000FF5  
                                     plusw2 000FDB                           __end_of_CDCInitEP 4B5E  
                oled_setDisplay@displayType 00BB                                ?_modemResync 002E  
                                     status 000FD8                              __CFG_T3CMX$RC0 000000  
                           __end_of_sprintf 6EA8                             _TMR2_StartTimer 4258  
                           __end_of_strncmp 4EAE                             ___lbdiv@divisor 00B9  
                            __CFG_ICPRT$OFF 000000                       ?_USBapp_setrxByteFlag 002E  
                          __end_ofi2_memset 45FE                             ___lbdiv@counter 00BB  
                              _m10SecTicker 009B                             ?_SPI_Initialize 002E  
                           putUSBUSART@data 00B9          USART_mySetLineCodingHandler@dwBaud 003B  
              __size_of_USBStdSetCfgHandler 00A8                             __initialization 4CBE  
                     TMR2_ReadTimer@readVal 00B9               __size_of_TMRapp_ClearBitFlags 0004  
                              __end_of_main 58EA               __size_of_MOTEapp_handlerState 0008  
                    _MOTEapp_TimerBasedTask 42CE                              ??_EUSART_Write 00B9  
                   __end_of_TMR2_Initialize 42EC                                ?_sendCommand 00BA  
               ?_INTERRUPT_InterruptManager 002E                   __size_of_USBCtrlEPService 00B2  
                                    ??_main 00F1                                ?_moteHandler 002E  
                             __activetblptr 000002                          _modemResonseBuffer 0198  
                           ?_USBDeviceTasks 002E                         i2_EUSART_Initialize 4628  
                     oled_putUint16@numData 00CF                   sendDataCommand@dataLength 00BD  
                               ?_USBSuspend 002E                                  _NextUSBOut 001A  
                            __CFG_SDOMX$RB3 000000                             __CFG_CCP2MX$RC1 000000  
                              _cdc_mem_type 0097                    __end_of_SPI_Exchange8bit 42FC  
                   __end_of_USBDeviceAttach 46D8                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                          _CDCDataOutHandle 007B                           _getsUSBUSART$5532 00C4  
                                    _ACTCON 000FB5                                      STR_100 7E21  
                                    STR_101 7E2E                                      STR_110 7F83  
                                    STR_102 7E3B                                      STR_103 7F4D  
                                    STR_111 7E89                                      STR_112 7FAB  
                                    STR_113 7CAD                                      STR_105 7BEC  
                                    STR_106 7C06                                      _ADRESH 000FC4  
                                    STR_107 7BB8                                      STR_108 7BD2  
                                    STR_109 7F32                                      _ADRESL 000FC3  
                                    _EEDATA 000FA8                                      _EECON2 000FA7  
         __size_of_MOTEapp_getModemResponse 004A                             getsUSBUSART@len 00C2  
                                    _T1GCON 000FCC                        oled_putUint8@numData 00CE  
                 ?_MOTEapp_getModemResponse 002E                       __size_of_CDCTxService 0100  
                                    i2l1000 104A                                      i2l1002 105A  
                                    i2l1004 1066                                      i2l1008 1076  
                                    i2l1601 635A                                      i2l1603 635E  
                                    i2l1611 50E6                                      i2l1612 508E  
                                    i2l1613 5092                                      i2l1621 48B8  
                                    i2l1471 609A                                      i2l2280 4F7E  
                                    i2l1608 5084                                      i2l1545 5F0E  
                                    i2l1481 6116                                      i2l1650 4B08  
                                    i2l1706 6A82                                      i2l1482 616C  
                                    i2l1483 611C                                      i2l1648 4AC4  
                                    i2l1672 54EE                                      i2l1681 551E  
                                    i2l1658 5B0A                                      i2l1765 5248  
                                    i2l1598 630E                                      i2l1688 6922  
                                    i2l6121 592E                                      i2l1698 6A08  
                                    i2l6203 6280                                      i2l6303 69F6  
                                    i2l6215 6312                                      i2l6207 6290  
                                    i2l6223 6362                                      i2l6305 6A20  
                                    i2l6153 52EE                                      i2l6331 6ACC  
                                    i2l6315 6A62                                      i2l6235 50A4  
                                    i2l6333 6AD8                                      i2l6325 6A94  
                                    i2l6317 6A6E                                      i2l6245 50D8  
                                    i2l6173 5650                                      i2l6149 52DA  
                                    i2l6501 5F22                                      i2l6263 6924  
                                    i2l8113 5C38                                      i2l7331 5AD2  
                                    i2l5803 47EE                                      i2l6195 56AA  
                                    i2l6611 5540                                      i2l8035 449C  
                                    i2l6533 649A                                      i2l5813 5212  
                                    i2l5645 51D8                                      i2l6293 69BE  
                                    i2l6509 5F30                                      i2l8037 449E  
                                    i2l7319 5A96                                      i2l6543 64C4  
                                    i2l5831 523C                                      i2l5823 5228  
                                    i2l5663 4782                                      i2l5671 5454  
                                    i2l6287 69AC                                      i2l6279 697C  
                                    i2l6607 552E                                      i2l8143 5C80  
                                    i2l8119 5C62                                      i2l8127 5C6C  
                                    i2l7345 5B30                                      i2l7337 5AF0  
                                    i2l6537 64A6                                      i2l5817 521E  
                                    i2l6289 69AE                                      i2l5915 59C0  
                                    i2l7347 5B32                                      i2l6555 651A  
                                    i2l5851 527C                                      i2l5659 4774  
                                    i2l8059 48B6                                      i2l5845 5276  
                                    i2l5677 5474                                      i2l6485 5EB2  
                                    i2l8093 576C                                      i2l5919 59C8  
                                    i2l6559 6534                                      i2l5839 5264  
                                    i2l8079 570E                                      i2l8511 60DC  
                                    i2l5929 59F0                                      i2l5937 5A26  
                                    i2l6569 6590                                      i2l5689 54C8  
                                    i2l6585 54F8                                      i2l6489 5EB8  
                                    i2l8521 60EE                                      i2l8505 60D4  
                                    i2l8443 457C                                      i2l5955 4F32  
                                    i2l5939 5A2C                                      i2l5947 5A62  
                                    i2l8515 60E4                                      i2l5957 4F3E  
                                    i2l5973 45DE                                      i2l6597 5508  
                                    i2l5967 4F70                                      i2l5959 4F42  
                                    i2l8631 1072                                      i2l8457 4558  
                                    i2l8449 453E                                      i2l5977 45EE  
                                    i2l8529 610A                                      i2l8555 6150  
                                    i2l8491 60AC                                      i2l8557 6164  
                                    i2l8549 613A                                      i2l8477 6092  
                                    i2l8469 6086                                      i2l8499 60B8  
                                 ??_EndLine 00BA                                      _OSCCON 000FD3  
                             CDCTxService@i 00C2                                      _SPBRGH 000FB0  
                                    _SSPBUF 000FC9                    i2USBTransferOnePacket@ep 0032  
                         ??i2_USBDeviceInit 0036             __size_ofi2_USBTransferOnePacket 009E  
                      ?i2_EUSART_Initialize 002E                        oled_displayOff@state 00BB  
                             oled_putChar@k 00C4                           _shortPacketStatus 002B  
            moteRunningProcess@changeStates 002E                              __CFG_XINST$OFF 000000  
                      _moteApp_clearBuffers 48FA                             USBDeviceTasks@i 004E  
                __end_of_Set_Column_Address 4426                 USBStdFeatureReqHandler@pUEP 0045  
                          __end_of_hexToStr 4534                    USBTransferOnePacket@data 00BA  
                USBCtrlTrfInHandler@lastDTS 003F                             ??_USBDeviceInit 00C1  
                 __size_of_Set_Page_Address 0014                     __end_of_TMR1_StartTimer 4258  
                              ?_putUSBUSART 00B9                                      ___wmul 44E8  
                                 ??___lbdiv 00BA                              __CFG_STVREN$ON 000000  
                    modemResync@escapeEvent 00C0                                   ??___lbmod 00BA  
                                 ??___lldiv 0036                        __end_of_getsUSBUSART 53B0  
                                 ??___lwdiv 00BD                                   ??___lwmod 00C4  
                         _USBEnableEndpoint 4766             __size_of_USBStdGetStatusHandler 007E  
                       _EUSART_Transmit_ISR 455C                                      _memset 45FE  
                                    clear_0 4CC4                                      clear_1 4CD0  
                                    clear_2 4CDC                                      clear_3 4CE8  
                                    _prevS1 00F6                                      _prevS2 00F7  
                        ?_USBEnableEndpoint 0036              ??_USART_mySetLineCodingHandler 003B  
                   __end_of_DATAEE_ReadByte 4346                                      _strcmp 50FA  
                __end_of_ADC_TempConversion 44C6               __size_of_USBTransferOnePacket 00A0  
                          ?_sendDataCommand 00BA                               _manualTrigger 009C  
                           _moteApp_delayms 4584                 __size_of_service_pushbutton 004C  
                                 ??_isdigit 00B9                                _CDCTxService 6170  
                              __mediumconst 777A                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                       ??_USBEnableEndpoint 0037                    ADC_GetConversion@channel 00BD  
                                 ?_CMP1_ISR 002E                     __end_of_TMR2_StartTimer 425C  
                                 ??_sprintf 00CD                                 _CtrlTrfData 000438  
                                 ??_strncmp 00BF                            ___lbdiv@dividend 00BA  
                             ?_oled_devInit 002E                        ?_EUSART_Transmit_ISR 002E  
                      _controlTransferState 0021                        _USBapp_getrxByteFlag 425C  
                          ?_TMR1_Initialize 002E                        __CFG_LS48MHZ$SYS48X8 000000  
                      __size_of_EUSART_Read 002E                           _SYSTEM_Initialize 4462  
              __size_of_USBapp_handlerState 0008                             ___lbmod@divisor 00B9  
                                __accesstop 0060                     __end_of__initialization 4D0E  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 00BB  
                           __CFG_PBADEN$OFF 000000                       ??i2_EUSART_Initialize 002E  
                           _CMP1_Initialize 42FC                          ?_SYSTEM_Initialize 002E  
                        oled_writeData@data 00BA                               ___rparam_used 000001  
                             ?_oled_setFont 00B9                    __size_of_USBStallHandler 003E  
                             ?_oled_putChar 00BC                       ?_moteApp_clearBuffers 002E  
                       __size_of_USBSuspend 001E                 __size_of_EUSART_FlushBuffer 002C  
                            __pcstackCOMRAM 002E                   __end_of_USBEnableEndpoint 479C  
                          __CFG_nPWRTEN$OFF 000000                               __end_of_sd000 7B56  
                             __end_of_sd001 7B0C                               __end_of_sd002 7B40  
                              __pidataBANK0 4271                         ??_SYSTEM_Initialize 00BB  
                 oled_putUint16@station_dot 00CD                                   ?_TMR1_ISR 002E  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 4844  
             __size_of_USBConfigureEndpoint 0088                 __end_of_USBCtrlTrfInHandler 5B36  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 00BC  
                    i2_USBTransferOnePacket 5444                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7A95  
                         _CDCTxService$5580 00C0                                  _cdc_notice 01D8  
                                 ?i2_memset 002E                                  _cdc_rx_len 0098  
                                _cdc_tx_len 0099                                  ??_CMP1_ISR 002E  
                           _responsePortNum 0076                    ??_USBCtrlTrfSetupHandler 004B  
                                _dataBuffer 00A4                              ??_oled_devInit 00BB  
                          ?_USBDeviceAttach 002E                   __end_of_SYSTEM_Initialize 4482  
                     ??_EUSART_Transmit_ISR 002E                      _USBStdGetStatusHandler 507C  
                              sprintf@width 00DB                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 00B9                            ??_oled_putUint16 00CF  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                        __end_of_EUSART_Write 4766  
                   __size_of_TMR2_ReadTimer 0008                            ??_oled_putString 00CA  
                            ??_oled_setFont 00BB                 __size_of_EUSART_Receive_ISR 0028  
                       oled_putString@index 00CA                              ??_oled_putChar 00BE  
               __size_of_USBWakeFromSuspend 0022                                 _pBDTEntryIn 000F  
                    __size_of_oled_clearRow 001E                        __size_of_modemResync 0064  
                  sendDataCommand@byteCount 00BF            __end_of_USBCtrlEPServiceComplete 5F7E  
          __end_of_MOTEapp_setResponseReady 1006                      oled_putChar@start_page 00BD  
               __size_of_USBCheckCDCRequest 008C                           __CFG_PLLSEL$PLL3X 000000  
                        __size_of_oled_init 0022                            ??_oled_writeData 00BA  
                      USBCtrlTrfRxService@i 003F                                ?_TMRapp_Tick 002E  
                                   ?___wmul 00B9                            ?_TMR1_StartTimer 002E  
                                ??_TMR1_ISR 002E                    oled_putUint16@start_page 00CE  
                   __end_of_moteApp_delayms 45AC                                     _CM1CON0 000F98  
        MOTEapp_getModemResponse@bufferByte 00BB                     __size_of_USBapp_Handler 0076  
                   __size_of_TMRapp_Handler 00DE                                     _BAUDCON 000FB8  
                                   ?_memset 00B9                                  _device_dsc 7B40  
                 Set_Column_Address@address 00BB                    __size_of_oled_displayOff 0012  
                          _USBCtrlEPService 56C8                                  _ep_data_in 006A  
                   __size_of_ADC_Initialize 0016                                     ?_strcmp 00B9  
                          ?_DATAEE_ReadByte 002E                 __end_of_USBCtrlTrfRxService 659C  
                      __size_of_sendCommand 0054                          _USBCheckStdRequest 54E2  
                             _eusartRxCount 0023                           _configDescriptor1 7A95  
                                   i2l10713 4956                                     i2l10715 4988  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                                ??i2_memset 0034                 __end_of_USBCtrlTrfTxService 5A68  
                      __size_of_moteHandler 01E0                         _USBStdSetCfgHandler 5620  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                   __end_of_CMP1_Initialize 430E                         ?_USBCheckStdRequest 002E  
                          ?_TMR2_StartTimer 002E                __size_of_USBStdGetDscHandler 0102  
                                   _UIEbits 000F64                                   ?_hexToStr 002E  
                       moteJoiningProcess@i 00EC                                     _UIRbits 000F65  
                          ??_SPI_Initialize 00B9                                     _EndLine 42B4  
                             _cdc_trf_state 0020                        DATAEE_WriteByte@bAdd 00BA  
                __end_of_moteRunningProcess 6728                      ??_moteApp_clearBuffers 00B9  
                ?_moteApp_add8bToDataBuffer 00BD                                     _pCDCDst 0070  
                                   _pCDCSrc 0073                       __size_of_getsUSBUSART 0090  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 002E  
                                 _CDCInitEP 4B0C                     ?_MOTEapp_TimerBasedTask 002E  
                                   __Lparam 0000                    moteRunningProcess@i_1400 00DD  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 01EE  
                          _Set_Page_Address 4346                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 00D7                           _timerMinTickCount 0087  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 08D2  
                                   ___lbdiv 479C                                     ___lbmod 45AC  
                                   ___lldiv 4F1A                            ??_USBDeviceTasks 004E  
                           __size_of___wmul 0026                                     ___lwdiv 498C  
                         ??_USBStallHandler 002E                                     ___lwmod 48BC  
                      __size_of_putUSBUSART 001C                                     __pcinit 4CBE  
                        getsUSBUSART@buffer 00C0                             __size_of_memset 002A  
                 __end_of_configDescriptor1 7AD8                                     __ramtop 0800  
                         hexToStr@character 00B9            __end_of_MOTEapp_getModemResponse 4A20  
                                   __ptext0 5830                                     __ptext1 6728  
                                   __ptext2 4A20                                     __ptext3 659C  
                                   __ptext4 53B0                                     __ptext5 450E  
                                   __ptext6 4C06                                     __ptext7 48FA  
                                   __ptext8 4D1C                                     __ptext9 45AC  
                  __size_of_oled_setDisplay 0014                                     _inPipes 0009  
               _USBDeferOUTDataStagePackets 0090                             __size_of_strcmp 0084  
                          oled_setFont@font 00B9                           __end_of_hexpowers 778D  
                                 _T1CONbits 000FCD                                     _dpowers 777B  
                     _OSCILLATOR_Initialize 4384                                ??_USBSuspend 0043  
                             _oled_clearRow 4426                                   _T2CONbits 000FBA  
                                _modemSleep 43CE             moteApp_add8bToDataBuffer@number 00BE  
                                   _isdigit 4444                                  _oled_clear 439A  
                  ??_PIN_MANAGER_Initialize 00B9                __end_of_TMRapp_ClearBitFlags 4264  
                              _LastRS232Out 0019                             i2_USBDeviceInit 5C0C  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 44E8  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 4280  
                    ??_USBapp_getrxByteFlag 00B9                          __end_of_USB_CD_Ptr 7795  
                __size_of_SYSTEM_Initialize 0020                                     _sprintf 6AFC  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 00B9  
                                   _strncmp 4E46                        end_of_initialization 4D0E  
                              _getsUSBUSART 5320               sendDataCommand@byteCount_1458 00C0  
                        ??_SPI_Exchange8bit 00B9                        SPI_Exchange8bit@data 00B9  
                        __end_of_USB_SD_Ptr 7793                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 00BB                                     memset@n 00BD  
                                   memset@p 00BF                               __Lmediumconst 777A  
           _dummy_encapsulated_cmd_response 01E2                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 42DC                           _EUSART_Initialize 4654  
                                _rxByteFlag 002A                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 4C06                          __end_of_USBSuspend 4408  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 5292  
                                 _RCSTAbits 000FAB                                     postdec1 000FE5  
                                   postdec2 000FDD                                     postinc0 000FEE  
                                   postinc2 000FDE                        __end_of_oled_devInit 5DBC  
                  _USBCtrlEPServiceComplete 5E9A                                  _responseId 0100  
                          ?_moteApp_delayms 00B9                               _randomPortNum 009E  
                  _MOTEapp_setResponseReady 1004                  _USBStatusStageEnabledFlag1 0092  
                _USBStatusStageEnabledFlag2 0093                         _USBapp_handlerState 4280  
                       ??_EUSART_Initialize 00B9                          USBEnableEndpoint@p 0037  
                                 _PORTAbits 000F80                                   _PORTCbits 000F82  
                   oled_putUint8@start_page 00CC                              ?_oled_clearRow 002E  
                      __end_of_oled_setFont 4332                          _Set_Column_Address 4408  
                      __end_of_oled_putChar 5006                            ___lbmod@dividend 00BA  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                           ??_oled_displayOff 00BB  
                     __size_of_EUSART_Write 0034                          _BothEP0OutUOWNsSet 008D  
                          ?_CMP1_Initialize 002E                   USBConfigureEndpoint@EPNum 0033  
                ?_USBCtrlEPAllowStatusStage 002E                    __end_of_DATAEE_WriteByte 487E  
                       ?_Set_Column_Address 002E         USER_USB_CALLBACK_EVENT_HANDLER@size 003F  
                            _TMR2_ReadTimer 4288                                   _USTATcopy 002D  
                         __size_of_CMP1_ISR 0004                        ?_USBapp_handlerState 002E  
                        _ADC_TempConversion 44A4                    oled_putString@start_page 00C9  
                               ___lbmod@rem 00BC                   __end_of_EUSART_Initialize 4680  
              __end_of_USBTransferOnePacket 5620                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 01EC  
                            ?_oled_putUint8 00CB                           putUSBUSART@length 00BB  
                       ?_ADC_TempConversion 002E                      _USBCtrlTrfSetupHandler 4C60  
                      ??_Set_Column_Address 00BB                     ?i2_USBTransferOnePacket 002E  
                     __end_of_USBDeviceInit 5C0C                              _TMRapp_Handler 5DBC  
                            _USBapp_Handler 5006                        __size_of_TMRapp_Tick 0006  
              ??_moteApp_add16bToDataBuffer 00C8                              __end_of___wmul 450E  
                              _EUSART_Write 4732                       sendDataCommand@string 00BA  
                   __end_ofi2_USBDeviceInit 5CE4                           __size_of_TMR1_ISR 000C  
                __end_of_service_pushbutton 4A6C                              _ADC_Initialize 436E  
               moteApp_clearBuffers@counter 00B9                                   i2memset@c 0030  
                                 i2memset@n 0032                                   i2memset@p 0034  
                    ?_OSCILLATOR_Initialize 002E                              __end_of_memset 4628  
                         _USBBusIsSuspended 008E                    oled_writeCommand@command 00BA  
                               ?_modemSleep 002E                              __end_of_strcmp 517E  
                               ?_oled_clear 002E                         start_initialization 4CBE  
                      ??_ADC_TempConversion 00C0                     ?_USBStdGetStatusHandler 002E  
             USBCtrlTrfRxService@byteToRead 0040                    _MOTEapp_getModemResponse 49D6  
           __size_of_PIN_MANAGER_Initialize 004E                           ??_oled_setDisplay 00BB  
                             ??_EUSART_Read 00B9                      __end_of_TMR2_ReadTimer 4290  
                               _cdc_data_rx 000540                                 _cdc_data_tx 000500  
               __end_ofi2_EUSART_Initialize 4654                           __size_ofi2_memset 002A  
                                 _OledFont0 7795                __end_of_USBConfigureEndpoint 5206  
           __end_of_USBStdFeatureReqHandler 6AFC                    __size_of_sendDataCommand 0094  
                     ??_USBapp_handlerState 00B9           __end_of_USBCtrlEPAllowStatusStage 59A6  
                  __end_of_USBCtrlEPService 577A        __end_of_USART_mySetLineCodingHandler 4BB2  
     __size_of_USART_mySetLineCodingHandler 0054                _USART_mySetLineCodingHandler 4B5E  
                __end_of_EUSART_FlushBuffer 4704                         DATAEE_ReadByte@bAdd 00B9  
             __size_of_USBapp_setrxByteFlag 0006         __size_of_moteApp_add16bToDataBuffer 010A  
                 ??_USBCtrlEPAllowDataStage 002F                                 ??_CDCInitEP 003A  
                            USBDeviceInit@i 00C1                      _pBDTEntryEP0OutCurrent 0015  
                  __size_of_TMR1_Initialize 002C                     USBTransferOnePacket@dir 00B9  
                   USBTransferOnePacket@len 00BC                      __end_of_USBapp_Handler 507C  
                    __end_of_TMRapp_Handler 5E9A              __end_ofi2_USBTransferOnePacket 54E2  
                      _TMRapp_ClearBitFlags 4260                                    ??___wmul 00BD  
                       _USBStdGetDscHandler 6270                        _MOTEapp_handlerState 4278  
                    __end_of_ADC_Initialize 4384                                 __pdataBANK0 00F1  
                                  ??_memset 00BF                             ??_oled_clearRow 00C6  
MOTEapp_getModemResponse@terminatorReceived 00BA             MOTEapp_TimerBasedTask@timerTask 00B9  
                                  ??_strcmp 00BD                   oled_putString@station_dot 00C8  
                    _USBActiveConfiguration 002C              __end_of_USBStdGetStatusHandler 50FA  
               __end_of_EUSART_Transmit_ISR 4584                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 0066                               __pcstackBANK0 00B9  
                             __pcstackBANK1 01EA                __size_of_USBCtrlTrfInHandler 00CE  
                  __size_of_TMR2_Initialize 0010                    __end_of_Set_Page_Address 435A  
                           ?_TMR2_ReadTimer 002E                                 _activeState 0094  
                      ?_USBStdGetDscHandler 002E                                _isdigit$5910 00BA  
                 ADC_TempConversion@tempRaw 00C0                  __end_of_EUSART_Receive_ISR 455C  
            moteRunningProcess@messageReady 00D6                                    ?_EndLine 002E  
                __end_of_USBWakeFromSuspend 44A4                               ??_modemResync 00BE  
                __size_of_EUSART_Initialize 002C                           __size_of_hexToStr 0026  
                               sprintf@flag 00DA                                 sprintf@prec 00D2  
                           _USBStallHandler 487E                                _pBDTEntryOut 0060  
                       __end_of_EUSART_Read 4732                  __end_of_USBCheckCDCRequest 5292  
                           ??_oled_putUint8 00CD                        oled_putString@string 00C6  
                  __size_of_USBDeviceAttach 002C                 ??_moteApp_add8bToDataBuffer 00BE  
                         _oled_writeCommand 429C                       __size_of_oled_devInit 00D8  
                   oled_putChar@station_dot 00BC                         __size_of_modemSleep 001C  
                          ___lwdiv@dividend 00B9                      _PIN_MANAGER_Initialize 4A6C  
                       __size_of_oled_clear 0018                       ?_TMRapp_ClearBitFlags 002E  
                      EUSART_Read@readValue 00B9                             ?_TMRapp_Handler 002E  
                           ?_USBapp_Handler 002E                                   __pintcode 1008  
                        ?_oled_writeCommand 002E                               __pmediumconst 777A  
             moteJoiningProcess@switchEvent 00DE                       ?_MOTEapp_handlerState 002E  
                                 __ptext100 5206                                   __ptext101 4ABA  
                                  ?___lbdiv 00B9                                   __ptext110 4290  
                                 __ptext102 647C                                   __ptext111 455C  
                                 __ptext103 58EA                                   __ptext112 4534  
                                 __ptext104 5A68                                   __ptext113 4250  
                                 __ptext105 59A6                                   __ptext114 0000  
                                 __ptext106 4B5E                                   __ptext107 4628  
                                 __ptext108 4F1A                                   __ptext109 4264  
                                  ?___lbmod 00B9                                    ?___lldiv 002E  
                                  ?___lwdiv 00B9                                    ?___lwmod 00C0  
                           ?_ADC_Initialize 002E                       __size_of_oled_setFont 0012  
                              _eusartRxHead 0024                               ??_sendCommand 00BC  
                              _eusartTxHead 0027                                _eusartRxTail 0025  
                              _eusartTxTail 0028                       __size_of_oled_putChar 0076  
                        _moteRunningProcess 659C                ??_INTERRUPT_InterruptManager 004F  
                          ?i2_USBDeviceInit 002E                      moteHandler@readMessage 01F2  
                       ??_oled_writeCommand 00BA                               ??_moteHandler 00EF  
                   _eusartTxBufferRemaining 0026                        _USBTransferOnePacket 5580  
                              moteHandler@i 01F0            moteApp_add16bToDataBuffer@number 00C5  
                  __size_of_TMR1_StartTimer 0004                                    ?_isdigit 002E  
                    moteHandler@buttonPress 01EF                         ?_moteRunningProcess 00D5  
              __end_of_USBCtrlTrfOutHandler 4B0C                                   _hexpowers 7785  
                     ??_USBStdGetDscHandler 002E                                    _CMP1_ISR 4250  
                               _ep_data_out 006D                            ___lwdiv@quotient 00BE  
                                  ?_sprintf 00C5                __size_of_USBCtrlTrfRxService 0120  
                                 _secTicker 00A0               USBConfigureEndpoint@direction 002E  
                  __size_of_DATAEE_ReadByte 0014                                    ?_strncmp 00B9  
                              _oled_devInit 5CE4                              _eusartRxBuffer 0200  
                          _timerMsTickCount 0089                                   _oled_init 44C6  
              __size_of_USBCtrlTrfTxService 00C2                     _moteJoiningProcess$1341 00E1  
                   _moteJoiningProcess$1374 00E7                     _moteJoiningProcess$1366 00E5  
                   _moteJoiningProcess$1359 00E3                              _eusartTxBuffer 0240  
                            ___wmul@product 00BD                                    _LATAbits 000F89  
                                  _IOCCbits 000F87                   __end_of_oled_writeCommand 42A8  
                                  _LATBbits 000F8A                                    _LATCbits 000F8B  
                ??_USBCtrlEPServiceComplete 002F                  ??_MOTEapp_setResponseReady 00B9  
                                  _PIE1bits 000F9D                                    _IPR3bits 000FA5  
                                  _PIE2bits 000FA0                                    _PIE3bits 000FA3  
                  __size_of_TMR2_StartTimer 0004                                _oled_setFont 4320  
                                 _moteState 00F5                           ??_sendDataCommand 00BE  
                             _operationType 009D                        ??_moteRunningProcess 00D8  
                __end_of_moteJoiningProcess 777A         __size_of_INTERRUPT_InterruptManager 00A2  
                              _oled_putChar 4F90                                    _PIR1bits 000F9E  
                                  _PIR2bits 000FA1               __size_of_moteApp_clearBuffers 0048  
                                  i2u364_40 5A18                                    i2u364_47 5A0E  
                                  _PIR3bits 000FA4                                    i2u366_40 5A54  
                                  i2u533_48 5B1C                                    i2u366_47 5A4A  
                                  i2u446_48 657C                                    i2u391_40 62DC  
                                  i2u391_47 62D2                                    i2u392_40 630A  
                                  i2u392_47 6300                                    i2u394_40 6354  
                                  i2u394_47 634A                   USBCtrlEPService@setup_cnt 004D  
                 __size_of_SPI_Exchange8bit 0010                         __end_of_modemResync 4DE0  
                                  _RCONbits 000FD0                     __size_of_oled_putUint16 00F4  
                             ??_putUSBUSART 00BC                            __CFG_WDTPS$32768 000000  
                                  _UEP0bits 000F6A                  _USBDeferINDataStagePackets 008F  
                                  _SSP1CON1 000FC6          __end_of_moteApp_add16bToDataBuffer 647C  
                _moteApp_add16bToDataBuffer 6372                 __size_of_USBCheckStdRequest 009E  
                                  _TMR1_ISR 4290                     __size_of_oled_putString 0066  
                                  _SSP1STAT 000FC7                                    _UCONbits 000F60  
                           _oled_displayOff 430E                                    _VREFCON0 000F7D  
            moteRunningProcess@selectButton 00D5                        _USBConfigureEndpoint 517E  
          __size_of_USBStdFeatureReqHandler 01F4                           ??_TMR1_Initialize 00B9  
                                _ADCON0bits 000FC2                     Set_Page_Address@address 00BB  
                         ___wmul@multiplier 00B9                       ?_USBTransferOnePacket 00B9  
                      moteJoiningProcess@ch 008B                      ADC_TempConversion@temp 00C1  
                 _moteApp_add8bToDataBuffer 4D1C                     __size_of_oled_writeData 000C  
                             ?_CDCTxService 002E                    moteHandler@gotoNextState 01EB  
                              _RemoteWakeup 001D                         __end_of_sendCommand 4C06  
                                  i2_memset 45D4                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 00B9                          _RS232_Out_Data_Rdy 001B  
                   __end_of_USBStallHandler 48BC                         __end_of_moteHandler 6908  
                               _EUSART_Read 4704                           _moteApp_GoToSleep 4EAE  
                                 copy_data0 4D02                 ??_USBCtrlEPAllowStatusStage 002E  
               __end_of_USBStdSetCfgHandler 56C8                           ?_DATAEE_WriteByte 00B9  
             __size_of_USBapp_getrxByteFlag 0004                          ?_moteApp_GoToSleep 002E  
                                ?_oled_init 002E                           ??_TMR2_Initialize 00B9  
                          __size_of_EndLine 000C                          ??_DATAEE_WriteByte 00BA  
                        __end_of_device_dsc 7B52                                  _EECON1bits 000FA6  
                   ?_USBCtrlTrfSetupHandler 002E               USBapp_CdcEmulatorInitialize@i 003A  
                    ??_TMRapp_ClearBitFlags 00B9                     USBStdGetStatusHandler@p 002E  
                                  __Hrparam 0000                         ??_moteApp_GoToSleep 00C8  
                                  __Lrparam 0000                      USBTransferOnePacket@ep 00BD  
                    ??_MOTEapp_handlerState 00B9                           _ADC_GetConversion 480A  
                        __CFG_BOREN$SBORDIS 000000                                    _SetupPkt 000430  
                   __size_of_SPI_Initialize 000E                     ??_OSCILLATOR_Initialize 00B9  
                     ?_USBConfigureEndpoint 002E                          ?_ADC_GetConversion 00B9  
                         ??_USBDeviceAttach 00B9                            __size_of___lbdiv 0036  
                          __size_of___lbmod 0028                  ??_MOTEapp_getModemResponse 00BA  
                              _selectedFont 00F1                            __size_of___lldiv 0076  
          moteApp_clearBuffers@counter_1525 00BA                             _oled_setDisplay 435A  
          moteApp_clearBuffers@counter_1526 00BB                            __size_of___lwdiv 004A  
                          __size_of___lwmod 003E                   MOTEapp_handlerState@state 00B9  
                                _ANSELAbits 000F5B                         __end_of_putUSBUSART 43CE  
                               _line_coding 00B0                                  _ANSELCbits 000F5D  
                            ??_CDCTxService 00C0                                ??_modemSleep 00BE  
                       ??_ADC_GetConversion 00BB                                  sprintf@idx 00D1  
                                sprintf@len 00D6                                  sprintf@val 00D8  
                              ??_oled_clear 00C8                    modemResync@escapeCounter 00BE  
                  __size_of_moteApp_delayms 0028                            __size_of_isdigit 001E  
                 __end_of_moteApp_GoToSleep 4F1A                     __size_of_USBDeviceTasks 00FE  
                           ___lwdiv@divisor 00BB                                    _appTimer 0095  
                           ___lwdiv@counter 00BD                                    __ptext10 479C  
                                  __ptext11 6372                                    __ptext20 46D8  
                                  __ptext12 4EAE                                    __ptext21 4288  
                                  __ptext13 44C6                                    __ptext30 5F7E  
                                  __ptext22 6EA8                                    __ptext14 4320  
                                  __ptext31 4584                                    __ptext23 4E46  
                                  __ptext15 435A                                    __ptext40 42CE  
                                  __ptext32 49D6                                    __ptext24 50FA  
                                  __ptext16 5CE4                                    __ptext41 4280  
                                  __ptext33 4844                                    __ptext25 6AFC  
                                  __ptext17 430E                                    __ptext50 429C  
                                  __ptext42 5006                                    __ptext34 44A4  
                                  __ptext26 4444                                    __ptext18 43CE  
                                  __ptext51 42EC                                    __ptext43 4DE0  
                                  __ptext35 498C                                    __ptext27 44E8  
                                  __ptext19 4D7C                                    __ptext60 5580  
                                  __ptext52 577A                                    __ptext44 439A  
                                  __ptext36 480A                                    __ptext28 4BB2  
                                  __ptext61 5B36                                    __ptext53 43B2  
                                  __ptext45 4426                                    __ptext37 5DBC  
                                  __ptext29 42B4                                    __ptext70 4A6C  
                                  __ptext62 45FE                                    __ptext54 5320  
                                  __ptext46 4F90                                    __ptext38 48BC  
                                  __ptext71 4384                                    __ptext63 46AC  
                                  __ptext55 425C                                    __ptext47 42A8  
                                  __ptext39 4260                                    __ptext80 5C0C  
                                  __ptext72 4654                                    __ptext64 4462  
                                  __ptext56 1004                                    __ptext48 4346  
                                  __ptext81 4482                                    __ptext73 42FC  
                                  __ptext65 42DC                                    __ptext57 4732  
                                  __ptext49 4408                                    __ptext90 45D4  
                                  __ptext82 43EA                                    __ptext74 436E  
                                  __ptext66 4258                                    __ptext58 4704  
                                  __ptext91 507C                                    __ptext83 487E  
                                  __ptext75 4278                                    __ptext67 4680  
                                  __ptext59 6170                                    __ptext92 6270  
                                  __ptext84 56C8                                    __ptext76 4332  
                                  __ptext68 4254                                    __ptext93 6908  
                                  __ptext85 4C60                                    __ptext69 42C0  
                                  __ptext94 4942                                    __ptext86 5E9A  
                                  __ptext78 426A                                    __ptext95 47D2  
                                  __ptext87 5292                                    __ptext79 6072  
                                  __ptext96 4B0C                                    __ptext88 54E2  
                                  __ptext97 5444                                    __ptext89 5620  
                                  __ptext98 4766                                    __ptext99 517E  
      __end_of_USBapp_CdcEmulatorInitialize 480A       __size_of_USBapp_CdcEmulatorInitialize 0038  
              _USBapp_CdcEmulatorInitialize 47D2                                _SSP1CON1bits 000FC6  
                                  _hexToStr 450E                          _service_pushbutton 4A20  
                         ??_TMR1_StartTimer 00B9                            __size_of_sprintf 03AC  
               DATAEE_WriteByte@GIEBitValue 00BB                                    _autoMode 0096  
                               _OSCCON2bits 000FD2                            __size_of_strncmp 0068  
                               _modemResync 4D7C              __end_of_USBCtrlTrfSetupHandler 4CBE  
                             __size_of_main 00BA                           ?_USBCtrlEPService 002E  
                __size_of_oled_writeCommand 000C                                  strncmp@len 00BD  
                       ?_service_pushbutton 002E                           ??_DATAEE_ReadByte 00B9  
                 __end_of_ADC_GetConversion 4844                    __size_of_CMP1_Initialize 0012  
                   __end_of_oled_displayOff 4320                          ??_USBCtrlEPService 004B  
                       _USBCtrlTrfInHandler 5A68                               ??_TMRapp_Tick 002E  
                        __end_of_modemSleep 43EA                          __end_of_oled_clear 43B2  
                                  _outPipes 0001                        _USBCtrlTrfOutHandler 4ABA  
                                  int$flags 005B                                    _usbState 00A2  
                 _USBCtrlEPAllowStatusStage 58EA                 __size_of_Set_Column_Address 001E  
                         ??_TMR2_StartTimer 00B9          __end_of_INTERRUPT_InterruptManager 10AA  
                _INTERRUPT_InterruptManager 1008                                _SSP1STATbits 000FC7  
                               _sendCommand 4BB2                      ??_USBTransferOnePacket 00BD  
                        oled_clearRow@index 00C7                          _EUSART_FlushBuffer 46D8  
              __end_of_USBapp_setrxByteFlag 4270                                 _moteHandler 6728  
                          ??_TMR2_ReadTimer 00B9                        ??_service_pushbutton 00B9  
                 _USBDeferStatusStagePacket 001E                    CDCTxService@byte_to_send 00C3  
                                _INTCONbits 000FF2                 __end_of_USBapp_handlerState 4288  
                      ?_USBCtrlTrfInHandler 002E                         ?_EUSART_FlushBuffer 002E  
               __size_of_ADC_TempConversion 0022               USBCtrlTrfTxService@byteToSend 002E  
                                  isdigit@c 00BB                                    memset@p1 00B9  
                          ?_USBStallHandler 002E                    USBStdFeatureReqHandler@p 0048  
                         ?_Set_Page_Address 002E                    ??_MOTEapp_TimerBasedTask 00B9  
                              _responseData 0110               ?_USBapp_CdcEmulatorInitialize 002E  
                                  intlevel2 0000                                   sprintf@ap 00D5  
                                 sprintf@cp 00D3                                   sprintf@sp 00C5  
                               ??_oled_init 00C8                          ??_Set_Page_Address 00BB  
                    __size_of_USBDeviceInit 00D6     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 498C  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0041  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003B             _USER_USB_CALLBACK_EVENT_HANDLER 4942  
            moteJoiningProcess@messageReady 00EE                            ___lwmod@dividend 00C0  
              i2USBTransferOnePacket@handle 0033                            ___lldiv@dividend 002E  
                   ?_PIN_MANAGER_Initialize 002E                            ??_USBapp_Handler 00CB  
                          ??_TMRapp_Handler 00C5                        moteHandler@gotoSleep 01EA  
              __size_ofi2_EUSART_Initialize 002C                                   strncmp@s1 00B9  
                                 strncmp@s2 00BB                            ??_ADC_Initialize 00B9  
                      ??_EUSART_FlushBuffer 00B9                     __end_of_oled_setDisplay 436E  
                            _oled_putUint16 5F7E                            _SPI_Exchange8bit 42EC  
                i2USBTransferOnePacket@data 002F                                 _sleepTicker 00A1  
                    ??_USBConfigureEndpoint 002F                       ?_USBCtrlTrfOutHandler 002E  
                            _oled_putString 4DE0                                 _putUSBUSART 43B2  
                        _EUSART_Receive_ISR 4534                           oled_clearRow@page 00C6  
                      __CFG_CPUDIV$NOCLKDIV 000000                         _USBCtrlTrfRxService 647C  
                        _USBWakeFromSuspend 4482                     _USBStdFeatureReqHandler 6908  
   __end_of_USBapp_DeviceCdcEmulatorHandler 5830    __size_of_USBapp_DeviceCdcEmulatorHandler 00B6  
          ?_USBapp_DeviceCdcEmulatorHandler 002E           ??_USBapp_DeviceCdcEmulatorHandler 00C6  
           _USBapp_DeviceCdcEmulatorHandler 577A                          _USBCheckCDCRequest 5206  
                       _USBCtrlTrfTxService 59A6                         __end_of_TMRapp_Tick 426A  
                     __end_of_oled_clearRow 4444                                 _temperature 0083  
                                  sprintf@c 00DD                                    sprintf@f 00C7  
                       ?_EUSART_Receive_ISR 002E                              _oled_writeData 42A8  
                       ?_USBWakeFromSuspend 002E                                    strcmp@s1 00B9  
                                  strcmp@t0 00BF                                    strcmp@s2 00BB  
                                  strcmp@t1 00C1                                    strcmp@t2 00C0  
                          ___lldiv@quotient 0036                             ___lwmod@divisor 00C2  
                     ??_USBCtrlTrfInHandler 003F                       _USBAlternateInterface 00B7  
                           ___lwmod@counter 00C4                         ?_USBCheckCDCRequest 002E  
                __size_of_moteApp_GoToSleep 006C                   i2USBTransferOnePacket@dir 002E  
                 i2USBTransferOnePacket@len 0031                         USBEnableEndpoint@ep 0039  
                           _endpoint_number 0022                             _sendDataCommand 53B0  
                      ?_USBCtrlTrfRxService 002E                               ?_getsUSBUSART 00C0  
                  oled_putUint8@station_dot 00CB                          __CFG_FOSC$INTOSCIO 000000  
                        EUSART_Write@txData 00B9                __size_of_EUSART_Transmit_ISR 0028  
            __end_of_PIN_MANAGER_Initialize 4ABA                    ?_USBCtrlEPAllowDataStage 002E  
        __size_of_moteApp_add8bToDataBuffer 0060                        ?_USBCtrlTrfTxService 002E  
                         ??_moteApp_delayms 00BB                _USBStatusStageTimeoutCounter 001F  
                      ??_EUSART_Receive_ISR 002E                        ??_USBWakeFromSuspend 0043  
                    __end_of_oled_putUint16 6072                  USBTransferOnePacket@handle 00BE  
                __size_of_ADC_GetConversion 003A                        __end_of_CDCTxService 6270  
                           _TMR1_Initialize 4680           moteJoiningProcess@joiningComplete 00E9  
                          ?_oled_displayOff 002E                       __end_of_oled_putUint8 4C60  
                    __end_of_oled_putString 4E46                        ??_USBCheckCDCRequest 002E  
                                _USB_CD_Ptr 7793  
