

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 27 22:08:46 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   139                           	psect	text122,global,reloc=2,class=CODE,delta=1
   140                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   141                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   142                           	dabs	1,0x400,48,_BDT
   143                           	dabs	1,0x500,64,_cdc_data_tx
   144                           	dabs	1,0x438,8,_CtrlTrfData
   145                           	dabs	1,0x430,8,_SetupPkt
   146                           	dabs	1,0x540,64,_cdc_data_rx
   147  0000                     
   148                           	psect	idataBANK0
   149  00423A                     __pidataBANK0:
   150                           	opt stack 0
   151                           
   152                           ;initializer for _selectedFont
   153  00423A  49                 	db	low _OledFont0
   154  00423B  76                 	db	high _OledFont0
   155                           
   156                           ;initializer for _dataRateSelection
   157  00423C  02                 	db	2
   158                           
   159                           ;initializer for _moteState
   160  00423D  01                 	db	1
   161                           
   162                           ;initializer for _periodicState
   163  00423E  01                 	db	1
   164                           
   165                           	psect	mediumconst
   166  007640                     __pmediumconst:
   167                           	opt stack 0
   168  007640  00                 	db	0
   169  007641                     _USB_SD_Ptr:
   170                           	opt stack 0
   171  007641  06                 	db	low _sd000
   172  007642  7A                 	db	high _sd000
   173  007643  8C                 	db	low _sd001
   174  007644  79                 	db	high _sd001
   175  007645  C0                 	db	low _sd002
   176  007646  79                 	db	high _sd002
   177  007647                     __end_of_USB_SD_Ptr:
   178                           	opt stack 0
   179  007647                     _USB_CD_Ptr:
   180                           	opt stack 0
   181  007647  49                 	db	low _configDescriptor1
   182  007648  79                 	db	high _configDescriptor1
   183  007649                     __end_of_USB_CD_Ptr:
   184                           	opt stack 0
   185  007649                     _OledFont0:
   186                           	opt stack 0
   187  007649  00                 	db	0
   188  00764A  00                 	db	0
   189  00764B  00                 	db	0
   190  00764C  00                 	db	0
   191  00764D  00                 	db	0
   192  00764E  00                 	db	0
   193  00764F  00                 	db	0
   194  007650  00                 	db	0
   195  007651  00                 	db	0
   196  007652  00                 	db	0
   197  007653  00                 	db	0
   198  007654  5F                 	db	95
   199  007655  00                 	db	0
   200  007656  00                 	db	0
   201  007657  00                 	db	0
   202  007658  00                 	db	0
   203  007659  00                 	db	0
   204  00765A  00                 	db	0
   205  00765B  03                 	db	3
   206  00765C  00                 	db	0
   207  00765D  03                 	db	3
   208  00765E  00                 	db	0
   209  00765F  00                 	db	0
   210  007660  00                 	db	0
   211  007661  64                 	db	100
   212  007662  3C                 	db	60
   213  007663  26                 	db	38
   214  007664  64                 	db	100
   215  007665  3C                 	db	60
   216  007666  26                 	db	38
   217  007667  24                 	db	36
   218  007668  00                 	db	0
   219  007669  26                 	db	38
   220  00766A  49                 	db	73
   221  00766B  49                 	db	73
   222  00766C  7F                 	db	127
   223  00766D  49                 	db	73
   224  00766E  49                 	db	73
   225  00766F  32                 	db	50
   226  007670  00                 	db	0
   227  007671  42                 	db	66
   228  007672  25                 	db	37
   229  007673  12                 	db	18
   230  007674  08                 	db	8
   231  007675  24                 	db	36
   232  007676  52                 	db	82
   233  007677  21                 	db	33
   234  007678  00                 	db	0
   235  007679  20                 	db	32
   236  00767A  50                 	db	80
   237  00767B  4E                 	db	78
   238  00767C  55                 	db	85
   239  00767D  22                 	db	34
   240  00767E  58                 	db	88
   241  00767F  28                 	db	40
   242  007680  00                 	db	0
   243  007681  00                 	db	0
   244  007682  00                 	db	0
   245  007683  00                 	db	0
   246  007684  03                 	db	3
   247  007685  00                 	db	0
   248  007686  00                 	db	0
   249  007687  00                 	db	0
   250  007688  00                 	db	0
   251  007689  00                 	db	0
   252  00768A  00                 	db	0
   253  00768B  1C                 	db	28
   254  00768C  22                 	db	34
   255  00768D  41                 	db	65
   256  00768E  00                 	db	0
   257  00768F  00                 	db	0
   258  007690  00                 	db	0
   259  007691  00                 	db	0
   260  007692  00                 	db	0
   261  007693  00                 	db	0
   262  007694  41                 	db	65
   263  007695  22                 	db	34
   264  007696  1C                 	db	28
   265  007697  00                 	db	0
   266  007698  00                 	db	0
   267  007699  00                 	db	0
   268  00769A  15                 	db	21
   269  00769B  15                 	db	21
   270  00769C  0E                 	db	14
   271  00769D  0E                 	db	14
   272  00769E  15                 	db	21
   273  00769F  15                 	db	21
   274  0076A0  00                 	db	0
   275  0076A1  00                 	db	0
   276  0076A2  08                 	db	8
   277  0076A3  08                 	db	8
   278  0076A4  3E                 	db	62
   279  0076A5  08                 	db	8
   280  0076A6  08                 	db	8
   281  0076A7  00                 	db	0
   282  0076A8  00                 	db	0
   283  0076A9  00                 	db	0
   284  0076AA  00                 	db	0
   285  0076AB  00                 	db	0
   286  0076AC  50                 	db	80
   287  0076AD  30                 	db	48
   288  0076AE  00                 	db	0
   289  0076AF  00                 	db	0
   290  0076B0  00                 	db	0
   291  0076B1  00                 	db	0
   292  0076B2  08                 	db	8
   293  0076B3  08                 	db	8
   294  0076B4  08                 	db	8
   295  0076B5  08                 	db	8
   296  0076B6  08                 	db	8
   297  0076B7  00                 	db	0
   298  0076B8  00                 	db	0
   299  0076B9  00                 	db	0
   300  0076BA  00                 	db	0
   301  0076BB  00                 	db	0
   302  0076BC  40                 	db	64
   303  0076BD  00                 	db	0
   304  0076BE  00                 	db	0
   305  0076BF  00                 	db	0
   306  0076C0  00                 	db	0
   307  0076C1  40                 	db	64
   308  0076C2  20                 	db	32
   309  0076C3  10                 	db	16
   310  0076C4  08                 	db	8
   311  0076C5  04                 	db	4
   312  0076C6  02                 	db	2
   313  0076C7  01                 	db	1
   314  0076C8  00                 	db	0
   315  0076C9  00                 	db	0
   316  0076CA  3E                 	db	62
   317  0076CB  41                 	db	65
   318  0076CC  41                 	db	65
   319  0076CD  41                 	db	65
   320  0076CE  3E                 	db	62
   321  0076CF  00                 	db	0
   322  0076D0  00                 	db	0
   323  0076D1  00                 	db	0
   324  0076D2  00                 	db	0
   325  0076D3  41                 	db	65
   326  0076D4  7F                 	db	127
   327  0076D5  40                 	db	64
   328  0076D6  00                 	db	0
   329  0076D7  00                 	db	0
   330  0076D8  00                 	db	0
   331  0076D9  00                 	db	0
   332  0076DA  42                 	db	66
   333  0076DB  61                 	db	97
   334  0076DC  51                 	db	81
   335  0076DD  49                 	db	73
   336  0076DE  6E                 	db	110
   337  0076DF  00                 	db	0
   338  0076E0  00                 	db	0
   339  0076E1  00                 	db	0
   340  0076E2  22                 	db	34
   341  0076E3  41                 	db	65
   342  0076E4  49                 	db	73
   343  0076E5  49                 	db	73
   344  0076E6  36                 	db	54
   345  0076E7  00                 	db	0
   346  0076E8  00                 	db	0
   347  0076E9  00                 	db	0
   348  0076EA  18                 	db	24
   349  0076EB  14                 	db	20
   350  0076EC  12                 	db	18
   351  0076ED  7F                 	db	127
   352  0076EE  10                 	db	16
   353  0076EF  00                 	db	0
   354  0076F0  00                 	db	0
   355  0076F1  00                 	db	0
   356  0076F2  27                 	db	39
   357  0076F3  49                 	db	73
   358  0076F4  49                 	db	73
   359  0076F5  49                 	db	73
   360  0076F6  71                 	db	113
   361  0076F7  00                 	db	0
   362  0076F8  00                 	db	0
   363  0076F9  00                 	db	0
   364  0076FA  3C                 	db	60
   365  0076FB  4A                 	db	74
   366  0076FC  49                 	db	73
   367  0076FD  48                 	db	72
   368  0076FE  70                 	db	112
   369  0076FF  00                 	db	0
   370  007700  00                 	db	0
   371  007701  00                 	db	0
   372  007702  43                 	db	67
   373  007703  21                 	db	33
   374  007704  11                 	db	17
   375  007705  0D                 	db	13
   376  007706  03                 	db	3
   377  007707  00                 	db	0
   378  007708  00                 	db	0
   379  007709  00                 	db	0
   380  00770A  36                 	db	54
   381  00770B  49                 	db	73
   382  00770C  49                 	db	73
   383  00770D  49                 	db	73
   384  00770E  36                 	db	54
   385  00770F  00                 	db	0
   386  007710  00                 	db	0
   387  007711  00                 	db	0
   388  007712  06                 	db	6
   389  007713  09                 	db	9
   390  007714  49                 	db	73
   391  007715  29                 	db	41
   392  007716  1E                 	db	30
   393  007717  00                 	db	0
   394  007718  00                 	db	0
   395  007719  00                 	db	0
   396  00771A  00                 	db	0
   397  00771B  00                 	db	0
   398  00771C  12                 	db	18
   399  00771D  00                 	db	0
   400  00771E  00                 	db	0
   401  00771F  00                 	db	0
   402  007720  00                 	db	0
   403  007721  00                 	db	0
   404  007722  00                 	db	0
   405  007723  00                 	db	0
   406  007724  52                 	db	82
   407  007725  30                 	db	48
   408  007726  00                 	db	0
   409  007727  00                 	db	0
   410  007728  00                 	db	0
   411  007729  00                 	db	0
   412  00772A  00                 	db	0
   413  00772B  08                 	db	8
   414  00772C  14                 	db	20
   415  00772D  14                 	db	20
   416  00772E  22                 	db	34
   417  00772F  00                 	db	0
   418  007730  00                 	db	0
   419  007731  00                 	db	0
   420  007732  14                 	db	20
   421  007733  14                 	db	20
   422  007734  14                 	db	20
   423  007735  14                 	db	20
   424  007736  14                 	db	20
   425  007737  14                 	db	20
   426  007738  00                 	db	0
   427  007739  00                 	db	0
   428  00773A  00                 	db	0
   429  00773B  22                 	db	34
   430  00773C  14                 	db	20
   431  00773D  14                 	db	20
   432  00773E  08                 	db	8
   433  00773F  00                 	db	0
   434  007740  00                 	db	0
   435  007741  00                 	db	0
   436  007742  02                 	db	2
   437  007743  01                 	db	1
   438  007744  59                 	db	89
   439  007745  05                 	db	5
   440  007746  02                 	db	2
   441  007747  00                 	db	0
   442  007748  00                 	db	0
   443  007749  3E                 	db	62
   444  00774A  41                 	db	65
   445  00774B  5D                 	db	93
   446  00774C  55                 	db	85
   447  00774D  4D                 	db	77
   448  00774E  51                 	db	81
   449  00774F  2E                 	db	46
   450  007750  00                 	db	0
   451  007751  40                 	db	64
   452  007752  7C                 	db	124
   453  007753  4A                 	db	74
   454  007754  09                 	db	9
   455  007755  4A                 	db	74
   456  007756  7C                 	db	124
   457  007757  40                 	db	64
   458  007758  00                 	db	0
   459  007759  41                 	db	65
   460  00775A  7F                 	db	127
   461  00775B  49                 	db	73
   462  00775C  49                 	db	73
   463  00775D  49                 	db	73
   464  00775E  49                 	db	73
   465  00775F  36                 	db	54
   466  007760  00                 	db	0
   467  007761  1C                 	db	28
   468  007762  22                 	db	34
   469  007763  41                 	db	65
   470  007764  41                 	db	65
   471  007765  41                 	db	65
   472  007766  41                 	db	65
   473  007767  22                 	db	34
   474  007768  00                 	db	0
   475  007769  41                 	db	65
   476  00776A  7F                 	db	127
   477  00776B  41                 	db	65
   478  00776C  41                 	db	65
   479  00776D  41                 	db	65
   480  00776E  22                 	db	34
   481  00776F  1C                 	db	28
   482  007770  00                 	db	0
   483  007771  41                 	db	65
   484  007772  7F                 	db	127
   485  007773  49                 	db	73
   486  007774  49                 	db	73
   487  007775  5D                 	db	93
   488  007776  41                 	db	65
   489  007777  63                 	db	99
   490  007778  00                 	db	0
   491  007779  41                 	db	65
   492  00777A  7F                 	db	127
   493  00777B  49                 	db	73
   494  00777C  09                 	db	9
   495  00777D  1D                 	db	29
   496  00777E  01                 	db	1
   497  00777F  03                 	db	3
   498  007780  00                 	db	0
   499  007781  1C                 	db	28
   500  007782  22                 	db	34
   501  007783  41                 	db	65
   502  007784  49                 	db	73
   503  007785  49                 	db	73
   504  007786  3A                 	db	58
   505  007787  08                 	db	8
   506  007788  00                 	db	0
   507  007789  41                 	db	65
   508  00778A  7F                 	db	127
   509  00778B  08                 	db	8
   510  00778C  08                 	db	8
   511  00778D  08                 	db	8
   512  00778E  7F                 	db	127
   513  00778F  41                 	db	65
   514  007790  00                 	db	0
   515  007791  00                 	db	0
   516  007792  41                 	db	65
   517  007793  41                 	db	65
   518  007794  7F                 	db	127
   519  007795  41                 	db	65
   520  007796  41                 	db	65
   521  007797  00                 	db	0
   522  007798  00                 	db	0
   523  007799  30                 	db	48
   524  00779A  40                 	db	64
   525  00779B  41                 	db	65
   526  00779C  41                 	db	65
   527  00779D  3F                 	db	63
   528  00779E  01                 	db	1
   529  00779F  01                 	db	1
   530  0077A0  00                 	db	0
   531  0077A1  41                 	db	65
   532  0077A2  7F                 	db	127
   533  0077A3  08                 	db	8
   534  0077A4  0C                 	db	12
   535  0077A5  12                 	db	18
   536  0077A6  61                 	db	97
   537  0077A7  41                 	db	65
   538  0077A8  00                 	db	0
   539  0077A9  41                 	db	65
   540  0077AA  7F                 	db	127
   541  0077AB  41                 	db	65
   542  0077AC  40                 	db	64
   543  0077AD  40                 	db	64
   544  0077AE  40                 	db	64
   545  0077AF  60                 	db	96
   546  0077B0  00                 	db	0
   547  0077B1  41                 	db	65
   548  0077B2  7F                 	db	127
   549  0077B3  42                 	db	66
   550  0077B4  0C                 	db	12
   551  0077B5  42                 	db	66
   552  0077B6  7F                 	db	127
   553  0077B7  41                 	db	65
   554  0077B8  00                 	db	0
   555  0077B9  41                 	db	65
   556  0077BA  7F                 	db	127
   557  0077BB  42                 	db	66
   558  0077BC  0C                 	db	12
   559  0077BD  11                 	db	17
   560  0077BE  7F                 	db	127
   561  0077BF  01                 	db	1
   562  0077C0  00                 	db	0
   563  0077C1  1C                 	db	28
   564  0077C2  22                 	db	34
   565  0077C3  41                 	db	65
   566  0077C4  41                 	db	65
   567  0077C5  41                 	db	65
   568  0077C6  22                 	db	34
   569  0077C7  1C                 	db	28
   570  0077C8  00                 	db	0
   571  0077C9  41                 	db	65
   572  0077CA  7F                 	db	127
   573  0077CB  49                 	db	73
   574  0077CC  09                 	db	9
   575  0077CD  09                 	db	9
   576  0077CE  09                 	db	9
   577  0077CF  06                 	db	6
   578  0077D0  00                 	db	0
   579  0077D1  0C                 	db	12
   580  0077D2  12                 	db	18
   581  0077D3  21                 	db	33
   582  0077D4  21                 	db	33
   583  0077D5  61                 	db	97
   584  0077D6  52                 	db	82
   585  0077D7  4C                 	db	76
   586  0077D8  00                 	db	0
   587  0077D9  41                 	db	65
   588  0077DA  7F                 	db	127
   589  0077DB  09                 	db	9
   590  0077DC  09                 	db	9
   591  0077DD  19                 	db	25
   592  0077DE  69                 	db	105
   593  0077DF  46                 	db	70
   594  0077E0  00                 	db	0
   595  0077E1  66                 	db	102
   596  0077E2  49                 	db	73
   597  0077E3  49                 	db	73
   598  0077E4  49                 	db	73
   599  0077E5  49                 	db	73
   600  0077E6  49                 	db	73
   601  0077E7  33                 	db	51
   602  0077E8  00                 	db	0
   603  0077E9  03                 	db	3
   604  0077EA  01                 	db	1
   605  0077EB  41                 	db	65
   606  0077EC  7F                 	db	127
   607  0077ED  41                 	db	65
   608  0077EE  01                 	db	1
   609  0077EF  03                 	db	3
   610  0077F0  00                 	db	0
   611  0077F1  01                 	db	1
   612  0077F2  3F                 	db	63
   613  0077F3  41                 	db	65
   614  0077F4  40                 	db	64
   615  0077F5  41                 	db	65
   616  0077F6  3F                 	db	63
   617  0077F7  01                 	db	1
   618  0077F8  00                 	db	0
   619  0077F9  01                 	db	1
   620  0077FA  0F                 	db	15
   621  0077FB  31                 	db	49
   622  0077FC  40                 	db	64
   623  0077FD  31                 	db	49
   624  0077FE  0F                 	db	15
   625  0077FF  01                 	db	1
   626  007800  00                 	db	0
   627  007801  01                 	db	1
   628  007802  1F                 	db	31
   629  007803  61                 	db	97
   630  007804  14                 	db	20
   631  007805  61                 	db	97
   632  007806  1F                 	db	31
   633  007807  01                 	db	1
   634  007808  00                 	db	0
   635  007809  41                 	db	65
   636  00780A  41                 	db	65
   637  00780B  36                 	db	54
   638  00780C  08                 	db	8
   639  00780D  36                 	db	54
   640  00780E  41                 	db	65
   641  00780F  41                 	db	65
   642  007810  00                 	db	0
   643  007811  01                 	db	1
   644  007812  03                 	db	3
   645  007813  44                 	db	68
   646  007814  78                 	db	120
   647  007815  44                 	db	68
   648  007816  03                 	db	3
   649  007817  01                 	db	1
   650  007818  00                 	db	0
   651  007819  43                 	db	67
   652  00781A  61                 	db	97
   653  00781B  51                 	db	81
   654  00781C  49                 	db	73
   655  00781D  45                 	db	69
   656  00781E  43                 	db	67
   657  00781F  61                 	db	97
   658  007820  00                 	db	0
   659  007821  00                 	db	0
   660  007822  00                 	db	0
   661  007823  7F                 	db	127
   662  007824  41                 	db	65
   663  007825  41                 	db	65
   664  007826  00                 	db	0
   665  007827  00                 	db	0
   666  007828  00                 	db	0
   667  007829  01                 	db	1
   668  00782A  02                 	db	2
   669  00782B  04                 	db	4
   670  00782C  08                 	db	8
   671  00782D  10                 	db	16
   672  00782E  20                 	db	32
   673  00782F  40                 	db	64
   674  007830  00                 	db	0
   675  007831  00                 	db	0
   676  007832  00                 	db	0
   677  007833  41                 	db	65
   678  007834  41                 	db	65
   679  007835  7F                 	db	127
   680  007836  00                 	db	0
   681  007837  00                 	db	0
   682  007838  00                 	db	0
   683  007839  00                 	db	0
   684  00783A  04                 	db	4
   685  00783B  02                 	db	2
   686  00783C  01                 	db	1
   687  00783D  01                 	db	1
   688  00783E  02                 	db	2
   689  00783F  04                 	db	4
   690  007840  00                 	db	0
   691  007841  00                 	db	0
   692  007842  40                 	db	64
   693  007843  40                 	db	64
   694  007844  40                 	db	64
   695  007845  40                 	db	64
   696  007846  40                 	db	64
   697  007847  40                 	db	64
   698  007848  00                 	db	0
   699  007849  00                 	db	0
   700  00784A  01                 	db	1
   701  00784B  02                 	db	2
   702  00784C  00                 	db	0
   703  00784D  00                 	db	0
   704  00784E  00                 	db	0
   705  00784F  00                 	db	0
   706  007850  00                 	db	0
   707  007851  00                 	db	0
   708  007852  34                 	db	52
   709  007853  4A                 	db	74
   710  007854  4A                 	db	74
   711  007855  4A                 	db	74
   712  007856  3C                 	db	60
   713  007857  40                 	db	64
   714  007858  00                 	db	0
   715  007859  00                 	db	0
   716  00785A  41                 	db	65
   717  00785B  3F                 	db	63
   718  00785C  48                 	db	72
   719  00785D  48                 	db	72
   720  00785E  48                 	db	72
   721  00785F  30                 	db	48
   722  007860  00                 	db	0
   723  007861  00                 	db	0
   724  007862  3C                 	db	60
   725  007863  42                 	db	66
   726  007864  42                 	db	66
   727  007865  42                 	db	66
   728  007866  24                 	db	36
   729  007867  00                 	db	0
   730  007868  00                 	db	0
   731  007869  00                 	db	0
   732  00786A  30                 	db	48
   733  00786B  48                 	db	72
   734  00786C  48                 	db	72
   735  00786D  49                 	db	73
   736  00786E  3F                 	db	63
   737  00786F  40                 	db	64
   738  007870  00                 	db	0
   739  007871  00                 	db	0
   740  007872  3C                 	db	60
   741  007873  4A                 	db	74
   742  007874  4A                 	db	74
   743  007875  4A                 	db	74
   744  007876  2C                 	db	44
   745  007877  00                 	db	0
   746  007878  00                 	db	0
   747  007879  00                 	db	0
   748  00787A  00                 	db	0
   749  00787B  48                 	db	72
   750  00787C  7E                 	db	126
   751  00787D  49                 	db	73
   752  00787E  09                 	db	9
   753  00787F  00                 	db	0
   754  007880  00                 	db	0
   755  007881  00                 	db	0
   756  007882  26                 	db	38
   757  007883  49                 	db	73
   758  007884  49                 	db	73
   759  007885  49                 	db	73
   760  007886  3F                 	db	63
   761  007887  01                 	db	1
   762  007888  00                 	db	0
   763  007889  41                 	db	65
   764  00788A  7F                 	db	127
   765  00788B  48                 	db	72
   766  00788C  04                 	db	4
   767  00788D  44                 	db	68
   768  00788E  78                 	db	120
   769  00788F  40                 	db	64
   770  007890  00                 	db	0
   771  007891  00                 	db	0
   772  007892  00                 	db	0
   773  007893  44                 	db	68
   774  007894  7D                 	db	125
   775  007895  40                 	db	64
   776  007896  00                 	db	0
   777  007897  00                 	db	0
   778  007898  00                 	db	0
   779  007899  00                 	db	0
   780  00789A  00                 	db	0
   781  00789B  40                 	db	64
   782  00789C  44                 	db	68
   783  00789D  3D                 	db	61
   784  00789E  00                 	db	0
   785  00789F  00                 	db	0
   786  0078A0  00                 	db	0
   787  0078A1  41                 	db	65
   788  0078A2  7F                 	db	127
   789  0078A3  10                 	db	16
   790  0078A4  18                 	db	24
   791  0078A5  24                 	db	36
   792  0078A6  42                 	db	66
   793  0078A7  42                 	db	66
   794  0078A8  00                 	db	0
   795  0078A9  00                 	db	0
   796  0078AA  40                 	db	64
   797  0078AB  41                 	db	65
   798  0078AC  7F                 	db	127
   799  0078AD  40                 	db	64
   800  0078AE  40                 	db	64
   801  0078AF  00                 	db	0
   802  0078B0  00                 	db	0
   803  0078B1  42                 	db	66
   804  0078B2  7E                 	db	126
   805  0078B3  02                 	db	2
   806  0078B4  7C                 	db	124
   807  0078B5  02                 	db	2
   808  0078B6  7E                 	db	126
   809  0078B7  40                 	db	64
   810  0078B8  00                 	db	0
   811  0078B9  42                 	db	66
   812  0078BA  7E                 	db	126
   813  0078BB  44                 	db	68
   814  0078BC  02                 	db	2
   815  0078BD  42                 	db	66
   816  0078BE  7C                 	db	124
   817  0078BF  40                 	db	64
   818  0078C0  00                 	db	0
   819  0078C1  00                 	db	0
   820  0078C2  3C                 	db	60
   821  0078C3  42                 	db	66
   822  0078C4  42                 	db	66
   823  0078C5  42                 	db	66
   824  0078C6  3C                 	db	60
   825  0078C7  00                 	db	0
   826  0078C8  00                 	db	0
   827  0078C9  00                 	db	0
   828  0078CA  41                 	db	65
   829  0078CB  7F                 	db	127
   830  0078CC  49                 	db	73
   831  0078CD  09                 	db	9
   832  0078CE  09                 	db	9
   833  0078CF  06                 	db	6
   834  0078D0  00                 	db	0
   835  0078D1  00                 	db	0
   836  0078D2  06                 	db	6
   837  0078D3  09                 	db	9
   838  0078D4  09                 	db	9
   839  0078D5  49                 	db	73
   840  0078D6  7F                 	db	127
   841  0078D7  41                 	db	65
   842  0078D8  00                 	db	0
   843  0078D9  00                 	db	0
   844  0078DA  42                 	db	66
   845  0078DB  7E                 	db	126
   846  0078DC  44                 	db	68
   847  0078DD  02                 	db	2
   848  0078DE  02                 	db	2
   849  0078DF  04                 	db	4
   850  0078E0  00                 	db	0
   851  0078E1  00                 	db	0
   852  0078E2  64                 	db	100
   853  0078E3  4A                 	db	74
   854  0078E4  4A                 	db	74
   855  0078E5  4A                 	db	74
   856  0078E6  36                 	db	54
   857  0078E7  00                 	db	0
   858  0078E8  00                 	db	0
   859  0078E9  00                 	db	0
   860  0078EA  04                 	db	4
   861  0078EB  3F                 	db	63
   862  0078EC  44                 	db	68
   863  0078ED  44                 	db	68
   864  0078EE  20                 	db	32
   865  0078EF  00                 	db	0
   866  0078F0  00                 	db	0
   867  0078F1  00                 	db	0
   868  0078F2  02                 	db	2
   869  0078F3  3E                 	db	62
   870  0078F4  40                 	db	64
   871  0078F5  40                 	db	64
   872  0078F6  22                 	db	34
   873  0078F7  7E                 	db	126
   874  0078F8  40                 	db	64
   875  0078F9  02                 	db	2
   876  0078FA  0E                 	db	14
   877  0078FB  32                 	db	50
   878  0078FC  40                 	db	64
   879  0078FD  32                 	db	50
   880  0078FE  0E                 	db	14
   881  0078FF  02                 	db	2
   882  007900  00                 	db	0
   883  007901  02                 	db	2
   884  007902  1E                 	db	30
   885  007903  62                 	db	98
   886  007904  18                 	db	24
   887  007905  62                 	db	98
   888  007906  1E                 	db	30
   889  007907  02                 	db	2
   890  007908  00                 	db	0
   891  007909  42                 	db	66
   892  00790A  62                 	db	98
   893  00790B  14                 	db	20
   894  00790C  08                 	db	8
   895  00790D  14                 	db	20
   896  00790E  62                 	db	98
   897  00790F  42                 	db	66
   898  007910  00                 	db	0
   899  007911  01                 	db	1
   900  007912  43                 	db	67
   901  007913  45                 	db	69
   902  007914  38                 	db	56
   903  007915  05                 	db	5
   904  007916  03                 	db	3
   905  007917  01                 	db	1
   906  007918  00                 	db	0
   907  007919  00                 	db	0
   908  00791A  46                 	db	70
   909  00791B  62                 	db	98
   910  00791C  52                 	db	82
   911  00791D  4A                 	db	74
   912  00791E  46                 	db	70
   913  00791F  62                 	db	98
   914  007920  00                 	db	0
   915  007921  00                 	db	0
   916  007922  00                 	db	0
   917  007923  08                 	db	8
   918  007924  36                 	db	54
   919  007925  41                 	db	65
   920  007926  00                 	db	0
   921  007927  00                 	db	0
   922  007928  00                 	db	0
   923  007929  00                 	db	0
   924  00792A  00                 	db	0
   925  00792B  00                 	db	0
   926  00792C  7F                 	db	127
   927  00792D  00                 	db	0
   928  00792E  00                 	db	0
   929  00792F  00                 	db	0
   930  007930  00                 	db	0
   931  007931  00                 	db	0
   932  007932  00                 	db	0
   933  007933  00                 	db	0
   934  007934  41                 	db	65
   935  007935  36                 	db	54
   936  007936  08                 	db	8
   937  007937  00                 	db	0
   938  007938  00                 	db	0
   939  007939  00                 	db	0
   940  00793A  18                 	db	24
   941  00793B  08                 	db	8
   942  00793C  08                 	db	8
   943  00793D  10                 	db	16
   944  00793E  10                 	db	16
   945  00793F  18                 	db	24
   946  007940  00                 	db	0
   947  007941  AA                 	db	170
   948  007942  55                 	db	85
   949  007943  AA                 	db	170
   950  007944  55                 	db	85
   951  007945  AA                 	db	170
   952  007946  55                 	db	85
   953  007947  AA                 	db	170
   954  007948  55                 	db	85
   955  007949                     __end_of_OledFont0:
   956                           	opt stack 0
   957  007949                     _configDescriptor1:
   958                           	opt stack 0
   959  007949  09                 	db	9
   960  00794A  02                 	db	2
   961  00794B  43                 	db	67
   962  00794C  00                 	db	0
   963  00794D  02                 	db	2
   964  00794E  01                 	db	1
   965  00794F  00                 	db	0
   966  007950  C0                 	db	192
   967  007951  32                 	db	50
   968  007952  09                 	db	9
   969  007953  04                 	db	4
   970  007954  00                 	db	0
   971  007955  00                 	db	0
   972  007956  01                 	db	1
   973  007957  02                 	db	2
   974  007958  02                 	db	2
   975  007959  01                 	db	1
   976  00795A  00                 	db	0
   977  00795B  05                 	db	5
   978  00795C  24                 	db	36
   979  00795D  00                 	db	0
   980  00795E  10                 	db	16
   981  00795F  01                 	db	1
   982  007960  04                 	db	4
   983  007961  24                 	db	36
   984  007962  02                 	db	2
   985  007963  02                 	db	2
   986  007964  05                 	db	5
   987  007965  24                 	db	36
   988  007966  06                 	db	6
   989  007967  00                 	db	0
   990  007968  01                 	db	1
   991  007969  05                 	db	5
   992  00796A  24                 	db	36
   993  00796B  01                 	db	1
   994  00796C  00                 	db	0
   995  00796D  01                 	db	1
   996  00796E  07                 	db	7
   997  00796F  05                 	db	5
   998  007970  81                 	db	129
   999  007971  03                 	db	3
  1000  007972  08                 	db	8
  1001  007973  00                 	db	0
  1002  007974  02                 	db	2
  1003  007975  09                 	db	9
  1004  007976  04                 	db	4
  1005  007977  01                 	db	1
  1006  007978  00                 	db	0
  1007  007979  02                 	db	2
  1008  00797A  0A                 	db	10
  1009  00797B  00                 	db	0
  1010  00797C  00                 	db	0
  1011  00797D  00                 	db	0
  1012  00797E  07                 	db	7
  1013  00797F  05                 	db	5
  1014  007980  02                 	db	2
  1015  007981  02                 	db	2
  1016  007982  40                 	db	64
  1017  007983  00                 	db	0
  1018  007984  00                 	db	0
  1019  007985  07                 	db	7
  1020  007986  05                 	db	5
  1021  007987  82                 	db	130
  1022  007988  02                 	db	2
  1023  007989  40                 	db	64
  1024  00798A  00                 	db	0
  1025  00798B  00                 	db	0
  1026  00798C                     __end_of_configDescriptor1:
  1027                           	opt stack 0
  1028  00798C                     _sd001:
  1029                           	opt stack 0
  1030  00798C  34                 	db	52
  1031  00798D  03                 	db	3
  1032  00798E  004D               	dw	77
  1033  007990  0069               	dw	105
  1034  007992  0063               	dw	99
  1035  007994  0072               	dw	114
  1036  007996  006F               	dw	111
  1037  007998  0063               	dw	99
  1038  00799A  0068               	dw	104
  1039  00799C  0069               	dw	105
  1040  00799E  0070               	dw	112
  1041  0079A0  0020               	dw	32
  1042  0079A2  0054               	dw	84
  1043  0079A4  0065               	dw	101
  1044  0079A6  0063               	dw	99
  1045  0079A8  0068               	dw	104
  1046  0079AA  006E               	dw	110
  1047  0079AC  006F               	dw	111
  1048  0079AE  006C               	dw	108
  1049  0079B0  006F               	dw	111
  1050  0079B2  0067               	dw	103
  1051  0079B4  0079               	dw	121
  1052  0079B6  0020               	dw	32
  1053  0079B8  0049               	dw	73
  1054  0079BA  006E               	dw	110
  1055  0079BC  0063               	dw	99
  1056  0079BE  002E               	dw	46
  1057  0079C0                     __end_of_sd001:
  1058                           	opt stack 0
  1059  0079C0                     _sd002:
  1060                           	opt stack 0
  1061  0079C0  34                 	db	52
  1062  0079C1  03                 	db	3
  1063  0079C2  0043               	dw	67
  1064  0079C4  0044               	dw	68
  1065  0079C6  0043               	dw	67
  1066  0079C8  0020               	dw	32
  1067  0079CA  0052               	dw	82
  1068  0079CC  0053               	dw	83
  1069  0079CE  002D               	dw	45
  1070  0079D0  0032               	dw	50
  1071  0079D2  0033               	dw	51
  1072  0079D4  0032               	dw	50
  1073  0079D6  0020               	dw	32
  1074  0079D8  0045               	dw	69
  1075  0079DA  006D               	dw	109
  1076  0079DC  0075               	dw	117
  1077  0079DE  006C               	dw	108
  1078  0079E0  0061               	dw	97
  1079  0079E2  0074               	dw	116
  1080  0079E4  0069               	dw	105
  1081  0079E6  006F               	dw	111
  1082  0079E8  006E               	dw	110
  1083  0079EA  0020               	dw	32
  1084  0079EC  0044               	dw	68
  1085  0079EE  0065               	dw	101
  1086  0079F0  006D               	dw	109
  1087  0079F2  006F               	dw	111
  1088  0079F4                     __end_of_sd002:
  1089                           	opt stack 0
  1090  0079F4                     _device_dsc:
  1091                           	opt stack 0
  1092  0079F4  12                 	db	18
  1093  0079F5  01                 	db	1
  1094  0079F6  0200               	dw	512
  1095  0079F8  02                 	db	2
  1096  0079F9  00                 	db	0
  1097  0079FA  00                 	db	0
  1098  0079FB  08                 	db	8
  1099  0079FC  04D8               	dw	1240
  1100  0079FE  000A               	dw	10
  1101  007A00  0100               	dw	256
  1102  007A02  01                 	db	1
  1103  007A03  02                 	db	2
  1104  007A04  00                 	db	0
  1105  007A05  01                 	db	1
  1106  007A06                     __end_of_device_dsc:
  1107                           	opt stack 0
  1108  007A06                     _sd000:
  1109                           	opt stack 0
  1110  007A06  04                 	db	4
  1111  007A07  03                 	db	3
  1112  007A08  0409               	dw	1033
  1113  007A0A                     __end_of_sd000:
  1114                           	opt stack 0
  1115  0000                     _ANSELAbits	set	3931
  1116  0000                     _ANSELCbits	set	3933
  1117  0000                     _ACTCON	set	4021
  1118  0000                     _ADCON0	set	4034
  1119  0000                     _ADCON0bits	set	4034
  1120  0000                     _ADCON1	set	4033
  1121  0000                     _ADCON2	set	4032
  1122  0000                     _ADRESH	set	4036
  1123  0000                     _ADRESL	set	4035
  1124  0000                     _BAUDCON	set	4024
  1125  0000                     _CM1CON0	set	3992
  1126  0000                     _CM2CON1bits	set	3994
  1127  0000                     _EEADR	set	4009
  1128  0000                     _EECON1bits	set	4006
  1129  0000                     _EECON2	set	4007
  1130  0000                     _EEDATA	set	4008
  1131  0000                     _INTCONbits	set	4082
  1132  0000                     _IOCCbits	set	3975
  1133  0000                     _IPR3bits	set	4005
  1134  0000                     _LATAbits	set	3977
  1135  0000                     _LATBbits	set	3978
  1136  0000                     _LATCbits	set	3979
  1137  0000                     _OSCCON	set	4051
  1138  0000                     _OSCCON2	set	4050
  1139  0000                     _OSCCON2bits	set	4050
  1140  0000                     _OSCTUNE	set	3995
  1141  0000                     _PIE1bits	set	3997
  1142  0000                     _PIE2bits	set	4000
  1143  0000                     _PIE3bits	set	4003
  1144  0000                     _PIR1bits	set	3998
  1145  0000                     _PIR2bits	set	4001
  1146  0000                     _PIR3bits	set	4004
  1147  0000                     _PORTAbits	set	3968
  1148  0000                     _PORTCbits	set	3970
  1149  0000                     _PR2	set	4027
  1150  0000                     _RCONbits	set	4048
  1151  0000                     _RCREG	set	4014
  1152  0000                     _RCSTA	set	4011
  1153  0000                     _RCSTAbits	set	4011
  1154  0000                     _SPBRG	set	4015
  1155  0000                     _SPBRGH	set	4016
  1156  0000                     _SSP1ADD	set	4040
  1157  0000                     _SSP1CON1	set	4038
  1158  0000                     _SSP1CON1bits	set	4038
  1159  0000                     _SSP1STAT	set	4039
  1160  0000                     _SSP1STATbits	set	4039
  1161  0000                     _SSPBUF	set	4041
  1162  0000                     _T1CON	set	4045
  1163  0000                     _T1CONbits	set	4045
  1164  0000                     _T1GCON	set	4044
  1165  0000                     _T2CON	set	4026
  1166  0000                     _T2CONbits	set	4026
  1167  0000                     _TMR1H	set	4047
  1168  0000                     _TMR1L	set	4046
  1169  0000                     _TMR2	set	4028
  1170  0000                     _TRISAbits	set	3986
  1171  0000                     _TRISBbits	set	3987
  1172  0000                     _TRISCbits	set	3988
  1173  0000                     _TXREG	set	4013
  1174  0000                     _TXSTA	set	4012
  1175  0000                     _TXSTAbits	set	4012
  1176  0000                     _UADDR	set	3939
  1177  0000                     _UCFG	set	3938
  1178  0000                     _UCON	set	3936
  1179  0000                     _UCONbits	set	3936
  1180  0000                     _UEIE	set	3942
  1181  0000                     _UEIR	set	3943
  1182  0000                     _UEP0bits	set	3946
  1183  0000                     _UIE	set	3940
  1184  0000                     _UIEbits	set	3940
  1185  0000                     _UIR	set	3941
  1186  0000                     _UIRbits	set	3941
  1187  0000                     _USTAT	set	3937
  1188  0000                     _VREFCON0	set	3965
  1189  0000                     _WDTCONbits	set	4049
  1190  0000                     _UEP0	set	3946
  1191  0000                     _UEP1	set	3947
  1192  0000                     _CKE	set	32318
  1193  0000                     _CKP	set	32308
  1194  0000                     _GIE	set	32663
  1195  0000                     _PEIE	set	32662
  1196  007A0A                     STR_256:
  1197  007A0A  73                 	db	115	;'s'
  1198  007A0B  79                 	db	121	;'y'
  1199  007A0C  73                 	db	115	;'s'
  1200  007A0D  20                 	db	32
  1201  007A0E  73                 	db	115	;'s'
  1202  007A0F  65                 	db	101	;'e'
  1203  007A10  74                 	db	116	;'t'
  1204  007A11  20                 	db	32
  1205  007A12  70                 	db	112	;'p'
  1206  007A13  69                 	db	105	;'i'
  1207  007A14  6E                 	db	110	;'n'
  1208  007A15  64                 	db	100	;'d'
  1209  007A16  69                 	db	105	;'i'
  1210  007A17  67                 	db	103	;'g'
  1211  007A18  20                 	db	32
  1212  007A19  47                 	db	71	;'G'
  1213  007A1A  50                 	db	80	;'P'
  1214  007A1B  49                 	db	73	;'I'
  1215  007A1C  4F                 	db	79	;'O'
  1216  007A1D  31                 	db	49	;'1'
  1217  007A1E  30                 	db	48	;'0'
  1218  007A1F  20                 	db	32
  1219  007A20  30                 	db	48	;'0'
  1220  007A21  0D                 	db	13
  1221  007A22  0A                 	db	10
  1222  007A23  00                 	db	0
  1223  007A24                     STR_257:
  1224  007A24  73                 	db	115	;'s'
  1225  007A25  79                 	db	121	;'y'
  1226  007A26  73                 	db	115	;'s'
  1227  007A27  20                 	db	32
  1228  007A28  73                 	db	115	;'s'
  1229  007A29  65                 	db	101	;'e'
  1230  007A2A  74                 	db	116	;'t'
  1231  007A2B  20                 	db	32
  1232  007A2C  70                 	db	112	;'p'
  1233  007A2D  69                 	db	105	;'i'
  1234  007A2E  6E                 	db	110	;'n'
  1235  007A2F  64                 	db	100	;'d'
  1236  007A30  69                 	db	105	;'i'
  1237  007A31  67                 	db	103	;'g'
  1238  007A32  20                 	db	32
  1239  007A33  47                 	db	71	;'G'
  1240  007A34  50                 	db	80	;'P'
  1241  007A35  49                 	db	73	;'I'
  1242  007A36  4F                 	db	79	;'O'
  1243  007A37  31                 	db	49	;'1'
  1244  007A38  31                 	db	49	;'1'
  1245  007A39  20                 	db	32
  1246  007A3A  30                 	db	48	;'0'
  1247  007A3B  0D                 	db	13
  1248  007A3C  0A                 	db	10
  1249  007A3D  00                 	db	0
  1250  007A3E                     STR_254:
  1251  007A3E  73                 	db	115	;'s'
  1252  007A3F  79                 	db	121	;'y'
  1253  007A40  73                 	db	115	;'s'
  1254  007A41  20                 	db	32
  1255  007A42  73                 	db	115	;'s'
  1256  007A43  65                 	db	101	;'e'
  1257  007A44  74                 	db	116	;'t'
  1258  007A45  20                 	db	32
  1259  007A46  70                 	db	112	;'p'
  1260  007A47  69                 	db	105	;'i'
  1261  007A48  6E                 	db	110	;'n'
  1262  007A49  64                 	db	100	;'d'
  1263  007A4A  69                 	db	105	;'i'
  1264  007A4B  67                 	db	103	;'g'
  1265  007A4C  20                 	db	32
  1266  007A4D  47                 	db	71	;'G'
  1267  007A4E  50                 	db	80	;'P'
  1268  007A4F  49                 	db	73	;'I'
  1269  007A50  4F                 	db	79	;'O'
  1270  007A51  31                 	db	49	;'1'
  1271  007A52  30                 	db	48	;'0'
  1272  007A53  20                 	db	32
  1273  007A54  31                 	db	49	;'1'
  1274  007A55  0D                 	db	13
  1275  007A56  0A                 	db	10
  1276  007A57  00                 	db	0
  1277  007A58                     STR_255:
  1278  007A58  73                 	db	115	;'s'
  1279  007A59  79                 	db	121	;'y'
  1280  007A5A  73                 	db	115	;'s'
  1281  007A5B  20                 	db	32
  1282  007A5C  73                 	db	115	;'s'
  1283  007A5D  65                 	db	101	;'e'
  1284  007A5E  74                 	db	116	;'t'
  1285  007A5F  20                 	db	32
  1286  007A60  70                 	db	112	;'p'
  1287  007A61  69                 	db	105	;'i'
  1288  007A62  6E                 	db	110	;'n'
  1289  007A63  64                 	db	100	;'d'
  1290  007A64  69                 	db	105	;'i'
  1291  007A65  67                 	db	103	;'g'
  1292  007A66  20                 	db	32
  1293  007A67  47                 	db	71	;'G'
  1294  007A68  50                 	db	80	;'P'
  1295  007A69  49                 	db	73	;'I'
  1296  007A6A  4F                 	db	79	;'O'
  1297  007A6B  31                 	db	49	;'1'
  1298  007A6C  31                 	db	49	;'1'
  1299  007A6D  20                 	db	32
  1300  007A6E  31                 	db	49	;'1'
  1301  007A6F  0D                 	db	13
  1302  007A70  0A                 	db	10
  1303  007A71  00                 	db	0
  1304  007A72                     STR_22:
  1305  007A72  73                 	db	115	;'s'
  1306  007A73  79                 	db	121	;'y'
  1307  007A74  73                 	db	115	;'s'
  1308  007A75  20                 	db	32
  1309  007A76  73                 	db	115	;'s'
  1310  007A77  6C                 	db	108	;'l'
  1311  007A78  65                 	db	101	;'e'
  1312  007A79  65                 	db	101	;'e'
  1313  007A7A  70                 	db	112	;'p'
  1314  007A7B  20                 	db	32
  1315  007A7C  39                 	db	57	;'9'
  1316  007A7D  39                 	db	57	;'9'
  1317  007A7E  39                 	db	57	;'9'
  1318  007A7F  39                 	db	57	;'9'
  1319  007A80  39                 	db	57	;'9'
  1320  007A81  39                 	db	57	;'9'
  1321  007A82  39                 	db	57	;'9'
  1322  007A83  39                 	db	57	;'9'
  1323  007A84  39                 	db	57	;'9'
  1324  007A85  00                 	db	0
  1325  007A86                     STR_205:
  1326  007A86  28                 	db	40
  1327  007A87  55                 	db	85	;'U'
  1328  007A88  4E                 	db	78	;'N'
  1329  007A89  43                 	db	67	;'C'
  1330  007A8A  4E                 	db	78	;'N'
  1331  007A8B  46                 	db	70	;'F'
  1332  007A8C  29                 	db	41
  1333  007A8D  20                 	db	32
  1334  007A8E  20                 	db	32
  1335  007A8F  20                 	db	32
  1336  007A90  20                 	db	32
  1337  007A91  28                 	db	40
  1338  007A92  43                 	db	67	;'C'
  1339  007A93  4E                 	db	78	;'N'
  1340  007A94  46                 	db	70	;'F'
  1341  007A95  29                 	db	41
  1342  007A96  20                 	db	32
  1343  007A97  00                 	db	0
  1344  007A98                     STR_218:
  1345  007A98  4D                 	db	77	;'M'
  1346  007A99  61                 	db	97	;'a'
  1347  007A9A  63                 	db	99	;'c'
  1348  007A9B  20                 	db	32
  1349  007A9C  45                 	db	69	;'E'
  1350  007A9D  72                 	db	114	;'r'
  1351  007A9E  72                 	db	114	;'r'
  1352  007A9F  6F                 	db	111	;'o'
  1353  007AA0  72                 	db	114	;'r'
  1354  007AA1  20                 	db	32
  1355  007AA2  4F                 	db	79	;'O'
  1356  007AA3  63                 	db	99	;'c'
  1357  007AA4  63                 	db	99	;'c'
  1358  007AA5  75                 	db	117	;'u'
  1359  007AA6  72                 	db	114	;'r'
  1360  007AA7  65                 	db	101	;'e'
  1361  007AA8  64                 	db	100	;'d'
  1362  007AA9  00                 	db	0
  1363  007AAA                     STR_214:
  1364  007AAA  20                 	db	32
  1365  007AAB  20                 	db	32
  1366  007AAC  20                 	db	32
  1367  007AAD  20                 	db	32
  1368  007AAE  52                 	db	82	;'R'
  1369  007AAF  65                 	db	101	;'e'
  1370  007AB0  63                 	db	99	;'c'
  1371  007AB1  65                 	db	101	;'e'
  1372  007AB2  69                 	db	105	;'i'
  1373  007AB3  76                 	db	118	;'v'
  1374  007AB4  65                 	db	101	;'e'
  1375  007AB5  64                 	db	100	;'d'
  1376  007AB6  20                 	db	32
  1377  007AB7  20                 	db	32
  1378  007AB8  20                 	db	32
  1379  007AB9  20                 	db	32
  1380  007ABA  00                 	db	0
  1381  007ABB                     STR_84:
  1382  007ABB  20                 	db	32
  1383  007ABC  20                 	db	32
  1384  007ABD  20                 	db	32
  1385  007ABE  44                 	db	68	;'D'
  1386  007ABF  61                 	db	97	;'a'
  1387  007AC0  74                 	db	116	;'t'
  1388  007AC1  61                 	db	97	;'a'
  1389  007AC2  20                 	db	32
  1390  007AC3  52                 	db	82	;'R'
  1391  007AC4  61                 	db	97	;'a'
  1392  007AC5  74                 	db	116	;'t'
  1393  007AC6  65                 	db	101	;'e'
  1394  007AC7  20                 	db	32
  1395  007AC8  20                 	db	32
  1396  007AC9  20                 	db	32
  1397  007ACA  20                 	db	32
  1398  007ACB  00                 	db	0
  1399  007ACC                     STR_83:
  1400  007ACC  20                 	db	32
  1401  007ACD  20                 	db	32
  1402  007ACE  53                 	db	83	;'S'
  1403  007ACF  65                 	db	101	;'e'
  1404  007AD0  6C                 	db	108	;'l'
  1405  007AD1  65                 	db	101	;'e'
  1406  007AD2  63                 	db	99	;'c'
  1407  007AD3  74                 	db	116	;'t'
  1408  007AD4  20                 	db	32
  1409  007AD5  4C                 	db	76	;'L'
  1410  007AD6  6F                 	db	111	;'o'
  1411  007AD7  52                 	db	82	;'R'
  1412  007AD8  61                 	db	97	;'a'
  1413  007AD9  20                 	db	32
  1414  007ADA  20                 	db	32
  1415  007ADB  20                 	db	32
  1416  007ADC  00                 	db	0
  1417  007ADD                     STR_201:
  1418  007ADD  20                 	db	32
  1419  007ADE  20                 	db	32
  1420  007ADF  4C                 	db	76	;'L'
  1421  007AE0  61                 	db	97	;'a'
  1422  007AE1  73                 	db	115	;'s'
  1423  007AE2  74                 	db	116	;'t'
  1424  007AE3  20                 	db	32
  1425  007AE4  4D                 	db	77	;'M'
  1426  007AE5  65                 	db	101	;'e'
  1427  007AE6  73                 	db	115	;'s'
  1428  007AE7  73                 	db	115	;'s'
  1429  007AE8  61                 	db	97	;'a'
  1430  007AE9  67                 	db	103	;'g'
  1431  007AEA  65                 	db	101	;'e'
  1432  007AEB  20                 	db	32
  1433  007AEC  20                 	db	32
  1434  007AED  00                 	db	0
  1435  007AEE                     STR_200:
  1436  007AEE  20                 	db	32
  1437  007AEF  56                 	db	86	;'V'
  1438  007AF0  69                 	db	105	;'i'
  1439  007AF1  65                 	db	101	;'e'
  1440  007AF2  77                 	db	119	;'w'
  1441  007AF3  20                 	db	32
  1442  007AF4  44                 	db	68	;'D'
  1443  007AF5  6F                 	db	111	;'o'
  1444  007AF6  77                 	db	119	;'w'
  1445  007AF7  6E                 	db	110	;'n'
  1446  007AF8  6C                 	db	108	;'l'
  1447  007AF9  69                 	db	105	;'i'
  1448  007AFA  6E                 	db	110	;'n'
  1449  007AFB  6B                 	db	107	;'k'
  1450  007AFC  20                 	db	32
  1451  007AFD  20                 	db	32
  1452  007AFE  00                 	db	0
  1453  007AFF                     STR_93:
  1454  007AFF  20                 	db	32
  1455  007B00  20                 	db	32
  1456  007B01  49                 	db	73	;'I'
  1457  007B02  73                 	db	115	;'s'
  1458  007B03  73                 	db	115	;'s'
  1459  007B04  75                 	db	117	;'u'
  1460  007B05  65                 	db	101	;'e'
  1461  007B06  20                 	db	32
  1462  007B07  55                 	db	85	;'U'
  1463  007B08  70                 	db	112	;'p'
  1464  007B09  6C                 	db	108	;'l'
  1465  007B0A  69                 	db	105	;'i'
  1466  007B0B  6E                 	db	110	;'n'
  1467  007B0C  6B                 	db	107	;'k'
  1468  007B0D  20                 	db	32
  1469  007B0E  20                 	db	32
  1470  007B0F  00                 	db	0
  1471  007B10                     STR_28:
  1472  007B10  20                 	db	32
  1473  007B11  28                 	db	40
  1474  007B12  53                 	db	83	;'S'
  1475  007B13  31                 	db	49	;'1'
  1476  007B14  29                 	db	41
  1477  007B15  20                 	db	32
  1478  007B16  20                 	db	32
  1479  007B17  20                 	db	32
  1480  007B18  20                 	db	32
  1481  007B19  20                 	db	32
  1482  007B1A  20                 	db	32
  1483  007B1B  28                 	db	40
  1484  007B1C  53                 	db	83	;'S'
  1485  007B1D  32                 	db	50	;'2'
  1486  007B1E  29                 	db	41
  1487  007B1F  20                 	db	32
  1488  007B20  00                 	db	0
  1489  007B21                     STR_213:
  1490  007B21  53                 	db	83	;'S'
  1491  007B22  65                 	db	101	;'e'
  1492  007B23  72                 	db	114	;'r'
  1493  007B24  76                 	db	118	;'v'
  1494  007B25  65                 	db	101	;'e'
  1495  007B26  72                 	db	114	;'r'
  1496  007B27  20                 	db	32
  1497  007B28  52                 	db	82	;'R'
  1498  007B29  65                 	db	101	;'e'
  1499  007B2A  73                 	db	115	;'s'
  1500  007B2B  70                 	db	112	;'p'
  1501  007B2C  6F                 	db	111	;'o'
  1502  007B2D  6E                 	db	110	;'n'
  1503  007B2E  73                 	db	115	;'s'
  1504  007B2F  65                 	db	101	;'e'
  1505  007B30  20                 	db	32
  1506  007B31  00                 	db	0
  1507  007B32                     STR_94:
  1508  007B32  20                 	db	32
  1509  007B33  4C                 	db	76	;'L'
  1510  007B34  6F                 	db	111	;'o'
  1511  007B35  52                 	db	82	;'R'
  1512  007B36  61                 	db	97	;'a'
  1513  007B37  57                 	db	87	;'W'
  1514  007B38  41                 	db	65	;'A'
  1515  007B39  4E                 	db	78	;'N'
  1516  007B3A  20                 	db	32
  1517  007B3B  50                 	db	80	;'P'
  1518  007B3C  61                 	db	97	;'a'
  1519  007B3D  63                 	db	99	;'c'
  1520  007B3E  6B                 	db	107	;'k'
  1521  007B3F  65                 	db	101	;'e'
  1522  007B40  74                 	db	116	;'t'
  1523  007B41  20                 	db	32
  1524  007B42  00                 	db	0
  1525  007B43                     STR_224:
  1526  007B43  20                 	db	32
  1527  007B44  54                 	db	84	;'T'
  1528  007B45  78                 	db	120	;'x'
  1529  007B46  20                 	db	32
  1530  007B47  53                 	db	83	;'S'
  1531  007B48  6C                 	db	108	;'l'
  1532  007B49  65                 	db	101	;'e'
  1533  007B4A  65                 	db	101	;'e'
  1534  007B4B  70                 	db	112	;'p'
  1535  007B4C  20                 	db	32
  1536  007B4D  45                 	db	69	;'E'
  1537  007B4E  76                 	db	118	;'v'
  1538  007B4F  65                 	db	101	;'e'
  1539  007B50  6E                 	db	110	;'n'
  1540  007B51  74                 	db	116	;'t'
  1541  007B52  20                 	db	32
  1542  007B53  00                 	db	0
  1543  007B54                     STR_25:
  1544  007B54  52                 	db	82	;'R'
  1545  007B55  65                 	db	101	;'e'
  1546  007B56  52                 	db	82	;'R'
  1547  007B57  75                 	db	117	;'u'
  1548  007B58  6E                 	db	110	;'n'
  1549  007B59  20                 	db	32
  1550  007B5A  50                 	db	80	;'P'
  1551  007B5B  77                 	db	119	;'w'
  1552  007B5C  72                 	db	114	;'r'
  1553  007B5D  54                 	db	84	;'T'
  1554  007B5E  73                 	db	115	;'s'
  1555  007B5F  74                 	db	116	;'t'
  1556  007B60  3C                 	db	60	;'<'
  1557  007B61  53                 	db	83	;'S'
  1558  007B62  32                 	db	50	;'2'
  1559  007B63  3E                 	db	62	;'>'
  1560  007B64  00                 	db	0
  1561  007B65                     STR_72:
  1562  007B65  49                 	db	73	;'I'
  1563  007B66  73                 	db	115	;'s'
  1564  007B67  73                 	db	115	;'s'
  1565  007B68  75                 	db	117	;'u'
  1566  007B69  65                 	db	101	;'e'
  1567  007B6A  20                 	db	32
  1568  007B6B  50                 	db	80	;'P'
  1569  007B6C  65                 	db	101	;'e'
  1570  007B6D  72                 	db	114	;'r'
  1571  007B6E  6F                 	db	111	;'o'
  1572  007B6F  64                 	db	100	;'d'
  1573  007B70  69                 	db	105	;'i'
  1574  007B71  63                 	db	99	;'c'
  1575  007B72  20                 	db	32
  1576  007B73  54                 	db	84	;'T'
  1577  007B74  58                 	db	88	;'X'
  1578  007B75  00                 	db	0
  1579  007B76                     STR_216:
  1580  007B76  44                 	db	68	;'D'
  1581  007B77  61                 	db	97	;'a'
  1582  007B78  74                 	db	116	;'t'
  1583  007B79  61                 	db	97	;'a'
  1584  007B7A  20                 	db	32
  1585  007B7B  54                 	db	84	;'T'
  1586  007B7C  72                 	db	114	;'r'
  1587  007B7D  61                 	db	97	;'a'
  1588  007B7E  6E                 	db	110	;'n'
  1589  007B7F  73                 	db	115	;'s'
  1590  007B80  6D                 	db	109	;'m'
  1591  007B81  69                 	db	105	;'i'
  1592  007B82  74                 	db	116	;'t'
  1593  007B83  74                 	db	116	;'t'
  1594  007B84  65                 	db	101	;'e'
  1595  007B85  64                 	db	100	;'d'
  1596  007B86  00                 	db	0
  1597  007B87                     STR_235:
  1598  007B87  45                 	db	69	;'E'
  1599  007B88  6E                 	db	110	;'n'
  1600  007B89  74                 	db	116	;'t'
  1601  007B8A  65                 	db	101	;'e'
  1602  007B8B  72                 	db	114	;'r'
  1603  007B8C  20                 	db	32
  1604  007B8D  53                 	db	83	;'S'
  1605  007B8E  6C                 	db	108	;'l'
  1606  007B8F  65                 	db	101	;'e'
  1607  007B90  65                 	db	101	;'e'
  1608  007B91  70                 	db	112	;'p'
  1609  007B92  20                 	db	32
  1610  007B93  4D                 	db	77	;'M'
  1611  007B94  6F                 	db	111	;'o'
  1612  007B95  64                 	db	100	;'d'
  1613  007B96  65                 	db	101	;'e'
  1614  007B97  00                 	db	0
  1615  007B98                     STR_203:
  1616  007B98  55                 	db	85	;'U'
  1617  007B99  70                 	db	112	;'p'
  1618  007B9A  6C                 	db	108	;'l'
  1619  007B9B  69                 	db	105	;'i'
  1620  007B9C  6E                 	db	110	;'n'
  1621  007B9D  6B                 	db	107	;'k'
  1622  007B9E  20                 	db	32
  1623  007B9F  50                 	db	80	;'P'
  1624  007BA0  63                 	db	99	;'c'
  1625  007BA1  6B                 	db	107	;'k'
  1626  007BA2  74                 	db	116	;'t'
  1627  007BA3  20                 	db	32
  1628  007BA4  54                 	db	84	;'T'
  1629  007BA5  79                 	db	121	;'y'
  1630  007BA6  70                 	db	112	;'p'
  1631  007BA7  65                 	db	101	;'e'
  1632  007BA8  00                 	db	0
  1633  007BA9                     STR_26:
  1634  007BA9  4D                 	db	77	;'M'
  1635  007BAA  6F                 	db	111	;'o'
  1636  007BAB  62                 	db	98	;'b'
  1637  007BAC  69                 	db	105	;'i'
  1638  007BAD  6C                 	db	108	;'l'
  1639  007BAE  65                 	db	101	;'e'
  1640  007BAF  20                 	db	32
  1641  007BB0  4D                 	db	77	;'M'
  1642  007BB1  6F                 	db	111	;'o'
  1643  007BB2  74                 	db	116	;'t'
  1644  007BB3  65                 	db	101	;'e'
  1645  007BB4  20                 	db	32
  1646  007BB5  2D                 	db	45
  1647  007BB6  41                 	db	65	;'A'
  1648  007BB7  70                 	db	112	;'p'
  1649  007BB8  70                 	db	112	;'p'
  1650  007BB9  00                 	db	0
  1651  007BBA                     STR_27:
  1652  007BBA  4E                 	db	78	;'N'
  1653  007BBB  61                 	db	97	;'a'
  1654  007BBC  76                 	db	118	;'v'
  1655  007BBD  69                 	db	105	;'i'
  1656  007BBE  67                 	db	103	;'g'
  1657  007BBF  61                 	db	97	;'a'
  1658  007BC0  74                 	db	116	;'t'
  1659  007BC1  65                 	db	101	;'e'
  1660  007BC2  20                 	db	32
  1661  007BC3  20                 	db	32
  1662  007BC4  53                 	db	83	;'S'
  1663  007BC5  65                 	db	101	;'e'
  1664  007BC6  6C                 	db	108	;'l'
  1665  007BC7  65                 	db	101	;'e'
  1666  007BC8  63                 	db	99	;'c'
  1667  007BC9  74                 	db	116	;'t'
  1668  007BCA  00                 	db	0
  1669  007BCB                     STR_228:
  1670  007BCB  44                 	db	68	;'D'
  1671  007BCC  6F                 	db	111	;'o'
  1672  007BCD  77                 	db	119	;'w'
  1673  007BCE  6E                 	db	110	;'n'
  1674  007BCF  6C                 	db	108	;'l'
  1675  007BD0  69                 	db	105	;'i'
  1676  007BD1  6E                 	db	110	;'n'
  1677  007BD2  6B                 	db	107	;'k'
  1678  007BD3  20                 	db	32
  1679  007BD4  44                 	db	68	;'D'
  1680  007BD5  69                 	db	105	;'i'
  1681  007BD6  73                 	db	115	;'s'
  1682  007BD7  70                 	db	112	;'p'
  1683  007BD8  6C                 	db	108	;'l'
  1684  007BD9  61                 	db	97	;'a'
  1685  007BDA  79                 	db	121	;'y'
  1686  007BDB  00                 	db	0
  1687  007BDC                     STR_81:
  1688  007BDC  20                 	db	32
  1689  007BDD  20                 	db	32
  1690  007BDE  20                 	db	32
  1691  007BDF  20                 	db	32
  1692  007BE0  44                 	db	68	;'D'
  1693  007BE1  69                 	db	105	;'i'
  1694  007BE2  73                 	db	115	;'s'
  1695  007BE3  70                 	db	112	;'p'
  1696  007BE4  6C                 	db	108	;'l'
  1697  007BE5  61                 	db	97	;'a'
  1698  007BE6  79                 	db	121	;'y'
  1699  007BE7  20                 	db	32
  1700  007BE8  20                 	db	32
  1701  007BE9  20                 	db	32
  1702  007BEA  20                 	db	32
  1703  007BEB  00                 	db	0
  1704  007BEC                     STR_80:
  1705  007BEC  20                 	db	32
  1706  007BED  20                 	db	32
  1707  007BEE  53                 	db	83	;'S'
  1708  007BEF  65                 	db	101	;'e'
  1709  007BF0  6E                 	db	110	;'n'
  1710  007BF1  73                 	db	115	;'s'
  1711  007BF2  6F                 	db	111	;'o'
  1712  007BF3  72                 	db	114	;'r'
  1713  007BF4  20                 	db	32
  1714  007BF5  44                 	db	68	;'D'
  1715  007BF6  61                 	db	97	;'a'
  1716  007BF7  74                 	db	116	;'t'
  1717  007BF8  61                 	db	97	;'a'
  1718  007BF9  20                 	db	32
  1719  007BFA  20                 	db	32
  1720  007BFB  00                 	db	0
  1721  007BFC                     STR_75:
  1722  007BFC  28                 	db	40
  1723  007BFD  4E                 	db	78	;'N'
  1724  007BFE  41                 	db	65	;'A'
  1725  007BFF  56                 	db	86	;'V'
  1726  007C00  29                 	db	41
  1727  007C01  20                 	db	32
  1728  007C02  20                 	db	32
  1729  007C03  20                 	db	32
  1730  007C04  20                 	db	32
  1731  007C05  28                 	db	40
  1732  007C06  53                 	db	83	;'S'
  1733  007C07  45                 	db	69	;'E'
  1734  007C08  4C                 	db	76	;'L'
  1735  007C09  29                 	db	41
  1736  007C0A  20                 	db	32
  1737  007C0B  00                 	db	0
  1738  007C0C                     STR_236:
  1739  007C0C  28                 	db	40
  1740  007C0D  4E                 	db	78	;'N'
  1741  007C0E  41                 	db	65	;'A'
  1742  007C0F  56                 	db	86	;'V'
  1743  007C10  29                 	db	41
  1744  007C11  20                 	db	32
  1745  007C12  20                 	db	32
  1746  007C13  20                 	db	32
  1747  007C14  20                 	db	32
  1748  007C15  28                 	db	40
  1749  007C16  53                 	db	83	;'S'
  1750  007C17  4C                 	db	76	;'L'
  1751  007C18  50                 	db	80	;'P'
  1752  007C19  29                 	db	41
  1753  007C1A  20                 	db	32
  1754  007C1B  00                 	db	0
  1755  007C1C                     STR_243:
  1756  007C1C  6D                 	db	109	;'m'
  1757  007C1D  61                 	db	97	;'a'
  1758  007C1E  63                 	db	99	;'c'
  1759  007C1F  20                 	db	32
  1760  007C20  73                 	db	115	;'s'
  1761  007C21  65                 	db	101	;'e'
  1762  007C22  74                 	db	116	;'t'
  1763  007C23  20                 	db	32
  1764  007C24  61                 	db	97	;'a'
  1765  007C25  64                 	db	100	;'d'
  1766  007C26  72                 	db	114	;'r'
  1767  007C27  20                 	db	32
  1768  007C28  6F                 	db	111	;'o'
  1769  007C29  66                 	db	102	;'f'
  1770  007C2A  66                 	db	102	;'f'
  1771  007C2B  00                 	db	0
  1772  007C2C                     STR_220:
  1773  007C2C  4E                 	db	78	;'N'
  1774  007C2D  6F                 	db	111	;'o'
  1775  007C2E  20                 	db	32
  1776  007C2F  46                 	db	70	;'F'
  1777  007C30  72                 	db	114	;'r'
  1778  007C31  65                 	db	101	;'e'
  1779  007C32  65                 	db	101	;'e'
  1780  007C33  20                 	db	32
  1781  007C34  43                 	db	67	;'C'
  1782  007C35  68                 	db	104	;'h'
  1783  007C36  61                 	db	97	;'a'
  1784  007C37  6E                 	db	110	;'n'
  1785  007C38  6E                 	db	110	;'n'
  1786  007C39  65                 	db	101	;'e'
  1787  007C3A  6C                 	db	108	;'l'
  1788  007C3B  00                 	db	0
  1789  007C3C                     STR_7:
  1790  007C3C  42                 	db	66	;'B'
  1791  007C3D  75                 	db	117	;'u'
  1792  007C3E  69                 	db	105	;'i'
  1793  007C3F  6C                 	db	108	;'l'
  1794  007C40  64                 	db	100	;'d'
  1795  007C41  20                 	db	32
  1796  007C42  44                 	db	68	;'D'
  1797  007C43  61                 	db	97	;'a'
  1798  007C44  74                 	db	116	;'t'
  1799  007C45  65                 	db	101	;'e'
  1800  007C46  2F                 	db	47
  1801  007C47  54                 	db	84	;'T'
  1802  007C48  69                 	db	105	;'i'
  1803  007C49  6D                 	db	109	;'m'
  1804  007C4A  65                 	db	101	;'e'
  1805  007C4B  00                 	db	0
  1806  007C4C                     STR_163:
  1807  007C4C  45                 	db	69	;'E'
  1808  007C4D  78                 	db	120	;'x'
  1809  007C4E  69                 	db	105	;'i'
  1810  007C4F  74                 	db	116	;'t'
  1811  007C50  20                 	db	32
  1812  007C51  4D                 	db	77	;'M'
  1813  007C52  65                 	db	101	;'e'
  1814  007C53  6E                 	db	110	;'n'
  1815  007C54  75                 	db	117	;'u'
  1816  007C55  20                 	db	32
  1817  007C56  20                 	db	32
  1818  007C57  20                 	db	32
  1819  007C58  20                 	db	32
  1820  007C59  20                 	db	32
  1821  007C5A  00                 	db	0
  1822  007C5B                     STR_225:
  1823  007C5B  20                 	db	32
  1824  007C5C  20                 	db	32
  1825  007C5D  20                 	db	32
  1826  007C5E  20                 	db	32
  1827  007C5F  45                 	db	69	;'E'
  1828  007C60  6E                 	db	110	;'n'
  1829  007C61  61                 	db	97	;'a'
  1830  007C62  62                 	db	98	;'b'
  1831  007C63  6C                 	db	108	;'l'
  1832  007C64  65                 	db	101	;'e'
  1833  007C65  64                 	db	100	;'d'
  1834  007C66  20                 	db	32
  1835  007C67  20                 	db	32
  1836  007C68  20                 	db	32
  1837  007C69  00                 	db	0
  1838  007C6A                     STR_226:
  1839  007C6A  20                 	db	32
  1840  007C6B  20                 	db	32
  1841  007C6C  20                 	db	32
  1842  007C6D  20                 	db	32
  1843  007C6E  44                 	db	68	;'D'
  1844  007C6F  69                 	db	105	;'i'
  1845  007C70  73                 	db	115	;'s'
  1846  007C71  61                 	db	97	;'a'
  1847  007C72  62                 	db	98	;'b'
  1848  007C73  6C                 	db	108	;'l'
  1849  007C74  65                 	db	101	;'e'
  1850  007C75  64                 	db	100	;'d'
  1851  007C76  20                 	db	32
  1852  007C77  20                 	db	32
  1853  007C78  00                 	db	0
  1854  007C79                     STR_97:
  1855  007C79  44                 	db	68	;'D'
  1856  007C7A  61                 	db	97	;'a'
  1857  007C7B  74                 	db	116	;'t'
  1858  007C7C  61                 	db	97	;'a'
  1859  007C7D  20                 	db	32
  1860  007C7E  52                 	db	82	;'R'
  1861  007C7F  61                 	db	97	;'a'
  1862  007C80  74                 	db	116	;'t'
  1863  007C81  65                 	db	101	;'e'
  1864  007C82  3A                 	db	58	;':'
  1865  007C83  20                 	db	32
  1866  007C84  20                 	db	32
  1867  007C85  20                 	db	32
  1868  007C86  30                 	db	48	;'0'
  1869  007C87  00                 	db	0
  1870  007C88                     STR_98:
  1871  007C88  44                 	db	68	;'D'
  1872  007C89  61                 	db	97	;'a'
  1873  007C8A  74                 	db	116	;'t'
  1874  007C8B  61                 	db	97	;'a'
  1875  007C8C  20                 	db	32
  1876  007C8D  52                 	db	82	;'R'
  1877  007C8E  61                 	db	97	;'a'
  1878  007C8F  74                 	db	116	;'t'
  1879  007C90  65                 	db	101	;'e'
  1880  007C91  3A                 	db	58	;':'
  1881  007C92  20                 	db	32
  1882  007C93  20                 	db	32
  1883  007C94  20                 	db	32
  1884  007C95  31                 	db	49	;'1'
  1885  007C96  00                 	db	0
  1886  007C97                     STR_99:
  1887  007C97  44                 	db	68	;'D'
  1888  007C98  61                 	db	97	;'a'
  1889  007C99  74                 	db	116	;'t'
  1890  007C9A  61                 	db	97	;'a'
  1891  007C9B  20                 	db	32
  1892  007C9C  52                 	db	82	;'R'
  1893  007C9D  61                 	db	97	;'a'
  1894  007C9E  74                 	db	116	;'t'
  1895  007C9F  65                 	db	101	;'e'
  1896  007CA0  3A                 	db	58	;':'
  1897  007CA1  20                 	db	32
  1898  007CA2  20                 	db	32
  1899  007CA3  20                 	db	32
  1900  007CA4  32                 	db	50	;'2'
  1901  007CA5  00                 	db	0
  1902  007CA6                     STR_100:
  1903  007CA6  44                 	db	68	;'D'
  1904  007CA7  61                 	db	97	;'a'
  1905  007CA8  74                 	db	116	;'t'
  1906  007CA9  61                 	db	97	;'a'
  1907  007CAA  20                 	db	32
  1908  007CAB  52                 	db	82	;'R'
  1909  007CAC  61                 	db	97	;'a'
  1910  007CAD  74                 	db	116	;'t'
  1911  007CAE  65                 	db	101	;'e'
  1912  007CAF  3A                 	db	58	;':'
  1913  007CB0  20                 	db	32
  1914  007CB1  20                 	db	32
  1915  007CB2  20                 	db	32
  1916  007CB3  33                 	db	51	;'3'
  1917  007CB4  00                 	db	0
  1918  007CB5                     STR_118:
  1919  007CB5  44                 	db	68	;'D'
  1920  007CB6  61                 	db	97	;'a'
  1921  007CB7  74                 	db	116	;'t'
  1922  007CB8  61                 	db	97	;'a'
  1923  007CB9  20                 	db	32
  1924  007CBA  52                 	db	82	;'R'
  1925  007CBB  61                 	db	97	;'a'
  1926  007CBC  74                 	db	116	;'t'
  1927  007CBD  65                 	db	101	;'e'
  1928  007CBE  3A                 	db	58	;':'
  1929  007CBF  20                 	db	32
  1930  007CC0  20                 	db	32
  1931  007CC1  20                 	db	32
  1932  007CC2  34                 	db	52	;'4'
  1933  007CC3  00                 	db	0
  1934  007CC4                     STR_127:
  1935  007CC4  44                 	db	68	;'D'
  1936  007CC5  61                 	db	97	;'a'
  1937  007CC6  74                 	db	116	;'t'
  1938  007CC7  61                 	db	97	;'a'
  1939  007CC8  20                 	db	32
  1940  007CC9  52                 	db	82	;'R'
  1941  007CCA  61                 	db	97	;'a'
  1942  007CCB  74                 	db	116	;'t'
  1943  007CCC  65                 	db	101	;'e'
  1944  007CCD  3A                 	db	58	;':'
  1945  007CCE  20                 	db	32
  1946  007CCF  20                 	db	32
  1947  007CD0  20                 	db	32
  1948  007CD1  35                 	db	53	;'5'
  1949  007CD2  00                 	db	0
  1950  007CD3                     STR_136:
  1951  007CD3  44                 	db	68	;'D'
  1952  007CD4  61                 	db	97	;'a'
  1953  007CD5  74                 	db	116	;'t'
  1954  007CD6  61                 	db	97	;'a'
  1955  007CD7  20                 	db	32
  1956  007CD8  52                 	db	82	;'R'
  1957  007CD9  61                 	db	97	;'a'
  1958  007CDA  74                 	db	116	;'t'
  1959  007CDB  65                 	db	101	;'e'
  1960  007CDC  3A                 	db	58	;':'
  1961  007CDD  20                 	db	32
  1962  007CDE  20                 	db	32
  1963  007CDF  20                 	db	32
  1964  007CE0  36                 	db	54	;'6'
  1965  007CE1  00                 	db	0
  1966  007CE2                     STR_145:
  1967  007CE2  44                 	db	68	;'D'
  1968  007CE3  61                 	db	97	;'a'
  1969  007CE4  74                 	db	116	;'t'
  1970  007CE5  61                 	db	97	;'a'
  1971  007CE6  20                 	db	32
  1972  007CE7  52                 	db	82	;'R'
  1973  007CE8  61                 	db	97	;'a'
  1974  007CE9  74                 	db	116	;'t'
  1975  007CEA  65                 	db	101	;'e'
  1976  007CEB  3A                 	db	58	;':'
  1977  007CEC  20                 	db	32
  1978  007CED  20                 	db	32
  1979  007CEE  20                 	db	32
  1980  007CEF  37                 	db	55	;'7'
  1981  007CF0  00                 	db	0
  1982  007CF1                     STR_154:
  1983  007CF1  41                 	db	65	;'A'
  1984  007CF2  75                 	db	117	;'u'
  1985  007CF3  74                 	db	116	;'t'
  1986  007CF4  6F                 	db	111	;'o'
  1987  007CF5  20                 	db	32
  1988  007CF6  44                 	db	68	;'D'
  1989  007CF7  61                 	db	97	;'a'
  1990  007CF8  74                 	db	116	;'t'
  1991  007CF9  61                 	db	97	;'a'
  1992  007CFA  20                 	db	32
  1993  007CFB  52                 	db	82	;'R'
  1994  007CFC  61                 	db	97	;'a'
  1995  007CFD  74                 	db	116	;'t'
  1996  007CFE  65                 	db	101	;'e'
  1997  007CFF  00                 	db	0
  1998  007D00                     STR_242:
  1999  007D00  6D                 	db	109	;'m'
  2000  007D01  61                 	db	97	;'a'
  2001  007D02  63                 	db	99	;'c'
  2002  007D03  20                 	db	32
  2003  007D04  73                 	db	115	;'s'
  2004  007D05  65                 	db	101	;'e'
  2005  007D06  74                 	db	116	;'t'
  2006  007D07  20                 	db	32
  2007  007D08  61                 	db	97	;'a'
  2008  007D09  64                 	db	100	;'d'
  2009  007D0A  72                 	db	114	;'r'
  2010  007D0B  20                 	db	32
  2011  007D0C  6F                 	db	111	;'o'
  2012  007D0D  6E                 	db	110	;'n'
  2013  007D0E  00                 	db	0
  2014  007D0F                     STR_3:
  2015  007D0F  20                 	db	32
  2016  007D10  20                 	db	32
  2017  007D11  20                 	db	32
  2018  007D12  52                 	db	82	;'R'
  2019  007D13  43                 	db	67	;'C'
  2020  007D14  33                 	db	51	;'3'
  2021  007D15  20                 	db	32
  2022  007D16  43                 	db	67	;'C'
  2023  007D17  6F                 	db	111	;'o'
  2024  007D18  64                 	db	100	;'d'
  2025  007D19  65                 	db	101	;'e'
  2026  007D1A  20                 	db	32
  2027  007D1B  20                 	db	32
  2028  007D1C  20                 	db	32
  2029  007D1D  00                 	db	0
  2030  007D1E                     STR_2:
  2031  007D1E  20                 	db	32
  2032  007D1F  20                 	db	32
  2033  007D20  20                 	db	32
  2034  007D21  4C                 	db	76	;'L'
  2035  007D22  6F                 	db	111	;'o'
  2036  007D23  52                 	db	82	;'R'
  2037  007D24  61                 	db	97	;'a'
  2038  007D25  20                 	db	32
  2039  007D26  44                 	db	68	;'D'
  2040  007D27  65                 	db	101	;'e'
  2041  007D28  6D                 	db	109	;'m'
  2042  007D29  6F                 	db	111	;'o'
  2043  007D2A  20                 	db	32
  2044  007D2B  20                 	db	32
  2045  007D2C  00                 	db	0
  2046  007D2D                     STR_1:
  2047  007D2D  4D                 	db	77	;'M'
  2048  007D2E  69                 	db	105	;'i'
  2049  007D2F  63                 	db	99	;'c'
  2050  007D30  72                 	db	114	;'r'
  2051  007D31  6F                 	db	111	;'o'
  2052  007D32  63                 	db	99	;'c'
  2053  007D33  68                 	db	104	;'h'
  2054  007D34  69                 	db	105	;'i'
  2055  007D35  70                 	db	112	;'p'
  2056  007D36  20                 	db	32
  2057  007D37  4D                 	db	77	;'M'
  2058  007D38  6F                 	db	111	;'o'
  2059  007D39  74                 	db	116	;'t'
  2060  007D3A  65                 	db	101	;'e'
  2061  007D3B  00                 	db	0
  2062  007D3C                     STR_79:
  2063  007D3C  6D                 	db	109	;'m'
  2064  007D3D  61                 	db	97	;'a'
  2065  007D3E  63                 	db	99	;'c'
  2066  007D3F  20                 	db	32
  2067  007D40  74                 	db	116	;'t'
  2068  007D41  78                 	db	120	;'x'
  2069  007D42  20                 	db	32
  2070  007D43  75                 	db	117	;'u'
  2071  007D44  6E                 	db	110	;'n'
  2072  007D45  63                 	db	99	;'c'
  2073  007D46  6E                 	db	110	;'n'
  2074  007D47  66                 	db	102	;'f'
  2075  007D48  20                 	db	32
  2076  007D49  00                 	db	0
  2077  007D4A                     STR_38:
  2078  007D4A  6D                 	db	109	;'m'
  2079  007D4B  61                 	db	97	;'a'
  2080  007D4C  63                 	db	99	;'c'
  2081  007D4D  20                 	db	32
  2082  007D4E  6A                 	db	106	;'j'
  2083  007D4F  6F                 	db	111	;'o'
  2084  007D50  69                 	db	105	;'i'
  2085  007D51  6E                 	db	110	;'n'
  2086  007D52  20                 	db	32
  2087  007D53  6F                 	db	111	;'o'
  2088  007D54  74                 	db	116	;'t'
  2089  007D55  61                 	db	97	;'a'
  2090  007D56  61                 	db	97	;'a'
  2091  007D57  00                 	db	0
  2092  007D58                     STR_50:
  2093  007D58  69                 	db	105	;'i'
  2094  007D59  6E                 	db	110	;'n'
  2095  007D5A  76                 	db	118	;'v'
  2096  007D5B  61                 	db	97	;'a'
  2097  007D5C  6C                 	db	108	;'l'
  2098  007D5D  69                 	db	105	;'i'
  2099  007D5E  64                 	db	100	;'d'
  2100  007D5F  5F                 	db	95	;'_'
  2101  007D60  70                 	db	112	;'p'
  2102  007D61  61                 	db	97	;'a'
  2103  007D62  72                 	db	114	;'r'
  2104  007D63  61                 	db	97	;'a'
  2105  007D64  6D                 	db	109	;'m'
  2106  007D65  00                 	db	0
  2107  007D66                     STR_33:
  2108  007D66  6B                 	db	107	;'k'
  2109  007D67  65                 	db	101	;'e'
  2110  007D68  79                 	db	121	;'y'
  2111  007D69  73                 	db	115	;'s'
  2112  007D6A  5F                 	db	95	;'_'
  2113  007D6B  6E                 	db	110	;'n'
  2114  007D6C  6F                 	db	111	;'o'
  2115  007D6D  74                 	db	116	;'t'
  2116  007D6E  5F                 	db	95	;'_'
  2117  007D6F  69                 	db	105	;'i'
  2118  007D70  6E                 	db	110	;'n'
  2119  007D71  69                 	db	105	;'i'
  2120  007D72  74                 	db	116	;'t'
  2121  007D73  00                 	db	0
  2122  007D74                     STR_204:
  2123  007D74  54                 	db	84	;'T'
  2124  007D75  68                 	db	104	;'h'
  2125  007D76  72                 	db	114	;'r'
  2126  007D77  6F                 	db	111	;'o'
  2127  007D78  75                 	db	117	;'u'
  2128  007D79  20                 	db	32
  2129  007D7A  50                 	db	80	;'P'
  2130  007D7B  6F                 	db	111	;'o'
  2131  007D7C  72                 	db	114	;'r'
  2132  007D7D  74                 	db	116	;'t'
  2133  007D7E  23                 	db	35
  2134  007D7F  20                 	db	32
  2135  007D80  00                 	db	0
  2136  007D81                     STR_74:
  2137  007D81  4C                 	db	76	;'L'
  2138  007D82  3A                 	db	58	;':'
  2139  007D83  20                 	db	32
  2140  007D84  20                 	db	32
  2141  007D85  20                 	db	32
  2142  007D86  20                 	db	32
  2143  007D87  20                 	db	32
  2144  007D88  20                 	db	32
  2145  007D89  20                 	db	32
  2146  007D8A  54                 	db	84	;'T'
  2147  007D8B  3A                 	db	58	;':'
  2148  007D8C  20                 	db	32
  2149  007D8D  00                 	db	0
  2150  007D8E                     STR_244:
  2151  007D8E  6D                 	db	109	;'m'
  2152  007D8F  61                 	db	97	;'a'
  2153  007D90  63                 	db	99	;'c'
  2154  007D91  20                 	db	32
  2155  007D92  73                 	db	115	;'s'
  2156  007D93  65                 	db	101	;'e'
  2157  007D94  74                 	db	116	;'t'
  2158  007D95  20                 	db	32
  2159  007D96  64                 	db	100	;'d'
  2160  007D97  72                 	db	114	;'r'
  2161  007D98  20                 	db	32
  2162  007D99  30                 	db	48	;'0'
  2163  007D9A  00                 	db	0
  2164  007D9B                     STR_245:
  2165  007D9B  6D                 	db	109	;'m'
  2166  007D9C  61                 	db	97	;'a'
  2167  007D9D  63                 	db	99	;'c'
  2168  007D9E  20                 	db	32
  2169  007D9F  73                 	db	115	;'s'
  2170  007DA0  65                 	db	101	;'e'
  2171  007DA1  74                 	db	116	;'t'
  2172  007DA2  20                 	db	32
  2173  007DA3  64                 	db	100	;'d'
  2174  007DA4  72                 	db	114	;'r'
  2175  007DA5  20                 	db	32
  2176  007DA6  31                 	db	49	;'1'
  2177  007DA7  00                 	db	0
  2178  007DA8                     STR_246:
  2179  007DA8  6D                 	db	109	;'m'
  2180  007DA9  61                 	db	97	;'a'
  2181  007DAA  63                 	db	99	;'c'
  2182  007DAB  20                 	db	32
  2183  007DAC  73                 	db	115	;'s'
  2184  007DAD  65                 	db	101	;'e'
  2185  007DAE  74                 	db	116	;'t'
  2186  007DAF  20                 	db	32
  2187  007DB0  64                 	db	100	;'d'
  2188  007DB1  72                 	db	114	;'r'
  2189  007DB2  20                 	db	32
  2190  007DB3  32                 	db	50	;'2'
  2191  007DB4  00                 	db	0
  2192  007DB5                     STR_247:
  2193  007DB5  6D                 	db	109	;'m'
  2194  007DB6  61                 	db	97	;'a'
  2195  007DB7  63                 	db	99	;'c'
  2196  007DB8  20                 	db	32
  2197  007DB9  73                 	db	115	;'s'
  2198  007DBA  65                 	db	101	;'e'
  2199  007DBB  74                 	db	116	;'t'
  2200  007DBC  20                 	db	32
  2201  007DBD  64                 	db	100	;'d'
  2202  007DBE  72                 	db	114	;'r'
  2203  007DBF  20                 	db	32
  2204  007DC0  33                 	db	51	;'3'
  2205  007DC1  00                 	db	0
  2206  007DC2                     STR_248:
  2207  007DC2  6D                 	db	109	;'m'
  2208  007DC3  61                 	db	97	;'a'
  2209  007DC4  63                 	db	99	;'c'
  2210  007DC5  20                 	db	32
  2211  007DC6  73                 	db	115	;'s'
  2212  007DC7  65                 	db	101	;'e'
  2213  007DC8  74                 	db	116	;'t'
  2214  007DC9  20                 	db	32
  2215  007DCA  64                 	db	100	;'d'
  2216  007DCB  72                 	db	114	;'r'
  2217  007DCC  20                 	db	32
  2218  007DCD  34                 	db	52	;'4'
  2219  007DCE  00                 	db	0
  2220  007DCF                     STR_249:
  2221  007DCF  6D                 	db	109	;'m'
  2222  007DD0  61                 	db	97	;'a'
  2223  007DD1  63                 	db	99	;'c'
  2224  007DD2  20                 	db	32
  2225  007DD3  73                 	db	115	;'s'
  2226  007DD4  65                 	db	101	;'e'
  2227  007DD5  74                 	db	116	;'t'
  2228  007DD6  20                 	db	32
  2229  007DD7  64                 	db	100	;'d'
  2230  007DD8  72                 	db	114	;'r'
  2231  007DD9  20                 	db	32
  2232  007DDA  35                 	db	53	;'5'
  2233  007DDB  00                 	db	0
  2234  007DDC                     STR_250:
  2235  007DDC  6D                 	db	109	;'m'
  2236  007DDD  61                 	db	97	;'a'
  2237  007DDE  63                 	db	99	;'c'
  2238  007DDF  20                 	db	32
  2239  007DE0  73                 	db	115	;'s'
  2240  007DE1  65                 	db	101	;'e'
  2241  007DE2  74                 	db	116	;'t'
  2242  007DE3  20                 	db	32
  2243  007DE4  64                 	db	100	;'d'
  2244  007DE5  72                 	db	114	;'r'
  2245  007DE6  20                 	db	32
  2246  007DE7  36                 	db	54	;'6'
  2247  007DE8  00                 	db	0
  2248  007DE9                     STR_251:
  2249  007DE9  6D                 	db	109	;'m'
  2250  007DEA  61                 	db	97	;'a'
  2251  007DEB  63                 	db	99	;'c'
  2252  007DEC  20                 	db	32
  2253  007DED  73                 	db	115	;'s'
  2254  007DEE  65                 	db	101	;'e'
  2255  007DEF  74                 	db	116	;'t'
  2256  007DF0  20                 	db	32
  2257  007DF1  64                 	db	100	;'d'
  2258  007DF2  72                 	db	114	;'r'
  2259  007DF3  20                 	db	32
  2260  007DF4  37                 	db	55	;'7'
  2261  007DF5  00                 	db	0
  2262  007DF6                     STR_31:
  2263  007DF6  6D                 	db	109	;'m'
  2264  007DF7  61                 	db	97	;'a'
  2265  007DF8  63                 	db	99	;'c'
  2266  007DF9  20                 	db	32
  2267  007DFA  6A                 	db	106	;'j'
  2268  007DFB  6F                 	db	111	;'o'
  2269  007DFC  69                 	db	105	;'i'
  2270  007DFD  6E                 	db	110	;'n'
  2271  007DFE  20                 	db	32
  2272  007DFF  61                 	db	97	;'a'
  2273  007E00  62                 	db	98	;'b'
  2274  007E01  70                 	db	112	;'p'
  2275  007E02  00                 	db	0
  2276  007E03                     STR_10:
  2277  007E03  42                 	db	66	;'B'
  2278  007E04  75                 	db	117	;'u'
  2279  007E05  74                 	db	116	;'t'
  2280  007E06  74                 	db	116	;'t'
  2281  007E07  6F                 	db	111	;'o'
  2282  007E08  6E                 	db	110	;'n'
  2283  007E09  20                 	db	32
  2284  007E0A  54                 	db	84	;'T'
  2285  007E0B  65                 	db	101	;'e'
  2286  007E0C  73                 	db	115	;'s'
  2287  007E0D  74                 	db	116	;'t'
  2288  007E0E  3A                 	db	58	;':'
  2289  007E0F  00                 	db	0
  2290  007E10                     STR_13:
  2291  007E10  42                 	db	66	;'B'
  2292  007E11  75                 	db	117	;'u'
  2293  007E12  74                 	db	116	;'t'
  2294  007E13  74                 	db	116	;'t'
  2295  007E14  6F                 	db	111	;'o'
  2296  007E15  6E                 	db	110	;'n'
  2297  007E16  31                 	db	49	;'1'
  2298  007E17  20                 	db	32
  2299  007E18  50                 	db	80	;'P'
  2300  007E19  41                 	db	65	;'A'
  2301  007E1A  53                 	db	83	;'S'
  2302  007E1B  53                 	db	83	;'S'
  2303  007E1C  00                 	db	0
  2304  007E1D                     STR_14:
  2305  007E1D  42                 	db	66	;'B'
  2306  007E1E  75                 	db	117	;'u'
  2307  007E1F  74                 	db	116	;'t'
  2308  007E20  74                 	db	116	;'t'
  2309  007E21  6F                 	db	111	;'o'
  2310  007E22  6E                 	db	110	;'n'
  2311  007E23  32                 	db	50	;'2'
  2312  007E24  20                 	db	32
  2313  007E25  50                 	db	80	;'P'
  2314  007E26  41                 	db	65	;'A'
  2315  007E27  53                 	db	83	;'S'
  2316  007E28  53                 	db	83	;'S'
  2317  007E29  00                 	db	0
  2318  007E2A                     STR_12:
  2319  007E2A  50                 	db	80	;'P'
  2320  007E2B  72                 	db	114	;'r'
  2321  007E2C  65                 	db	101	;'e'
  2322  007E2D  73                 	db	115	;'s'
  2323  007E2E  73                 	db	115	;'s'
  2324  007E2F  20                 	db	32
  2325  007E30  42                 	db	66	;'B'
  2326  007E31  75                 	db	117	;'u'
  2327  007E32  74                 	db	116	;'t'
  2328  007E33  74                 	db	116	;'t'
  2329  007E34  6F                 	db	111	;'o'
  2330  007E35  6E                 	db	110	;'n'
  2331  007E36  00                 	db	0
  2332  007E37                     STR_260:
  2333  007E37  55                 	db	85	;'U'
  2334  007E38  53                 	db	83	;'S'
  2335  007E39  42                 	db	66	;'B'
  2336  007E3A  20                 	db	32
  2337  007E3B  48                 	db	72	;'H'
  2338  007E3C  61                 	db	97	;'a'
  2339  007E3D  6E                 	db	110	;'n'
  2340  007E3E  64                 	db	100	;'d'
  2341  007E3F  6C                 	db	108	;'l'
  2342  007E40  65                 	db	101	;'e'
  2343  007E41  72                 	db	114	;'r'
  2344  007E42  00                 	db	0
  2345  007E43                     STR_73:
  2346  007E43  4F                 	db	79	;'O'
  2347  007E44  6E                 	db	110	;'n'
  2348  007E45  20                 	db	32
  2349  007E46  50                 	db	80	;'P'
  2350  007E47  6F                 	db	111	;'o'
  2351  007E48  72                 	db	114	;'r'
  2352  007E49  74                 	db	116	;'t'
  2353  007E4A  20                 	db	32
  2354  007E4B  23                 	db	35
  2355  007E4C  3A                 	db	58	;':'
  2356  007E4D  20                 	db	32
  2357  007E4E  00                 	db	0
  2358  007E4F                     STR_210:
  2359  007E4F  54                 	db	84	;'T'
  2360  007E50  78                 	db	120	;'x'
  2361  007E51  20                 	db	32
  2362  007E52  50                 	db	80	;'P'
  2363  007E53  6F                 	db	111	;'o'
  2364  007E54  72                 	db	114	;'r'
  2365  007E55  74                 	db	116	;'t'
  2366  007E56  20                 	db	32
  2367  007E57  23                 	db	35
  2368  007E58  3A                 	db	58	;':'
  2369  007E59  20                 	db	32
  2370  007E5A  00                 	db	0
  2371  007E5B                     STR_208:
  2372  007E5B  53                 	db	83	;'S'
  2373  007E5C  65                 	db	101	;'e'
  2374  007E5D  6E                 	db	110	;'n'
  2375  007E5E  74                 	db	116	;'t'
  2376  007E5F  20                 	db	32
  2377  007E60  44                 	db	68	;'D'
  2378  007E61  61                 	db	97	;'a'
  2379  007E62  74                 	db	116	;'t'
  2380  007E63  61                 	db	97	;'a'
  2381  007E64  3A                 	db	58	;':'
  2382  007E65  20                 	db	32
  2383  007E66  00                 	db	0
  2384  007E67                     STR_77:
  2385  007E67  6D                 	db	109	;'m'
  2386  007E68  61                 	db	97	;'a'
  2387  007E69  63                 	db	99	;'c'
  2388  007E6A  20                 	db	32
  2389  007E6B  74                 	db	116	;'t'
  2390  007E6C  78                 	db	120	;'x'
  2391  007E6D  20                 	db	32
  2392  007E6E  63                 	db	99	;'c'
  2393  007E6F  6E                 	db	110	;'n'
  2394  007E70  66                 	db	102	;'f'
  2395  007E71  20                 	db	32
  2396  007E72  00                 	db	0
  2397  007E73                     STR_36:
  2398  007E73  54                 	db	84	;'T'
  2399  007E74  72                 	db	114	;'r'
  2400  007E75  79                 	db	121	;'y'
  2401  007E76  69                 	db	105	;'i'
  2402  007E77  6E                 	db	110	;'n'
  2403  007E78  67                 	db	103	;'g'
  2404  007E79  20                 	db	32
  2405  007E7A  4F                 	db	79	;'O'
  2406  007E7B  54                 	db	84	;'T'
  2407  007E7C  41                 	db	65	;'A'
  2408  007E7D  41                 	db	65	;'A'
  2409  007E7E  00                 	db	0
  2410  007E7F                     STR_63:
  2411  007E7F  6D                 	db	109	;'m'
  2412  007E80  61                 	db	97	;'a'
  2413  007E81  63                 	db	99	;'c'
  2414  007E82  20                 	db	32
  2415  007E83  67                 	db	103	;'g'
  2416  007E84  65                 	db	101	;'e'
  2417  007E85  74                 	db	116	;'t'
  2418  007E86  20                 	db	32
  2419  007E87  61                 	db	97	;'a'
  2420  007E88  64                 	db	100	;'d'
  2421  007E89  72                 	db	114	;'r'
  2422  007E8A  00                 	db	0
  2423  007E8B                     STR_29:
  2424  007E8B  73                 	db	115	;'s'
  2425  007E8C  79                 	db	121	;'y'
  2426  007E8D  73                 	db	115	;'s'
  2427  007E8E  20                 	db	32
  2428  007E8F  67                 	db	103	;'g'
  2429  007E90  65                 	db	101	;'e'
  2430  007E91  74                 	db	116	;'t'
  2431  007E92  20                 	db	32
  2432  007E93  76                 	db	118	;'v'
  2433  007E94  65                 	db	101	;'e'
  2434  007E95  72                 	db	114	;'r'
  2435  007E96  00                 	db	0
  2436  007E97                     STR_8:
  2437  007E97  46                 	db	70	;'F'
  2438  007E98  65                 	db	101	;'e'
  2439  007E99  62                 	db	98	;'b'
  2440  007E9A  20                 	db	32
  2441  007E9B  32                 	db	50	;'2'
  2442  007E9C  37                 	db	55	;'7'
  2443  007E9D  20                 	db	32
  2444  007E9E  32                 	db	50	;'2'
  2445  007E9F  30                 	db	48	;'0'
  2446  007EA0  31                 	db	49	;'1'
  2447  007EA1  36                 	db	54	;'6'
  2448  007EA2  00                 	db	0
  2449  007EA3                     STR_11:
  2450  007EA3  42                 	db	66	;'B'
  2451  007EA4  75                 	db	117	;'u'
  2452  007EA5  74                 	db	116	;'t'
  2453  007EA6  74                 	db	116	;'t'
  2454  007EA7  6F                 	db	111	;'o'
  2455  007EA8  6E                 	db	110	;'n'
  2456  007EA9  20                 	db	32
  2457  007EAA  46                 	db	70	;'F'
  2458  007EAB  41                 	db	65	;'A'
  2459  007EAC  49                 	db	73	;'I'
  2460  007EAD  4C                 	db	76	;'L'
  2461  007EAE  00                 	db	0
  2462  007EAF                     STR_54:
  2463  007EAF  4F                 	db	79	;'O'
  2464  007EB0  54                 	db	84	;'T'
  2465  007EB1  41                 	db	65	;'A'
  2466  007EB2  41                 	db	65	;'A'
  2467  007EB3  20                 	db	32
  2468  007EB4  4A                 	db	74	;'J'
  2469  007EB5  6F                 	db	111	;'o'
  2470  007EB6  69                 	db	105	;'i'
  2471  007EB7  6E                 	db	110	;'n'
  2472  007EB8  20                 	db	32
  2473  007EB9  00                 	db	0
  2474  007EBA                     STR_52:
  2475  007EBA  6E                 	db	110	;'n'
  2476  007EBB  6F                 	db	111	;'o'
  2477  007EBC  5F                 	db	95	;'_'
  2478  007EBD  66                 	db	102	;'f'
  2479  007EBE  72                 	db	114	;'r'
  2480  007EBF  65                 	db	101	;'e'
  2481  007EC0  65                 	db	101	;'e'
  2482  007EC1  5F                 	db	95	;'_'
  2483  007EC2  63                 	db	99	;'c'
  2484  007EC3  68                 	db	104	;'h'
  2485  007EC4  00                 	db	0
  2486  007EC5                     STR_42:
  2487  007EC5  53                 	db	83	;'S'
  2488  007EC6  75                 	db	117	;'u'
  2489  007EC7  63                 	db	99	;'c'
  2490  007EC8  63                 	db	99	;'c'
  2491  007EC9  65                 	db	101	;'e'
  2492  007ECA  73                 	db	115	;'s'
  2493  007ECB  73                 	db	115	;'s'
  2494  007ECC  66                 	db	102	;'f'
  2495  007ECD  75                 	db	117	;'u'
  2496  007ECE  6C                 	db	108	;'l'
  2497  007ECF  00                 	db	0
  2498  007ED0                     STR_65:
  2499  007ED0  6D                 	db	109	;'m'
  2500  007ED1  61                 	db	97	;'a'
  2501  007ED2  63                 	db	99	;'c'
  2502  007ED3  20                 	db	32
  2503  007ED4  67                 	db	103	;'g'
  2504  007ED5  65                 	db	101	;'e'
  2505  007ED6  74                 	db	116	;'t'
  2506  007ED7  20                 	db	32
  2507  007ED8  64                 	db	100	;'d'
  2508  007ED9  72                 	db	114	;'r'
  2509  007EDA  00                 	db	0
  2510  007EDB                     STR_48:
  2511  007EDB  56                 	db	86	;'V'
  2512  007EDC  61                 	db	97	;'a'
  2513  007EDD  6C                 	db	108	;'l'
  2514  007EDE  69                 	db	105	;'i'
  2515  007EDF  64                 	db	100	;'d'
  2516  007EE0  20                 	db	32
  2517  007EE1  4B                 	db	75	;'K'
  2518  007EE2  65                 	db	101	;'e'
  2519  007EE3  79                 	db	121	;'y'
  2520  007EE4  73                 	db	115	;'s'
  2521  007EE5  00                 	db	0
  2522  007EE6                     STR_15:
  2523  007EE6  43                 	db	67	;'C'
  2524  007EE7  6F                 	db	111	;'o'
  2525  007EE8  6D                 	db	109	;'m'
  2526  007EE9  6D                 	db	109	;'m'
  2527  007EEA  20                 	db	32
  2528  007EEB  54                 	db	84	;'T'
  2529  007EEC  65                 	db	101	;'e'
  2530  007EED  73                 	db	115	;'s'
  2531  007EEE  74                 	db	116	;'t'
  2532  007EEF  3A                 	db	58	;':'
  2533  007EF0  00                 	db	0
  2534  007EF1                     STR_229:
  2535  007EF1  52                 	db	82	;'R'
  2536  007EF2  78                 	db	120	;'x'
  2537  007EF3  20                 	db	32
  2538  007EF4  50                 	db	80	;'P'
  2539  007EF5  6F                 	db	111	;'o'
  2540  007EF6  72                 	db	114	;'r'
  2541  007EF7  74                 	db	116	;'t'
  2542  007EF8  23                 	db	35
  2543  007EF9  20                 	db	32
  2544  007EFA  00                 	db	0
  2545  007EFB                     STR_41:
  2546  007EFB  41                 	db	65	;'A'
  2547  007EFC  42                 	db	66	;'B'
  2548  007EFD  50                 	db	80	;'P'
  2549  007EFE  20                 	db	32
  2550  007EFF  4A                 	db	74	;'J'
  2551  007F00  6F                 	db	111	;'o'
  2552  007F01  69                 	db	105	;'i'
  2553  007F02  6E                 	db	110	;'n'
  2554  007F03  20                 	db	32
  2555  007F04  00                 	db	0
  2556  007F05                     STR_23:
  2557  007F05  4D                 	db	77	;'M'
  2558  007F06  4F                 	db	79	;'O'
  2559  007F07  54                 	db	84	;'T'
  2560  007F08  45                 	db	69	;'E'
  2561  007F09  20                 	db	32
  2562  007F0A  4D                 	db	77	;'M'
  2563  007F0B  6F                 	db	111	;'o'
  2564  007F0C  64                 	db	100	;'d'
  2565  007F0D  65                 	db	101	;'e'
  2566  007F0E  00                 	db	0
  2567  007F0F                     STR_57:
  2568  007F0F  4F                 	db	79	;'O'
  2569  007F10  54                 	db	84	;'T'
  2570  007F11  41                 	db	65	;'A'
  2571  007F12  41                 	db	65	;'A'
  2572  007F13  20                 	db	32
  2573  007F14  4A                 	db	74	;'J'
  2574  007F15  6F                 	db	111	;'o'
  2575  007F16  69                 	db	105	;'i'
  2576  007F17  6E                 	db	110	;'n'
  2577  007F18  00                 	db	0
  2578  007F19                     STR_45:
  2579  007F19  6D                 	db	109	;'m'
  2580  007F1A  61                 	db	97	;'a'
  2581  007F1B  63                 	db	99	;'c'
  2582  007F1C  20                 	db	32
  2583  007F1D  72                 	db	114	;'r'
  2584  007F1E  65                 	db	101	;'e'
  2585  007F1F  73                 	db	115	;'s'
  2586  007F20  65                 	db	101	;'e'
  2587  007F21  74                 	db	116	;'t'
  2588  007F22  00                 	db	0
  2589  007F23                     STR_16:
  2590  007F23  4C                 	db	76	;'L'
  2591  007F24  45                 	db	69	;'E'
  2592  007F25  44                 	db	68	;'D'
  2593  007F26  20                 	db	32
  2594  007F27  54                 	db	84	;'T'
  2595  007F28  65                 	db	101	;'e'
  2596  007F29  73                 	db	115	;'s'
  2597  007F2A  74                 	db	116	;'t'
  2598  007F2B  3A                 	db	58	;':'
  2599  007F2C  00                 	db	0
  2600  007F2D                     STR_258:
  2601  007F2D  43                 	db	67	;'C'
  2602  007F2E  44                 	db	68	;'D'
  2603  007F2F  43                 	db	67	;'C'
  2604  007F30  20                 	db	32
  2605  007F31  4D                 	db	77	;'M'
  2606  007F32  6F                 	db	111	;'o'
  2607  007F33  64                 	db	100	;'d'
  2608  007F34  65                 	db	101	;'e'
  2609  007F35  00                 	db	0
  2610  007F36                     STR_49:
  2611  007F36  52                 	db	82	;'R'
  2612  007F37  65                 	db	101	;'e'
  2613  007F38  71                 	db	113	;'q'
  2614  007F39  75                 	db	117	;'u'
  2615  007F3A  69                 	db	105	;'i'
  2616  007F3B  72                 	db	114	;'r'
  2617  007F3C  65                 	db	101	;'e'
  2618  007F3D  64                 	db	100	;'d'
  2619  007F3E  00                 	db	0
  2620  007F3F                     STR_40:
  2621  007F3F  61                 	db	97	;'a'
  2622  007F40  63                 	db	99	;'c'
  2623  007F41  63                 	db	99	;'c'
  2624  007F42  65                 	db	101	;'e'
  2625  007F43  70                 	db	112	;'p'
  2626  007F44  74                 	db	116	;'t'
  2627  007F45  65                 	db	101	;'e'
  2628  007F46  64                 	db	100	;'d'
  2629  007F47  00                 	db	0
  2630  007F48                     STR_252:
  2631  007F48  6D                 	db	109	;'m'
  2632  007F49  61                 	db	97	;'a'
  2633  007F4A  63                 	db	99	;'c'
  2634  007F4B  20                 	db	32
  2635  007F4C  73                 	db	115	;'s'
  2636  007F4D  61                 	db	97	;'a'
  2637  007F4E  76                 	db	118	;'v'
  2638  007F4F  65                 	db	101	;'e'
  2639  007F50  00                 	db	0
  2640  007F51                     STR_24:
  2641  007F51  53                 	db	83	;'S'
  2642  007F52  74                 	db	116	;'t'
  2643  007F53  61                 	db	97	;'a'
  2644  007F54  72                 	db	114	;'r'
  2645  007F55  74                 	db	116	;'t'
  2646  007F56  69                 	db	105	;'i'
  2647  007F57  6E                 	db	110	;'n'
  2648  007F58  67                 	db	103	;'g'
  2649  007F59  00                 	db	0
  2650  007F5A                     STR_34:
  2651  007F5A  41                 	db	65	;'A'
  2652  007F5B  42                 	db	66	;'B'
  2653  007F5C  50                 	db	80	;'P'
  2654  007F5D  20                 	db	32
  2655  007F5E  4A                 	db	74	;'J'
  2656  007F5F  6F                 	db	111	;'o'
  2657  007F60  69                 	db	105	;'i'
  2658  007F61  6E                 	db	110	;'n'
  2659  007F62  00                 	db	0
  2660  007F63                     STR_4:
  2661  007F63  4D                 	db	77	;'M'
  2662  007F64  6F                 	db	111	;'o'
  2663  007F65  54                 	db	84	;'T'
  2664  007F66  65                 	db	101	;'e'
  2665  007F67  20                 	db	32
  2666  007F68  76                 	db	118	;'v'
  2667  007F69  20                 	db	32
  2668  007F6A  2E                 	db	46
  2669  007F6B  00                 	db	0
  2670  007F6C                     STR_9:
  2671  007F6C  32                 	db	50	;'2'
  2672  007F6D  32                 	db	50	;'2'
  2673  007F6E  3A                 	db	58	;':'
  2674  007F6F  30                 	db	48	;'0'
  2675  007F70  38                 	db	56	;'8'
  2676  007F71  3A                 	db	58	;':'
  2677  007F72  34                 	db	52	;'4'
  2678  007F73  30                 	db	48	;'0'
  2679  007F74  00                 	db	0
  2680  007F75  52                 	db	82	;'R'
  2681  007F76  46                 	db	70	;'F'
  2682  007F77  20                 	db	32
  2683  007F78  54                 	db	84	;'T'
  2684  007F79  65                 	db	101	;'e'
  2685  007F7A  73                 	db	115	;'s'
  2686  007F7B  74                 	db	116	;'t'
  2687  007F7C  3A                 	db	58	;':'
  2688  007F7D  00                 	db	0
  2689  007F7E                     STR_17:
  2690  007F7E  41                 	db	65	;'A'
  2691  007F7F  44                 	db	68	;'D'
  2692  007F80  43                 	db	67	;'C'
  2693  007F81  20                 	db	32
  2694  007F82  54                 	db	84	;'T'
  2695  007F83  65                 	db	101	;'e'
  2696  007F84  73                 	db	115	;'s'
  2697  007F85  74                 	db	116	;'t'
  2698  007F86  00                 	db	0
  2699  007F87                     STR_259:
  2700  007F87  43                 	db	67	;'C'
  2701  007F88  6F                 	db	111	;'o'
  2702  007F89  6D                 	db	109	;'m'
  2703  007F8A  6D                 	db	109	;'m'
  2704  007F8B  61                 	db	97	;'a'
  2705  007F8C  6E                 	db	110	;'n'
  2706  007F8D  64                 	db	100	;'d'
  2707  007F8E  00                 	db	0
  2708  007F8F                     STR_61:
  2709  007F8F  4E                 	db	78	;'N'
  2710  007F90  4F                 	db	79	;'O'
  2711  007F91  20                 	db	32
  2712  007F92  46                 	db	70	;'F'
  2713  007F93  52                 	db	82	;'R'
  2714  007F94  45                 	db	69	;'E'
  2715  007F95  45                 	db	69	;'E'
  2716  007F96  00                 	db	0
  2717  007F97                     STR_62:
  2718  007F97  43                 	db	67	;'C'
  2719  007F98  48                 	db	72	;'H'
  2720  007F99  41                 	db	65	;'A'
  2721  007F9A  4E                 	db	78	;'N'
  2722  007F9B  4E                 	db	78	;'N'
  2723  007F9C  45                 	db	69	;'E'
  2724  007F9D  4C                 	db	76	;'L'
  2725  007F9E  00                 	db	0
  2726  007F9F                     STR_35:
  2727  007F9F  4E                 	db	78	;'N'
  2728  007FA0  6F                 	db	111	;'o'
  2729  007FA1  20                 	db	32
  2730  007FA2  4B                 	db	75	;'K'
  2731  007FA3  65                 	db	101	;'e'
  2732  007FA4  79                 	db	121	;'y'
  2733  007FA5  73                 	db	115	;'s'
  2734  007FA6  00                 	db	0
  2735  007FA7                     STR_18:
  2736  007FA7  54                 	db	84	;'T'
  2737  007FA8  65                 	db	101	;'e'
  2738  007FA9  6D                 	db	109	;'m'
  2739  007FAA  70                 	db	112	;'p'
  2740  007FAB  20                 	db	32
  2741  007FAC  20                 	db	32
  2742  007FAD  3D                 	db	61	;'='
  2743  007FAE  00                 	db	0
  2744  007FAF                     STR_19:
  2745  007FAF  4C                 	db	76	;'L'
  2746  007FB0  69                 	db	105	;'i'
  2747  007FB1  67                 	db	103	;'g'
  2748  007FB2  68                 	db	104	;'h'
  2749  007FB3  74                 	db	116	;'t'
  2750  007FB4  20                 	db	32
  2751  007FB5  3D                 	db	61	;'='
  2752  007FB6  00                 	db	0
  2753  007FB7                     STR_88:
  2754  007FB7  54                 	db	84	;'T'
  2755  007FB8  65                 	db	101	;'e'
  2756  007FB9  6D                 	db	109	;'m'
  2757  007FBA  70                 	db	112	;'p'
  2758  007FBB  20                 	db	32
  2759  007FBC  3A                 	db	58	;':'
  2760  007FBD  00                 	db	0
  2761  007FBE                     STR_87:
  2762  007FBE  4C                 	db	76	;'L'
  2763  007FBF  69                 	db	105	;'i'
  2764  007FC0  67                 	db	103	;'g'
  2765  007FC1  68                 	db	104	;'h'
  2766  007FC2  74                 	db	116	;'t'
  2767  007FC3  3A                 	db	58	;':'
  2768  007FC4  00                 	db	0
  2769  007FC5                     STR_58:
  2770  007FC5  44                 	db	68	;'D'
  2771  007FC6  65                 	db	101	;'e'
  2772  007FC7  6E                 	db	110	;'n'
  2773  007FC8  69                 	db	105	;'i'
  2774  007FC9  65                 	db	101	;'e'
  2775  007FCA  64                 	db	100	;'d'
  2776  007FCB  00                 	db	0
  2777  007FCC                     STR_43:
  2778  007FCC  64                 	db	100	;'d'
  2779  007FCD  65                 	db	101	;'e'
  2780  007FCE  6E                 	db	110	;'n'
  2781  007FCF  69                 	db	105	;'i'
  2782  007FD0  65                 	db	101	;'e'
  2783  007FD1  64                 	db	100	;'d'
  2784  007FD2  00                 	db	0
  2785  007FD3                     STR_219:
  2786  007FD3  6E                 	db	110	;'n'
  2787  007FD4  6F                 	db	111	;'o'
  2788  007FD5  5F                 	db	95	;'_'
  2789  007FD6  66                 	db	102	;'f'
  2790  007FD7  72                 	db	114	;'r'
  2791  007FD8  65                 	db	101	;'e'
  2792  007FD9  00                 	db	0
  2793  007FDA                     STR_217:
  2794  007FDA  6D                 	db	109	;'m'
  2795  007FDB  61                 	db	97	;'a'
  2796  007FDC  63                 	db	99	;'c'
  2797  007FDD  5F                 	db	95	;'_'
  2798  007FDE  65                 	db	101	;'e'
  2799  007FDF  72                 	db	114	;'r'
  2800  007FE0  00                 	db	0
  2801  007FE1                     STR_212:
  2802  007FE1  6D                 	db	109	;'m'
  2803  007FE2  61                 	db	97	;'a'
  2804  007FE3  63                 	db	99	;'c'
  2805  007FE4  5F                 	db	95	;'_'
  2806  007FE5  72                 	db	114	;'r'
  2807  007FE6  78                 	db	120	;'x'
  2808  007FE7  00                 	db	0
  2809  007FE8                     STR_215:
  2810  007FE8  6D                 	db	109	;'m'
  2811  007FE9  61                 	db	97	;'a'
  2812  007FEA  63                 	db	99	;'c'
  2813  007FEB  5F                 	db	95	;'_'
  2814  007FEC  74                 	db	116	;'t'
  2815  007FED  78                 	db	120	;'x'
  2816  007FEE  00                 	db	0
  2817  007FEF                     STR_30:
  2818  007FEF  52                 	db	82	;'R'
  2819  007FF0  4E                 	db	78	;'N'
  2820  007FF1  00                 	db	0
  2821  007FF2                     STR_32:
  2822  007FF2  6F                 	db	111	;'o'
  2823  007FF3  6B                 	db	107	;'k'
  2824  007FF4  00                 	db	0
  2825  007FF5                     STR_101:
  2826  007FF5  2A                 	db	42
  2827  007FF6  00                 	db	0
  2828  007FF7                     STR_96:
  2829  007FF7  3C                 	db	60	;'<'
  2830  007FF8  00                 	db	0
  2831  007FF9                     STR_76:
  2832  007FF9  43                 	db	67	;'C'
  2833  007FFA  00                 	db	0
  2834  007FFB                     STR_78:
  2835  007FFB  55                 	db	85	;'U'
  2836  007FFC  00                 	db	0
  2837  007FFD                     STR_21:
  2838  007FFD  7A                 	db	122	;'z'
  2839  007FFE  00                 	db	0
  2840  0000                     
  2841                           ; #config settings
  2842  007FFF  00                 	db	0	; dummy byte at the end
  2843  0000                     
  2844                           	psect	cinit
  2845  0036E8                     __pcinit:
  2846                           	opt stack 0
  2847  0036E8                     start_initialization:
  2848                           	opt stack 0
  2849  0036E8                     __initialization:
  2850                           	opt stack 0
  2851                           
  2852                           ; Clear objects allocated to BANK2 (64 bytes)
  2853  0036E8  EE02  F000         	lfsr	0,__pbssBANK2
  2854  0036EC  0E40               	movlw	64
  2855  0036EE                     clear_0:
  2856  0036EE  6AEE               	clrf	postinc0,c
  2857  0036F0  06E8               	decf	wreg,f,c
  2858  0036F2  E1FD               	bnz	clear_0
  2859                           
  2860                           ; Clear objects allocated to BANK1 (216 bytes)
  2861  0036F4  EE01  F000         	lfsr	0,__pbssBANK1
  2862  0036F8  0ED8               	movlw	216
  2863  0036FA                     clear_1:
  2864  0036FA  6AEE               	clrf	postinc0,c
  2865  0036FC  06E8               	decf	wreg,f,c
  2866  0036FE  E1FD               	bnz	clear_1
  2867                           
  2868                           ; Clear objects allocated to BANK0 (104 bytes)
  2869  003700  EE00  F060         	lfsr	0,__pbssBANK0
  2870  003704  0E68               	movlw	104
  2871  003706                     clear_2:
  2872  003706  6AEE               	clrf	postinc0,c
  2873  003708  06E8               	decf	wreg,f,c
  2874  00370A  E1FD               	bnz	clear_2
  2875                           
  2876                           ; Clear objects allocated to COMRAM (45 bytes)
  2877  00370C  EE00  F001         	lfsr	0,__pbssCOMRAM
  2878  003710  0E2D               	movlw	45
  2879  003712                     clear_3:
  2880  003712  6AEE               	clrf	postinc0,c
  2881  003714  06E8               	decf	wreg,f,c
  2882  003716  E1FD               	bnz	clear_3
  2883                           
  2884                           ; Initialize objects allocated to BANK0 (5 bytes)
  2885                           ; load TBLPTR registers with __pidataBANK0
  2886  003718  0E3A               	movlw	low __pidataBANK0
  2887  00371A  6EF6               	movwf	tblptrl,c
  2888  00371C  0E42               	movlw	high __pidataBANK0
  2889  00371E  6EF7               	movwf	tblptrh,c
  2890  003720  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2891  003722  6EF8               	movwf	tblptru,c
  2892  003724  EE00  F0F5         	lfsr	0,__pdataBANK0
  2893  003728  EE10 F005          	lfsr	1,5
  2894  00372C                     copy_data0:
  2895  00372C  0009               	tblrd		*+
  2896  00372E  CFF5 FFEE          	movff	tablat,postinc0
  2897  003732  50E5               	movf	postdec1,w,c
  2898  003734  50E1               	movf	fsr1l,w,c
  2899  003736  E1FA               	bnz	copy_data0
  2900  003738                     end_of_initialization:
  2901                           	opt stack 0
  2902  003738                     __end_of__initialization:
  2903                           	opt stack 0
  2904  003738  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2905  00373A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2906  00373C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2907  00373E  6EF8               	movwf	tblptru,c
  2908  003740  0100               	movlb	0
  2909  003742  EF30  F013         	goto	_main	;jump to C main() function
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           postdec1	equ	0xFE5
  2917                           fsr1l	equ	0xFE1
  2918                           
  2919                           	psect	bssCOMRAM
  2920  000001                     __pbssCOMRAM:
  2921                           	opt stack 0
  2922  000001                     _outPipes:
  2923                           	opt stack 0
  2924  000001                     	ds	8
  2925  000009                     _inPipes:
  2926                           	opt stack 0
  2927  000009                     	ds	6
  2928  00000F                     _pBDTEntryIn:
  2929                           	opt stack 0
  2930  00000F                     	ds	6
  2931  000015                     _pBDTEntryEP0OutCurrent:
  2932                           	opt stack 0
  2933  000015                     	ds	2
  2934  000017                     _pBDTEntryEP0OutNext:
  2935                           	opt stack 0
  2936  000017                     	ds	2
  2937  000019                     _LastRS232Out:
  2938                           	opt stack 0
  2939  000019                     	ds	1
  2940  00001A                     _NextUSBOut:
  2941                           	opt stack 0
  2942  00001A                     	ds	1
  2943  00001B                     _RS232_Out_Data_Rdy:
  2944                           	opt stack 0
  2945  00001B                     	ds	1
  2946  00001C                     _RS232cp:
  2947                           	opt stack 0
  2948  00001C                     	ds	1
  2949  00001D                     _RemoteWakeup:
  2950                           	opt stack 0
  2951  00001D                     	ds	1
  2952  00001E                     _USBDeferStatusStagePacket:
  2953                           	opt stack 0
  2954  00001E                     	ds	1
  2955  00001F                     _USBStatusStageTimeoutCounter:
  2956                           	opt stack 0
  2957  00001F                     	ds	1
  2958  000020                     _cdc_trf_state:
  2959                           	opt stack 0
  2960  000020                     	ds	1
  2961  000021                     _controlTransferState:
  2962                           	opt stack 0
  2963  000021                     	ds	1
  2964  000022                     _endpoint_number:
  2965                           	opt stack 0
  2966  000022                     	ds	1
  2967  000023                     _eusartRxCount:
  2968                           	opt stack 0
  2969  000023                     	ds	1
  2970  000024                     _eusartRxHead:
  2971                           	opt stack 0
  2972  000024                     	ds	1
  2973  000025                     _eusartRxTail:
  2974                           	opt stack 0
  2975  000025                     	ds	1
  2976  000026                     _eusartTxBufferRemaining:
  2977                           	opt stack 0
  2978  000026                     	ds	1
  2979  000027                     _eusartTxHead:
  2980                           	opt stack 0
  2981  000027                     	ds	1
  2982  000028                     _eusartTxTail:
  2983                           	opt stack 0
  2984  000028                     	ds	1
  2985  000029                     _modemBufferIndex:
  2986                           	opt stack 0
  2987  000029                     	ds	1
  2988  00002A                     _rxByteFlag:
  2989                           	opt stack 0
  2990  00002A                     	ds	1
  2991  00002B                     _shortPacketStatus:
  2992                           	opt stack 0
  2993  00002B                     	ds	1
  2994  00002C                     _USBActiveConfiguration:
  2995                           	opt stack 0
  2996  00002C                     	ds	1
  2997  00002D                     _USTATcopy:
  2998                           	opt stack 0
  2999  00002D                     	ds	1
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           
  3009                           	psect	bssBANK0
  3010  000060                     __pbssBANK0:
  3011                           	opt stack 0
  3012  000060                     _pBDTEntryOut:
  3013                           	opt stack 0
  3014  000060                     	ds	6
  3015  000066                     service_pushbutton@PB_Timer:
  3016                           	opt stack 0
  3017  000066                     	ds	4
  3018  00006A                     _ep_data_in:
  3019                           	opt stack 0
  3020  00006A                     	ds	3
  3021  00006D                     _ep_data_out:
  3022                           	opt stack 0
  3023  00006D                     	ds	3
  3024  000070                     _pCDCDst:
  3025                           	opt stack 0
  3026  000070                     	ds	3
  3027  000073                     _pCDCSrc:
  3028                           	opt stack 0
  3029  000073                     	ds	3
  3030  000076                     _CDCDataInHandle:
  3031                           	opt stack 0
  3032  000076                     	ds	2
  3033  000078                     _CDCDataOutHandle:
  3034                           	opt stack 0
  3035  000078                     	ds	2
  3036  00007A                     _light:
  3037                           	opt stack 0
  3038  00007A                     	ds	2
  3039  00007C                     _pDst:
  3040                           	opt stack 0
  3041  00007C                     	ds	2
  3042  00007E                     _temperature:
  3043                           	opt stack 0
  3044  00007E                     	ds	2
  3045  000080                     _timer1ReloadVal:
  3046                           	opt stack 0
  3047  000080                     	ds	2
  3048  000082                     _timerMinTickCount:
  3049                           	opt stack 0
  3050  000082                     	ds	2
  3051  000084                     _timerMsTickCount:
  3052                           	opt stack 0
  3053  000084                     	ds	2
  3054  000086                     _BothEP0OutUOWNsSet:
  3055                           	opt stack 0
  3056  000086                     	ds	1
  3057  000087                     _USBBusIsSuspended:
  3058                           	opt stack 0
  3059  000087                     	ds	1
  3060  000088                     _USBDeferINDataStagePackets:
  3061                           	opt stack 0
  3062  000088                     	ds	1
  3063  000089                     _USBDeferOUTDataStagePackets:
  3064                           	opt stack 0
  3065  000089                     	ds	1
  3066  00008A                     _USBDeviceState:
  3067                           	opt stack 0
  3068  00008A                     	ds	1
  3069  00008B                     _USBStatusStageEnabledFlag1:
  3070                           	opt stack 0
  3071  00008B                     	ds	1
  3072  00008C                     _USBStatusStageEnabledFlag2:
  3073                           	opt stack 0
  3074  00008C                     	ds	1
  3075  00008D                     _activeState:
  3076                           	opt stack 0
  3077  00008D                     	ds	1
  3078  00008E                     _adrStatus:
  3079                           	opt stack 0
  3080  00008E                     	ds	1
  3081  00008F                     _appTimer:
  3082                           	opt stack 0
  3083  00008F                     	ds	1
  3084  000090                     _cdc_mem_type:
  3085                           	opt stack 0
  3086  000090                     	ds	1
  3087  000091                     _cdc_rx_len:
  3088                           	opt stack 0
  3089  000091                     	ds	1
  3090  000092                     _cdc_tx_len:
  3091                           	opt stack 0
  3092  000092                     	ds	1
  3093  000093                     _dataRatePosition:
  3094                           	opt stack 0
  3095  000093                     	ds	1
  3096  000094                     _m10SecTicker:
  3097                           	opt stack 0
  3098  000094                     	ds	1
  3099  000095                     _operationType:
  3100                           	opt stack 0
  3101  000095                     	ds	1
  3102  000096                     _powerOnStatus:
  3103                           	opt stack 0
  3104  000096                     	ds	1
  3105  000097                     _randomPortNum:
  3106                           	opt stack 0
  3107  000097                     	ds	1
  3108  000098                     _runningState:
  3109                           	opt stack 0
  3110  000098                     	ds	1
  3111  000099                     _secTicker:
  3112                           	opt stack 0
  3113  000099                     	ds	1
  3114  00009A                     _sleepTicker:
  3115                           	opt stack 0
  3116  00009A                     	ds	1
  3117  00009B                     _sleepTxOccurances:
  3118                           	opt stack 0
  3119  00009B                     	ds	1
  3120  00009C                     _usbState:
  3121                           	opt stack 0
  3122  00009C                     	ds	1
  3123  00009D                     service_pushbutton@Release_Timer:
  3124                           	opt stack 0
  3125  00009D                     	ds	1
  3126  00009E                     _dataBuffer:
  3127                           	opt stack 0
  3128  00009E                     	ds	12
  3129  0000AA                     _cdc_notice:
  3130                           	opt stack 0
  3131  0000AA                     	ds	10
  3132  0000B4                     _responseData:
  3133                           	opt stack 0
  3134  0000B4                     	ds	8
  3135  0000BC                     _line_coding:
  3136                           	opt stack 0
  3137  0000BC                     	ds	7
  3138  0000C3                     _responsePortNum:
  3139                           	opt stack 0
  3140  0000C3                     	ds	3
  3141  0000C6                     _USBAlternateInterface:
  3142                           	opt stack 0
  3143  0000C6                     	ds	2
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           
  3153                           	psect	dataBANK0
  3154  0000F5                     __pdataBANK0:
  3155                           	opt stack 0
  3156  0000F5                     _selectedFont:
  3157                           	opt stack 0
  3158  0000F5                     	ds	2
  3159  0000F7                     _dataRateSelection:
  3160                           	opt stack 0
  3161  0000F7                     	ds	1
  3162  0000F8                     _moteState:
  3163                           	opt stack 0
  3164  0000F8                     	ds	1
  3165  0000F9                     _periodicState:
  3166                           	opt stack 0
  3167  0000F9                     	ds	1
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           postdec1	equ	0xFE5
  3175                           fsr1l	equ	0xFE1
  3176                           
  3177                           	psect	bssBANK1
  3178  000100                     __pbssBANK1:
  3179                           	opt stack 0
  3180  000100                     _eusartRxBuffer:
  3181                           	opt stack 0
  3182  000100                     	ds	64
  3183  000140                     _USB_Buffer:
  3184                           	opt stack 0
  3185  000140                     	ds	64
  3186  000180                     _modemResonseBuffer:
  3187                           	opt stack 0
  3188  000180                     	ds	64
  3189  0001C0                     _responseId:
  3190                           	opt stack 0
  3191  0001C0                     	ds	16
  3192  0001D0                     _dummy_encapsulated_cmd_response:
  3193                           	opt stack 0
  3194  0001D0                     	ds	8
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           postdec1	equ	0xFE5
  3202                           fsr1l	equ	0xFE1
  3203                           
  3204                           	psect	bssBANK2
  3205  000200                     __pbssBANK2:
  3206                           	opt stack 0
  3207  000200                     _eusartTxBuffer:
  3208                           	opt stack 0
  3209  000200                     	ds	64
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           postinc0	equ	0xFEE
  3215                           wreg	equ	0xFE8
  3216                           postdec1	equ	0xFE5
  3217                           fsr1l	equ	0xFE1
  3218                           
  3219                           	psect	cstackBANK1
  3220  0001D8                     __pcstackBANK1:
  3221                           	opt stack 0
  3222  0001D8                     moteHandler@gotoSleep:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x0
  3226  0001D8                     	ds	1
  3227  0001D9                     moteHandler@gotoNextState:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x1
  3231  0001D9                     	ds	1
  3232  0001DA                     moteHandler@Traw:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x2
  3236  0001DA                     	ds	2
  3237  0001DC                     moteHandler@s2Button:
  3238                           	opt stack 0
  3239                           
  3240                           ; 1 bytes @ 0x4
  3241  0001DC                     	ds	1
  3242  0001DD                     moteHandler@buttonPress:
  3243                           	opt stack 0
  3244                           
  3245                           ; 1 bytes @ 0x5
  3246  0001DD                     	ds	1
  3247  0001DE                     moteHandler@i:
  3248                           	opt stack 0
  3249                           
  3250                           ; 1 bytes @ 0x6
  3251  0001DE                     	ds	1
  3252  0001DF                     moteHandler@i_1311:
  3253                           	opt stack 0
  3254                           
  3255                           ; 1 bytes @ 0x7
  3256  0001DF                     	ds	1
  3257  0001E0                     moteHandler@readMessage:
  3258                           	opt stack 0
  3259                           
  3260                           ; 1 bytes @ 0x8
  3261  0001E0                     	ds	1
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           postdec1	equ	0xFE5
  3269                           fsr1l	equ	0xFE1
  3270                           
  3271                           	psect	cstackBANK0
  3272  0000C8                     __pcstackBANK0:
  3273                           	opt stack 0
  3274  0000C8                     ??_TMR1_Initialize:
  3275  0000C8                     ?_ADC_GetConversion:
  3276                           	opt stack 0
  3277  0000C8                     ?_strncmp:
  3278                           	opt stack 0
  3279  0000C8                     ?_strcmp:
  3280                           	opt stack 0
  3281  0000C8                     ?_USBTransferOnePacket:
  3282                           	opt stack 0
  3283  0000C8                     ?___lwdiv:
  3284                           	opt stack 0
  3285  0000C8                     ?___lwmod:
  3286                           	opt stack 0
  3287  0000C8                     MOTEapp_handlerState@state:
  3288                           	opt stack 0
  3289  0000C8                     MOTEapp_SetADR@state:
  3290                           	opt stack 0
  3291  0000C8                     MOTEapp_SetDataRate@dataRate:
  3292                           	opt stack 0
  3293  0000C8                     MOTEapp_TimerBasedTask@timerTask:
  3294                           	opt stack 0
  3295  0000C8                     unhex@c:
  3296                           	opt stack 0
  3297  0000C8                     hexToStr@character:
  3298                           	opt stack 0
  3299  0000C8                     moteApp_clearBuffers@counter:
  3300                           	opt stack 0
  3301  0000C8                     USBapp_handlerState@state:
  3302                           	opt stack 0
  3303  0000C8                     service_pushbutton@bs:
  3304                           	opt stack 0
  3305  0000C8                     EUSART_Read@readValue:
  3306                           	opt stack 0
  3307  0000C8                     EUSART_Write@txData:
  3308                           	opt stack 0
  3309  0000C8                     EUSART_FlushBuffer@index:
  3310                           	opt stack 0
  3311  0000C8                     SPI_Exchange8bit@data:
  3312                           	opt stack 0
  3313  0000C8                     DATAEE_WriteByte@bData:
  3314                           	opt stack 0
  3315  0000C8                     DATAEE_ReadByte@bAdd:
  3316                           	opt stack 0
  3317  0000C8                     TMR2_ReadTimer@readVal:
  3318                           	opt stack 0
  3319  0000C8                     USBTransferOnePacket@dir:
  3320                           	opt stack 0
  3321  0000C8                     ___lbdiv@divisor:
  3322                           	opt stack 0
  3323  0000C8                     ___lbmod@divisor:
  3324                           	opt stack 0
  3325  0000C8                     moteApp_delayms@length:
  3326                           	opt stack 0
  3327  0000C8                     oled_setFont@font:
  3328                           	opt stack 0
  3329  0000C8                     putUSBUSART@data:
  3330                           	opt stack 0
  3331  0000C8                     ___lwdiv@dividend:
  3332                           	opt stack 0
  3333  0000C8                     ___lwmod@dividend:
  3334                           	opt stack 0
  3335  0000C8                     memset@p1:
  3336                           	opt stack 0
  3337  0000C8                     strcmp@s1:
  3338                           	opt stack 0
  3339  0000C8                     strncmp@s1:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x0
  3343  0000C8                     	ds	1
  3344  0000C9                     MOTEapp_getModemResponse@terminatorReceived:
  3345                           	opt stack 0
  3346  0000C9                     moteApp_clearBuffers@counter_1676:
  3347                           	opt stack 0
  3348  0000C9                     oled_writeCommand@command:
  3349                           	opt stack 0
  3350  0000C9                     oled_writeData@data:
  3351                           	opt stack 0
  3352  0000C9                     DATAEE_WriteByte@bAdd:
  3353                           	opt stack 0
  3354  0000C9                     ___lbdiv@dividend:
  3355                           	opt stack 0
  3356  0000C9                     ___lbmod@dividend:
  3357                           	opt stack 0
  3358  0000C9                     sendCommand@string:
  3359                           	opt stack 0
  3360  0000C9                     sendDataCommand@string:
  3361                           	opt stack 0
  3362  0000C9                     USBTransferOnePacket@data:
  3363                           	opt stack 0
  3364                           
  3365                           ; 2 bytes @ 0x1
  3366  0000C9                     	ds	1
  3367  0000CA                     ??_moteApp_delayms:
  3368  0000CA                     ??_ADC_GetConversion:
  3369  0000CA                     ??_oled_devInit:
  3370  0000CA                     MOTEapp_getModemResponse@bufferByte:
  3371                           	opt stack 0
  3372  0000CA                     moteApp_clearBuffers@counter_1677:
  3373                           	opt stack 0
  3374  0000CA                     Set_Page_Address@address:
  3375                           	opt stack 0
  3376  0000CA                     Set_Column_Address@address:
  3377                           	opt stack 0
  3378  0000CA                     oled_setDisplay@displayType:
  3379                           	opt stack 0
  3380  0000CA                     oled_displayOff@state:
  3381                           	opt stack 0
  3382  0000CA                     DATAEE_WriteByte@GIEBitValue:
  3383                           	opt stack 0
  3384  0000CA                     putUSBUSART@length:
  3385                           	opt stack 0
  3386  0000CA                     ___lbdiv@counter:
  3387                           	opt stack 0
  3388  0000CA                     ___lbmod@counter:
  3389                           	opt stack 0
  3390  0000CA                     ___lwdiv@divisor:
  3391                           	opt stack 0
  3392  0000CA                     ___lwmod@divisor:
  3393                           	opt stack 0
  3394  0000CA                     memset@c:
  3395                           	opt stack 0
  3396  0000CA                     strcmp@s2:
  3397                           	opt stack 0
  3398  0000CA                     strncmp@s2:
  3399                           	opt stack 0
  3400                           
  3401                           ; 2 bytes @ 0x2
  3402  0000CA                     	ds	1
  3403  0000CB                     sendDataCommand@appData:
  3404                           	opt stack 0
  3405  0000CB                     oled_putChar@station_dot:
  3406                           	opt stack 0
  3407  0000CB                     USBTransferOnePacket@len:
  3408                           	opt stack 0
  3409  0000CB                     ___lbdiv@quotient:
  3410                           	opt stack 0
  3411  0000CB                     ___lbmod@rem:
  3412                           	opt stack 0
  3413  0000CB                     moteApp_delayms@counter:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x3
  3417  0000CB                     	ds	1
  3418  0000CC                     ??_strcmp:
  3419  0000CC                     sendDataCommand@dataLength:
  3420                           	opt stack 0
  3421  0000CC                     moteApp_add8bToDataBuffer@bufferLocation:
  3422                           	opt stack 0
  3423  0000CC                     oled_putChar@start_page:
  3424                           	opt stack 0
  3425  0000CC                     ADC_GetConversion@channel:
  3426                           	opt stack 0
  3427  0000CC                     USBTransferOnePacket@ep:
  3428                           	opt stack 0
  3429  0000CC                     ___lwdiv@counter:
  3430                           	opt stack 0
  3431  0000CC                     ___lwmod@counter:
  3432                           	opt stack 0
  3433  0000CC                     memset@n:
  3434                           	opt stack 0
  3435  0000CC                     strncmp@len:
  3436                           	opt stack 0
  3437                           
  3438                           ; 2 bytes @ 0x4
  3439  0000CC                     	ds	1
  3440  0000CD                     ??_oled_putChar:
  3441  0000CD                     ??_sendDataCommand:
  3442  0000CD                     moteApp_toggleLeds@state:
  3443                           	opt stack 0
  3444  0000CD                     moteApp_add8bToDataBuffer@number:
  3445                           	opt stack 0
  3446  0000CD                     modemResync@escapeCounter:
  3447                           	opt stack 0
  3448  0000CD                     USBTransferOnePacket@handle:
  3449                           	opt stack 0
  3450  0000CD                     ___lwdiv@quotient:
  3451                           	opt stack 0
  3452                           
  3453                           ; 2 bytes @ 0x5
  3454  0000CD                     	ds	1
  3455  0000CE                     ??_strncmp:
  3456  0000CE                     sendDataCommand@byteCount:
  3457                           	opt stack 0
  3458  0000CE                     strcmp@t0:
  3459                           	opt stack 0
  3460  0000CE                     memset@p:
  3461                           	opt stack 0
  3462                           
  3463                           ; 2 bytes @ 0x6
  3464  0000CE                     	ds	1
  3465  0000CF                     modemResync@escapeEvent:
  3466                           	opt stack 0
  3467  0000CF                     sendDataCommand@byteCount_1608:
  3468                           	opt stack 0
  3469  0000CF                     ADC_TempConversion@tempRaw:
  3470                           	opt stack 0
  3471  0000CF                     strcmp@t2:
  3472                           	opt stack 0
  3473  0000CF                     moteApp_add16bToDataBuffer@number:
  3474                           	opt stack 0
  3475  0000CF                     getsUSBUSART@buffer:
  3476                           	opt stack 0
  3477  0000CF                     _CDCTxService$5731:
  3478                           	opt stack 0
  3479                           
  3480                           ; 2 bytes @ 0x7
  3481  0000CF                     	ds	1
  3482  0000D0                     ADC_TempConversion@temp:
  3483                           	opt stack 0
  3484  0000D0                     USBDeviceInit@i:
  3485                           	opt stack 0
  3486  0000D0                     strcmp@t1:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x8
  3490  0000D0                     	ds	1
  3491  0000D1                     moteApp_add16bToDataBuffer@bufferLocation:
  3492                           	opt stack 0
  3493  0000D1                     getsUSBUSART@len:
  3494                           	opt stack 0
  3495  0000D1                     CDCTxService@i:
  3496                           	opt stack 0
  3497                           
  3498                           ; 1 bytes @ 0x9
  3499  0000D1                     	ds	1
  3500  0000D2                     CDCTxService@byte_to_send:
  3501                           	opt stack 0
  3502                           
  3503                           ; 1 bytes @ 0xA
  3504  0000D2                     	ds	1
  3505  0000D3                     oled_putChar@k:
  3506                           	opt stack 0
  3507  0000D3                     _getsUSBUSART$5683:
  3508                           	opt stack 0
  3509                           
  3510                           ; 2 bytes @ 0xB
  3511  0000D3                     	ds	1
  3512  0000D4                     oled_putChar@index:
  3513                           	opt stack 0
  3514                           
  3515                           ; 1 bytes @ 0xC
  3516  0000D4                     	ds	1
  3517  0000D5                     ??_USBapp_DeviceCdcEmulatorHandler:
  3518  0000D5                     oled_clearRow@page:
  3519                           	opt stack 0
  3520  0000D5                     oled_putString@string:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0xD
  3524  0000D5                     	ds	1
  3525  0000D6                     oled_clearRow@index:
  3526                           	opt stack 0
  3527                           
  3528                           ; 1 bytes @ 0xE
  3529  0000D6                     	ds	1
  3530  0000D7                     moteApp_GoToSleep@status:
  3531                           	opt stack 0
  3532  0000D7                     oled_putString@station_dot:
  3533                           	opt stack 0
  3534                           
  3535                           ; 1 bytes @ 0xF
  3536  0000D7                     	ds	1
  3537  0000D8                     oled_putString@start_page:
  3538                           	opt stack 0
  3539                           
  3540                           ; 1 bytes @ 0x10
  3541  0000D8                     	ds	1
  3542  0000D9                     oled_putString@index:
  3543                           	opt stack 0
  3544                           
  3545                           ; 1 bytes @ 0x11
  3546  0000D9                     	ds	1
  3547  0000DA                     moteJoiningProcess@switchEvent:
  3548                           	opt stack 0
  3549  0000DA                     oled_putUint8@station_dot:
  3550                           	opt stack 0
  3551  0000DA                     test_switch@timeout:
  3552                           	opt stack 0
  3553  0000DA                     oled_putUint16@number:
  3554                           	opt stack 0
  3555                           
  3556                           ; 2 bytes @ 0x12
  3557  0000DA                     	ds	1
  3558  0000DB                     moteJoiningProcess@joiningComplete:
  3559                           	opt stack 0
  3560  0000DB                     oled_putUint8@start_page:
  3561                           	opt stack 0
  3562                           
  3563                           ; 1 bytes @ 0x13
  3564  0000DB                     	ds	1
  3565  0000DC                     test_switch@buttonCheck:
  3566                           	opt stack 0
  3567  0000DC                     moteJoiningProcess@readDataRate:
  3568                           	opt stack 0
  3569  0000DC                     oled_putUint8@number:
  3570                           	opt stack 0
  3571  0000DC                     oled_putUint16@station_dot:
  3572                           	opt stack 0
  3573                           
  3574                           ; 1 bytes @ 0x14
  3575  0000DC                     	ds	1
  3576  0000DD                     moteJoiningProcess@messageReady:
  3577                           	opt stack 0
  3578  0000DD                     oled_putUint16@start_page:
  3579                           	opt stack 0
  3580  0000DD                     oled_putUint8@numData:
  3581                           	opt stack 0
  3582                           
  3583                           ; 6 bytes @ 0x15
  3584  0000DD                     	ds	1
  3585  0000DE                     oled_putUint16@numData:
  3586                           	opt stack 0
  3587                           
  3588                           ; 6 bytes @ 0x16
  3589  0000DE                     	ds	6
  3590  0000E4                     moteRunningProcess@selectButton:
  3591                           	opt stack 0
  3592  0000E4                     test_adc@L:
  3593                           	opt stack 0
  3594                           
  3595                           ; 2 bytes @ 0x1C
  3596  0000E4                     	ds	1
  3597  0000E5                     moteRunningProcess@messageReady:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x1D
  3601  0000E5                     	ds	1
  3602  0000E6                     moteRunningProcess@sleepEvent:
  3603                           	opt stack 0
  3604  0000E6                     test_adc@Traw:
  3605                           	opt stack 0
  3606                           
  3607                           ; 2 bytes @ 0x1E
  3608  0000E6                     	ds	1
  3609  0000E7                     ??_moteRunningProcess:
  3610                           
  3611                           ; 1 bytes @ 0x1F
  3612  0000E7                     	ds	1
  3613  0000E8                     test_adc@T:
  3614                           	opt stack 0
  3615                           
  3616                           ; 1 bytes @ 0x20
  3617  0000E8                     	ds	1
  3618  0000E9                     test_adc@count:
  3619                           	opt stack 0
  3620  0000E9                     moteRunningProcess@Traw:
  3621                           	opt stack 0
  3622                           
  3623                           ; 2 bytes @ 0x21
  3624  0000E9                     	ds	1
  3625  0000EA                     
  3626                           ; 1 bytes @ 0x22
  3627  0000EA                     	ds	1
  3628  0000EB                     moteRunningProcess@i:
  3629                           	opt stack 0
  3630                           
  3631                           ; 1 bytes @ 0x23
  3632  0000EB                     	ds	1
  3633  0000EC                     moteRunningProcess@i_1381:
  3634                           	opt stack 0
  3635                           
  3636                           ; 1 bytes @ 0x24
  3637  0000EC                     	ds	1
  3638  0000ED                     moteRunningProcess@dummyRead1:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x25
  3642  0000ED                     	ds	1
  3643  0000EE                     moteRunningProcess@dummyRead2:
  3644                           	opt stack 0
  3645                           
  3646                           ; 1 bytes @ 0x26
  3647  0000EE                     	ds	1
  3648  0000EF                     moteRunningProcess@counter:
  3649                           	opt stack 0
  3650                           
  3651                           ; 1 bytes @ 0x27
  3652  0000EF                     	ds	1
  3653  0000F0                     moteRunningProcess@counter_1527:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x28
  3657  0000F0                     	ds	1
  3658  0000F1                     moteRunningProcess@bufferReadPos:
  3659                           	opt stack 0
  3660                           
  3661                           ; 1 bytes @ 0x29
  3662  0000F1                     	ds	1
  3663  0000F2                     moteRunningProcess@changeStates:
  3664                           	opt stack 0
  3665                           
  3666                           ; 1 bytes @ 0x2A
  3667  0000F2                     	ds	1
  3668  0000F3                     ??_moteHandler:
  3669                           
  3670                           ; 1 bytes @ 0x2B
  3671  0000F3                     	ds	2
  3672  0000F5                     tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1l	equ	0xFE1
  3680                           
  3681                           ; 1 bytes @ 0x2D
  3682                           
  3683                           	psect	cstackCOMRAM
  3684  00002E                     __pcstackCOMRAM:
  3685                           	opt stack 0
  3686  00002E                     ??_USBStdGetDscHandler:
  3687  00002E                     ?i2_USBTransferOnePacket:
  3688                           	opt stack 0
  3689  00002E                     ?___lldiv:
  3690                           	opt stack 0
  3691  00002E                     USBConfigureEndpoint@direction:
  3692                           	opt stack 0
  3693  00002E                     USBCtrlTrfTxService@byteToSend:
  3694                           	opt stack 0
  3695  00002E                     i2USBTransferOnePacket@dir:
  3696                           	opt stack 0
  3697  00002E                     USBStdGetStatusHandler@p:
  3698                           	opt stack 0
  3699  00002E                     i2memset@p1:
  3700                           	opt stack 0
  3701  00002E                     ___lldiv@dividend:
  3702                           	opt stack 0
  3703                           
  3704                           ; 4 bytes @ 0x0
  3705  00002E                     	ds	1
  3706  00002F                     ??_USBConfigureEndpoint:
  3707  00002F                     i2USBTransferOnePacket@data:
  3708                           	opt stack 0
  3709                           
  3710                           ; 2 bytes @ 0x1
  3711  00002F                     	ds	1
  3712  000030                     i2memset@c:
  3713                           	opt stack 0
  3714                           
  3715                           ; 2 bytes @ 0x2
  3716  000030                     	ds	1
  3717  000031                     i2USBTransferOnePacket@len:
  3718                           	opt stack 0
  3719                           
  3720                           ; 1 bytes @ 0x3
  3721  000031                     	ds	1
  3722  000032                     i2USBTransferOnePacket@ep:
  3723                           	opt stack 0
  3724  000032                     i2memset@n:
  3725                           	opt stack 0
  3726  000032                     ___lldiv@divisor:
  3727                           	opt stack 0
  3728                           
  3729                           ; 4 bytes @ 0x4
  3730  000032                     	ds	1
  3731  000033                     USBConfigureEndpoint@EPNum:
  3732                           	opt stack 0
  3733  000033                     i2USBTransferOnePacket@handle:
  3734                           	opt stack 0
  3735                           
  3736                           ; 2 bytes @ 0x5
  3737  000033                     	ds	1
  3738  000034                     USBConfigureEndpoint@handle:
  3739                           	opt stack 0
  3740  000034                     i2memset@p:
  3741                           	opt stack 0
  3742                           
  3743                           ; 2 bytes @ 0x6
  3744  000034                     	ds	2
  3745  000036                     USBEnableEndpoint@options:
  3746                           	opt stack 0
  3747  000036                     i2USBDeviceInit@i:
  3748                           	opt stack 0
  3749  000036                     ___lldiv@quotient:
  3750                           	opt stack 0
  3751                           
  3752                           ; 4 bytes @ 0x8
  3753  000036                     	ds	1
  3754  000037                     USBEnableEndpoint@p:
  3755                           	opt stack 0
  3756                           
  3757                           ; 2 bytes @ 0x9
  3758  000037                     	ds	2
  3759  000039                     USBEnableEndpoint@ep:
  3760                           	opt stack 0
  3761                           
  3762                           ; 1 bytes @ 0xB
  3763  000039                     	ds	1
  3764  00003A                     USBapp_CdcEmulatorInitialize@i:
  3765                           	opt stack 0
  3766  00003A                     ___lldiv@counter:
  3767                           	opt stack 0
  3768                           
  3769                           ; 1 bytes @ 0xC
  3770  00003A                     	ds	1
  3771  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3772                           	opt stack 0
  3773  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3774                           	opt stack 0
  3775                           
  3776                           ; 4 bytes @ 0xD
  3777  00003B                     	ds	2
  3778  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3779                           	opt stack 0
  3780                           
  3781                           ; 2 bytes @ 0xF
  3782  00003D                     	ds	2
  3783  00003F                     USBCtrlTrfRxService@i:
  3784                           	opt stack 0
  3785  00003F                     USBCtrlTrfInHandler@lastDTS:
  3786                           	opt stack 0
  3787  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3788                           	opt stack 0
  3789                           
  3790                           ; 2 bytes @ 0x11
  3791  00003F                     	ds	1
  3792  000040                     USBCtrlTrfRxService@byteToRead:
  3793                           	opt stack 0
  3794                           
  3795                           ; 1 bytes @ 0x12
  3796  000040                     	ds	1
  3797  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3798                           
  3799                           ; 1 bytes @ 0x13
  3800  000041                     	ds	2
  3801  000043                     ??_USBStdFeatureReqHandler:
  3802  000043                     USBStdSetCfgHandler@i:
  3803                           	opt stack 0
  3804                           
  3805                           ; 1 bytes @ 0x15
  3806  000043                     	ds	2
  3807  000045                     USBStdFeatureReqHandler@pUEP:
  3808                           	opt stack 0
  3809                           
  3810                           ; 2 bytes @ 0x17
  3811  000045                     	ds	2
  3812  000047                     USBStdFeatureReqHandler@current_ep_data:
  3813                           	opt stack 0
  3814                           
  3815                           ; 1 bytes @ 0x19
  3816  000047                     	ds	1
  3817  000048                     USBStdFeatureReqHandler@p:
  3818                           	opt stack 0
  3819                           
  3820                           ; 2 bytes @ 0x1A
  3821  000048                     	ds	2
  3822  00004A                     ??_USBCheckStdRequest:
  3823                           
  3824                           ; 1 bytes @ 0x1C
  3825  00004A                     	ds	1
  3826  00004B                     ??_USBCtrlEPService:
  3827  00004B                     
  3828                           ; 1 bytes @ 0x1D
  3829  00004B                     	ds	2
  3830  00004D                     USBCtrlEPService@setup_cnt:
  3831                           	opt stack 0
  3832                           
  3833                           ; 1 bytes @ 0x1F
  3834  00004D                     	ds	1
  3835  00004E                     USBDeviceTasks@i:
  3836                           	opt stack 0
  3837                           
  3838                           ; 1 bytes @ 0x20
  3839  00004E                     	ds	1
  3840  00004F                     ??_INTERRUPT_InterruptManager:
  3841                           
  3842                           ; 1 bytes @ 0x21
  3843  00004F                     	ds	12
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1l	equ	0xFE1
  3852                           
  3853 ;;
  3854 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3855 ;;
  3856 ;; *************** function _main *****************
  3857 ;; Defined at:
  3858 ;;		line 40 in file "main.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : F/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        0 bytes
  3877 ;; Hardware stack levels required when called:   21
  3878 ;; This function calls:
  3879 ;;		_DATAEE_ReadByte
  3880 ;;		_DATAEE_WriteByte
  3881 ;;		_MOTEapp_handlerState
  3882 ;;		_SYSTEM_Initialize
  3883 ;;		_USBDeviceAttach
  3884 ;;		_USBDeviceInit
  3885 ;;		_USBapp_Handler
  3886 ;;		_USBapp_handlerState
  3887 ;;		_modemResync
  3888 ;;		_moteApp_delayms
  3889 ;;		_moteHandler
  3890 ;;		_oled_clear
  3891 ;;		_oled_init
  3892 ;;		_oled_putString
  3893 ;;		_test_powerup
  3894 ;; This function is called by:
  3895 ;;		Startup code after reset
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text0
  3900  002660                     __ptext0:
  3901                           	opt stack 0
  3902  002660                     _main:
  3903                           	opt stack 10
  3904                           
  3905                           ;main.c: 43: SYSTEM_Initialize();
  3906                           
  3907                           ;incstack = 0
  3908  002660  EC19  F020         	call	_SYSTEM_Initialize	;wreg free
  3909                           
  3910                           ;main.c: 45: oled_init();
  3911  002664  ECE6  F01F         	call	_oled_init	;wreg free
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;main.c: 46: USBDeviceInit();
  3915  002668  ECC5  F012         	call	_USBDeviceInit	;wreg free
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;main.c: 48: USBDeviceAttach();
  3919  00266C  ECD8  F01E         	call	_USBDeviceAttach	;wreg free
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 50: PEIE = 1;
  3923  002670  8CF2               	bsf	intcon,6,c	;volatile
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;main.c: 51: GIE = 1;
  3927  002672  8EF2               	bsf	intcon,7,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 53: moteApp_delayms(300);
  3931  002674  0E01               	movlw	1
  3932  002676  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3933  002678  0E2C               	movlw	44
  3934  00267A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  3935  00267C  EC97  F01F         	call	_moteApp_delayms	;wreg free
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;main.c: 54: modemResync();
  3939  002680  EC12  F01B         	call	_modemResync	;wreg free
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 55: moteApp_delayms(300);
  3943  002684  0E01               	movlw	1
  3944  002686  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3945  002688  0E2C               	movlw	44
  3946  00268A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  3947  00268C  EC97  F01F         	call	_moteApp_delayms	;wreg free
  3948                           
  3949                           ;main.c: 59: powerOnStatus = DATAEE_ReadByte(0x00);
  3950  002690  0E00               	movlw	0
  3951  002692  ECA8  F020         	call	_DATAEE_ReadByte
  3952  002696  0100               	movlb	0	; () banked
  3953  002698  6F96               	movwf	_powerOnStatus& (0+255),b
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;main.c: 60: if ( powerOnStatus != 0x55)
  3957  00269A  0E55               	movlw	85
  3958  00269C  1996               	xorwf	_powerOnStatus& (0+255),w,b
  3959  00269E  E007               	bz	l12282
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 61: {
  3963                           ;main.c: 62: test_powerup();
  3964  0026A0  EC23  F01E         	call	_test_powerup	;wreg free
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;main.c: 63: DATAEE_WriteByte(0x00, 0x55);
  3968  0026A4  0E55               	movlw	85
  3969  0026A6  6FC8               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3970  0026A8  0E00               	movlw	0
  3971  0026AA  EC06  F01E         	call	_DATAEE_WriteByte
  3972  0026AE                     l12282:
  3973                           
  3974                           ;main.c: 64: }
  3975                           ;main.c: 67: operationType = USB;
  3976  0026AE  0100               	movlb	0	; () banked
  3977  0026B0  6B95               	clrf	_operationType& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 68: USBapp_handlerState(USB_STARTUP);
  3981  0026B2  0E00               	movlw	0
  3982  0026B4  EC0F  F021         	call	_USBapp_handlerState
  3983                           
  3984                           ;main.c: 70: oled_clear();
  3985  0026B8  EC72  F020         	call	_oled_clear	;wreg free
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;main.c: 71: oled_putString("Microchip Mote",0,0);
  3989  0026BC  0E2D               	movlw	low STR_1
  3990  0026BE  6FD5               	movwf	oled_putString@string& (0+255),b
  3991  0026C0  0E7D               	movlw	high STR_1
  3992  0026C2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  3993  0026C4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  3994  0026C6  6BD8               	clrf	oled_putString@start_page& (0+255),b
  3995  0026C8  ECDF  F01A         	call	_oled_putString	;wreg free
  3996                           
  3997                           ;main.c: 72: oled_putString("   LoRa Demo  ",0,1);
  3998  0026CC  0E1E               	movlw	low STR_2
  3999  0026CE  0100               	movlb	0	; () banked
  4000  0026D0  6FD5               	movwf	oled_putString@string& (0+255),b
  4001  0026D2  0E7D               	movlw	high STR_2
  4002  0026D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4003  0026D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4004  0026D8  0E01               	movlw	1
  4005  0026DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4006  0026DC  ECDF  F01A         	call	_oled_putString	;wreg free
  4007                           
  4008                           ;main.c: 73: oled_putString("   RC3 Code   ",0,3);
  4009  0026E0  0E0F               	movlw	low STR_3
  4010  0026E2  0100               	movlb	0	; () banked
  4011  0026E4  6FD5               	movwf	oled_putString@string& (0+255),b
  4012  0026E6  0E7D               	movlw	high STR_3
  4013  0026E8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4014  0026EA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4015  0026EC  0E03               	movlw	3
  4016  0026EE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4017  0026F0  ECDF  F01A         	call	_oled_putString	;wreg free
  4018                           
  4019                           ;main.c: 74: moteApp_delayms(700);
  4020  0026F4  0E02               	movlw	2
  4021  0026F6  0100               	movlb	0	; () banked
  4022  0026F8  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4023  0026FA  0EBC               	movlw	188
  4024  0026FC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4025  0026FE  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4026  002702  D011               	goto	l12310
  4027  002704                     l55:
  4028  002704  D7FF               	goto	l55
  4029  002706                     l12296:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 86: USBapp_Handler();
  4033  002706  ECC6  F019         	call	_USBapp_Handler	;wreg free
  4034                           
  4035                           ;main.c: 88: operationType = MOTE;
  4036  00270A  0E01               	movlw	1
  4037  00270C  0100               	movlb	0	; () banked
  4038  00270E  6F95               	movwf	_operationType& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 89: MOTEapp_handlerState(MOTE_STARTUP);
  4042  002710  EC13  F021         	call	_MOTEapp_handlerState
  4043                           
  4044                           ;main.c: 90: break;
  4045  002714  D008               	goto	l12310
  4046  002716                     l12302:
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 92: if (moteHandler() == MOTE_SWAP)
  4050  002716  EC98  F00C         	call	_moteHandler	;wreg free
  4051  00271A  0A04               	xorlw	4
  4052  00271C  E104               	bnz	l12310
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;main.c: 93: {
  4056                           ;main.c: 95: operationType = USB;
  4057  00271E  6B95               	clrf	_operationType& (0+255),b
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 96: USBapp_handlerState(USB_STARTUP);
  4061  002720  0E00               	movlw	0
  4062  002722  EC0F  F021         	call	_USBapp_handlerState
  4063  002726                     l12310:
  4064  002726  0100               	movlb	0	; () banked
  4065  002728  5195               	movf	_operationType& (0+255),w,b
  4066                           
  4067                           ; Switch size 1, requested type "speed"
  4068                           ; Number of cases is 2, Range of values is 0 to 1
  4069                           ; switch strategies available:
  4070                           ; Name         Instructions Cycles
  4071                           ; simple_byte            7     4 (average)
  4072                           ;	Chosen strategy is simple_byte
  4073  00272A  E0ED               	bz	l12296
  4074  00272C  0A01               	xorlw	1	; case 1
  4075  00272E  E0F3               	bz	l12302
  4076  002730  D7E9               	goto	l55
  4077  002732                     __end_of_main:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           intcon	equ	0xFF2
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           postdec1	equ	0xFE5
  4087                           fsr1l	equ	0xFE1
  4088                           
  4089 ;; *************** function _test_powerup *****************
  4090 ;; Defined at:
  4091 ;;		line 27 in file "../Includes/Board/poweruptest.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : F/0
  4102 ;;		On exit  : F/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   18
  4112 ;; This function calls:
  4113 ;;		_moteApp_delayms
  4114 ;;		_oled_clear
  4115 ;;		_test_adc
  4116 ;;		_test_comms
  4117 ;;		_test_leds
  4118 ;;		_test_oled
  4119 ;;		_test_switch
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text1
  4126  003C46                     __ptext1:
  4127                           	opt stack 0
  4128  003C46                     _test_powerup:
  4129                           	opt stack 12
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;poweruptest.c: 30: test_oled();
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;incstack = 0
  4136  003C46  EC8A  F019         	call	_test_oled	;wreg free
  4137                           
  4138                           ;poweruptest.c: 31: moteApp_delayms(20);
  4139  003C4A  0100               	movlb	0	; () banked
  4140  003C4C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4141  003C4E  0E14               	movlw	20
  4142  003C50  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4143  003C52  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;poweruptest.c: 33: test_switch();
  4147  003C56  ECCE  F015         	call	_test_switch	;wreg free
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;poweruptest.c: 35: oled_clear();
  4151  003C5A  EC72  F020         	call	_oled_clear	;wreg free
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;poweruptest.c: 36: moteApp_delayms(20);
  4155  003C5E  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4156  003C60  0E14               	movlw	20
  4157  003C62  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4158  003C64  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;poweruptest.c: 37: test_comms();
  4162  003C68  ECFF  F01B         	call	_test_comms	;wreg free
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;poweruptest.c: 39: test_leds();
  4166  003C6C  EC2B  F01C         	call	_test_leds	;wreg free
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;poweruptest.c: 41: test_adc();
  4170  003C70  ECBF  F014         	call	_test_adc	;wreg free
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;poweruptest.c: 44: moteApp_delayms(20);
  4174  003C74  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4175  003C76  0E14               	movlw	20
  4176  003C78  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4177  003C7A  EF97  F01F         	goto	_moteApp_delayms	;wreg free
  4178  003C7E                     __end_of_test_powerup:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           intcon	equ	0xFF2
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           fsr1l	equ	0xFE1
  4189                           
  4190 ;; *************** function _test_switch *****************
  4191 ;; Defined at:
  4192 ;;		line 60 in file "../Includes/Board/poweruptest.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  timeout         2   18[BANK0 ] unsigned int 
  4197 ;;  buttonCheck     1   20[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : F/0
  4204 ;;		On exit  : F/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        3 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:   17
  4214 ;; This function calls:
  4215 ;;		_moteApp_delayms
  4216 ;;		_oled_clear
  4217 ;;		_oled_putString
  4218 ;; This function is called by:
  4219 ;;		_test_powerup
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text2
  4224  002B9C                     __ptext2:
  4225                           	opt stack 0
  4226  002B9C                     _test_switch:
  4227                           	opt stack 12
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;poweruptest.c: 62: uint16_t timeout = 500;
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;incstack = 0
  4234  002B9C  0E01               	movlw	1
  4235  002B9E  6FDB               	movwf	(test_switch@timeout+1)& (0+255),b
  4236  002BA0  0EF4               	movlw	244
  4237  002BA2  6FDA               	movwf	test_switch@timeout& (0+255),b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;poweruptest.c: 63: uint8_t buttonCheck = 0x00;
  4241  002BA4  6BDC               	clrf	test_switch@buttonCheck& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;poweruptest.c: 64: oled_clear();
  4245  002BA6  EC72  F020         	call	_oled_clear	;wreg free
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;poweruptest.c: 65: oled_putString("Button Test:",0,0);
  4249  002BAA  0E03               	movlw	low STR_10
  4250  002BAC  6FD5               	movwf	oled_putString@string& (0+255),b
  4251  002BAE  0E7E               	movlw	high STR_10
  4252  002BB0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4253  002BB2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4254  002BB4  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4255  002BB6  ECDF  F01A         	call	_oled_putString	;wreg free
  4256                           
  4257                           ;poweruptest.c: 67: if( (PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4258  002BBA  A082               	btfss	3970,0,c	;volatile
  4259  002BBC  D002               	goto	l10694
  4260  002BBE  B282               	btfsc	3970,1,c	;volatile
  4261  002BC0  D00B               	goto	l10696
  4262  002BC2                     l10694:
  4263                           
  4264                           ;poweruptest.c: 68: {
  4265                           ;poweruptest.c: 69: oled_putString("Button FAIL",0,3);
  4266  002BC2  0EA3               	movlw	low STR_11
  4267  002BC4  0100               	movlb	0	; () banked
  4268  002BC6  6FD5               	movwf	oled_putString@string& (0+255),b
  4269  002BC8  0E7E               	movlw	high STR_11
  4270  002BCA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4271  002BCC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4272  002BCE  0E03               	movlw	3
  4273  002BD0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4274  002BD2  ECDF  F01A         	call	_oled_putString	;wreg free
  4275                           
  4276                           ;poweruptest.c: 70: }
  4277  002BD6  D030               	goto	l10714
  4278  002BD8                     l10696:
  4279                           
  4280                           ;poweruptest.c: 71: else
  4281                           ;poweruptest.c: 72: {
  4282                           ;poweruptest.c: 73: oled_putString("Press Button",0,1);
  4283  002BD8  0E2A               	movlw	low STR_12
  4284  002BDA  0100               	movlb	0	; () banked
  4285  002BDC  6FD5               	movwf	oled_putString@string& (0+255),b
  4286  002BDE  0E7E               	movlw	high STR_12
  4287  002BE0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4288  002BE2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4289  002BE4  0E01               	movlw	1
  4290  002BE6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4291  002BE8  ECDF  F01A         	call	_oled_putString	;wreg free
  4292  002BEC  D025               	goto	l10714
  4293  002BEE                     l120:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;poweruptest.c: 76: {
  4297                           ;poweruptest.c: 77: if(PORTCbits.RC0 == 0)
  4298  002BEE  B082               	btfsc	3970,0,c	;volatile
  4299  002BF0  D00C               	goto	l10702
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;poweruptest.c: 78: {
  4303                           ;poweruptest.c: 79: oled_putString("Button1 PASS",0,2);
  4304  002BF2  0E10               	movlw	low STR_13
  4305  002BF4  6FD5               	movwf	oled_putString@string& (0+255),b
  4306  002BF6  0E7E               	movlw	high STR_13
  4307  002BF8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4308  002BFA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4309  002BFC  0E02               	movlw	2
  4310  002BFE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4311  002C00  ECDF  F01A         	call	_oled_putString	;wreg free
  4312                           
  4313                           ;poweruptest.c: 80: buttonCheck = buttonCheck + 0x08;
  4314  002C04  0E08               	movlw	8
  4315  002C06  0100               	movlb	0	; () banked
  4316  002C08  27DC               	addwf	test_switch@buttonCheck& (0+255),f,b
  4317  002C0A                     l10702:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;poweruptest.c: 81: }
  4321                           ;poweruptest.c: 82: if(PORTCbits.RC1 == 0)
  4322  002C0A  B282               	btfsc	3970,1,c	;volatile
  4323  002C0C  D00C               	goto	l10708
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;poweruptest.c: 83: {
  4327                           ;poweruptest.c: 84: oled_putString("Button2 PASS",0,3);
  4328  002C0E  0E1D               	movlw	low STR_14
  4329  002C10  6FD5               	movwf	oled_putString@string& (0+255),b
  4330  002C12  0E7E               	movlw	high STR_14
  4331  002C14  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4332  002C16  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4333  002C18  0E03               	movlw	3
  4334  002C1A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4335  002C1C  ECDF  F01A         	call	_oled_putString	;wreg free
  4336                           
  4337                           ;poweruptest.c: 85: buttonCheck = buttonCheck + 0x80;
  4338  002C20  0E80               	movlw	128
  4339  002C22  0100               	movlb	0	; () banked
  4340  002C24  27DC               	addwf	test_switch@buttonCheck& (0+255),f,b
  4341  002C26                     l10708:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;poweruptest.c: 86: }
  4345                           ;poweruptest.c: 87: if (buttonCheck == 0x88)
  4346  002C26  0E88               	movlw	136
  4347  002C28  19DC               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4348  002C2A  E101               	bnz	l10712
  4349  002C2C  0012               	return	
  4350  002C2E                     l10712:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;poweruptest.c: 90: }
  4354                           ;poweruptest.c: 91: moteApp_delayms(10);
  4355  002C2E  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4356  002C30  0E0A               	movlw	10
  4357  002C32  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4358  002C34  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4359  002C38                     l10714:
  4360  002C38  0100               	movlb	0	; () banked
  4361  002C3A  07DA               	decf	test_switch@timeout& (0+255),f,b
  4362  002C3C  A0D8               	btfss	status,0,c
  4363  002C3E  07DB               	decf	(test_switch@timeout+1)& (0+255),f,b
  4364  002C40  29DA               	incf	test_switch@timeout& (0+255),w,b
  4365  002C42  E1D5               	bnz	l120
  4366  002C44  29DB               	incf	(test_switch@timeout+1)& (0+255),w,b
  4367  002C46  E1D3               	bnz	l120
  4368                           
  4369                           ; BSR set to: 0
  4370  002C48  0012               	return		;funcret
  4371  002C4A                     __end_of_test_switch:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           postdec1	equ	0xFE5
  4381                           fsr1l	equ	0xFE1
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _test_oled *****************
  4385 ;; Defined at:
  4386 ;;		line 47 in file "../Includes/Board/poweruptest.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : F/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   17
  4407 ;; This function calls:
  4408 ;;		_oled_clear
  4409 ;;		_oled_putString
  4410 ;; This function is called by:
  4411 ;;		_test_powerup
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text3
  4416  003314                     __ptext3:
  4417                           	opt stack 0
  4418  003314                     _test_oled:
  4419                           	opt stack 12
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;poweruptest.c: 49: oled_clear();
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426  003314  EC72  F020         	call	_oled_clear	;wreg free
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;poweruptest.c: 51: oled_putString("MoTe v .",0,0);
  4430  003318  0E63               	movlw	low STR_4
  4431  00331A  6FD5               	movwf	oled_putString@string& (0+255),b
  4432  00331C  0E7F               	movlw	high STR_4
  4433  00331E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4434  003320  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4435  003322  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4436  003324  ECDF  F01A         	call	_oled_putString	;wreg free
  4437                           
  4438                           ;poweruptest.c: 52: oled_putString("0",0,6);
  4439  003328  0E86               	movlw	low (STR_97+13)
  4440  00332A  0100               	movlb	0	; () banked
  4441  00332C  6FD5               	movwf	oled_putString@string& (0+255),b
  4442  00332E  0E7C               	movlw	high (STR_97+13)
  4443  003330  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4444  003332  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4445  003334  0E06               	movlw	6
  4446  003336  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4447  003338  ECDF  F01A         	call	_oled_putString	;wreg free
  4448                           
  4449                           ;poweruptest.c: 53: oled_putString("1",0,8);
  4450  00333C  0E95               	movlw	low (STR_98+13)
  4451  00333E  0100               	movlb	0	; () banked
  4452  003340  6FD5               	movwf	oled_putString@string& (0+255),b
  4453  003342  0E7C               	movlw	high (STR_98+13)
  4454  003344  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4455  003346  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4456  003348  0E08               	movlw	8
  4457  00334A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4458  00334C  ECDF  F01A         	call	_oled_putString	;wreg free
  4459                           
  4460                           ;poweruptest.c: 54: oled_putString("Build Date/Time",0,1);
  4461  003350  0E3C               	movlw	low STR_7
  4462  003352  0100               	movlb	0	; () banked
  4463  003354  6FD5               	movwf	oled_putString@string& (0+255),b
  4464  003356  0E7C               	movlw	high STR_7
  4465  003358  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4466  00335A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4467  00335C  0E01               	movlw	1
  4468  00335E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4469  003360  ECDF  F01A         	call	_oled_putString	;wreg free
  4470                           
  4471                           ;poweruptest.c: 55: oled_putString("Feb 27 2016",0,2);
  4472  003364  0E97               	movlw	low STR_8
  4473  003366  0100               	movlb	0	; () banked
  4474  003368  6FD5               	movwf	oled_putString@string& (0+255),b
  4475  00336A  0E7E               	movlw	high STR_8
  4476  00336C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4477  00336E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4478  003370  0E02               	movlw	2
  4479  003372  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4480  003374  ECDF  F01A         	call	_oled_putString	;wreg free
  4481                           
  4482                           ;poweruptest.c: 56: oled_putString("22:08:40",0,3);
  4483  003378  0E6C               	movlw	low STR_9
  4484  00337A  0100               	movlb	0	; () banked
  4485  00337C  6FD5               	movwf	oled_putString@string& (0+255),b
  4486  00337E  0E7F               	movlw	high STR_9
  4487  003380  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4488  003382  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4489  003384  0E03               	movlw	3
  4490  003386  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4491  003388  EFDF  F01A         	goto	_oled_putString	;wreg free
  4492  00338C                     __end_of_test_oled:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           intcon	equ	0xFF2
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           postdec1	equ	0xFE5
  4502                           fsr1l	equ	0xFE1
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _test_leds *****************
  4506 ;; Defined at:
  4507 ;;		line 108 in file "../Includes/Board/poweruptest.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : F/0
  4518 ;;		On exit  : F/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:   16
  4528 ;; This function calls:
  4529 ;;		_moteApp_delayms
  4530 ;;		_oled_putString
  4531 ;; This function is called by:
  4532 ;;		_test_powerup
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text4
  4537  003856                     __ptext4:
  4538                           	opt stack 0
  4539  003856                     _test_leds:
  4540                           	opt stack 13
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;poweruptest.c: 110: oled_putString("LED Test:",0,1);
  4544                           
  4545                           ;incstack = 0
  4546  003856  0E23               	movlw	low STR_16
  4547  003858  6FD5               	movwf	oled_putString@string& (0+255),b
  4548  00385A  0E7F               	movlw	high STR_16
  4549  00385C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4550  00385E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4551  003860  0E01               	movlw	1
  4552  003862  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4553  003864  ECDF  F01A         	call	_oled_putString	;wreg free
  4554                           
  4555                           ;poweruptest.c: 112: LATAbits.LATA6 = 1;
  4556  003868  8C89               	bsf	3977,6,c	;volatile
  4557                           
  4558                           ;poweruptest.c: 113: LATAbits.LATA7 = 1;
  4559  00386A  8E89               	bsf	3977,7,c	;volatile
  4560                           
  4561                           ;poweruptest.c: 114: moteApp_delayms(500);
  4562  00386C  0E01               	movlw	1
  4563  00386E  0100               	movlb	0	; () banked
  4564  003870  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4565  003872  0EF4               	movlw	244
  4566  003874  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4567  003876  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;poweruptest.c: 115: LATAbits.LATA6 = 0;
  4571  00387A  9C89               	bcf	3977,6,c	;volatile
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;poweruptest.c: 116: LATAbits.LATA7 = 0;
  4575  00387C  9E89               	bcf	3977,7,c	;volatile
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;poweruptest.c: 117: moteApp_delayms(500);
  4579  00387E  0E01               	movlw	1
  4580  003880  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4581  003882  0EF4               	movlw	244
  4582  003884  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4583  003886  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;poweruptest.c: 118: LATAbits.LATA6 = 1;
  4587  00388A  8C89               	bsf	3977,6,c	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;poweruptest.c: 119: LATAbits.LATA7 = 1;
  4591  00388C  8E89               	bsf	3977,7,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;poweruptest.c: 120: moteApp_delayms(500);
  4595  00388E  0E01               	movlw	1
  4596  003890  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4597  003892  0EF4               	movlw	244
  4598  003894  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4599  003896  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;poweruptest.c: 121: LATAbits.LATA6 = 0;
  4603  00389A  9C89               	bcf	3977,6,c	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;poweruptest.c: 122: LATAbits.LATA7 = 0;
  4607  00389C  9E89               	bcf	3977,7,c	;volatile
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;poweruptest.c: 123: moteApp_delayms(500);
  4611  00389E  0E01               	movlw	1
  4612  0038A0  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4613  0038A2  0EF4               	movlw	244
  4614  0038A4  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4615  0038A6  EF97  F01F         	goto	_moteApp_delayms	;wreg free
  4616  0038AA                     __end_of_test_leds:
  4617                           	opt stack 0
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           intcon	equ	0xFF2
  4623                           postinc0	equ	0xFEE
  4624                           wreg	equ	0xFE8
  4625                           postdec1	equ	0xFE5
  4626                           fsr1l	equ	0xFE1
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function _test_comms *****************
  4630 ;; Defined at:
  4631 ;;		line 95 in file "../Includes/Board/poweruptest.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : F/0
  4642 ;;		On exit  : F/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:   16
  4652 ;; This function calls:
  4653 ;;		_moteApp_delayms
  4654 ;;		_moteApp_toggleLeds
  4655 ;;		_oled_putString
  4656 ;; This function is called by:
  4657 ;;		_test_powerup
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text5
  4662  0037FE                     __ptext5:
  4663                           	opt stack 0
  4664  0037FE                     _test_comms:
  4665                           	opt stack 13
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;poweruptest.c: 97: oled_putString("Comm Test:",0,0);
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;incstack = 0
  4672  0037FE  0EE6               	movlw	low STR_15
  4673  003800  6FD5               	movwf	oled_putString@string& (0+255),b
  4674  003802  0E7E               	movlw	high STR_15
  4675  003804  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4676  003806  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4677  003808  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4678  00380A  ECDF  F01A         	call	_oled_putString	;wreg free
  4679                           
  4680                           ;poweruptest.c: 98: moteApp_toggleLeds(1);
  4681  00380E  0E01               	movlw	1
  4682  003810  EC77  F01A         	call	_moteApp_toggleLeds
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;poweruptest.c: 99: moteApp_delayms(500);
  4686  003814  0E01               	movlw	1
  4687  003816  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4688  003818  0EF4               	movlw	244
  4689  00381A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4690  00381C  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;poweruptest.c: 100: moteApp_toggleLeds(0);
  4694  003820  0E00               	movlw	0
  4695  003822  EC77  F01A         	call	_moteApp_toggleLeds
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;poweruptest.c: 101: moteApp_delayms(500);
  4699  003826  0E01               	movlw	1
  4700  003828  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4701  00382A  0EF4               	movlw	244
  4702  00382C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4703  00382E  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;poweruptest.c: 102: moteApp_toggleLeds(1);
  4707  003832  0E01               	movlw	1
  4708  003834  EC77  F01A         	call	_moteApp_toggleLeds
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;poweruptest.c: 103: moteApp_delayms(500);
  4712  003838  0E01               	movlw	1
  4713  00383A  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4714  00383C  0EF4               	movlw	244
  4715  00383E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4716  003840  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;poweruptest.c: 104: moteApp_toggleLeds(0);
  4720  003844  0E00               	movlw	0
  4721  003846  EC77  F01A         	call	_moteApp_toggleLeds
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;poweruptest.c: 105: moteApp_delayms(500);
  4725  00384A  0E01               	movlw	1
  4726  00384C  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4727  00384E  0EF4               	movlw	244
  4728  003850  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4729  003852  EF97  F01F         	goto	_moteApp_delayms	;wreg free
  4730  003856                     __end_of_test_comms:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           intcon	equ	0xFF2
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1l	equ	0xFE1
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function _moteApp_toggleLeds *****************
  4744 ;; Defined at:
  4745 ;;		line 1365 in file "../Includes/Board/MOTEapp.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  state           1    wreg     unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  state           1    5[BANK0 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : F/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        1 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   14
  4766 ;; This function calls:
  4767 ;;		_moteApp_delayms
  4768 ;;		_sendCommand
  4769 ;; This function is called by:
  4770 ;;		_test_comms
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text6
  4775  0034EE                     __ptext6:
  4776                           	opt stack 0
  4777  0034EE                     _moteApp_toggleLeds:
  4778                           	opt stack 14
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;incstack = 0
  4782                           ;moteApp_toggleLeds@state stored from wreg
  4783  0034EE  0100               	movlb	0	; () banked
  4784  0034F0  6FCD               	movwf	moteApp_toggleLeds@state& (0+255),b
  4785                           
  4786                           ;MOTEapp.c: 1367: moteApp_delayms(50);
  4787  0034F2  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4788  0034F4  0E32               	movlw	50
  4789  0034F6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4790  0034F8  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;MOTEapp.c: 1368: if (state)
  4794  0034FC  51CD               	movf	moteApp_toggleLeds@state& (0+255),w,b
  4795  0034FE  E013               	bz	l10238
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;MOTEapp.c: 1369: {
  4799                           ;MOTEapp.c: 1370: sendCommand("sys set pindig GPIO10 1\r\n");
  4800  003500  0E3E               	movlw	low STR_254
  4801  003502  6FC9               	movwf	sendCommand@string& (0+255),b
  4802  003504  0E7A               	movlw	high STR_254
  4803  003506  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4804  003508  EC30  F01F         	call	_sendCommand	;wreg free
  4805                           
  4806                           ;MOTEapp.c: 1371: moteApp_delayms(50);
  4807  00350C  0100               	movlb	0	; () banked
  4808  00350E  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4809  003510  0E32               	movlw	50
  4810  003512  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4811  003514  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;MOTEapp.c: 1372: sendCommand("sys set pindig GPIO11 1\r\n");
  4815  003518  0E58               	movlw	low STR_255
  4816  00351A  6FC9               	movwf	sendCommand@string& (0+255),b
  4817  00351C  0E7A               	movlw	high STR_255
  4818  00351E  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4819  003520  EC30  F01F         	call	_sendCommand	;wreg free
  4820                           
  4821                           ;MOTEapp.c: 1373: }
  4822  003524  D012               	goto	l709
  4823  003526                     l10238:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;MOTEapp.c: 1374: else
  4827                           ;MOTEapp.c: 1375: {
  4828                           ;MOTEapp.c: 1376: sendCommand("sys set pindig GPIO10 0\r\n");
  4829  003526  0E0A               	movlw	low STR_256
  4830  003528  6FC9               	movwf	sendCommand@string& (0+255),b
  4831  00352A  0E7A               	movlw	high STR_256
  4832  00352C  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4833  00352E  EC30  F01F         	call	_sendCommand	;wreg free
  4834                           
  4835                           ;MOTEapp.c: 1377: moteApp_delayms(50);
  4836  003532  0100               	movlb	0	; () banked
  4837  003534  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4838  003536  0E32               	movlw	50
  4839  003538  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4840  00353A  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;MOTEapp.c: 1378: sendCommand("sys set pindig GPIO11 0\r\n");
  4844  00353E  0E24               	movlw	low STR_257
  4845  003540  6FC9               	movwf	sendCommand@string& (0+255),b
  4846  003542  0E7A               	movlw	high STR_257
  4847  003544  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4848  003546  EC30  F01F         	call	_sendCommand	;wreg free
  4849  00354A                     l709:
  4850                           
  4851                           ;MOTEapp.c: 1379: }
  4852                           ;MOTEapp.c: 1380: moteApp_delayms(50);
  4853  00354A  0100               	movlb	0	; () banked
  4854  00354C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4855  00354E  0E32               	movlw	50
  4856  003550  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4857  003552  EF97  F01F         	goto	_moteApp_delayms	;wreg free
  4858  003556                     __end_of_moteApp_toggleLeds:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           intcon	equ	0xFF2
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           fsr1l	equ	0xFE1
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _test_adc *****************
  4872 ;; Defined at:
  4873 ;;		line 126 in file "../Includes/Board/poweruptest.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  Traw            2   30[BANK0 ] unsigned int 
  4878 ;;  L               2   28[BANK0 ] unsigned int 
  4879 ;;  F               2    0        unsigned int 
  4880 ;;  count           1   33[BANK0 ] unsigned char 
  4881 ;;  T               1   32[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : F/0
  4888 ;;		On exit  : F/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0
  4892 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4894 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        6 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:   17
  4898 ;; This function calls:
  4899 ;;		_ADC_GetConversion
  4900 ;;		_ADC_TempConversion
  4901 ;;		_moteApp_delayms
  4902 ;;		_oled_clear
  4903 ;;		_oled_putChar
  4904 ;;		_oled_putString
  4905 ;;		_oled_putUint16
  4906 ;;		_oled_putUint8
  4907 ;; This function is called by:
  4908 ;;		_test_powerup
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text7
  4913  00297E                     __ptext7:
  4914                           	opt stack 0
  4915  00297E                     _test_adc:
  4916                           	opt stack 12
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;poweruptest.c: 128: uint16_t L,Traw,F;
  4920                           ;poweruptest.c: 129: uint8_t count, T;
  4921                           ;poweruptest.c: 131: oled_clear();
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;incstack = 0
  4925  00297E  EC72  F020         	call	_oled_clear	;wreg free
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;poweruptest.c: 132: oled_putString("ADC Test",0,0);
  4929  002982  0E7E               	movlw	low STR_17
  4930  002984  6FD5               	movwf	oled_putString@string& (0+255),b
  4931  002986  0E7F               	movlw	high STR_17
  4932  002988  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4933  00298A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4934  00298C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4935  00298E  ECDF  F01A         	call	_oled_putString	;wreg free
  4936                           
  4937                           ;poweruptest.c: 133: oled_putString("Temp  =",0,1);
  4938  002992  0EA7               	movlw	low STR_18
  4939  002994  0100               	movlb	0	; () banked
  4940  002996  6FD5               	movwf	oled_putString@string& (0+255),b
  4941  002998  0E7F               	movlw	high STR_18
  4942  00299A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4943  00299C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4944  00299E  0E01               	movlw	1
  4945  0029A0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4946  0029A2  ECDF  F01A         	call	_oled_putString	;wreg free
  4947                           
  4948                           ;poweruptest.c: 134: oled_putChar('C',14,1);
  4949  0029A6  0E0E               	movlw	14
  4950  0029A8  0100               	movlb	0	; () banked
  4951  0029AA  6FCB               	movwf	oled_putChar@station_dot& (0+255),b
  4952  0029AC  0E01               	movlw	1
  4953  0029AE  6FCC               	movwf	oled_putChar@start_page& (0+255),b
  4954  0029B0  0E43               	movlw	67
  4955  0029B2  EC01  F01A         	call	_oled_putChar
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;poweruptest.c: 135: oled_putString("Light =",0,2);
  4959  0029B6  0EAF               	movlw	low STR_19
  4960  0029B8  6FD5               	movwf	oled_putString@string& (0+255),b
  4961  0029BA  0E7F               	movlw	high STR_19
  4962  0029BC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4963  0029BE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4964  0029C0  0E02               	movlw	2
  4965  0029C2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4966  0029C4  ECDF  F01A         	call	_oled_putString	;wreg free
  4967                           
  4968                           ;poweruptest.c: 137: for(count=0;count< 50;count++)
  4969  0029C8  0100               	movlb	0	; () banked
  4970  0029CA  6BE9               	clrf	test_adc@count& (0+255),b
  4971  0029CC                     l10774:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;poweruptest.c: 138: {
  4975                           ;poweruptest.c: 140: moteApp_delayms(50);
  4976  0029CC  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4977  0029CE  0E32               	movlw	50
  4978  0029D0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4979  0029D2  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4980                           
  4981                           ;poweruptest.c: 141: Traw = ADC_GetConversion(Temp_channel);
  4982  0029D6  0E02               	movlw	2
  4983  0029D8  ECE9  F01D         	call	_ADC_GetConversion
  4984  0029DC  C0C8  F0E6         	movff	?_ADC_GetConversion,test_adc@Traw
  4985  0029E0  C0C9  F0E7         	movff	?_ADC_GetConversion+1,test_adc@Traw+1
  4986                           
  4987                           ;poweruptest.c: 142: T = ADC_TempConversion(Traw);
  4988  0029E4  51E6               	movf	test_adc@Traw& (0+255),w,b
  4989  0029E6  ECF7  F01F         	call	_ADC_TempConversion
  4990  0029EA  6FE8               	movwf	test_adc@T& (0+255),b
  4991                           
  4992                           ;poweruptest.c: 144: moteApp_delayms(50);
  4993  0029EC  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4994  0029EE  0E32               	movlw	50
  4995  0029F0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4996  0029F2  EC97  F01F         	call	_moteApp_delayms	;wreg free
  4997                           
  4998                           ;poweruptest.c: 145: L = ADC_GetConversion(Light_channel);
  4999  0029F6  0E03               	movlw	3
  5000  0029F8  ECE9  F01D         	call	_ADC_GetConversion
  5001  0029FC  C0C8  F0E4         	movff	?_ADC_GetConversion,test_adc@L
  5002  002A00  C0C9  F0E5         	movff	?_ADC_GetConversion+1,test_adc@L+1
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;poweruptest.c: 147: oled_putUint8(T,10,1);
  5006  002A04  0E0A               	movlw	10
  5007  002A06  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5008  002A08  0E01               	movlw	1
  5009  002A0A  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5010  002A0C  51E8               	movf	test_adc@T& (0+255),w,b
  5011  002A0E  ECD2  F01B         	call	_oled_putUint8
  5012                           
  5013                           ;poweruptest.c: 148: oled_putUint16(L,10,2);
  5014  002A12  C0E4  F0DA         	movff	test_adc@L,oled_putUint16@number
  5015  002A16  C0E5  F0DB         	movff	test_adc@L+1,oled_putUint16@number+1
  5016  002A1A  0E0A               	movlw	10
  5017  002A1C  0100               	movlb	0	; () banked
  5018  002A1E  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  5019  002A20  0E02               	movlw	2
  5020  002A22  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  5021  002A24  EC1B  F010         	call	_oled_putUint16	;wreg free
  5022  002A28  0100               	movlb	0	; () banked
  5023  002A2A  2BE9               	incf	test_adc@count& (0+255),f,b
  5024                           
  5025                           ; BSR set to: 0
  5026  002A2C  0E31               	movlw	49
  5027  002A2E  65E9               	cpfsgt	test_adc@count& (0+255),b
  5028  002A30  D7CD               	goto	l10774
  5029  002A32  0C31               	retlw	49
  5030  002A34                     __end_of_test_adc:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           postdec1	equ	0xFE5
  5040                           fsr1l	equ	0xFE1
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function _moteHandler *****************
  5044 ;; Defined at:
  5045 ;;		line 159 in file "../Includes/Board/MOTEapp.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  i               1    7[BANK1 ] unsigned char 
  5050 ;;  i               1    6[BANK1 ] unsigned char 
  5051 ;;  Traw            2    2[BANK1 ] unsigned int 
  5052 ;;  readMessage     1    8[BANK1 ] unsigned char 
  5053 ;;  buttonPress     1    5[BANK1 ] enum E6266
  5054 ;;  s2Button        1    4[BANK1 ] unsigned char 
  5055 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5056 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      enum E7241
  5059 ;; Registers used:
  5060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : F/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       9       0       0       0       0       0       0
  5068 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5069 ;;      Totals:         0       2       9       0       0       0       0       0       0
  5070 ;;Total ram usage:       11 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:   20
  5073 ;; This function calls:
  5074 ;;		_ADC_GetConversion
  5075 ;;		_ADC_TempConversion
  5076 ;;		_MOTEapp_TimerBasedTask
  5077 ;;		_MOTEapp_getModemResponse
  5078 ;;		_TMRapp_ClearBitFlags
  5079 ;;		_TMRapp_Handler
  5080 ;;		_moteApp_delayms
  5081 ;;		_moteJoiningProcess
  5082 ;;		_moteRunningProcess
  5083 ;;		_oled_clear
  5084 ;;		_oled_putString
  5085 ;;		_service_pushbutton
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text8
  5092  001930                     __ptext8:
  5093                           	opt stack 0
  5094  001930                     _moteHandler:
  5095                           	opt stack 10
  5096                           
  5097                           ;MOTEapp.c: 161: bool gotoSleep = 0;
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101  001930  0101               	movlb	1	; () banked
  5102  001932  6BD8               	clrf	moteHandler@gotoSleep& (0+255),b
  5103                           
  5104                           ;MOTEapp.c: 162: bool gotoNextState = 0;
  5105  001934  6BD9               	clrf	moteHandler@gotoNextState& (0+255),b
  5106                           
  5107                           ;MOTEapp.c: 163: bool s2Button = 0;
  5108  001936  6BDC               	clrf	moteHandler@s2Button& (0+255),b
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;MOTEapp.c: 168: if (PORTAbits.RA0)
  5112                           
  5113                           ; BSR set to: 1
  5114  001938  A080               	btfss	3968,0,c	;volatile
  5115  00193A  D003               	goto	l12150
  5116                           
  5117                           ; BSR set to: 1
  5118                           ;MOTEapp.c: 169: moteState = MOTE_SWAP;
  5119  00193C  0E04               	movlw	4
  5120  00193E  0100               	movlb	0	; () banked
  5121  001940  6FF8               	movwf	_moteState& (0+255),b
  5122  001942                     l12150:
  5123                           
  5124                           ;MOTEapp.c: 172: if ( appTimer.mSecTick )
  5125  001942  0100               	movlb	0	; () banked
  5126  001944  A18F               	btfss	_appTimer& (0+255),0,b
  5127  001946  D007               	goto	l12158
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;MOTEapp.c: 173: {
  5131                           ;MOTEapp.c: 175: TMRapp_ClearBitFlags();
  5132  001948  EC20  F021         	call	_TMRapp_ClearBitFlags	;wreg free
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;MOTEapp.c: 177: TMRapp_Handler();
  5136  00194C  EC7E  F011         	call	_TMRapp_Handler	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;MOTEapp.c: 178: MOTEapp_TimerBasedTask(appTimer);
  5140  001950  518F               	movf	_appTimer& (0+255),w,b
  5141  001952  ECDD  F020         	call	_MOTEapp_TimerBasedTask
  5142  001956                     l12158:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;MOTEapp.c: 179: }
  5146                           ;MOTEapp.c: 182: buttonPress = service_pushbutton();
  5147  001956  ECD1  F01C         	call	_service_pushbutton	;wreg free
  5148  00195A  0101               	movlb	1	; () banked
  5149  00195C  6FDD               	movwf	moteHandler@buttonPress& (0+255),b
  5150                           
  5151                           ;MOTEapp.c: 183: if (buttonPress == ShortPress1)
  5152  00195E  05DD               	decf	moteHandler@buttonPress& (0+255),w,b
  5153  001960  E106               	bnz	l12164
  5154                           
  5155                           ; BSR set to: 1
  5156                           ;MOTEapp.c: 184: {
  5157                           ;MOTEapp.c: 185: secTicker = 0;
  5158  001962  0100               	movlb	0	; () banked
  5159  001964  6B99               	clrf	_secTicker& (0+255),b
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;MOTEapp.c: 186: gotoNextState = 1;
  5163  001966  0E01               	movlw	1
  5164  001968  0101               	movlb	1	; () banked
  5165  00196A  6FD9               	movwf	moteHandler@gotoNextState& (0+255),b
  5166                           
  5167                           ;MOTEapp.c: 187: }
  5168  00196C  D008               	goto	l12170
  5169  00196E                     l12164:
  5170                           
  5171                           ; BSR set to: 1
  5172                           ;MOTEapp.c: 188: else if (buttonPress == ShortPress2)
  5173  00196E  0E02               	movlw	2
  5174  001970  19DD               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5175  001972  E105               	bnz	l12170
  5176                           
  5177                           ; BSR set to: 1
  5178                           ;MOTEapp.c: 189: {
  5179                           ;MOTEapp.c: 190: secTicker = 0;
  5180  001974  0100               	movlb	0	; () banked
  5181  001976  6B99               	clrf	_secTicker& (0+255),b
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;MOTEapp.c: 191: s2Button = 1;
  5185  001978  0E01               	movlw	1
  5186  00197A  0101               	movlb	1	; () banked
  5187  00197C  6FDC               	movwf	moteHandler@s2Button& (0+255),b
  5188  00197E                     l12170:
  5189                           
  5190                           ; BSR set to: 1
  5191                           ;MOTEapp.c: 192: }
  5192                           ;MOTEapp.c: 195: if ( MOTEapp_getModemResponse() )
  5193  00197E  ECF7  F01C         	call	_MOTEapp_getModemResponse	;wreg free
  5194  001982  0900               	iorlw	0
  5195  001984  E004               	bz	l324
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;MOTEapp.c: 196: readMessage = 1;
  5199  001986  0E01               	movlw	1
  5200  001988  0101               	movlb	1	; () banked
  5201  00198A  6FE0               	movwf	moteHandler@readMessage& (0+255),b
  5202  00198C  D002               	goto	l12174
  5203  00198E                     l324:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;MOTEapp.c: 197: else
  5207                           ;MOTEapp.c: 198: readMessage = 0;
  5208  00198E  0101               	movlb	1	; () banked
  5209  001990  6BE0               	clrf	moteHandler@readMessage& (0+255),b
  5210  001992                     l12174:
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;MOTEapp.c: 201: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  5214  001992  0E06               	movlw	6
  5215  001994  0100               	movlb	0	; () banked
  5216  001996  1998               	xorwf	_runningState& (0+255),w,b
  5217  001998  E003               	bz	l12178
  5218                           
  5219                           ; BSR set to: 0
  5220  00199A  0E02               	movlw	2
  5221  00199C  1998               	xorwf	_runningState& (0+255),w,b
  5222  00199E  E146               	bnz	l12214
  5223  0019A0                     l12178:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;MOTEapp.c: 202: {
  5227                           ;MOTEapp.c: 204: if (m10SecTicker >= 5)
  5228  0019A0  0E04               	movlw	4
  5229  0019A2  6594               	cpfsgt	_m10SecTicker& (0+255),b
  5230  0019A4  D043               	goto	l12214
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;MOTEapp.c: 205: {
  5234                           ;MOTEapp.c: 206: uint16_t Traw = 0;
  5235  0019A6  0101               	movlb	1	; () banked
  5236  0019A8  6BDA               	clrf	moteHandler@Traw& (0+255),b
  5237  0019AA  6BDB               	clrf	(moteHandler@Traw+1)& (0+255),b
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;MOTEapp.c: 207: moteApp_delayms(10);
  5241  0019AC  0100               	movlb	0	; () banked
  5242  0019AE  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5243  0019B0  0E0A               	movlw	10
  5244  0019B2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5245  0019B4  EC97  F01F         	call	_moteApp_delayms	;wreg free
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;MOTEapp.c: 208: for(uint8_t i = 32; i>0; i--)
  5249  0019B8  0E20               	movlw	32
  5250  0019BA  0101               	movlb	1	; () banked
  5251  0019BC  6FDE               	movwf	moteHandler@i& (0+255),b
  5252  0019BE                     l12190:
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;MOTEapp.c: 209: {
  5256                           ;MOTEapp.c: 210: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5257  0019BE  0E03               	movlw	3
  5258  0019C0  ECE9  F01D         	call	_ADC_GetConversion
  5259  0019C4  517A               	movf	_light& (0+255),w,b
  5260  0019C6  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5261  0019C8  517B               	movf	(_light+1)& (0+255),w,b
  5262  0019CA  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5263  0019CC  90D8               	bcf	status,0,c
  5264  0019CE  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5265  0019D0  6FF3               	movwf	??_moteHandler& (0+255),b
  5266  0019D2  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5267  0019D4  6F7A               	movwf	_light& (0+255),b
  5268  0019D6  C0F3  F07B         	movff	??_moteHandler,_light+1
  5269                           
  5270                           ; BSR set to: 0
  5271  0019DA  0101               	movlb	1	; () banked
  5272  0019DC  07DE               	decf	moteHandler@i& (0+255),f,b
  5273                           
  5274                           ; BSR set to: 1
  5275  0019DE  51DE               	movf	moteHandler@i& (0+255),w,b
  5276  0019E0  E1EE               	bnz	l12190
  5277                           
  5278                           ; BSR set to: 1
  5279                           ;MOTEapp.c: 211: }
  5280                           ;MOTEapp.c: 212: moteApp_delayms(10);
  5281  0019E2  0100               	movlb	0	; () banked
  5282  0019E4  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5283  0019E6  0E0A               	movlw	10
  5284  0019E8  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5285  0019EA  EC97  F01F         	call	_moteApp_delayms	;wreg free
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;MOTEapp.c: 213: for(uint8_t i = 32; i>0; i--)
  5289  0019EE  0E20               	movlw	32
  5290  0019F0  0101               	movlb	1	; () banked
  5291  0019F2  6FDF               	movwf	moteHandler@i_1311& (0+255),b
  5292  0019F4                     l12204:
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;MOTEapp.c: 214: {
  5296                           ;MOTEapp.c: 215: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5297  0019F4  0E02               	movlw	2
  5298  0019F6  ECE9  F01D         	call	_ADC_GetConversion
  5299  0019FA  0101               	movlb	1	; () banked
  5300  0019FC  51DA               	movf	moteHandler@Traw& (0+255),w,b
  5301  0019FE  0100               	movlb	0	; () banked
  5302  001A00  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5303  001A02  0101               	movlb	1	; () banked
  5304  001A04  51DB               	movf	(moteHandler@Traw+1)& (0+255),w,b
  5305  001A06  0100               	movlb	0	; () banked
  5306  001A08  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5307  001A0A  90D8               	bcf	status,0,c
  5308  001A0C  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5309  001A0E  6FF3               	movwf	??_moteHandler& (0+255),b
  5310  001A10  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5311  001A12  0101               	movlb	1	; () banked
  5312  001A14  6FDA               	movwf	moteHandler@Traw& (0+255),b
  5313  001A16  C0F3  F1DB         	movff	??_moteHandler,moteHandler@Traw+1
  5314                           
  5315                           ; BSR set to: 1
  5316  001A1A  07DF               	decf	moteHandler@i_1311& (0+255),f,b
  5317                           
  5318                           ; BSR set to: 1
  5319  001A1C  51DF               	movf	moteHandler@i_1311& (0+255),w,b
  5320  001A1E  E1EA               	bnz	l12204
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;MOTEapp.c: 216: }
  5324                           ;MOTEapp.c: 217: temperature = ADC_TempConversion(Traw);
  5325  001A20  51DA               	movf	moteHandler@Traw& (0+255),w,b
  5326  001A22  ECF7  F01F         	call	_ADC_TempConversion
  5327  001A26  6F7E               	movwf	_temperature& (0+255),b
  5328  001A28  6B7F               	clrf	(_temperature+1)& (0+255),b
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;MOTEapp.c: 218: m10SecTicker = 0;
  5332  001A2A  6B94               	clrf	_m10SecTicker& (0+255),b
  5333  001A2C                     l12214:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;MOTEapp.c: 219: }
  5337                           ;MOTEapp.c: 220: }
  5338                           ;MOTEapp.c: 222: if(secTicker)
  5339  001A2C  5199               	movf	_secTicker& (0+255),w,b
  5340  001A2E  E064               	bz	l12252
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;MOTEapp.c: 223: {
  5344                           ;MOTEapp.c: 224: if (secTicker >= 10)
  5345  001A30  0E09               	movlw	9
  5346  001A32  6599               	cpfsgt	_secTicker& (0+255),b
  5347  001A34  D061               	goto	l12252
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;MOTEapp.c: 225: {
  5351                           ;MOTEapp.c: 226: gotoSleep = 1;
  5352  001A36  0E01               	movlw	1
  5353  001A38  0101               	movlb	1	; () banked
  5354  001A3A  6FD8               	movwf	moteHandler@gotoSleep& (0+255),b
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;MOTEapp.c: 227: secTicker = 0;
  5358  001A3C  0100               	movlb	0	; () banked
  5359  001A3E  6B99               	clrf	_secTicker& (0+255),b
  5360  001A40  D05B               	goto	l12252
  5361  001A42                     l338:
  5362                           
  5363                           ; BSR set to: 0
  5364  001A42  D7FF               	goto	l338
  5365  001A44                     l12222:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;MOTEapp.c: 237: oled_clear();
  5369  001A44  EC72  F020         	call	_oled_clear	;wreg free
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;MOTEapp.c: 238: oled_putString("MOTE Mode",1,0);
  5373  001A48  0E05               	movlw	low STR_23
  5374  001A4A  6FD5               	movwf	oled_putString@string& (0+255),b
  5375  001A4C  0E7F               	movlw	high STR_23
  5376  001A4E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5377  001A50  0E01               	movlw	1
  5378  001A52  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  5379  001A54  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5380  001A56  ECDF  F01A         	call	_oled_putString	;wreg free
  5381                           
  5382                           ;MOTEapp.c: 239: oled_putString("Starting",2,1);
  5383  001A5A  0E51               	movlw	low STR_24
  5384  001A5C  0100               	movlb	0	; () banked
  5385  001A5E  6FD5               	movwf	oled_putString@string& (0+255),b
  5386  001A60  0E7F               	movlw	high STR_24
  5387  001A62  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5388  001A64  0E02               	movlw	2
  5389  001A66  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  5390  001A68  0E01               	movlw	1
  5391  001A6A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5392  001A6C  ECDF  F01A         	call	_oled_putString	;wreg free
  5393                           
  5394                           ;MOTEapp.c: 240: oled_putString("ReRun PwrTst<S2>",0,3);
  5395  001A70  0E54               	movlw	low STR_25
  5396  001A72  0100               	movlb	0	; () banked
  5397  001A74  6FD5               	movwf	oled_putString@string& (0+255),b
  5398  001A76  0E7B               	movlw	high STR_25
  5399  001A78  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5400  001A7A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5401  001A7C  0E03               	movlw	3
  5402  001A7E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5403  001A80  ECDF  F01A         	call	_oled_putString	;wreg free
  5404                           
  5405                           ;MOTEapp.c: 241: activeState = moteStartup;
  5406  001A84  0100               	movlb	0	; () banked
  5407  001A86  6B8D               	clrf	_activeState& (0+255),b
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;MOTEapp.c: 242: moteState = MOTE_JOINING;
  5411  001A88  0E02               	movlw	2
  5412  001A8A  D029               	goto	L1
  5413  001A8C                     l12234:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;MOTEapp.c: 245: if ( moteJoiningProcess(readMessage, s2Button) )
  5417  001A8C  C1DC  F0DA         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  5418  001A90  0101               	movlb	1	; () banked
  5419  001A92  51E0               	movf	moteHandler@readMessage& (0+255),w,b
  5420  001A94  EC11  F009         	call	_moteJoiningProcess
  5421  001A98  0900               	iorlw	0
  5422  001A9A  E037               	bz	l12254
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;MOTEapp.c: 246: {
  5426                           ;MOTEapp.c: 247: oled_clear();
  5427  001A9C  EC72  F020         	call	_oled_clear	;wreg free
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;MOTEapp.c: 248: oled_putString("Mobile Mote -App",0,0);
  5431  001AA0  0EA9               	movlw	low STR_26
  5432  001AA2  6FD5               	movwf	oled_putString@string& (0+255),b
  5433  001AA4  0E7B               	movlw	high STR_26
  5434  001AA6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5435  001AA8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5436  001AAA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5437  001AAC  ECDF  F01A         	call	_oled_putString	;wreg free
  5438                           
  5439                           ;MOTEapp.c: 249: oled_putString("Navigate  Select", 0,2);
  5440  001AB0  0EBA               	movlw	low STR_27
  5441  001AB2  0100               	movlb	0	; () banked
  5442  001AB4  6FD5               	movwf	oled_putString@string& (0+255),b
  5443  001AB6  0E7B               	movlw	high STR_27
  5444  001AB8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5445  001ABA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5446  001ABC  0E02               	movlw	2
  5447  001ABE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5448  001AC0  ECDF  F01A         	call	_oled_putString	;wreg free
  5449                           
  5450                           ;MOTEapp.c: 250: oled_putString(" (S1)      (S2) ", 0,3);
  5451  001AC4  0E10               	movlw	low STR_28
  5452  001AC6  0100               	movlb	0	; () banked
  5453  001AC8  6FD5               	movwf	oled_putString@string& (0+255),b
  5454  001ACA  0E7B               	movlw	high STR_28
  5455  001ACC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5456  001ACE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5457  001AD0  0E03               	movlw	3
  5458  001AD2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5459  001AD4  ECDF  F01A         	call	_oled_putString	;wreg free
  5460                           
  5461                           ;MOTEapp.c: 251: runningState = runningEnter;
  5462  001AD8  0100               	movlb	0	; () banked
  5463  001ADA  6B98               	clrf	_runningState& (0+255),b
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;MOTEapp.c: 252: moteState = MOTE_RUNNING;
  5467  001ADC  0E03               	movlw	3
  5468  001ADE                     L1:
  5469  001ADE  6FF8               	movwf	_moteState& (0+255),b
  5470  001AE0  D014               	goto	l12254
  5471  001AE2                     l12248:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;MOTEapp.c: 256: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  5475  001AE2  C1DC  F0E4         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  5476  001AE6  C1E0  F0E5         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  5477  001AEA  C1D8  F0E6         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  5478  001AEE  0101               	movlb	1	; () banked
  5479  001AF0  51D9               	movf	moteHandler@gotoNextState& (0+255),w,b
  5480  001AF2  EC57  F000         	call	_moteRunningProcess
  5481                           
  5482                           ;MOTEapp.c: 257: break;
  5483  001AF6  D009               	goto	l12254
  5484  001AF8                     l12252:
  5485                           
  5486                           ; BSR set to: 0
  5487  001AF8  51F8               	movf	_moteState& (0+255),w,b
  5488                           
  5489                           ; Switch size 1, requested type "speed"
  5490                           ; Number of cases is 4, Range of values is 1 to 4
  5491                           ; switch strategies available:
  5492                           ; Name         Instructions Cycles
  5493                           ; simple_byte           13     7 (average)
  5494                           ;	Chosen strategy is simple_byte
  5495  001AFA  0A01               	xorlw	1	; case 1
  5496  001AFC  E0A3               	bz	l12222
  5497  001AFE  0A03               	xorlw	3	; case 2
  5498  001B00  E0C5               	bz	l12234
  5499  001B02  0A01               	xorlw	1	; case 3
  5500  001B04  E0EE               	bz	l12248
  5501  001B06  0A07               	xorlw	7	; case 4
  5502  001B08  E19C               	bnz	l338
  5503  001B0A                     l12254:
  5504                           
  5505                           ;MOTEapp.c: 262: return moteState;
  5506  001B0A  0100               	movlb	0	; () banked
  5507  001B0C  51F8               	movf	_moteState& (0+255),w,b
  5508                           
  5509                           ; BSR set to: 0
  5510  001B0E  0012               	return		;funcret
  5511  001B10                     __end_of_moteHandler:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           intcon	equ	0xFF2
  5518                           postinc0	equ	0xFEE
  5519                           wreg	equ	0xFE8
  5520                           postdec1	equ	0xFE5
  5521                           fsr1l	equ	0xFE1
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function _service_pushbutton *****************
  5525 ;; Defined at:
  5526 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  bs              1    0[BANK0 ] enum E6178
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      enum E6266
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : F/0
  5537 ;;		On exit  : F/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0
  5541 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5543 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5544 ;;Total ram usage:        1 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:   11
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_moteHandler
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text9
  5555  0039A2                     __ptext9:
  5556                           	opt stack 0
  5557  0039A2                     _service_pushbutton:
  5558                           	opt stack 18
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;incstack = 0
  5565  0039A2  A082               	btfss	3970,0,c	;volatile
  5566  0039A4  D002               	goto	l10840
  5567                           
  5568                           ; BSR set to: 0
  5569  0039A6  B282               	btfsc	3970,1,c	;volatile
  5570  0039A8  D014               	goto	l10848
  5571  0039AA                     l10840:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;buttons.c: 21: {
  5575                           ;buttons.c: 22: ++PB_Timer;
  5576  0039AA  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  5577  0039AC  0E00               	movlw	0
  5578  0039AE  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  5579  0039B0  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  5580  0039B2  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  5581                           
  5582                           ;buttons.c: 26: if (PB_Timer == 55)
  5583  0039B4  0E37               	movlw	55
  5584  0039B6  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  5585  0039B8  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  5586  0039BA  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  5587  0039BC  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  5588  0039BE  E107               	bnz	l896
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;buttons.c: 27: {
  5592                           ;buttons.c: 28: Release_Timer = 0;
  5593  0039C0  6B9D               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5594                           
  5595                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  5596  0039C2  B082               	btfsc	3970,0,c	;volatile
  5597  0039C4  D002               	goto	l10846
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;buttons.c: 31: {
  5601                           ;buttons.c: 32: bs = ShortPress1;
  5602  0039C6  0E01               	movlw	1
  5603  0039C8  D00F               	goto	L2
  5604  0039CA                     l10846:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;buttons.c: 34: else
  5608                           ;buttons.c: 35: {
  5609                           ;buttons.c: 36: bs = ShortPress2;
  5610  0039CA  0E02               	movlw	2
  5611  0039CC  D00D               	goto	L2
  5612  0039CE                     l896:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;buttons.c: 39: else
  5616                           ;buttons.c: 40: {
  5617                           ;buttons.c: 41: bs = NoButton;
  5618  0039CE  6BC8               	clrf	service_pushbutton@bs& (0+255),b
  5619  0039D0  D00C               	goto	l10856
  5620  0039D2                     l10848:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;buttons.c: 44: else
  5624                           ;buttons.c: 45: {
  5625                           ;buttons.c: 46: if (Release_Timer == 20)
  5626  0039D2  0E14               	movlw	20
  5627  0039D4  199D               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  5628  0039D6  E106               	bnz	l10852
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;buttons.c: 47: {
  5632                           ;buttons.c: 48: PB_Timer = 0;
  5633  0039D8  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  5634  0039DA  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  5635  0039DC  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  5636  0039DE  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  5637                           
  5638                           ;buttons.c: 49: Release_Timer = 0;
  5639  0039E0  6B9D               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5640                           
  5641                           ;buttons.c: 50: }
  5642  0039E2  D001               	goto	l10854
  5643  0039E4                     l10852:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;buttons.c: 51: else
  5647                           ;buttons.c: 52: {
  5648                           ;buttons.c: 53: Release_Timer++;
  5649  0039E4  2B9D               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  5650  0039E6                     l10854:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;buttons.c: 54: }
  5654                           ;buttons.c: 55: bs = Released;
  5655  0039E6  0E03               	movlw	3
  5656  0039E8                     L2:
  5657  0039E8  6FC8               	movwf	service_pushbutton@bs& (0+255),b
  5658  0039EA                     l10856:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;buttons.c: 56: }
  5662                           ;buttons.c: 58: return bs;
  5663  0039EA  51C8               	movf	service_pushbutton@bs& (0+255),w,b
  5664                           
  5665                           ; BSR set to: 0
  5666  0039EC  0012               	return		;funcret
  5667  0039EE                     __end_of_service_pushbutton:
  5668                           	opt stack 0
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           intcon	equ	0xFF2
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           postdec1	equ	0xFE5
  5677                           fsr1l	equ	0xFE1
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _moteRunningProcess *****************
  5681 ;; Defined at:
  5682 ;;		line 492 in file "../Includes/Board/MOTEapp.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  changeStates    1    wreg     unsigned char 
  5685 ;;  selectButton    1   28[BANK0 ] unsigned char 
  5686 ;;  messageReady    1   29[BANK0 ] unsigned char 
  5687 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  changeStates    1   42[BANK0 ] unsigned char 
  5690 ;;  counter         1   40[BANK0 ] unsigned char 
  5691 ;;  counter         1   39[BANK0 ] unsigned char 
  5692 ;;  bufferReadPo    1   41[BANK0 ] unsigned char 
  5693 ;;  dummyRead2      1   38[BANK0 ] unsigned char 
  5694 ;;  dummyRead1      1   37[BANK0 ] unsigned char 
  5695 ;;  i               1   36[BANK0 ] unsigned char 
  5696 ;;  i               1   35[BANK0 ] unsigned char 
  5697 ;;  Traw            2   33[BANK0 ] unsigned int 
  5698 ;;  readByte        1    0        unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      enum E6504
  5701 ;; Registers used:
  5702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : F/1
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5708 ;;      Params:         0       3       0       0       0       0       0       0       0
  5709 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5710 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5711 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5712 ;;Total ram usage:       15 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:   19
  5715 ;; This function calls:
  5716 ;;		_ADC_GetConversion
  5717 ;;		_ADC_TempConversion
  5718 ;;		_MOTEapp_SetADR
  5719 ;;		_MOTEapp_SetDataRate
  5720 ;;		_MOTEapp_WriteDataRate
  5721 ;;		_TMR2_ReadTimer
  5722 ;;		_moteApp_GoToSleep
  5723 ;;		_moteApp_add16bToDataBuffer
  5724 ;;		_moteApp_add8bToDataBuffer
  5725 ;;		_moteApp_clearBuffers
  5726 ;;		_moteApp_delayms
  5727 ;;		_oled_clear
  5728 ;;		_oled_putString
  5729 ;;		_oled_putUint16
  5730 ;;		_oled_putUint8
  5731 ;;		_sendDataCommand
  5732 ;;		_strcmp
  5733 ;;		_strncmp
  5734 ;;		_unhex
  5735 ;; This function is called by:
  5736 ;;		_moteHandler
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text10
  5741  0000AE                     __ptext10:
  5742                           	opt stack 0
  5743  0000AE                     _moteRunningProcess:
  5744                           	opt stack 10
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;incstack = 0
  5748                           ;moteRunningProcess@changeStates stored from wreg
  5749  0000AE  0100               	movlb	0	; () banked
  5750  0000B0  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  5751                           
  5752                           ;MOTEapp.c: 496: if ((sleepEvent) && (periodicState))
  5753  0000B2  51E6               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  5754  0000B4  E102 EFE7  F008    	bz	l11862
  5755                           
  5756                           ; BSR set to: 0
  5757  0000BA  51F9               	movf	_periodicState& (0+255),w,b
  5758  0000BC  E102 EFE7  F008    	bz	l11862
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;MOTEapp.c: 497: {
  5762                           ;MOTEapp.c: 498: if (sleepTicker >= 33)
  5763  0000C2  0E20               	movlw	32
  5764  0000C4  659A               	cpfsgt	_sleepTicker& (0+255),b
  5765  0000C6  D0D8               	goto	l11164
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;MOTEapp.c: 499: {
  5769                           ;MOTEapp.c: 501: uint16_t Traw = 0;
  5770  0000C8  6BE9               	clrf	moteRunningProcess@Traw& (0+255),b
  5771  0000CA  6BEA               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;MOTEapp.c: 502: moteApp_delayms(10);
  5775  0000CC  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5776  0000CE  0E0A               	movlw	10
  5777  0000D0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5778  0000D2  EC97  F01F         	call	_moteApp_delayms	;wreg free
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;MOTEapp.c: 503: for(uint8_t i = 32; i>0; i--)
  5782  0000D6  0E20               	movlw	32
  5783  0000D8  6FEB               	movwf	moteRunningProcess@i& (0+255),b
  5784  0000DA                     l11082:
  5785                           
  5786                           ; BSR set to: 0
  5787  0000DA  51EB               	movf	moteRunningProcess@i& (0+255),w,b
  5788  0000DC  E010               	bz	l11092
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;MOTEapp.c: 504: {
  5792                           ;MOTEapp.c: 505: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5793  0000DE  0E03               	movlw	3
  5794  0000E0  ECE9  F01D         	call	_ADC_GetConversion
  5795  0000E4  517A               	movf	_light& (0+255),w,b
  5796  0000E6  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5797  0000E8  517B               	movf	(_light+1)& (0+255),w,b
  5798  0000EA  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5799  0000EC  90D8               	bcf	status,0,c
  5800  0000EE  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5801  0000F0  6FE7               	movwf	??_moteRunningProcess& (0+255),b
  5802  0000F2  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5803  0000F4  6F7A               	movwf	_light& (0+255),b
  5804  0000F6  C0E7  F07B         	movff	??_moteRunningProcess,_light+1
  5805                           
  5806                           ; BSR set to: 0
  5807  0000FA  07EB               	decf	moteRunningProcess@i& (0+255),f,b
  5808  0000FC  D7EE               	goto	l11082
  5809  0000FE                     l11092:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;MOTEapp.c: 506: }
  5813                           ;MOTEapp.c: 507: moteApp_delayms(10);
  5814  0000FE  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5815  000100  0E0A               	movlw	10
  5816  000102  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5817  000104  EC97  F01F         	call	_moteApp_delayms	;wreg free
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;MOTEapp.c: 508: for(uint8_t i = 32; i>0; i--)
  5821  000108  0E20               	movlw	32
  5822  00010A  6FEC               	movwf	moteRunningProcess@i_1381& (0+255),b
  5823  00010C                     l11096:
  5824                           
  5825                           ; BSR set to: 0
  5826  00010C  51EC               	movf	moteRunningProcess@i_1381& (0+255),w,b
  5827  00010E  E010               	bz	l11106
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;MOTEapp.c: 509: {
  5831                           ;MOTEapp.c: 510: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5832  000110  0E02               	movlw	2
  5833  000112  ECE9  F01D         	call	_ADC_GetConversion
  5834  000116  51E9               	movf	moteRunningProcess@Traw& (0+255),w,b
  5835  000118  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5836  00011A  51EA               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  5837  00011C  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5838  00011E  90D8               	bcf	status,0,c
  5839  000120  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5840  000122  6FE7               	movwf	??_moteRunningProcess& (0+255),b
  5841  000124  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5842  000126  6FE9               	movwf	moteRunningProcess@Traw& (0+255),b
  5843  000128  C0E7  F0EA         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  5844                           
  5845                           ; BSR set to: 0
  5846  00012C  07EC               	decf	moteRunningProcess@i_1381& (0+255),f,b
  5847  00012E  D7EE               	goto	l11096
  5848  000130                     l11106:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;MOTEapp.c: 511: }
  5852                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(Traw);
  5853  000130  51E9               	movf	moteRunningProcess@Traw& (0+255),w,b
  5854  000132  ECF7  F01F         	call	_ADC_TempConversion
  5855  000136  6F7E               	movwf	_temperature& (0+255),b
  5856  000138  6B7F               	clrf	(_temperature+1)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;MOTEapp.c: 514: sleepTicker = 0;
  5860  00013A  6B9A               	clrf	_sleepTicker& (0+255),b
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;MOTEapp.c: 515: oled_clear();
  5864  00013C  EC72  F020         	call	_oled_clear	;wreg free
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;MOTEapp.c: 516: oled_putString("Issue Perodic TX",0,0);
  5868  000140  0E65               	movlw	low STR_72
  5869  000142  6FD5               	movwf	oled_putString@string& (0+255),b
  5870  000144  0E7B               	movlw	high STR_72
  5871  000146  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5872  000148  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5873  00014A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5874  00014C  ECDF  F01A         	call	_oled_putString	;wreg free
  5875                           
  5876                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  5877  000150  0E43               	movlw	low STR_73
  5878  000152  0100               	movlb	0	; () banked
  5879  000154  6FD5               	movwf	oled_putString@string& (0+255),b
  5880  000156  0E7E               	movlw	high STR_73
  5881  000158  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5882  00015A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5883  00015C  0E01               	movlw	1
  5884  00015E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5885  000160  ECDF  F01A         	call	_oled_putString	;wreg free
  5886                           
  5887                           ;MOTEapp.c: 518: oled_putUint8(randomPortNum,10,1);
  5888  000164  0E0A               	movlw	10
  5889  000166  0100               	movlb	0	; () banked
  5890  000168  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5891  00016A  0E01               	movlw	1
  5892  00016C  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5893  00016E  5197               	movf	_randomPortNum& (0+255),w,b
  5894  000170  ECD2  F01B         	call	_oled_putUint8
  5895                           
  5896                           ;MOTEapp.c: 519: oled_putString("L:       T: ",0,2);
  5897  000174  0E81               	movlw	low STR_74
  5898  000176  0100               	movlb	0	; () banked
  5899  000178  6FD5               	movwf	oled_putString@string& (0+255),b
  5900  00017A  0E7D               	movlw	high STR_74
  5901  00017C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5902  00017E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5903  000180  0E02               	movlw	2
  5904  000182  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5905  000184  ECDF  F01A         	call	_oled_putString	;wreg free
  5906                           
  5907                           ;MOTEapp.c: 520: oled_putUint16(light,3,2);
  5908  000188  C07A  F0DA         	movff	_light,oled_putUint16@number
  5909  00018C  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  5910  000190  0E03               	movlw	3
  5911  000192  0100               	movlb	0	; () banked
  5912  000194  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  5913  000196  0E02               	movlw	2
  5914  000198  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  5915  00019A  EC1B  F010         	call	_oled_putUint16	;wreg free
  5916                           
  5917                           ;MOTEapp.c: 521: oled_putUint8(temperature,12,2);
  5918  00019E  0E0C               	movlw	12
  5919  0001A0  0100               	movlb	0	; () banked
  5920  0001A2  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5921  0001A4  0E02               	movlw	2
  5922  0001A6  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5923  0001A8  517E               	movf	_temperature& (0+255),w,b
  5924  0001AA  ECD2  F01B         	call	_oled_putUint8
  5925                           
  5926                           ;MOTEapp.c: 522: oled_putString("(NAV)    (SEL) ",0,3);
  5927  0001AE  0EFC               	movlw	low STR_75
  5928  0001B0  0100               	movlb	0	; () banked
  5929  0001B2  6FD5               	movwf	oled_putString@string& (0+255),b
  5930  0001B4  0E7B               	movlw	high STR_75
  5931  0001B6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5932  0001B8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5933  0001BA  0E03               	movlw	3
  5934  0001BC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5935  0001BE  ECDF  F01A         	call	_oled_putString	;wreg free
  5936                           
  5937                           ;MOTEapp.c: 524: moteApp_clearBuffers();
  5938  0001C2  EC89  F01D         	call	_moteApp_clearBuffers	;wreg free
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;MOTEapp.c: 525: randomPortNum = TMR2_ReadTimer();
  5942  0001C6  EC03  F021         	call	_TMR2_ReadTimer	;wreg free
  5943  0001CA  6F97               	movwf	_randomPortNum& (0+255),b
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;MOTEapp.c: 527: if (!randomPortNum)
  5947  0001CC  5197               	movf	_randomPortNum& (0+255),w,b
  5948  0001CE  E103               	bnz	l11134
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;MOTEapp.c: 528: randomPortNum = 5;
  5952  0001D0  0E05               	movlw	5
  5953  0001D2  6F97               	movwf	_randomPortNum& (0+255),b
  5954  0001D4  D005               	goto	l11138
  5955  0001D6                     l11134:
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;MOTEapp.c: 529: else if (randomPortNum > 223)
  5959  0001D6  0EDF               	movlw	223
  5960  0001D8  6597               	cpfsgt	_randomPortNum& (0+255),b
  5961  0001DA  D002               	goto	l11138
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;MOTEapp.c: 530: randomPortNum = randomPortNum - 50;
  5965  0001DC  0ECE               	movlw	206
  5966  0001DE  2797               	addwf	_randomPortNum& (0+255),f,b
  5967  0001E0                     l11138:
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;MOTEapp.c: 532: moteApp_add8bToDataBuffer(randomPortNum, 0);
  5971  0001E0  6BCC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5972  0001E2  5197               	movf	_randomPortNum& (0+255),w,b
  5973  0001E4  EC44  F01B         	call	_moteApp_add8bToDataBuffer
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;MOTEapp.c: 533: dataBuffer[3] = 0x20;
  5977  0001E8  0E20               	movlw	32
  5978  0001EA  6FA1               	movwf	(_dataBuffer+3)& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;MOTEapp.c: 534: moteApp_add16bToDataBuffer(light, 4);
  5982  0001EC  C07A  F0CF         	movff	_light,moteApp_add16bToDataBuffer@number
  5983  0001F0  C07B  F0D0         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  5984  0001F4  0E04               	movlw	4
  5985  0001F6  6FD1               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  5986  0001F8  EC16  F00E         	call	_moteApp_add16bToDataBuffer	;wreg free
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;MOTEapp.c: 535: moteApp_add8bToDataBuffer(temperature, 9);
  5990  0001FC  0E09               	movlw	9
  5991  0001FE  6FCC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5992  000200  517E               	movf	_temperature& (0+255),w,b
  5993  000202  EC44  F01B         	call	_moteApp_add8bToDataBuffer
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;MOTEapp.c: 536: __nop();
  5997  000206  F000               	nop	
  5998                           
  5999                           ;MOTEapp.c: 537: if(++sleepTxOccurances > 3)
  6000  000208  0100               	movlb	0	; () banked
  6001  00020A  2B9B               	incf	_sleepTxOccurances& (0+255),f,b
  6002  00020C  0E03               	movlw	3
  6003  00020E  659B               	cpfsgt	_sleepTxOccurances& (0+255),b
  6004  000210  D017               	goto	l11156
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;MOTEapp.c: 538: {
  6008                           ;MOTEapp.c: 539: sleepTxOccurances = 0;
  6009  000212  6B9B               	clrf	_sleepTxOccurances& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;MOTEapp.c: 540: oled_putString("C",15,1);
  6013  000214  0EF9               	movlw	low STR_76
  6014  000216  6FD5               	movwf	oled_putString@string& (0+255),b
  6015  000218  0E7F               	movlw	high STR_76
  6016  00021A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6017  00021C  0E0F               	movlw	15
  6018  00021E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6019  000220  0E01               	movlw	1
  6020  000222  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6021  000224  ECDF  F01A         	call	_oled_putString	;wreg free
  6022                           
  6023                           ;MOTEapp.c: 541: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  6024  000228  0E67               	movlw	low STR_77
  6025  00022A  0100               	movlb	0	; () banked
  6026  00022C  6FC9               	movwf	sendDataCommand@string& (0+255),b
  6027  00022E  0E7E               	movlw	high STR_77
  6028  000230  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  6029  000232  0E9E               	movlw	low _dataBuffer
  6030  000234  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  6031  000236  0E0C               	movlw	12
  6032  000238  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  6033  00023A  EC67  F017         	call	_sendDataCommand	;wreg free
  6034                           
  6035                           ;MOTEapp.c: 542: }
  6036  00023E  D015               	goto	l11160
  6037  000240                     l11156:
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;MOTEapp.c: 544: else
  6041                           ;MOTEapp.c: 545: {
  6042                           ;MOTEapp.c: 546: oled_putString("U",15,1);
  6043  000240  0EFB               	movlw	low STR_78
  6044  000242  6FD5               	movwf	oled_putString@string& (0+255),b
  6045  000244  0E7F               	movlw	high STR_78
  6046  000246  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6047  000248  0E0F               	movlw	15
  6048  00024A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6049  00024C  0E01               	movlw	1
  6050  00024E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6051  000250  ECDF  F01A         	call	_oled_putString	;wreg free
  6052                           
  6053                           ;MOTEapp.c: 547: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6054  000254  0E3C               	movlw	low STR_79
  6055  000256  0100               	movlb	0	; () banked
  6056  000258  6FC9               	movwf	sendDataCommand@string& (0+255),b
  6057  00025A  0E7D               	movlw	high STR_79
  6058  00025C  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  6059  00025E  0E9E               	movlw	low _dataBuffer
  6060  000260  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  6061  000262  0E0C               	movlw	12
  6062  000264  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  6063  000266  EC67  F017         	call	_sendDataCommand	;wreg free
  6064  00026A                     l11160:
  6065                           
  6066                           ;MOTEapp.c: 548: }
  6067                           ;MOTEapp.c: 549: secTicker = 10 - (10 / 3);
  6068  00026A  0E07               	movlw	7
  6069  00026C  0100               	movlb	0	; () banked
  6070  00026E  6F99               	movwf	_secTicker& (0+255),b
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;MOTEapp.c: 550: runningState = runningUplinkTransmit;
  6074  000270  0E08               	movlw	8
  6075  000272  6F98               	movwf	_runningState& (0+255),b
  6076                           
  6077                           ;MOTEapp.c: 551: }
  6078  000274  EFE7  F008         	goto	l11862
  6079  000278                     l11164:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;MOTEapp.c: 552: else
  6083                           ;MOTEapp.c: 553: {
  6084                           ;MOTEapp.c: 554: sleepTicker++;
  6085  000278  2B9A               	incf	_sleepTicker& (0+255),f,b
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;MOTEapp.c: 555: runningState = runningSleep;
  6089  00027A  0E0E               	movlw	14
  6090  00027C  6F98               	movwf	_runningState& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;MOTEapp.c: 556: selectButton = 1;
  6094  00027E  0E01               	movlw	1
  6095  000280  6FE4               	movwf	moteRunningProcess@selectButton& (0+255),b
  6096  000282  EFE7  F008         	goto	l11862
  6097  000286                     l448:
  6098  000286  D7FF               	goto	l448
  6099  000288                     l11170:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;MOTEapp.c: 567: if ( (changeStates) || (selectButton) )
  6103  000288  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6104  00028A  E103               	bnz	l11174
  6105                           
  6106                           ; BSR set to: 0
  6107  00028C  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6108  00028E  B4D8               	btfsc	status,2,c
  6109  000290  0012               	return	
  6110  000292                     l11174:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;MOTEapp.c: 568: {
  6114                           ;MOTEapp.c: 569: oled_clear();
  6115  000292  EC72  F020         	call	_oled_clear	;wreg free
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;MOTEapp.c: 570: oled_putString("  Sensor Data  ",0,0);
  6119  000296  0EEC               	movlw	low STR_80
  6120  000298  6FD5               	movwf	oled_putString@string& (0+255),b
  6121  00029A  0E7B               	movlw	high STR_80
  6122  00029C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6123  00029E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6124  0002A0  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6125  0002A2  ECDF  F01A         	call	_oled_putString	;wreg free
  6126                           
  6127                           ;MOTEapp.c: 571: oled_putString("    Display    ",0,1);
  6128  0002A6  0EDC               	movlw	low STR_81
  6129  0002A8  0100               	movlb	0	; () banked
  6130  0002AA  6FD5               	movwf	oled_putString@string& (0+255),b
  6131  0002AC  0E7B               	movlw	high STR_81
  6132  0002AE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6133  0002B0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6134  0002B2  0E01               	movlw	1
  6135  0002B4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6136  0002B6  ECDF  F01A         	call	_oled_putString	;wreg free
  6137                           
  6138                           ;MOTEapp.c: 572: oled_putString("(NAV)    (SEL) ",0,3);
  6139  0002BA  0EFC               	movlw	low STR_75
  6140  0002BC  0100               	movlb	0	; () banked
  6141  0002BE  6FD5               	movwf	oled_putString@string& (0+255),b
  6142  0002C0  0E7B               	movlw	high STR_75
  6143  0002C2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6144  0002C4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6145  0002C6  0E03               	movlw	3
  6146  0002C8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6147  0002CA  ECDF  F01A         	call	_oled_putString	;wreg free
  6148  0002CE                     l11182:
  6149                           
  6150                           ;MOTEapp.c: 573: runningState = runningSensor;
  6151  0002CE  0E01               	movlw	1
  6152  0002D0  0100               	movlb	0	; () banked
  6153  0002D2  6F98               	movwf	_runningState& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;MOTEapp.c: 574: }
  6157                           ;MOTEapp.c: 575: break;
  6158  0002D4  0C01               	retlw	1
  6159  0002D6                     l11184:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;MOTEapp.c: 577: if (changeStates)
  6163  0002D6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6164  0002D8  E022               	bz	l11196
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;MOTEapp.c: 578: {
  6168                           ;MOTEapp.c: 579: oled_clear();
  6169  0002DA  EC72  F020         	call	_oled_clear	;wreg free
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;MOTEapp.c: 580: oled_putString("  Select LoRa   ",0,0);
  6173  0002DE  0ECC               	movlw	low STR_83
  6174  0002E0  6FD5               	movwf	oled_putString@string& (0+255),b
  6175  0002E2  0E7A               	movlw	high STR_83
  6176  0002E4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6177  0002E6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6178  0002E8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6179  0002EA  ECDF  F01A         	call	_oled_putString	;wreg free
  6180                           
  6181                           ;MOTEapp.c: 581: oled_putString("   Data Rate    ",0,1);
  6182  0002EE  0EBB               	movlw	low STR_84
  6183  0002F0  0100               	movlb	0	; () banked
  6184  0002F2  6FD5               	movwf	oled_putString@string& (0+255),b
  6185  0002F4  0E7A               	movlw	high STR_84
  6186  0002F6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6187  0002F8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6188  0002FA  0E01               	movlw	1
  6189  0002FC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6190  0002FE  ECDF  F01A         	call	_oled_putString	;wreg free
  6191                           
  6192                           ;MOTEapp.c: 582: oled_putString("(NAV)    (SEL) ",0,3);
  6193  000302  0EFC               	movlw	low STR_75
  6194  000304  0100               	movlb	0	; () banked
  6195  000306  6FD5               	movwf	oled_putString@string& (0+255),b
  6196  000308  0E7B               	movlw	high STR_75
  6197  00030A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6198  00030C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6199  00030E  0E03               	movlw	3
  6200  000310  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6201  000312  ECDF  F01A         	call	_oled_putString	;wreg free
  6202  000316                     l11194:
  6203                           
  6204                           ;MOTEapp.c: 583: runningState = runningDataRateDisplay;
  6205  000316  0E03               	movlw	3
  6206  000318  0100               	movlb	0	; () banked
  6207  00031A  6F98               	movwf	_runningState& (0+255),b
  6208                           
  6209                           ;MOTEapp.c: 584: }
  6210  00031C  0C03               	retlw	3
  6211  00031E                     l11196:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;MOTEapp.c: 585: else if (selectButton)
  6215  00031E  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6216  000320  B4D8               	btfsc	status,2,c
  6217  000322  0012               	return	
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;MOTEapp.c: 586: {
  6221                           ;MOTEapp.c: 587: oled_clear();
  6222  000324  EC72  F020         	call	_oled_clear	;wreg free
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;MOTEapp.c: 588: oled_putString("  Sensor Data  ",0,0);
  6226  000328  0EEC               	movlw	low STR_80
  6227  00032A  6FD5               	movwf	oled_putString@string& (0+255),b
  6228  00032C  0E7B               	movlw	high STR_80
  6229  00032E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6230  000330  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6231  000332  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6232  000334  ECDF  F01A         	call	_oled_putString	;wreg free
  6233                           
  6234                           ;MOTEapp.c: 589: oled_putString("Light:",0,1);
  6235  000338  0EBE               	movlw	low STR_87
  6236  00033A  0100               	movlb	0	; () banked
  6237  00033C  6FD5               	movwf	oled_putString@string& (0+255),b
  6238  00033E  0E7F               	movlw	high STR_87
  6239  000340  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6240  000342  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6241  000344  0E01               	movlw	1
  6242  000346  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6243  000348  ECDF  F01A         	call	_oled_putString	;wreg free
  6244                           
  6245                           ;MOTEapp.c: 590: oled_putString("Temp :",0,2);
  6246  00034C  0EB7               	movlw	low STR_88
  6247  00034E  0100               	movlb	0	; () banked
  6248  000350  6FD5               	movwf	oled_putString@string& (0+255),b
  6249  000352  0E7F               	movlw	high STR_88
  6250  000354  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6251  000356  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6252  000358  0E02               	movlw	2
  6253  00035A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6254  00035C  ECDF  F01A         	call	_oled_putString	;wreg free
  6255                           
  6256                           ;MOTEapp.c: 591: oled_putString("C",12,2);
  6257  000360  0EF9               	movlw	low STR_76
  6258  000362  0100               	movlb	0	; () banked
  6259  000364  6FD5               	movwf	oled_putString@string& (0+255),b
  6260  000366  0E7F               	movlw	high STR_76
  6261  000368  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6262  00036A  0E0C               	movlw	12
  6263  00036C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6264  00036E  0E02               	movlw	2
  6265  000370  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6266  000372  ECDF  F01A         	call	_oled_putString	;wreg free
  6267                           
  6268                           ;MOTEapp.c: 592: if (temperature)
  6269  000376  0100               	movlb	0	; () banked
  6270  000378  517E               	movf	_temperature& (0+255),w,b
  6271  00037A  117F               	iorwf	(_temperature+1)& (0+255),w,b
  6272  00037C  E015               	bz	l11212
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;MOTEapp.c: 593: {
  6276                           ;MOTEapp.c: 594: oled_putUint16(light,6,1);
  6277  00037E  C07A  F0DA         	movff	_light,oled_putUint16@number
  6278  000382  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  6279  000386  0E06               	movlw	6
  6280  000388  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6281  00038A  0E01               	movlw	1
  6282  00038C  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6283  00038E  EC1B  F010         	call	_oled_putUint16	;wreg free
  6284                           
  6285                           ;MOTEapp.c: 595: oled_putUint16(temperature,6,2);
  6286  000392  C07E  F0DA         	movff	_temperature,oled_putUint16@number
  6287  000396  C07F  F0DB         	movff	_temperature+1,oled_putUint16@number+1
  6288  00039A  0E06               	movlw	6
  6289  00039C  0100               	movlb	0	; () banked
  6290  00039E  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6291  0003A0  0E02               	movlw	2
  6292  0003A2  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6293  0003A4  EC1B  F010         	call	_oled_putUint16	;wreg free
  6294  0003A8                     l11212:
  6295                           
  6296                           ;MOTEapp.c: 596: }
  6297                           ;MOTEapp.c: 597: runningState = runningSensorMenu;
  6298  0003A8  0E02               	movlw	2
  6299  0003AA  0100               	movlb	0	; () banked
  6300  0003AC  6F98               	movwf	_runningState& (0+255),b
  6301  0003AE  0C02               	retlw	2
  6302  0003B0                     l11214:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;MOTEapp.c: 601: oled_putUint16(light,6,1);
  6306  0003B0  C07A  F0DA         	movff	_light,oled_putUint16@number
  6307  0003B4  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  6308  0003B8  0E06               	movlw	6
  6309  0003BA  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6310  0003BC  0E01               	movlw	1
  6311  0003BE  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6312  0003C0  EC1B  F010         	call	_oled_putUint16	;wreg free
  6313                           
  6314                           ;MOTEapp.c: 602: oled_putUint16(temperature,6,2);
  6315  0003C4  C07E  F0DA         	movff	_temperature,oled_putUint16@number
  6316  0003C8  C07F  F0DB         	movff	_temperature+1,oled_putUint16@number+1
  6317  0003CC  0E06               	movlw	6
  6318  0003CE  0100               	movlb	0	; () banked
  6319  0003D0  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6320  0003D2  0E02               	movlw	2
  6321  0003D4  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6322  0003D6  EC1B  F010         	call	_oled_putUint16	;wreg free
  6323                           
  6324                           ;MOTEapp.c: 603: if ( (changeStates) || (selectButton) )
  6325  0003DA  0100               	movlb	0	; () banked
  6326  0003DC  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6327  0003DE  E103               	bnz	l11220
  6328                           
  6329                           ; BSR set to: 0
  6330  0003E0  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6331  0003E2  B4D8               	btfsc	status,2,c
  6332  0003E4  0012               	return	
  6333  0003E6                     l11220:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;MOTEapp.c: 604: {
  6337                           ;MOTEapp.c: 605: oled_clear();
  6338  0003E6  EC72  F020         	call	_oled_clear	;wreg free
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;MOTEapp.c: 606: oled_putString("  Sensor Data  ",0,0);
  6342  0003EA  0EEC               	movlw	low STR_80
  6343  0003EC  6FD5               	movwf	oled_putString@string& (0+255),b
  6344  0003EE  0E7B               	movlw	high STR_80
  6345  0003F0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6346  0003F2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6347  0003F4  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6348  0003F6  ECDF  F01A         	call	_oled_putString	;wreg free
  6349                           
  6350                           ;MOTEapp.c: 607: oled_putString("    Display    ",0,1);
  6351  0003FA  0EDC               	movlw	low STR_81
  6352  0003FC  0100               	movlb	0	; () banked
  6353  0003FE  6FD5               	movwf	oled_putString@string& (0+255),b
  6354  000400  0E7B               	movlw	high STR_81
  6355  000402  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6356  000404  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6357  000406  0E01               	movlw	1
  6358  000408  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6359  00040A  ECDF  F01A         	call	_oled_putString	;wreg free
  6360                           
  6361                           ;MOTEapp.c: 608: oled_putString("(NAV)    (SEL) ",0,3);
  6362  00040E  0EFC               	movlw	low STR_75
  6363  000410  0100               	movlb	0	; () banked
  6364  000412  6FD5               	movwf	oled_putString@string& (0+255),b
  6365  000414  0E7B               	movlw	high STR_75
  6366  000416  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6367  000418  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6368  00041A  0E03               	movlw	3
  6369  00041C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6370  00041E  ECDF  F01A         	call	_oled_putString	;wreg free
  6371  000422  D755               	goto	l11182
  6372  000424                     l11230:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;MOTEapp.c: 613: if (changeStates)
  6376  000424  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6377  000426  E022               	bz	l11242
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;MOTEapp.c: 614: {
  6381                           ;MOTEapp.c: 615: oled_clear();
  6382  000428  EC72  F020         	call	_oled_clear	;wreg free
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;MOTEapp.c: 616: oled_putString("  Issue Uplink  ",0,0);
  6386  00042C  0EFF               	movlw	low STR_93
  6387  00042E  6FD5               	movwf	oled_putString@string& (0+255),b
  6388  000430  0E7A               	movlw	high STR_93
  6389  000432  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6390  000434  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6391  000436  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6392  000438  ECDF  F01A         	call	_oled_putString	;wreg free
  6393                           
  6394                           ;MOTEapp.c: 617: oled_putString(" LoRaWAN Packet ",0,1);
  6395  00043C  0E32               	movlw	low STR_94
  6396  00043E  0100               	movlb	0	; () banked
  6397  000440  6FD5               	movwf	oled_putString@string& (0+255),b
  6398  000442  0E7B               	movlw	high STR_94
  6399  000444  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6400  000446  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6401  000448  0E01               	movlw	1
  6402  00044A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6403  00044C  ECDF  F01A         	call	_oled_putString	;wreg free
  6404                           
  6405                           ;MOTEapp.c: 618: oled_putString("(NAV)    (SEL) ",0,3);
  6406  000450  0EFC               	movlw	low STR_75
  6407  000452  0100               	movlb	0	; () banked
  6408  000454  6FD5               	movwf	oled_putString@string& (0+255),b
  6409  000456  0E7B               	movlw	high STR_75
  6410  000458  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6411  00045A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6412  00045C  0E03               	movlw	3
  6413  00045E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6414  000460  ECDF  F01A         	call	_oled_putString	;wreg free
  6415  000464                     l11240:
  6416                           
  6417                           ;MOTEapp.c: 619: runningState = runningUplink;
  6418  000464  0E06               	movlw	6
  6419  000466  0100               	movlb	0	; () banked
  6420  000468  6F98               	movwf	_runningState& (0+255),b
  6421                           
  6422                           ;MOTEapp.c: 620: }
  6423  00046A  0C06               	retlw	6
  6424  00046C                     l11242:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;MOTEapp.c: 621: else if (selectButton)
  6428  00046C  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6429  00046E  B4D8               	btfsc	status,2,c
  6430  000470  0012               	return	
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;MOTEapp.c: 622: {
  6434                           ;MOTEapp.c: 623: oled_clear();
  6435  000472  EC72  F020         	call	_oled_clear	;wreg free
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;MOTEapp.c: 624: oled_putString("<", 15,0);
  6439  000476  0EF7               	movlw	low STR_96
  6440  000478  6FD5               	movwf	oled_putString@string& (0+255),b
  6441  00047A  0E7F               	movlw	high STR_96
  6442  00047C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6443  00047E  0E0F               	movlw	15
  6444  000480  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6445  000482  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6446  000484  ECDF  F01A         	call	_oled_putString	;wreg free
  6447                           
  6448                           ;MOTEapp.c: 625: oled_putString("Data Rate:   0", 0,0);
  6449  000488  0E79               	movlw	low STR_97
  6450  00048A  0100               	movlb	0	; () banked
  6451  00048C  6FD5               	movwf	oled_putString@string& (0+255),b
  6452  00048E  0E7C               	movlw	high STR_97
  6453  000490  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6454  000492  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6455  000494  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6456  000496  ECDF  F01A         	call	_oled_putString	;wreg free
  6457                           
  6458                           ;MOTEapp.c: 626: oled_putString("Data Rate:   1", 0,1);
  6459  00049A  0E88               	movlw	low STR_98
  6460  00049C  0100               	movlb	0	; () banked
  6461  00049E  6FD5               	movwf	oled_putString@string& (0+255),b
  6462  0004A0  0E7C               	movlw	high STR_98
  6463  0004A2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6464  0004A4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6465  0004A6  0E01               	movlw	1
  6466  0004A8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6467  0004AA  ECDF  F01A         	call	_oled_putString	;wreg free
  6468                           
  6469                           ;MOTEapp.c: 627: oled_putString("Data Rate:   2", 0,2);
  6470  0004AE  0E97               	movlw	low STR_99
  6471  0004B0  0100               	movlb	0	; () banked
  6472  0004B2  6FD5               	movwf	oled_putString@string& (0+255),b
  6473  0004B4  0E7C               	movlw	high STR_99
  6474  0004B6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6475  0004B8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6476  0004BA  0E02               	movlw	2
  6477  0004BC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6478  0004BE  ECDF  F01A         	call	_oled_putString	;wreg free
  6479                           
  6480                           ;MOTEapp.c: 628: oled_putString("Data Rate:   3", 0,3);
  6481  0004C2  0EA6               	movlw	low STR_100
  6482  0004C4  0100               	movlb	0	; () banked
  6483  0004C6  6FD5               	movwf	oled_putString@string& (0+255),b
  6484  0004C8  0E7C               	movlw	high STR_100
  6485  0004CA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6486  0004CC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6487  0004CE  0E03               	movlw	3
  6488  0004D0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6489  0004D2  ECDF  F01A         	call	_oled_putString	;wreg free
  6490                           
  6491                           ;MOTEapp.c: 630: if (dataRateSelection == 0)
  6492  0004D6  0100               	movlb	0	; () banked
  6493  0004D8  51F7               	movf	_dataRateSelection& (0+255),w,b
  6494  0004DA  E10A               	bnz	l11260
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;MOTEapp.c: 631: oled_putString("*", 14,0);
  6498  0004DC  0EF5               	movlw	low STR_101
  6499  0004DE  6FD5               	movwf	oled_putString@string& (0+255),b
  6500  0004E0  0E7F               	movlw	high STR_101
  6501  0004E2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6502  0004E4  0E0E               	movlw	14
  6503  0004E6  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6504  0004E8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6505  0004EA  ECDF  F01A         	call	_oled_putString	;wreg free
  6506  0004EE  D028               	goto	l11272
  6507  0004F0                     l11260:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;MOTEapp.c: 632: else if (dataRateSelection == 1)
  6511  0004F0  05F7               	decf	_dataRateSelection& (0+255),w,b
  6512  0004F2  E10B               	bnz	l11264
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;MOTEapp.c: 633: oled_putString("*", 14,1);
  6516  0004F4  0EF5               	movlw	low STR_101
  6517  0004F6  6FD5               	movwf	oled_putString@string& (0+255),b
  6518  0004F8  0E7F               	movlw	high STR_101
  6519  0004FA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6520  0004FC  0E0E               	movlw	14
  6521  0004FE  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6522  000500  0E01               	movlw	1
  6523  000502  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6524  000504  ECDF  F01A         	call	_oled_putString	;wreg free
  6525  000508  D01B               	goto	l11272
  6526  00050A                     l11264:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;MOTEapp.c: 634: else if (dataRateSelection == 2)
  6530  00050A  0E02               	movlw	2
  6531  00050C  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6532  00050E  E10B               	bnz	l11268
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;MOTEapp.c: 635: oled_putString("*", 14,2);
  6536  000510  0EF5               	movlw	low STR_101
  6537  000512  6FD5               	movwf	oled_putString@string& (0+255),b
  6538  000514  0E7F               	movlw	high STR_101
  6539  000516  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6540  000518  0E0E               	movlw	14
  6541  00051A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6542  00051C  0E02               	movlw	2
  6543  00051E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6544  000520  ECDF  F01A         	call	_oled_putString	;wreg free
  6545  000524  D00D               	goto	l11272
  6546  000526                     l11268:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;MOTEapp.c: 636: else if (dataRateSelection == 3)
  6550  000526  0E03               	movlw	3
  6551  000528  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6552  00052A  E10A               	bnz	l11272
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;MOTEapp.c: 637: oled_putString("*", 14,3);
  6556  00052C  0EF5               	movlw	low STR_101
  6557  00052E  6FD5               	movwf	oled_putString@string& (0+255),b
  6558  000530  0E7F               	movlw	high STR_101
  6559  000532  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6560  000534  0E0E               	movlw	14
  6561  000536  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6562  000538  0E03               	movlw	3
  6563  00053A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6564  00053C  ECDF  F01A         	call	_oled_putString	;wreg free
  6565  000540                     l11272:
  6566                           
  6567                           ;MOTEapp.c: 638: runningState = runningDataRateSelect;
  6568  000540  0E04               	movlw	4
  6569  000542  0100               	movlb	0	; () banked
  6570  000544  6F98               	movwf	_runningState& (0+255),b
  6571  000546  0C04               	retlw	4
  6572  000548                     l11274:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;MOTEapp.c: 642: if (changeStates)
  6576  000548  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6577  00054A  E101 D2C0          	bz	l11550
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;MOTEapp.c: 643: {
  6581                           ;MOTEapp.c: 644: dataRatePosition++;
  6582  00054E  2B93               	incf	_dataRatePosition& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;MOTEapp.c: 646: if (dataRatePosition > 9)
  6586  000550  0E09               	movlw	9
  6587  000552  6593               	cpfsgt	_dataRatePosition& (0+255),b
  6588  000554  D29D               	goto	l11548
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;MOTEapp.c: 647: dataRatePosition = 0;
  6592  000556  6B93               	clrf	_dataRatePosition& (0+255),b
  6593  000558  D29B               	goto	l11548
  6594  00055A                     l11282:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;MOTEapp.c: 652: oled_clear();
  6598  00055A  EC72  F020         	call	_oled_clear	;wreg free
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;MOTEapp.c: 653: oled_putString("<", 15,0);
  6602  00055E  0EF7               	movlw	low STR_96
  6603  000560  6FD5               	movwf	oled_putString@string& (0+255),b
  6604  000562  0E7F               	movlw	high STR_96
  6605  000564  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6606  000566  0E0F               	movlw	15
  6607  000568  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6608  00056A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6609  00056C  ECDF  F01A         	call	_oled_putString	;wreg free
  6610                           
  6611                           ;MOTEapp.c: 654: oled_putString("Data Rate:   0", 0,0);
  6612  000570  0E79               	movlw	low STR_97
  6613  000572  0100               	movlb	0	; () banked
  6614  000574  6FD5               	movwf	oled_putString@string& (0+255),b
  6615  000576  0E7C               	movlw	high STR_97
  6616  000578  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6617  00057A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6618  00057C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6619  00057E  ECDF  F01A         	call	_oled_putString	;wreg free
  6620                           
  6621                           ;MOTEapp.c: 655: oled_putString("Data Rate:   1", 0,1);
  6622  000582  0E88               	movlw	low STR_98
  6623  000584  0100               	movlb	0	; () banked
  6624  000586  6FD5               	movwf	oled_putString@string& (0+255),b
  6625  000588  0E7C               	movlw	high STR_98
  6626  00058A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6627  00058C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6628  00058E  0E01               	movlw	1
  6629  000590  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6630  000592  ECDF  F01A         	call	_oled_putString	;wreg free
  6631                           
  6632                           ;MOTEapp.c: 656: oled_putString("Data Rate:   2", 0,2);
  6633  000596  0E97               	movlw	low STR_99
  6634  000598  0100               	movlb	0	; () banked
  6635  00059A  6FD5               	movwf	oled_putString@string& (0+255),b
  6636  00059C  0E7C               	movlw	high STR_99
  6637  00059E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6638  0005A0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6639  0005A2  0E02               	movlw	2
  6640  0005A4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6641  0005A6  ECDF  F01A         	call	_oled_putString	;wreg free
  6642                           
  6643                           ;MOTEapp.c: 657: oled_putString("Data Rate:   3", 0,3);
  6644  0005AA  0EA6               	movlw	low STR_100
  6645  0005AC  0100               	movlb	0	; () banked
  6646  0005AE  6FD5               	movwf	oled_putString@string& (0+255),b
  6647  0005B0  0E7C               	movlw	high STR_100
  6648  0005B2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6649  0005B4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6650  0005B6  0E03               	movlw	3
  6651  0005B8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6652  0005BA  ECDF  F01A         	call	_oled_putString	;wreg free
  6653                           
  6654                           ;MOTEapp.c: 659: if (dataRateSelection == 0)
  6655  0005BE  0100               	movlb	0	; () banked
  6656  0005C0  51F7               	movf	_dataRateSelection& (0+255),w,b
  6657  0005C2  E101               	bnz	l11298
  6658  0005C4  D214               	goto	l11512
  6659  0005C6                     l11298:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;MOTEapp.c: 661: else if (dataRateSelection == 1)
  6663  0005C6  05F7               	decf	_dataRateSelection& (0+255),w,b
  6664  0005C8  E101               	bnz	l11302
  6665  0005CA  D0C2               	goto	l11384
  6666  0005CC                     l11302:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;MOTEapp.c: 663: else if (dataRateSelection == 2)
  6670  0005CC  0E02               	movlw	2
  6671  0005CE  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6672  0005D0  E101               	bnz	l11306
  6673  0005D2  D0CA               	goto	l11388
  6674  0005D4                     l11306:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 665: else if (dataRateSelection == 3)
  6678  0005D4  0E03               	movlw	3
  6679  0005D6  D080               	goto	L38
  6680  0005D8                     l11310:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 669: oled_clear();
  6684  0005D8  EC72  F020         	call	_oled_clear	;wreg free
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;MOTEapp.c: 670: oled_putString("<", 15,0);
  6688  0005DC  0EF7               	movlw	low STR_96
  6689  0005DE  6FD5               	movwf	oled_putString@string& (0+255),b
  6690  0005E0  0E7F               	movlw	high STR_96
  6691  0005E2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6692  0005E4  0E0F               	movlw	15
  6693  0005E6  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6694  0005E8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6695  0005EA  ECDF  F01A         	call	_oled_putString	;wreg free
  6696                           
  6697                           ;MOTEapp.c: 671: oled_putString("Data Rate:   1", 0,0);
  6698  0005EE  0E88               	movlw	low STR_98
  6699  0005F0  0100               	movlb	0	; () banked
  6700  0005F2  6FD5               	movwf	oled_putString@string& (0+255),b
  6701  0005F4  0E7C               	movlw	high STR_98
  6702  0005F6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6703  0005F8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6704  0005FA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6705  0005FC  ECDF  F01A         	call	_oled_putString	;wreg free
  6706                           
  6707                           ;MOTEapp.c: 672: oled_putString("Data Rate:   2", 0,1);
  6708  000600  0E97               	movlw	low STR_99
  6709  000602  0100               	movlb	0	; () banked
  6710  000604  6FD5               	movwf	oled_putString@string& (0+255),b
  6711  000606  0E7C               	movlw	high STR_99
  6712  000608  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6713  00060A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6714  00060C  0E01               	movlw	1
  6715  00060E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6716  000610  ECDF  F01A         	call	_oled_putString	;wreg free
  6717                           
  6718                           ;MOTEapp.c: 673: oled_putString("Data Rate:   3", 0,2);
  6719  000614  0EA6               	movlw	low STR_100
  6720  000616  0100               	movlb	0	; () banked
  6721  000618  6FD5               	movwf	oled_putString@string& (0+255),b
  6722  00061A  0E7C               	movlw	high STR_100
  6723  00061C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6724  00061E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6725  000620  0E02               	movlw	2
  6726  000622  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6727  000624  ECDF  F01A         	call	_oled_putString	;wreg free
  6728                           
  6729                           ;MOTEapp.c: 674: oled_putString("Data Rate:   4", 0,3);
  6730  000628  0EB5               	movlw	low STR_118
  6731  00062A  0100               	movlb	0	; () banked
  6732  00062C  6FD5               	movwf	oled_putString@string& (0+255),b
  6733  00062E  0E7C               	movlw	high STR_118
  6734  000630  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6735  000632  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6736  000634  0E03               	movlw	3
  6737  000636  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6738  000638  ECDF  F01A         	call	_oled_putString	;wreg free
  6739                           
  6740                           ;MOTEapp.c: 676: if (dataRateSelection == 1)
  6741  00063C  0100               	movlb	0	; () banked
  6742  00063E  05F7               	decf	_dataRateSelection& (0+255),w,b
  6743  000640  E101               	bnz	l11326
  6744  000642  D1D5               	goto	l11512
  6745  000644                     l11326:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;MOTEapp.c: 678: else if (dataRateSelection == 2)
  6749  000644  0E02               	movlw	2
  6750  000646  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6751  000648  E101               	bnz	l11330
  6752  00064A  D082               	goto	l11384
  6753  00064C                     l11330:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;MOTEapp.c: 680: else if (dataRateSelection == 3)
  6757  00064C  0E03               	movlw	3
  6758  00064E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6759  000650  E101               	bnz	l11334
  6760  000652  D08A               	goto	l11388
  6761  000654                     l11334:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;MOTEapp.c: 682: else if (dataRateSelection == 4)
  6765  000654  0E04               	movlw	4
  6766  000656  D040               	goto	L38
  6767  000658                     l11338:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;MOTEapp.c: 686: oled_clear();
  6771  000658  EC72  F020         	call	_oled_clear	;wreg free
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;MOTEapp.c: 687: oled_putString("<", 15,0);
  6775  00065C  0EF7               	movlw	low STR_96
  6776  00065E  6FD5               	movwf	oled_putString@string& (0+255),b
  6777  000660  0E7F               	movlw	high STR_96
  6778  000662  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6779  000664  0E0F               	movlw	15
  6780  000666  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6781  000668  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6782  00066A  ECDF  F01A         	call	_oled_putString	;wreg free
  6783                           
  6784                           ;MOTEapp.c: 688: oled_putString("Data Rate:   2", 0,0);
  6785  00066E  0E97               	movlw	low STR_99
  6786  000670  0100               	movlb	0	; () banked
  6787  000672  6FD5               	movwf	oled_putString@string& (0+255),b
  6788  000674  0E7C               	movlw	high STR_99
  6789  000676  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6790  000678  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6791  00067A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6792  00067C  ECDF  F01A         	call	_oled_putString	;wreg free
  6793                           
  6794                           ;MOTEapp.c: 689: oled_putString("Data Rate:   3", 0,1);
  6795  000680  0EA6               	movlw	low STR_100
  6796  000682  0100               	movlb	0	; () banked
  6797  000684  6FD5               	movwf	oled_putString@string& (0+255),b
  6798  000686  0E7C               	movlw	high STR_100
  6799  000688  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6800  00068A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6801  00068C  0E01               	movlw	1
  6802  00068E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6803  000690  ECDF  F01A         	call	_oled_putString	;wreg free
  6804                           
  6805                           ;MOTEapp.c: 690: oled_putString("Data Rate:   4", 0,2);
  6806  000694  0EB5               	movlw	low STR_118
  6807  000696  0100               	movlb	0	; () banked
  6808  000698  6FD5               	movwf	oled_putString@string& (0+255),b
  6809  00069A  0E7C               	movlw	high STR_118
  6810  00069C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6811  00069E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6812  0006A0  0E02               	movlw	2
  6813  0006A2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6814  0006A4  ECDF  F01A         	call	_oled_putString	;wreg free
  6815                           
  6816                           ;MOTEapp.c: 691: oled_putString("Data Rate:   5", 0,3);
  6817  0006A8  0EC4               	movlw	low STR_127
  6818  0006AA  0100               	movlb	0	; () banked
  6819  0006AC  6FD5               	movwf	oled_putString@string& (0+255),b
  6820  0006AE  0E7C               	movlw	high STR_127
  6821  0006B0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6822  0006B2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6823  0006B4  0E03               	movlw	3
  6824  0006B6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6825  0006B8  ECDF  F01A         	call	_oled_putString	;wreg free
  6826                           
  6827                           ;MOTEapp.c: 693: if (dataRateSelection == 2)
  6828  0006BC  0E02               	movlw	2
  6829  0006BE  0100               	movlb	0	; () banked
  6830  0006C0  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6831  0006C2  E101               	bnz	l11354
  6832  0006C4  D194               	goto	l11512
  6833  0006C6                     l11354:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;MOTEapp.c: 695: else if (dataRateSelection == 3)
  6837  0006C6  0E03               	movlw	3
  6838  0006C8  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6839  0006CA  E101               	bnz	l11358
  6840  0006CC  D041               	goto	l11384
  6841  0006CE                     l11358:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;MOTEapp.c: 697: else if (dataRateSelection == 4)
  6845  0006CE  0E04               	movlw	4
  6846  0006D0  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6847  0006D2  E101               	bnz	l11362
  6848  0006D4  D049               	goto	l11388
  6849  0006D6                     l11362:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;MOTEapp.c: 699: else if (dataRateSelection == 5)
  6853  0006D6  0E05               	movlw	5
  6854  0006D8                     L38:
  6855  0006D8  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6856  0006DA  D04F               	goto	L34
  6857  0006DC                     l11366:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;MOTEapp.c: 703: oled_clear();
  6861  0006DC  EC72  F020         	call	_oled_clear	;wreg free
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;MOTEapp.c: 704: oled_putString("<", 15,0);
  6865  0006E0  0EF7               	movlw	low STR_96
  6866  0006E2  6FD5               	movwf	oled_putString@string& (0+255),b
  6867  0006E4  0E7F               	movlw	high STR_96
  6868  0006E6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6869  0006E8  0E0F               	movlw	15
  6870  0006EA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6871  0006EC  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6872  0006EE  ECDF  F01A         	call	_oled_putString	;wreg free
  6873                           
  6874                           ;MOTEapp.c: 705: oled_putString("Data Rate:   3", 0,0);
  6875  0006F2  0EA6               	movlw	low STR_100
  6876  0006F4  0100               	movlb	0	; () banked
  6877  0006F6  6FD5               	movwf	oled_putString@string& (0+255),b
  6878  0006F8  0E7C               	movlw	high STR_100
  6879  0006FA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6880  0006FC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6881  0006FE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6882  000700  ECDF  F01A         	call	_oled_putString	;wreg free
  6883                           
  6884                           ;MOTEapp.c: 706: oled_putString("Data Rate:   4", 0,1);
  6885  000704  0EB5               	movlw	low STR_118
  6886  000706  0100               	movlb	0	; () banked
  6887  000708  6FD5               	movwf	oled_putString@string& (0+255),b
  6888  00070A  0E7C               	movlw	high STR_118
  6889  00070C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6890  00070E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6891  000710  0E01               	movlw	1
  6892  000712  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6893  000714  ECDF  F01A         	call	_oled_putString	;wreg free
  6894                           
  6895                           ;MOTEapp.c: 707: oled_putString("Data Rate:   5", 0,2);
  6896  000718  0EC4               	movlw	low STR_127
  6897  00071A  0100               	movlb	0	; () banked
  6898  00071C  6FD5               	movwf	oled_putString@string& (0+255),b
  6899  00071E  0E7C               	movlw	high STR_127
  6900  000720  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6901  000722  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6902  000724  0E02               	movlw	2
  6903  000726  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6904  000728  ECDF  F01A         	call	_oled_putString	;wreg free
  6905                           
  6906                           ;MOTEapp.c: 708: oled_putString("Data Rate:   6", 0,3);
  6907  00072C  0ED3               	movlw	low STR_136
  6908  00072E  0100               	movlb	0	; () banked
  6909  000730  6FD5               	movwf	oled_putString@string& (0+255),b
  6910  000732  0E7C               	movlw	high STR_136
  6911  000734  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6912  000736  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6913  000738  0E03               	movlw	3
  6914  00073A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6915  00073C  ECDF  F01A         	call	_oled_putString	;wreg free
  6916                           
  6917                           ;MOTEapp.c: 710: if (dataRateSelection == 3)
  6918  000740  0E03               	movlw	3
  6919  000742  0100               	movlb	0	; () banked
  6920  000744  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6921  000746  E101               	bnz	l11382
  6922  000748  D152               	goto	l11512
  6923  00074A                     l11382:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;MOTEapp.c: 712: else if (dataRateSelection == 4)
  6927  00074A  0E04               	movlw	4
  6928  00074C  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6929  00074E  E109               	bnz	l11386
  6930  000750                     l11384:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;MOTEapp.c: 713: oled_putString("*", 14,1);
  6934  000750  0EF5               	movlw	low STR_101
  6935  000752  6FD5               	movwf	oled_putString@string& (0+255),b
  6936  000754  0E7F               	movlw	high STR_101
  6937  000756  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6938  000758  0E0E               	movlw	14
  6939  00075A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6940  00075C  0E01               	movlw	1
  6941  00075E  EFAD  F008         	goto	L29
  6942  000762                     l11386:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;MOTEapp.c: 714: else if (dataRateSelection == 5)
  6946  000762  0E05               	movlw	5
  6947  000764  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6948  000766  E107               	bnz	l11390
  6949  000768                     l11388:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;MOTEapp.c: 715: oled_putString("*", 14,2);
  6953  000768  0EF5               	movlw	low STR_101
  6954  00076A  6FD5               	movwf	oled_putString@string& (0+255),b
  6955  00076C  0E7F               	movlw	high STR_101
  6956  00076E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6957  000770  0E0E               	movlw	14
  6958  000772  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6959  000774  D044               	goto	L35
  6960  000776                     l11390:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;MOTEapp.c: 716: else if (dataRateSelection == 6)
  6964  000776  0E06               	movlw	6
  6965  000778  D7AF               	goto	L38
  6966  00077A                     L34:
  6967  00077A  A4D8               	btfss	status,2,c
  6968  00077C  0012               	return	
  6969  00077E  D180               	goto	L70
  6970  000780                     l11394:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;MOTEapp.c: 720: oled_clear();
  6974  000780  EC72  F020         	call	_oled_clear	;wreg free
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;MOTEapp.c: 721: oled_putString("<", 15,0);
  6978  000784  0EF7               	movlw	low STR_96
  6979  000786  6FD5               	movwf	oled_putString@string& (0+255),b
  6980  000788  0E7F               	movlw	high STR_96
  6981  00078A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6982  00078C  0E0F               	movlw	15
  6983  00078E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6984  000790  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6985  000792  ECDF  F01A         	call	_oled_putString	;wreg free
  6986                           
  6987                           ;MOTEapp.c: 722: oled_putString("Data Rate:   4", 0,0);
  6988  000796  0EB5               	movlw	low STR_118
  6989  000798  0100               	movlb	0	; () banked
  6990  00079A  6FD5               	movwf	oled_putString@string& (0+255),b
  6991  00079C  0E7C               	movlw	high STR_118
  6992  00079E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6993  0007A0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6994  0007A2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6995  0007A4  ECDF  F01A         	call	_oled_putString	;wreg free
  6996                           
  6997                           ;MOTEapp.c: 723: oled_putString("Data Rate:   5", 0,1);
  6998  0007A8  0EC4               	movlw	low STR_127
  6999  0007AA  0100               	movlb	0	; () banked
  7000  0007AC  6FD5               	movwf	oled_putString@string& (0+255),b
  7001  0007AE  0E7C               	movlw	high STR_127
  7002  0007B0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7003  0007B2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7004  0007B4  0E01               	movlw	1
  7005  0007B6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7006  0007B8  ECDF  F01A         	call	_oled_putString	;wreg free
  7007                           
  7008                           ;MOTEapp.c: 724: oled_putString("Data Rate:   6", 0,2);
  7009  0007BC  0ED3               	movlw	low STR_136
  7010  0007BE  0100               	movlb	0	; () banked
  7011  0007C0  6FD5               	movwf	oled_putString@string& (0+255),b
  7012  0007C2  0E7C               	movlw	high STR_136
  7013  0007C4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7014  0007C6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7015  0007C8  0E02               	movlw	2
  7016  0007CA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7017  0007CC  ECDF  F01A         	call	_oled_putString	;wreg free
  7018                           
  7019                           ;MOTEapp.c: 725: oled_putString("Data Rate:   7", 0,3);
  7020  0007D0  0EE2               	movlw	low STR_145
  7021  0007D2  0100               	movlb	0	; () banked
  7022  0007D4  6FD5               	movwf	oled_putString@string& (0+255),b
  7023  0007D6  0E7C               	movlw	high STR_145
  7024  0007D8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7025  0007DA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7026  0007DC  0E03               	movlw	3
  7027  0007DE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7028  0007E0  ECDF  F01A         	call	_oled_putString	;wreg free
  7029                           
  7030                           ;MOTEapp.c: 727: if (dataRateSelection == 4)
  7031  0007E4  0E04               	movlw	4
  7032  0007E6  0100               	movlb	0	; () banked
  7033  0007E8  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7034  0007EA  E101               	bnz	l11410
  7035  0007EC  D100               	goto	l11512
  7036  0007EE                     l11410:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;MOTEapp.c: 729: else if (dataRateSelection == 5)
  7040  0007EE  0E05               	movlw	5
  7041  0007F0  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7042  0007F2  E101               	bnz	l11414
  7043  0007F4  D7AD               	goto	l11384
  7044  0007F6                     l11414:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;MOTEapp.c: 731: else if (dataRateSelection == 6)
  7048  0007F6  0E06               	movlw	6
  7049  0007F8  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7050  0007FA  E104               	bnz	l11418
  7051  0007FC  D7B5               	goto	l11388
  7052  0007FE                     L35:
  7053  0007FE  0E02               	movlw	2
  7054  000800  EFAD  F008         	goto	L29
  7055  000804                     l11418:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;MOTEapp.c: 733: else if (dataRateSelection == 7)
  7059  000804  0E07               	movlw	7
  7060  000806  D768               	goto	L38
  7061  000808                     l11422:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;MOTEapp.c: 737: oled_clear();
  7065  000808  EC72  F020         	call	_oled_clear	;wreg free
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;MOTEapp.c: 738: oled_putString("<", 15,0);
  7069  00080C  0EF7               	movlw	low STR_96
  7070  00080E  6FD5               	movwf	oled_putString@string& (0+255),b
  7071  000810  0E7F               	movlw	high STR_96
  7072  000812  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7073  000814  0E0F               	movlw	15
  7074  000816  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7075  000818  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7076  00081A  ECDF  F01A         	call	_oled_putString	;wreg free
  7077                           
  7078                           ;MOTEapp.c: 739: oled_putString("Data Rate:   5", 0,0);
  7079  00081E  0EC4               	movlw	low STR_127
  7080  000820  0100               	movlb	0	; () banked
  7081  000822  6FD5               	movwf	oled_putString@string& (0+255),b
  7082  000824  0E7C               	movlw	high STR_127
  7083  000826  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7084  000828  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7085  00082A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7086  00082C  ECDF  F01A         	call	_oled_putString	;wreg free
  7087                           
  7088                           ;MOTEapp.c: 740: oled_putString("Data Rate:   6", 0,1);
  7089  000830  0ED3               	movlw	low STR_136
  7090  000832  0100               	movlb	0	; () banked
  7091  000834  6FD5               	movwf	oled_putString@string& (0+255),b
  7092  000836  0E7C               	movlw	high STR_136
  7093  000838  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7094  00083A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7095  00083C  0E01               	movlw	1
  7096  00083E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7097  000840  ECDF  F01A         	call	_oled_putString	;wreg free
  7098                           
  7099                           ;MOTEapp.c: 741: oled_putString("Data Rate:   7", 0,2);
  7100  000844  0EE2               	movlw	low STR_145
  7101  000846  0100               	movlb	0	; () banked
  7102  000848  6FD5               	movwf	oled_putString@string& (0+255),b
  7103  00084A  0E7C               	movlw	high STR_145
  7104  00084C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7105  00084E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7106  000850  0E02               	movlw	2
  7107  000852  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7108  000854  ECDF  F01A         	call	_oled_putString	;wreg free
  7109                           
  7110                           ;MOTEapp.c: 742: oled_putString("Auto Data Rate", 0,3);
  7111  000858  0EF1               	movlw	low STR_154
  7112  00085A  0100               	movlb	0	; () banked
  7113  00085C  6FD5               	movwf	oled_putString@string& (0+255),b
  7114  00085E  0E7C               	movlw	high STR_154
  7115  000860  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7116  000862  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7117  000864  0E03               	movlw	3
  7118  000866  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7119  000868  ECDF  F01A         	call	_oled_putString	;wreg free
  7120                           
  7121                           ;MOTEapp.c: 744: if (dataRateSelection == 5)
  7122  00086C  0E05               	movlw	5
  7123  00086E  0100               	movlb	0	; () banked
  7124  000870  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7125  000872  E101               	bnz	l11438
  7126  000874  D0BC               	goto	l11512
  7127  000876                     l11438:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;MOTEapp.c: 746: else if (dataRateSelection == 6)
  7131  000876  0E06               	movlw	6
  7132  000878  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7133  00087A  E101               	bnz	l11442
  7134  00087C  D769               	goto	l11384
  7135  00087E                     l11442:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;MOTEapp.c: 748: else if (dataRateSelection == 7)
  7139  00087E  0E07               	movlw	7
  7140  000880  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7141  000882  E101               	bnz	l11446
  7142  000884  D771               	goto	l11388
  7143  000886                     l11446:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;MOTEapp.c: 750: else if (adrStatus)
  7147  000886  518E               	movf	_adrStatus& (0+255),w,b
  7148  000888  B4D8               	btfsc	status,2,c
  7149  00088A  0012               	return	
  7150  00088C  D0F9               	goto	L70
  7151  00088E                     l11450:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;MOTEapp.c: 754: oled_clear();
  7155  00088E  EC72  F020         	call	_oled_clear	;wreg free
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;MOTEapp.c: 755: oled_putString("<", 15,0);
  7159  000892  0EF7               	movlw	low STR_96
  7160  000894  6FD5               	movwf	oled_putString@string& (0+255),b
  7161  000896  0E7F               	movlw	high STR_96
  7162  000898  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7163  00089A  0E0F               	movlw	15
  7164  00089C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7165  00089E  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7166  0008A0  ECDF  F01A         	call	_oled_putString	;wreg free
  7167                           
  7168                           ;MOTEapp.c: 756: oled_putString("Data Rate:   6", 0,0);
  7169  0008A4  0ED3               	movlw	low STR_136
  7170  0008A6  0100               	movlb	0	; () banked
  7171  0008A8  6FD5               	movwf	oled_putString@string& (0+255),b
  7172  0008AA  0E7C               	movlw	high STR_136
  7173  0008AC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7174  0008AE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7175  0008B0  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7176  0008B2  ECDF  F01A         	call	_oled_putString	;wreg free
  7177                           
  7178                           ;MOTEapp.c: 757: oled_putString("Data Rate:   7", 0,1);
  7179  0008B6  0EE2               	movlw	low STR_145
  7180  0008B8  0100               	movlb	0	; () banked
  7181  0008BA  6FD5               	movwf	oled_putString@string& (0+255),b
  7182  0008BC  0E7C               	movlw	high STR_145
  7183  0008BE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7184  0008C0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7185  0008C2  0E01               	movlw	1
  7186  0008C4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7187  0008C6  ECDF  F01A         	call	_oled_putString	;wreg free
  7188                           
  7189                           ;MOTEapp.c: 758: oled_putString("Auto Data Rate", 0,2);
  7190  0008CA  0EF1               	movlw	low STR_154
  7191  0008CC  0100               	movlb	0	; () banked
  7192  0008CE  6FD5               	movwf	oled_putString@string& (0+255),b
  7193  0008D0  0E7C               	movlw	high STR_154
  7194  0008D2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7195  0008D4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7196  0008D6  0E02               	movlw	2
  7197  0008D8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7198  0008DA  ECDF  F01A         	call	_oled_putString	;wreg free
  7199                           
  7200                           ;MOTEapp.c: 759: oled_putString("Exit Menu     ", 0,3);
  7201  0008DE  0E4C               	movlw	low STR_163
  7202  0008E0  0100               	movlb	0	; () banked
  7203  0008E2  6FD5               	movwf	oled_putString@string& (0+255),b
  7204  0008E4  0E7C               	movlw	high STR_163
  7205  0008E6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7206  0008E8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7207  0008EA  0E03               	movlw	3
  7208  0008EC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7209  0008EE  ECDF  F01A         	call	_oled_putString	;wreg free
  7210                           
  7211                           ;MOTEapp.c: 761: if (dataRateSelection == 6)
  7212  0008F2  0E06               	movlw	6
  7213  0008F4  0100               	movlb	0	; () banked
  7214  0008F6  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7215  0008F8  E101               	bnz	l11466
  7216  0008FA  D079               	goto	l11512
  7217  0008FC                     l11466:
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;MOTEapp.c: 763: else if (dataRateSelection == 7)
  7221  0008FC  0E07               	movlw	7
  7222  0008FE  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7223  000900  E101               	bnz	l11470
  7224  000902  D726               	goto	l11384
  7225  000904                     l11470:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;MOTEapp.c: 765: else if (adrStatus)
  7229  000904  518E               	movf	_adrStatus& (0+255),w,b
  7230  000906  B4D8               	btfsc	status,2,c
  7231  000908  0012               	return	
  7232  00090A  D72E               	goto	l11388
  7233  00090C                     l11474:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;MOTEapp.c: 769: oled_clear();
  7237  00090C  EC72  F020         	call	_oled_clear	;wreg free
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;MOTEapp.c: 770: oled_putString("<", 15,0);
  7241  000910  0EF7               	movlw	low STR_96
  7242  000912  6FD5               	movwf	oled_putString@string& (0+255),b
  7243  000914  0E7F               	movlw	high STR_96
  7244  000916  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7245  000918  0E0F               	movlw	15
  7246  00091A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7247  00091C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7248  00091E  ECDF  F01A         	call	_oled_putString	;wreg free
  7249                           
  7250                           ;MOTEapp.c: 771: oled_putString("Data Rate:   7", 0,0);
  7251  000922  0EE2               	movlw	low STR_145
  7252  000924  0100               	movlb	0	; () banked
  7253  000926  6FD5               	movwf	oled_putString@string& (0+255),b
  7254  000928  0E7C               	movlw	high STR_145
  7255  00092A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7256  00092C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7257  00092E  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7258  000930  ECDF  F01A         	call	_oled_putString	;wreg free
  7259                           
  7260                           ;MOTEapp.c: 772: oled_putString("Auto Data Rate", 0,1);
  7261  000934  0EF1               	movlw	low STR_154
  7262  000936  0100               	movlb	0	; () banked
  7263  000938  6FD5               	movwf	oled_putString@string& (0+255),b
  7264  00093A  0E7C               	movlw	high STR_154
  7265  00093C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7266  00093E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7267  000940  0E01               	movlw	1
  7268  000942  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7269  000944  ECDF  F01A         	call	_oled_putString	;wreg free
  7270                           
  7271                           ;MOTEapp.c: 773: oled_putString("Exit Menu     ", 0,2);
  7272  000948  0E4C               	movlw	low STR_163
  7273  00094A  0100               	movlb	0	; () banked
  7274  00094C  6FD5               	movwf	oled_putString@string& (0+255),b
  7275  00094E  0E7C               	movlw	high STR_163
  7276  000950  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7277  000952  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7278  000954  0E02               	movlw	2
  7279  000956  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7280  000958  ECDF  F01A         	call	_oled_putString	;wreg free
  7281                           
  7282                           ;MOTEapp.c: 774: oled_putString("Data Rate:   0", 0,3);
  7283  00095C  0E79               	movlw	low STR_97
  7284  00095E  0100               	movlb	0	; () banked
  7285  000960  6FD5               	movwf	oled_putString@string& (0+255),b
  7286  000962  0E7C               	movlw	high STR_97
  7287  000964  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7288  000966  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7289  000968  0E03               	movlw	3
  7290  00096A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7291  00096C  ECDF  F01A         	call	_oled_putString	;wreg free
  7292                           
  7293                           ;MOTEapp.c: 776: if (dataRateSelection == 7)
  7294  000970  0E07               	movlw	7
  7295  000972  0100               	movlb	0	; () banked
  7296  000974  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7297  000976  E101               	bnz	l11490
  7298  000978  D03A               	goto	l11512
  7299  00097A                     l11490:
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;MOTEapp.c: 778: else if (adrStatus)
  7303  00097A  518E               	movf	_adrStatus& (0+255),w,b
  7304  00097C  E001               	bz	l11494
  7305  00097E  D6E8               	goto	l11384
  7306  000980                     l11494:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;MOTEapp.c: 780: else if (dataRateSelection == 0)
  7310  000980  51F7               	movf	_dataRateSelection& (0+255),w,b
  7311  000982  D6FB               	goto	L34
  7312  000984                     l11498:
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;MOTEapp.c: 784: oled_clear();
  7316  000984  EC72  F020         	call	_oled_clear	;wreg free
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;MOTEapp.c: 785: oled_putString("<", 15,0);
  7320  000988  0EF7               	movlw	low STR_96
  7321  00098A  6FD5               	movwf	oled_putString@string& (0+255),b
  7322  00098C  0E7F               	movlw	high STR_96
  7323  00098E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7324  000990  0E0F               	movlw	15
  7325  000992  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7326  000994  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7327  000996  ECDF  F01A         	call	_oled_putString	;wreg free
  7328                           
  7329                           ;MOTEapp.c: 786: oled_putString("Auto Data Rate", 0,0);
  7330  00099A  0EF1               	movlw	low STR_154
  7331  00099C  0100               	movlb	0	; () banked
  7332  00099E  6FD5               	movwf	oled_putString@string& (0+255),b
  7333  0009A0  0E7C               	movlw	high STR_154
  7334  0009A2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7335  0009A4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7336  0009A6  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7337  0009A8  ECDF  F01A         	call	_oled_putString	;wreg free
  7338                           
  7339                           ;MOTEapp.c: 787: oled_putString("Exit Menu     ", 0,1);
  7340  0009AC  0E4C               	movlw	low STR_163
  7341  0009AE  0100               	movlb	0	; () banked
  7342  0009B0  6FD5               	movwf	oled_putString@string& (0+255),b
  7343  0009B2  0E7C               	movlw	high STR_163
  7344  0009B4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7345  0009B6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7346  0009B8  0E01               	movlw	1
  7347  0009BA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7348  0009BC  ECDF  F01A         	call	_oled_putString	;wreg free
  7349                           
  7350                           ;MOTEapp.c: 788: oled_putString("Data Rate:   0", 0,2);
  7351  0009C0  0E79               	movlw	low STR_97
  7352  0009C2  0100               	movlb	0	; () banked
  7353  0009C4  6FD5               	movwf	oled_putString@string& (0+255),b
  7354  0009C6  0E7C               	movlw	high STR_97
  7355  0009C8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7356  0009CA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7357  0009CC  0E02               	movlw	2
  7358  0009CE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7359  0009D0  ECDF  F01A         	call	_oled_putString	;wreg free
  7360                           
  7361                           ;MOTEapp.c: 789: oled_putString("Data Rate:   1", 0,3);
  7362  0009D4  0E88               	movlw	low STR_98
  7363  0009D6  0100               	movlb	0	; () banked
  7364  0009D8  6FD5               	movwf	oled_putString@string& (0+255),b
  7365  0009DA  0E7C               	movlw	high STR_98
  7366  0009DC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7367  0009DE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7368  0009E0  0E03               	movlw	3
  7369  0009E2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7370  0009E4  ECDF  F01A         	call	_oled_putString	;wreg free
  7371                           
  7372                           ;MOTEapp.c: 791: if (adrStatus)
  7373  0009E8  0100               	movlb	0	; () banked
  7374  0009EA  518E               	movf	_adrStatus& (0+255),w,b
  7375  0009EC  E009               	bz	l11514
  7376  0009EE                     l11512:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;MOTEapp.c: 792: oled_putString("*", 14,0);
  7380  0009EE  0EF5               	movlw	low STR_101
  7381  0009F0  6FD5               	movwf	oled_putString@string& (0+255),b
  7382  0009F2  0E7F               	movlw	high STR_101
  7383  0009F4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7384  0009F6  0E0E               	movlw	14
  7385  0009F8  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7386  0009FA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7387  0009FC  EFDF  F01A         	goto	_oled_putString	;wreg free
  7388  000A00                     l11514:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;MOTEapp.c: 793: else if (dataRateSelection == 0)
  7392  000A00  51F7               	movf	_dataRateSelection& (0+255),w,b
  7393  000A02  E101               	bnz	l11518
  7394  000A04  D6B1               	goto	l11388
  7395  000A06                     l11518:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;MOTEapp.c: 795: else if (dataRateSelection == 1)
  7399  000A06  05F7               	decf	_dataRateSelection& (0+255),w,b
  7400  000A08  D6B8               	goto	L34
  7401  000A0A                     l11522:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;MOTEapp.c: 799: oled_clear();
  7405  000A0A  EC72  F020         	call	_oled_clear	;wreg free
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;MOTEapp.c: 800: oled_putString("<", 15,0);
  7409  000A0E  0EF7               	movlw	low STR_96
  7410  000A10  6FD5               	movwf	oled_putString@string& (0+255),b
  7411  000A12  0E7F               	movlw	high STR_96
  7412  000A14  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7413  000A16  0E0F               	movlw	15
  7414  000A18  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7415  000A1A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7416  000A1C  ECDF  F01A         	call	_oled_putString	;wreg free
  7417                           
  7418                           ;MOTEapp.c: 801: oled_putString("Exit Menu     ", 0,0);
  7419  000A20  0E4C               	movlw	low STR_163
  7420  000A22  0100               	movlb	0	; () banked
  7421  000A24  6FD5               	movwf	oled_putString@string& (0+255),b
  7422  000A26  0E7C               	movlw	high STR_163
  7423  000A28  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7424  000A2A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7425  000A2C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7426  000A2E  ECDF  F01A         	call	_oled_putString	;wreg free
  7427                           
  7428                           ;MOTEapp.c: 802: oled_putString("Data Rate:   0", 0,1);
  7429  000A32  0E79               	movlw	low STR_97
  7430  000A34  0100               	movlb	0	; () banked
  7431  000A36  6FD5               	movwf	oled_putString@string& (0+255),b
  7432  000A38  0E7C               	movlw	high STR_97
  7433  000A3A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7434  000A3C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7435  000A3E  0E01               	movlw	1
  7436  000A40  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7437  000A42  ECDF  F01A         	call	_oled_putString	;wreg free
  7438                           
  7439                           ;MOTEapp.c: 803: oled_putString("Data Rate:   1", 0,2);
  7440  000A46  0E88               	movlw	low STR_98
  7441  000A48  0100               	movlb	0	; () banked
  7442  000A4A  6FD5               	movwf	oled_putString@string& (0+255),b
  7443  000A4C  0E7C               	movlw	high STR_98
  7444  000A4E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7445  000A50  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7446  000A52  0E02               	movlw	2
  7447  000A54  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7448  000A56  ECDF  F01A         	call	_oled_putString	;wreg free
  7449                           
  7450                           ;MOTEapp.c: 804: oled_putString("Data Rate:   2", 0,3);
  7451  000A5A  0E97               	movlw	low STR_99
  7452  000A5C  0100               	movlb	0	; () banked
  7453  000A5E  6FD5               	movwf	oled_putString@string& (0+255),b
  7454  000A60  0E7C               	movlw	high STR_99
  7455  000A62  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7456  000A64  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7457  000A66  0E03               	movlw	3
  7458  000A68  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7459  000A6A  ECDF  F01A         	call	_oled_putString	;wreg free
  7460                           
  7461                           ;MOTEapp.c: 806: if (dataRateSelection == 0)
  7462  000A6E  0100               	movlb	0	; () banked
  7463  000A70  51F7               	movf	_dataRateSelection& (0+255),w,b
  7464  000A72  E101               	bnz	l11538
  7465  000A74  D66D               	goto	l11384
  7466  000A76                     l11538:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;MOTEapp.c: 808: else if (dataRateSelection == 1)
  7470  000A76  05F7               	decf	_dataRateSelection& (0+255),w,b
  7471  000A78  E101               	bnz	l11542
  7472  000A7A  D676               	goto	l11388
  7473  000A7C                     l11542:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;MOTEapp.c: 810: else if (dataRateSelection == 2)
  7477  000A7C  0E02               	movlw	2
  7478  000A7E  D62C               	goto	L38
  7479  000A80                     L70:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;MOTEapp.c: 811: oled_putString("*", 14,3);
  7483  000A80  0EF5               	movlw	low STR_101
  7484  000A82  6FD5               	movwf	oled_putString@string& (0+255),b
  7485  000A84  0E7F               	movlw	high STR_101
  7486  000A86  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7487  000A88  0E0E               	movlw	14
  7488  000A8A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7489  000A8C  0E03               	movlw	3
  7490  000A8E  D365               	goto	L29
  7491  000A90                     l11548:
  7492                           
  7493                           ; BSR set to: 0
  7494  000A90  5193               	movf	_dataRatePosition& (0+255),w,b
  7495                           
  7496                           ; Switch size 1, requested type "speed"
  7497                           ; Number of cases is 10, Range of values is 0 to 9
  7498                           ; switch strategies available:
  7499                           ; Name         Instructions Cycles
  7500                           ; simple_byte           31    16 (average)
  7501                           ;	Chosen strategy is simple_byte
  7502  000A92  E101 D562          	bz	l11282
  7503  000A96  0A01               	xorlw	1	; case 1
  7504  000A98  E101 D59E          	bz	l11310
  7505  000A9C  0A03               	xorlw	3	; case 2
  7506  000A9E  E101 D5DB          	bz	l11338
  7507  000AA2  0A01               	xorlw	1	; case 3
  7508  000AA4  E101 D61A          	bz	l11366
  7509  000AA8  0A07               	xorlw	7	; case 4
  7510  000AAA  E101 D669          	bz	l11394
  7511  000AAE  0A01               	xorlw	1	; case 5
  7512  000AB0  E101 D6AA          	bz	l11422
  7513  000AB4  0A03               	xorlw	3	; case 6
  7514  000AB6  E101 D6EA          	bz	l11450
  7515  000ABA  0A01               	xorlw	1	; case 7
  7516  000ABC  E101 D726          	bz	l11474
  7517  000AC0  0A0F               	xorlw	15	; case 8
  7518  000AC2  E101 D75F          	bz	l11498
  7519  000AC6  0A01               	xorlw	1	; case 9
  7520  000AC8  A4D8               	btfss	status,2,c
  7521  000ACA  0012               	return	
  7522  000ACC  D79E               	goto	l11522
  7523  000ACE                     l11550:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MOTEapp.c: 815: else if (selectButton)
  7527  000ACE  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7528  000AD0  B4D8               	btfsc	status,2,c
  7529  000AD2  0012               	return	
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;MOTEapp.c: 816: {
  7533                           ;MOTEapp.c: 817: if (dataRatePosition == 9)
  7534  000AD4  0E09               	movlw	9
  7535  000AD6  1993               	xorwf	_dataRatePosition& (0+255),w,b
  7536  000AD8  E121               	bnz	l11566
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;MOTEapp.c: 818: {
  7540                           ;MOTEapp.c: 820: oled_clear();
  7541  000ADA  EC72  F020         	call	_oled_clear	;wreg free
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;MOTEapp.c: 821: dataRatePosition = 0;
  7545  000ADE  6B93               	clrf	_dataRatePosition& (0+255),b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;MOTEapp.c: 822: oled_putString("  Select LoRa   ",0,0);
  7549  000AE0  0ECC               	movlw	low STR_83
  7550  000AE2  6FD5               	movwf	oled_putString@string& (0+255),b
  7551  000AE4  0E7A               	movlw	high STR_83
  7552  000AE6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7553  000AE8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7554  000AEA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7555  000AEC  ECDF  F01A         	call	_oled_putString	;wreg free
  7556                           
  7557                           ;MOTEapp.c: 823: oled_putString("   Data Rate    ",0,1);
  7558  000AF0  0EBB               	movlw	low STR_84
  7559  000AF2  0100               	movlb	0	; () banked
  7560  000AF4  6FD5               	movwf	oled_putString@string& (0+255),b
  7561  000AF6  0E7A               	movlw	high STR_84
  7562  000AF8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7563  000AFA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7564  000AFC  0E01               	movlw	1
  7565  000AFE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7566  000B00  ECDF  F01A         	call	_oled_putString	;wreg free
  7567                           
  7568                           ;MOTEapp.c: 824: oled_putString("(NAV)    (SEL) ",0,3);
  7569  000B04  0EFC               	movlw	low STR_75
  7570  000B06  0100               	movlb	0	; () banked
  7571  000B08  6FD5               	movwf	oled_putString@string& (0+255),b
  7572  000B0A  0E7B               	movlw	high STR_75
  7573  000B0C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7574  000B0E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7575  000B10  0E03               	movlw	3
  7576  000B12  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7577  000B14  ECDF  F01A         	call	_oled_putString	;wreg free
  7578  000B18  EF8B  F001         	goto	l11194
  7579  000B1C                     l11566:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;MOTEapp.c: 827: else
  7583                           ;MOTEapp.c: 828: {
  7584                           ;MOTEapp.c: 829: if (dataRatePosition == 8)
  7585  000B1C  0E08               	movlw	8
  7586  000B1E  1993               	xorwf	_dataRatePosition& (0+255),w,b
  7587  000B20  E11B               	bnz	l11578
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;MOTEapp.c: 830: {
  7591                           ;MOTEapp.c: 831: if (adrStatus)
  7592  000B22  518E               	movf	_adrStatus& (0+255),w,b
  7593  000B24  E00C               	bz	l11574
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;MOTEapp.c: 832: {
  7597                           ;MOTEapp.c: 833: oled_putString(" ", 14,0);
  7598  000B26  0E59               	movlw	low (STR_163+13)
  7599  000B28  6FD5               	movwf	oled_putString@string& (0+255),b
  7600  000B2A  0E7C               	movlw	high (STR_163+13)
  7601  000B2C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7602  000B2E  0E0E               	movlw	14
  7603  000B30  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7604  000B32  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7605  000B34  ECDF  F01A         	call	_oled_putString	;wreg free
  7606                           
  7607                           ;MOTEapp.c: 834: adrStatus = 0;
  7608  000B38  0100               	movlb	0	; () banked
  7609  000B3A  6B8E               	clrf	_adrStatus& (0+255),b
  7610                           
  7611                           ;MOTEapp.c: 835: }
  7612  000B3C  D016               	goto	l560
  7613  000B3E                     l11574:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 836: else
  7617                           ;MOTEapp.c: 837: {
  7618                           ;MOTEapp.c: 838: oled_putString("*", 14,0);
  7619  000B3E  0EF5               	movlw	low STR_101
  7620  000B40  6FD5               	movwf	oled_putString@string& (0+255),b
  7621  000B42  0E7F               	movlw	high STR_101
  7622  000B44  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7623  000B46  0E0E               	movlw	14
  7624  000B48  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7625  000B4A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7626  000B4C  ECDF  F01A         	call	_oled_putString	;wreg free
  7627                           
  7628                           ;MOTEapp.c: 839: adrStatus = 1;
  7629  000B50  0E01               	movlw	1
  7630  000B52  0100               	movlb	0	; () banked
  7631  000B54  6F8E               	movwf	_adrStatus& (0+255),b
  7632  000B56  D009               	goto	l560
  7633  000B58                     l11578:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;MOTEapp.c: 842: else
  7637                           ;MOTEapp.c: 843: {
  7638                           ;MOTEapp.c: 844: oled_putString("*", 14,0);
  7639  000B58  0EF5               	movlw	low STR_101
  7640  000B5A  6FD5               	movwf	oled_putString@string& (0+255),b
  7641  000B5C  0E7F               	movlw	high STR_101
  7642  000B5E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7643  000B60  0E0E               	movlw	14
  7644  000B62  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7645  000B64  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7646  000B66  ECDF  F01A         	call	_oled_putString	;wreg free
  7647  000B6A                     l560:
  7648                           
  7649                           ;MOTEapp.c: 845: }
  7650                           ;MOTEapp.c: 846: oled_putString(" ", 14,1);
  7651  000B6A  0E59               	movlw	low (STR_163+13)
  7652  000B6C  0100               	movlb	0	; () banked
  7653  000B6E  6FD5               	movwf	oled_putString@string& (0+255),b
  7654  000B70  0E7C               	movlw	high (STR_163+13)
  7655  000B72  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7656  000B74  0E0E               	movlw	14
  7657  000B76  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7658  000B78  0E01               	movlw	1
  7659  000B7A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7660  000B7C  ECDF  F01A         	call	_oled_putString	;wreg free
  7661                           
  7662                           ;MOTEapp.c: 847: oled_putString(" ", 14,2);
  7663  000B80  0E59               	movlw	low (STR_163+13)
  7664  000B82  0100               	movlb	0	; () banked
  7665  000B84  6FD5               	movwf	oled_putString@string& (0+255),b
  7666  000B86  0E7C               	movlw	high (STR_163+13)
  7667  000B88  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7668  000B8A  0E0E               	movlw	14
  7669  000B8C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7670  000B8E  0E02               	movlw	2
  7671  000B90  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7672  000B92  ECDF  F01A         	call	_oled_putString	;wreg free
  7673                           
  7674                           ;MOTEapp.c: 848: oled_putString(" ", 14,3);
  7675  000B96  0E59               	movlw	low (STR_163+13)
  7676  000B98  0100               	movlb	0	; () banked
  7677  000B9A  6FD5               	movwf	oled_putString@string& (0+255),b
  7678  000B9C  0E7C               	movlw	high (STR_163+13)
  7679  000B9E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7680  000BA0  0E0E               	movlw	14
  7681  000BA2  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7682  000BA4  0E03               	movlw	3
  7683  000BA6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7684  000BA8  ECDF  F01A         	call	_oled_putString	;wreg free
  7685                           
  7686                           ;MOTEapp.c: 849: MOTEapp_SetADR(adrStatus);
  7687  000BAC  0100               	movlb	0	; () banked
  7688  000BAE  518E               	movf	_adrStatus& (0+255),w,b
  7689  000BB0  EC0B  F021         	call	_MOTEapp_SetADR
  7690                           
  7691                           ;MOTEapp.c: 850: MOTEapp_SetDataRate(dataRatePosition);
  7692  000BB4  0100               	movlb	0	; () banked
  7693  000BB6  5193               	movf	_dataRatePosition& (0+255),w,b
  7694  000BB8  EC07  F021         	call	_MOTEapp_SetDataRate
  7695                           
  7696                           ;MOTEapp.c: 851: MOTEapp_WriteDataRate();
  7697  000BBC  EC95  F010         	call	_MOTEapp_WriteDataRate	;wreg free
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;MOTEapp.c: 854: activeState = moteGetDr;
  7701  000BC0  0E07               	movlw	7
  7702  000BC2  6F8D               	movwf	_activeState& (0+255),b
  7703  000BC4  0C07               	retlw	7
  7704  000BC6                     l11588:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;MOTEapp.c: 859: if (changeStates)
  7708  000BC6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7709  000BC8  E022               	bz	l11600
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;MOTEapp.c: 860: {
  7713                           ;MOTEapp.c: 861: oled_clear();
  7714  000BCA  EC72  F020         	call	_oled_clear	;wreg free
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;MOTEapp.c: 862: oled_putString(" View Downlink  ",0,0);
  7718  000BCE  0EEE               	movlw	low STR_200
  7719  000BD0  6FD5               	movwf	oled_putString@string& (0+255),b
  7720  000BD2  0E7A               	movlw	high STR_200
  7721  000BD4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7722  000BD6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7723  000BD8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7724  000BDA  ECDF  F01A         	call	_oled_putString	;wreg free
  7725                           
  7726                           ;MOTEapp.c: 863: oled_putString("  Last Message  ",0,1);
  7727  000BDE  0EDD               	movlw	low STR_201
  7728  000BE0  0100               	movlb	0	; () banked
  7729  000BE2  6FD5               	movwf	oled_putString@string& (0+255),b
  7730  000BE4  0E7A               	movlw	high STR_201
  7731  000BE6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7732  000BE8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7733  000BEA  0E01               	movlw	1
  7734  000BEC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7735  000BEE  ECDF  F01A         	call	_oled_putString	;wreg free
  7736                           
  7737                           ;MOTEapp.c: 864: oled_putString("(NAV)    (SEL) ",0,3);
  7738  000BF2  0EFC               	movlw	low STR_75
  7739  000BF4  0100               	movlb	0	; () banked
  7740  000BF6  6FD5               	movwf	oled_putString@string& (0+255),b
  7741  000BF8  0E7B               	movlw	high STR_75
  7742  000BFA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7743  000BFC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7744  000BFE  0E03               	movlw	3
  7745  000C00  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7746  000C02  ECDF  F01A         	call	_oled_putString	;wreg free
  7747  000C06                     l11598:
  7748                           
  7749                           ;MOTEapp.c: 865: runningState = runningDownlink;
  7750  000C06  0E0A               	movlw	10
  7751  000C08  0100               	movlb	0	; () banked
  7752  000C0A  6F98               	movwf	_runningState& (0+255),b
  7753                           
  7754                           ;MOTEapp.c: 866: }
  7755  000C0C  0C0A               	retlw	10
  7756  000C0E                     l11600:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;MOTEapp.c: 867: else if (selectButton)
  7760  000C0E  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7761  000C10  B4D8               	btfsc	status,2,c
  7762  000C12  0012               	return	
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;MOTEapp.c: 868: {
  7766                           ;MOTEapp.c: 869: sleepTicker = 0;
  7767  000C14  6B9A               	clrf	_sleepTicker& (0+255),b
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;MOTEapp.c: 871: oled_clear();
  7771  000C16  EC72  F020         	call	_oled_clear	;wreg free
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;MOTEapp.c: 872: oled_putString("Uplink Pckt Type",0,0);
  7775  000C1A  0E98               	movlw	low STR_203
  7776  000C1C  6FD5               	movwf	oled_putString@string& (0+255),b
  7777  000C1E  0E7B               	movlw	high STR_203
  7778  000C20  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7779  000C22  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7780  000C24  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7781  000C26  ECDF  F01A         	call	_oled_putString	;wreg free
  7782                           
  7783                           ;MOTEapp.c: 873: oled_putString("Throu Port# ",0,1);
  7784  000C2A  0E74               	movlw	low STR_204
  7785  000C2C  0100               	movlb	0	; () banked
  7786  000C2E  6FD5               	movwf	oled_putString@string& (0+255),b
  7787  000C30  0E7D               	movlw	high STR_204
  7788  000C32  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7789  000C34  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7790  000C36  0E01               	movlw	1
  7791  000C38  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7792  000C3A  ECDF  F01A         	call	_oled_putString	;wreg free
  7793                           
  7794                           ;MOTEapp.c: 875: oled_putString("(UNCNF)    (CNF) ",0,3);
  7795  000C3E  0E86               	movlw	low STR_205
  7796  000C40  0100               	movlb	0	; () banked
  7797  000C42  6FD5               	movwf	oled_putString@string& (0+255),b
  7798  000C44  0E7A               	movlw	high STR_205
  7799  000C46  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7800  000C48  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7801  000C4A  0E03               	movlw	3
  7802  000C4C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7803  000C4E  ECDF  F01A         	call	_oled_putString	;wreg free
  7804                           
  7805                           ;MOTEapp.c: 877: moteApp_clearBuffers();
  7806  000C52  EC89  F01D         	call	_moteApp_clearBuffers	;wreg free
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;MOTEapp.c: 878: randomPortNum = TMR2_ReadTimer();
  7810  000C56  EC03  F021         	call	_TMR2_ReadTimer	;wreg free
  7811  000C5A  6F97               	movwf	_randomPortNum& (0+255),b
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;MOTEapp.c: 880: if (!randomPortNum)
  7815  000C5C  5197               	movf	_randomPortNum& (0+255),w,b
  7816  000C5E  E103               	bnz	l11620
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;MOTEapp.c: 881: randomPortNum = 5;
  7820  000C60  0E05               	movlw	5
  7821  000C62  6F97               	movwf	_randomPortNum& (0+255),b
  7822  000C64  D005               	goto	l11624
  7823  000C66                     l11620:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;MOTEapp.c: 882: else if (randomPortNum > 223)
  7827  000C66  0EDF               	movlw	223
  7828  000C68  6597               	cpfsgt	_randomPortNum& (0+255),b
  7829  000C6A  D002               	goto	l11624
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;MOTEapp.c: 883: randomPortNum = randomPortNum - 50;
  7833  000C6C  0ECE               	movlw	206
  7834  000C6E  2797               	addwf	_randomPortNum& (0+255),f,b
  7835  000C70                     l11624:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;MOTEapp.c: 884: oled_putUint8(randomPortNum,12,1);
  7839  000C70  0E0C               	movlw	12
  7840  000C72  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7841  000C74  0E01               	movlw	1
  7842  000C76  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7843  000C78  5197               	movf	_randomPortNum& (0+255),w,b
  7844  000C7A  ECD2  F01B         	call	_oled_putUint8
  7845                           
  7846                           ;MOTEapp.c: 886: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7847  000C7E  0100               	movlb	0	; () banked
  7848  000C80  6BCC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7849  000C82  5197               	movf	_randomPortNum& (0+255),w,b
  7850  000C84  EC44  F01B         	call	_moteApp_add8bToDataBuffer
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;MOTEapp.c: 887: dataBuffer[3] = 0x20;
  7854  000C88  0E20               	movlw	32
  7855  000C8A  6FA1               	movwf	(_dataBuffer+3)& (0+255),b
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;MOTEapp.c: 888: moteApp_add16bToDataBuffer(light, 4);
  7859  000C8C  C07A  F0CF         	movff	_light,moteApp_add16bToDataBuffer@number
  7860  000C90  C07B  F0D0         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  7861  000C94  0E04               	movlw	4
  7862  000C96  6FD1               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7863  000C98  EC16  F00E         	call	_moteApp_add16bToDataBuffer	;wreg free
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;MOTEapp.c: 889: moteApp_add8bToDataBuffer(temperature, 9);
  7867  000C9C  0E09               	movlw	9
  7868  000C9E  6FCC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7869  000CA0  517E               	movf	_temperature& (0+255),w,b
  7870  000CA2  EC44  F01B         	call	_moteApp_add8bToDataBuffer
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;MOTEapp.c: 890: __nop();
  7874  000CA6  F000               	nop	
  7875                           
  7876                           ;MOTEapp.c: 892: runningState = runningUplinkSelect;
  7877  000CA8  0E07               	movlw	7
  7878  000CAA  0100               	movlb	0	; () banked
  7879  000CAC  6F98               	movwf	_runningState& (0+255),b
  7880  000CAE  0C07               	retlw	7
  7881  000CB0                     l11638:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;MOTEapp.c: 896: if (changeStates)
  7885  000CB0  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7886  000CB2  E00A               	bz	l11642
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 897: {
  7890                           ;MOTEapp.c: 898: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7891  000CB4  0E3C               	movlw	low STR_79
  7892  000CB6  6FC9               	movwf	sendDataCommand@string& (0+255),b
  7893  000CB8  0E7D               	movlw	high STR_79
  7894  000CBA  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  7895  000CBC  0E9E               	movlw	low _dataBuffer
  7896  000CBE  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  7897  000CC0  0E0C               	movlw	12
  7898  000CC2  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  7899  000CC4  EC67  F017         	call	_sendDataCommand	;wreg free
  7900  000CC8                     l11642:
  7901                           
  7902                           ;MOTEapp.c: 900: }
  7903                           ;MOTEapp.c: 901: if (selectButton)
  7904  000CC8  0100               	movlb	0	; () banked
  7905  000CCA  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7906  000CCC  E00A               	bz	l11646
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;MOTEapp.c: 902: {
  7910                           ;MOTEapp.c: 903: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7911  000CCE  0E67               	movlw	low STR_77
  7912  000CD0  6FC9               	movwf	sendDataCommand@string& (0+255),b
  7913  000CD2  0E7E               	movlw	high STR_77
  7914  000CD4  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  7915  000CD6  0E9E               	movlw	low _dataBuffer
  7916  000CD8  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  7917  000CDA  0E0C               	movlw	12
  7918  000CDC  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  7919  000CDE  EC67  F017         	call	_sendDataCommand	;wreg free
  7920  000CE2                     l11646:
  7921                           
  7922                           ;MOTEapp.c: 904: }
  7923                           ;MOTEapp.c: 906: if ( (changeStates) || (selectButton) )
  7924  000CE2  0100               	movlb	0	; () banked
  7925  000CE4  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7926  000CE6  E103               	bnz	l11650
  7927                           
  7928                           ; BSR set to: 0
  7929  000CE8  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7930  000CEA  B4D8               	btfsc	status,2,c
  7931  000CEC  0012               	return	
  7932  000CEE                     l11650:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;MOTEapp.c: 907: {
  7936                           ;MOTEapp.c: 908: oled_clear();
  7937  000CEE  EC72  F020         	call	_oled_clear	;wreg free
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;MOTEapp.c: 909: oled_putString("Sent Data: ",0,0);
  7941  000CF2  0E5B               	movlw	low STR_208
  7942  000CF4  6FD5               	movwf	oled_putString@string& (0+255),b
  7943  000CF6  0E7E               	movlw	high STR_208
  7944  000CF8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7945  000CFA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7946  000CFC  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7947  000CFE  ECDF  F01A         	call	_oled_putString	;wreg free
  7948                           
  7949                           ;MOTEapp.c: 910: oled_putString("L:       T: ",0,1);
  7950  000D02  0E81               	movlw	low STR_74
  7951  000D04  0100               	movlb	0	; () banked
  7952  000D06  6FD5               	movwf	oled_putString@string& (0+255),b
  7953  000D08  0E7D               	movlw	high STR_74
  7954  000D0A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7955  000D0C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7956  000D0E  0E01               	movlw	1
  7957  000D10  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7958  000D12  ECDF  F01A         	call	_oled_putString	;wreg free
  7959                           
  7960                           ;MOTEapp.c: 911: oled_putUint16(light,3,2);
  7961  000D16  C07A  F0DA         	movff	_light,oled_putUint16@number
  7962  000D1A  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  7963  000D1E  0E03               	movlw	3
  7964  000D20  0100               	movlb	0	; () banked
  7965  000D22  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  7966  000D24  0E02               	movlw	2
  7967  000D26  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  7968  000D28  EC1B  F010         	call	_oled_putUint16	;wreg free
  7969                           
  7970                           ;MOTEapp.c: 912: oled_putUint8(temperature,12,2);
  7971  000D2C  0E0C               	movlw	12
  7972  000D2E  0100               	movlb	0	; () banked
  7973  000D30  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7974  000D32  0E02               	movlw	2
  7975  000D34  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7976  000D36  517E               	movf	_temperature& (0+255),w,b
  7977  000D38  ECD2  F01B         	call	_oled_putUint8
  7978                           
  7979                           ;MOTEapp.c: 913: oled_putString("Tx Port #: ",0,1);
  7980  000D3C  0E4F               	movlw	low STR_210
  7981  000D3E  0100               	movlb	0	; () banked
  7982  000D40  6FD5               	movwf	oled_putString@string& (0+255),b
  7983  000D42  0E7E               	movlw	high STR_210
  7984  000D44  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7985  000D46  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7986  000D48  0E01               	movlw	1
  7987  000D4A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7988  000D4C  ECDF  F01A         	call	_oled_putString	;wreg free
  7989                           
  7990                           ;MOTEapp.c: 914: oled_putUint8(randomPortNum,12,1);
  7991  000D50  0E0C               	movlw	12
  7992  000D52  0100               	movlb	0	; () banked
  7993  000D54  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7994  000D56  0E01               	movlw	1
  7995  000D58  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7996  000D5A  5197               	movf	_randomPortNum& (0+255),w,b
  7997  000D5C  ECD2  F01B         	call	_oled_putUint8
  7998                           
  7999                           ;MOTEapp.c: 915: LATAbits.LATA6 = 0;
  8000  000D60  9C89               	bcf	3977,6,c	;volatile
  8001                           
  8002                           ;MOTEapp.c: 916: runningState = runningUplinkTransmit;
  8003  000D62  0E08               	movlw	8
  8004  000D64  0100               	movlb	0	; () banked
  8005  000D66  6F98               	movwf	_runningState& (0+255),b
  8006  000D68  0C08               	retlw	8
  8007  000D6A                     l11668:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;MOTEapp.c: 920: if ( messageReady )
  8011  000D6A  51E5               	movf	moteRunningProcess@messageReady& (0+255),w,b
  8012  000D6C  E101 D0FF          	bz	l11754
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;MOTEapp.c: 921: {
  8016                           ;MOTEapp.c: 922: if(strcmp(modemResonseBuffer, "ok") == 0)
  8017  000D70  0E80               	movlw	low _modemResonseBuffer
  8018  000D72  6FC8               	movwf	strcmp@s1& (0+255),b
  8019  000D74  0E01               	movlw	high _modemResonseBuffer
  8020  000D76  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
  8021  000D78  0EF2               	movlw	low STR_32
  8022  000D7A  6FCA               	movwf	strcmp@s2& (0+255),b
  8023  000D7C  0E7F               	movlw	high STR_32
  8024  000D7E  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
  8025  000D80  ECC8  F018         	call	_strcmp	;wreg free
  8026  000D84  51C8               	movf	?_strcmp& (0+255),w,b
  8027  000D86  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
  8028  000D88  E103               	bnz	l11676
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;MOTEapp.c: 923: {
  8032                           ;MOTEapp.c: 924: LATAbits.LATA6 = 1;
  8033  000D8A  8C89               	bsf	3977,6,c	;volatile
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;MOTEapp.c: 925: runningState = runningUplinkTransmit;
  8037  000D8C  0E08               	movlw	8
  8038  000D8E  6F98               	movwf	_runningState& (0+255),b
  8039  000D90                     l11676:
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;MOTEapp.c: 926: }
  8043                           ;MOTEapp.c: 927: if(strncmp(modemResonseBuffer, "mac_rx", 6) == 0)
  8044  000D90  0E80               	movlw	low _modemResonseBuffer
  8045  000D92  6FC8               	movwf	strncmp@s1& (0+255),b
  8046  000D94  0E01               	movlw	high _modemResonseBuffer
  8047  000D96  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8048  000D98  0EE1               	movlw	low STR_212
  8049  000D9A  6FCA               	movwf	strncmp@s2& (0+255),b
  8050  000D9C  0E7F               	movlw	high STR_212
  8051  000D9E  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8052  000DA0  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8053  000DA2  0E06               	movlw	6
  8054  000DA4  6FCC               	movwf	strncmp@len& (0+255),b
  8055  000DA6  ECAB  F01A         	call	_strncmp	;wreg free
  8056  000DAA  51C8               	movf	?_strncmp& (0+255),w,b
  8057  000DAC  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8058  000DAE  E001 D08A          	bnz	l11738
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;MOTEapp.c: 928: {
  8062                           ;MOTEapp.c: 929: uint8_t bufferReadPos = 7;
  8063  000DB2  0E07               	movlw	7
  8064  000DB4  6FF1               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;MOTEapp.c: 930: uint8_t dummyRead1;
  8068                           ;MOTEapp.c: 931: uint8_t dummyRead2;
  8069                           ;MOTEapp.c: 934: responsePortNum[0] = modemResonseBuffer[bufferReadPos++];
  8070  000DB6  0E80               	movlw	low _modemResonseBuffer
  8071  000DB8  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8072  000DBA  6ED9               	movwf	fsr2l,c
  8073  000DBC  6ADA               	clrf	fsr2h,c
  8074  000DBE  0E01               	movlw	high _modemResonseBuffer
  8075  000DC0  22DA               	addwfc	fsr2h,f,c
  8076  000DC2  50DF               	movf	indf2,w,c
  8077  000DC4  6FC3               	movwf	_responsePortNum& (0+255),b
  8078                           
  8079                           ; BSR set to: 0
  8080  000DC6  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;MOTEapp.c: 935: responsePortNum[1] = modemResonseBuffer[bufferReadPos++];
  8084  000DC8  0E80               	movlw	low _modemResonseBuffer
  8085  000DCA  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8086  000DCC  6ED9               	movwf	fsr2l,c
  8087  000DCE  6ADA               	clrf	fsr2h,c
  8088  000DD0  0E01               	movlw	high _modemResonseBuffer
  8089  000DD2  22DA               	addwfc	fsr2h,f,c
  8090  000DD4  50DF               	movf	indf2,w,c
  8091  000DD6  6FC4               	movwf	(_responsePortNum+1)& (0+255),b
  8092                           
  8093                           ; BSR set to: 0
  8094  000DD8  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;MOTEapp.c: 936: if (responsePortNum[1] != ' ')
  8098  000DDA  0E20               	movlw	32
  8099  000DDC  19C4               	xorwf	(_responsePortNum+1)& (0+255),w,b
  8100  000DDE  E00D               	bz	l11698
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;MOTEapp.c: 937: {
  8104                           ;MOTEapp.c: 938: responsePortNum[2] = modemResonseBuffer[bufferReadPos++];
  8105  000DE0  0E80               	movlw	low _modemResonseBuffer
  8106  000DE2  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8107  000DE4  6ED9               	movwf	fsr2l,c
  8108  000DE6  6ADA               	clrf	fsr2h,c
  8109  000DE8  0E01               	movlw	high _modemResonseBuffer
  8110  000DEA  22DA               	addwfc	fsr2h,f,c
  8111  000DEC  50DF               	movf	indf2,w,c
  8112  000DEE  6FC5               	movwf	(_responsePortNum+2)& (0+255),b
  8113                           
  8114                           ; BSR set to: 0
  8115  000DF0  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;MOTEapp.c: 939: if (responsePortNum[2] != ' ')
  8119  000DF2  0E20               	movlw	32
  8120  000DF4  19C5               	xorwf	(_responsePortNum+2)& (0+255),w,b
  8121  000DF6  E001               	bz	l11698
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;MOTEapp.c: 940: {
  8125                           ;MOTEapp.c: 941: bufferReadPos++;
  8126  000DF8  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8127  000DFA                     l11698:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;MOTEapp.c: 942: }
  8131                           ;MOTEapp.c: 943: }
  8132                           ;MOTEapp.c: 945: for (uint8_t counter = 0; counter < 16; counter++)
  8133  000DFA  6BEF               	clrf	moteRunningProcess@counter& (0+255),b
  8134  000DFC                     l11700:
  8135                           
  8136                           ; BSR set to: 0
  8137  000DFC  0E0F               	movlw	15
  8138  000DFE  65EF               	cpfsgt	moteRunningProcess@counter& (0+255),b
  8139  000E00  D001               	goto	l11704
  8140  000E02  D023               	goto	l11716
  8141  000E04                     l11704:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;MOTEapp.c: 946: {
  8145                           ;MOTEapp.c: 947: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8146  000E04  0E80               	movlw	low _modemResonseBuffer
  8147  000E06  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8148  000E08  6ED9               	movwf	fsr2l,c
  8149  000E0A  6ADA               	clrf	fsr2h,c
  8150  000E0C  0E01               	movlw	high _modemResonseBuffer
  8151  000E0E  22DA               	addwfc	fsr2h,f,c
  8152  000E10  50DF               	movf	indf2,w,c
  8153  000E12  EC6F  F01F         	call	_unhex
  8154  000E16  6FED               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8155                           
  8156                           ; BSR set to: 0
  8157  000E18  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;MOTEapp.c: 948: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8161  000E1A  0E80               	movlw	low _modemResonseBuffer
  8162  000E1C  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8163  000E1E  6ED9               	movwf	fsr2l,c
  8164  000E20  6ADA               	clrf	fsr2h,c
  8165  000E22  0E01               	movlw	high _modemResonseBuffer
  8166  000E24  22DA               	addwfc	fsr2h,f,c
  8167  000E26  50DF               	movf	indf2,w,c
  8168  000E28  EC6F  F01F         	call	_unhex
  8169  000E2C  6FEE               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8170  000E2E  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;MOTEapp.c: 949: responseId[counter] = (dummyRead1 << 4) + dummyRead2;
  8174  000E30  0EC0               	movlw	low _responseId
  8175  000E32  25EF               	addwf	moteRunningProcess@counter& (0+255),w,b
  8176  000E34  6ED9               	movwf	fsr2l,c
  8177  000E36  6ADA               	clrf	fsr2h,c
  8178  000E38  0E01               	movlw	high _responseId
  8179  000E3A  22DA               	addwfc	fsr2h,f,c
  8180  000E3C  51ED               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8181  000E3E  0D10               	mullw	16
  8182  000E40  50F3               	movf	prodl,w,c
  8183  000E42  25EE               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8184  000E44  6EDF               	movwf	indf2,c
  8185                           
  8186                           ; BSR set to: 0
  8187  000E46  2BEF               	incf	moteRunningProcess@counter& (0+255),f,b
  8188  000E48  D7D9               	goto	l11700
  8189  000E4A                     l11716:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;MOTEapp.c: 950: }
  8193                           ;MOTEapp.c: 952: bufferReadPos++;
  8194  000E4A  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8195                           
  8196                           ;MOTEapp.c: 953: bufferReadPos++;
  8197  000E4C  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;MOTEapp.c: 956: for (uint8_t counter = 0; counter < 8; counter++)
  8201  000E4E  6BF0               	clrf	moteRunningProcess@counter_1527& (0+255),b
  8202  000E50                     l11720:
  8203                           
  8204                           ; BSR set to: 0
  8205  000E50  0E07               	movlw	7
  8206  000E52  65F0               	cpfsgt	moteRunningProcess@counter_1527& (0+255),b
  8207  000E54  D001               	goto	l11724
  8208  000E56  D021               	goto	l583
  8209  000E58                     l11724:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;MOTEapp.c: 957: {
  8213                           ;MOTEapp.c: 958: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8214  000E58  0E80               	movlw	low _modemResonseBuffer
  8215  000E5A  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8216  000E5C  6ED9               	movwf	fsr2l,c
  8217  000E5E  6ADA               	clrf	fsr2h,c
  8218  000E60  0E01               	movlw	high _modemResonseBuffer
  8219  000E62  22DA               	addwfc	fsr2h,f,c
  8220  000E64  50DF               	movf	indf2,w,c
  8221  000E66  EC6F  F01F         	call	_unhex
  8222  000E6A  6FED               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225  000E6C  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;MOTEapp.c: 959: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8229  000E6E  0E80               	movlw	low _modemResonseBuffer
  8230  000E70  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8231  000E72  6ED9               	movwf	fsr2l,c
  8232  000E74  6ADA               	clrf	fsr2h,c
  8233  000E76  0E01               	movlw	high _modemResonseBuffer
  8234  000E78  22DA               	addwfc	fsr2h,f,c
  8235  000E7A  50DF               	movf	indf2,w,c
  8236  000E7C  EC6F  F01F         	call	_unhex
  8237  000E80  6FEE               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8238  000E82  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;MOTEapp.c: 960: responseData[counter] = (dummyRead1 << 4) + dummyRead2;
  8242  000E84  51F0               	movf	moteRunningProcess@counter_1527& (0+255),w,b
  8243  000E86  0FB4               	addlw	low _responseData
  8244  000E88  6ED9               	movwf	fsr2l,c
  8245  000E8A  6ADA               	clrf	fsr2h,c
  8246  000E8C  51ED               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8247  000E8E  0D10               	mullw	16
  8248  000E90  50F3               	movf	prodl,w,c
  8249  000E92  25EE               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8250  000E94  6EDF               	movwf	indf2,c
  8251                           
  8252                           ; BSR set to: 0
  8253  000E96  2BF0               	incf	moteRunningProcess@counter_1527& (0+255),f,b
  8254  000E98  D7DB               	goto	l11720
  8255  000E9A                     l583:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;MOTEapp.c: 961: }
  8259                           ;MOTEapp.c: 963: LATAbits.LATA7 = 1;
  8260  000E9A  8E89               	bsf	3977,7,c	;volatile
  8261                           
  8262                           ;MOTEapp.c: 964: LATAbits.LATA6 = 0;
  8263  000E9C  9C89               	bcf	3977,6,c	;volatile
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;MOTEapp.c: 966: oled_putString("Server Response ",0,2);
  8267  000E9E  0E21               	movlw	low STR_213
  8268  000EA0  6FD5               	movwf	oled_putString@string& (0+255),b
  8269  000EA2  0E7B               	movlw	high STR_213
  8270  000EA4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8271  000EA6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8272  000EA8  0E02               	movlw	2
  8273  000EAA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8274  000EAC  ECDF  F01A         	call	_oled_putString	;wreg free
  8275                           
  8276                           ;MOTEapp.c: 967: oled_putString("    Received    ",0,3);
  8277  000EB0  0EAA               	movlw	low STR_214
  8278  000EB2  0100               	movlb	0	; () banked
  8279  000EB4  6FD5               	movwf	oled_putString@string& (0+255),b
  8280  000EB6  0E7A               	movlw	high STR_214
  8281  000EB8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8282  000EBA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8283  000EBC  0E03               	movlw	3
  8284  000EBE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8285  000EC0  ECDF  F01A         	call	_oled_putString	;wreg free
  8286                           
  8287                           ;MOTEapp.c: 968: }
  8288  000EC4  D04E               	goto	l11752
  8289  000EC6                     l11738:
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;MOTEapp.c: 969: else if(strncmp(modemResonseBuffer, "mac_tx", 6) == 0)
  8293  000EC6  0E80               	movlw	low _modemResonseBuffer
  8294  000EC8  6FC8               	movwf	strncmp@s1& (0+255),b
  8295  000ECA  0E01               	movlw	high _modemResonseBuffer
  8296  000ECC  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8297  000ECE  0EE8               	movlw	low STR_215
  8298  000ED0  6FCA               	movwf	strncmp@s2& (0+255),b
  8299  000ED2  0E7F               	movlw	high STR_215
  8300  000ED4  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8301  000ED6  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8302  000ED8  0E06               	movlw	6
  8303  000EDA  6FCC               	movwf	strncmp@len& (0+255),b
  8304  000EDC  ECAB  F01A         	call	_strncmp	;wreg free
  8305  000EE0  51C8               	movf	?_strncmp& (0+255),w,b
  8306  000EE2  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8307  000EE4  E10B               	bnz	l11744
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;MOTEapp.c: 970: {
  8311                           ;MOTEapp.c: 971: LATAbits.LATA6 = 0;
  8312  000EE6  9C89               	bcf	3977,6,c	;volatile
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;MOTEapp.c: 972: oled_putString("Data Transmitted",0,3);
  8316  000EE8  0E76               	movlw	low STR_216
  8317  000EEA  6FD5               	movwf	oled_putString@string& (0+255),b
  8318  000EEC  0E7B               	movlw	high STR_216
  8319  000EEE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8320  000EF0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8321  000EF2  0E03               	movlw	3
  8322  000EF4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8323  000EF6  ECDF  F01A         	call	_oled_putString	;wreg free
  8324                           
  8325                           ;MOTEapp.c: 973: }
  8326  000EFA  D033               	goto	l11752
  8327  000EFC                     l11744:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;MOTEapp.c: 974: else if(strncmp(modemResonseBuffer, "mac_er", 6) == 0)
  8331  000EFC  0E80               	movlw	low _modemResonseBuffer
  8332  000EFE  6FC8               	movwf	strncmp@s1& (0+255),b
  8333  000F00  0E01               	movlw	high _modemResonseBuffer
  8334  000F02  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8335  000F04  0EDA               	movlw	low STR_217
  8336  000F06  6FCA               	movwf	strncmp@s2& (0+255),b
  8337  000F08  0E7F               	movlw	high STR_217
  8338  000F0A  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8339  000F0C  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8340  000F0E  0E06               	movlw	6
  8341  000F10  6FCC               	movwf	strncmp@len& (0+255),b
  8342  000F12  ECAB  F01A         	call	_strncmp	;wreg free
  8343  000F16  51C8               	movf	?_strncmp& (0+255),w,b
  8344  000F18  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8345  000F1A  E10A               	bnz	l11748
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;MOTEapp.c: 975: {
  8349                           ;MOTEapp.c: 976: oled_putString("Mac Error Occured",0,3);
  8350  000F1C  0E98               	movlw	low STR_218
  8351  000F1E  6FD5               	movwf	oled_putString@string& (0+255),b
  8352  000F20  0E7A               	movlw	high STR_218
  8353  000F22  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8354  000F24  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8355  000F26  0E03               	movlw	3
  8356  000F28  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8357  000F2A  ECDF  F01A         	call	_oled_putString	;wreg free
  8358                           
  8359                           ;MOTEapp.c: 977: }
  8360  000F2E  D019               	goto	l11752
  8361  000F30                     l11748:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;MOTEapp.c: 978: else if(strncmp(modemResonseBuffer, "no_fre", 6) == 0)
  8365  000F30  0E80               	movlw	low _modemResonseBuffer
  8366  000F32  6FC8               	movwf	strncmp@s1& (0+255),b
  8367  000F34  0E01               	movlw	high _modemResonseBuffer
  8368  000F36  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8369  000F38  0ED3               	movlw	low STR_219
  8370  000F3A  6FCA               	movwf	strncmp@s2& (0+255),b
  8371  000F3C  0E7F               	movlw	high STR_219
  8372  000F3E  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8373  000F40  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8374  000F42  0E06               	movlw	6
  8375  000F44  6FCC               	movwf	strncmp@len& (0+255),b
  8376  000F46  ECAB  F01A         	call	_strncmp	;wreg free
  8377  000F4A  51C8               	movf	?_strncmp& (0+255),w,b
  8378  000F4C  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8379  000F4E  E109               	bnz	l11752
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;MOTEapp.c: 979: {
  8383                           ;MOTEapp.c: 980: oled_putString("No Free Channel",0,3);
  8384  000F50  0E2C               	movlw	low STR_220
  8385  000F52  6FD5               	movwf	oled_putString@string& (0+255),b
  8386  000F54  0E7C               	movlw	high STR_220
  8387  000F56  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8388  000F58  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8389  000F5A  0E03               	movlw	3
  8390  000F5C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8391  000F5E  ECDF  F01A         	call	_oled_putString	;wreg free
  8392  000F62                     l11752:
  8393                           
  8394                           ;MOTEapp.c: 981: }
  8395                           ;MOTEapp.c: 982: moteApp_delayms(20);
  8396  000F62  0100               	movlb	0	; () banked
  8397  000F64  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8398  000F66  0E14               	movlw	20
  8399  000F68  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  8400  000F6A  EC97  F01F         	call	_moteApp_delayms	;wreg free
  8401  000F6E                     l11754:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;MOTEapp.c: 983: }
  8405                           ;MOTEapp.c: 984: if ( (changeStates) || (selectButton) )
  8406  000F6E  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8407  000F70  E103               	bnz	l11758
  8408                           
  8409                           ; BSR set to: 0
  8410  000F72  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8411  000F74  B4D8               	btfsc	status,2,c
  8412  000F76  0012               	return	
  8413  000F78                     l11758:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;MOTEapp.c: 985: {
  8417                           ;MOTEapp.c: 986: oled_clear();
  8418  000F78  EC72  F020         	call	_oled_clear	;wreg free
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;MOTEapp.c: 987: oled_putString("  Issue Uplink  ",0,0);
  8422  000F7C  0EFF               	movlw	low STR_93
  8423  000F7E  6FD5               	movwf	oled_putString@string& (0+255),b
  8424  000F80  0E7A               	movlw	high STR_93
  8425  000F82  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8426  000F84  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8427  000F86  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8428  000F88  ECDF  F01A         	call	_oled_putString	;wreg free
  8429                           
  8430                           ;MOTEapp.c: 988: oled_putString(" LoRaWAN Packet ",0,1);
  8431  000F8C  0E32               	movlw	low STR_94
  8432  000F8E  0100               	movlb	0	; () banked
  8433  000F90  6FD5               	movwf	oled_putString@string& (0+255),b
  8434  000F92  0E7B               	movlw	high STR_94
  8435  000F94  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8436  000F96  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8437  000F98  0E01               	movlw	1
  8438  000F9A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8439  000F9C  ECDF  F01A         	call	_oled_putString	;wreg free
  8440                           
  8441                           ;MOTEapp.c: 989: oled_putString("(NAV)    (SEL) ",0,3);
  8442  000FA0  0EFC               	movlw	low STR_75
  8443  000FA2  0100               	movlb	0	; () banked
  8444  000FA4  6FD5               	movwf	oled_putString@string& (0+255),b
  8445  000FA6  0E7B               	movlw	high STR_75
  8446  000FA8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8447  000FAA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8448  000FAC  0E03               	movlw	3
  8449  000FAE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8450  000FB0  ECDF  F01A         	call	_oled_putString	;wreg free
  8451  000FB4  EF32  F002         	goto	l11240
  8452  000FB8                     l11768:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;MOTEapp.c: 994: if (changeStates)
  8456  000FB8  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8457  000FBA  E02E               	bz	l11782
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;MOTEapp.c: 995: {
  8461                           ;MOTEapp.c: 996: oled_clear();
  8462  000FBC  EC72  F020         	call	_oled_clear	;wreg free
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;MOTEapp.c: 997: oled_putString(" Tx Sleep Event ",0,0);
  8466  000FC0  0E43               	movlw	low STR_224
  8467  000FC2  6FD5               	movwf	oled_putString@string& (0+255),b
  8468  000FC4  0E7B               	movlw	high STR_224
  8469  000FC6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8470  000FC8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8471  000FCA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8472  000FCC  ECDF  F01A         	call	_oled_putString	;wreg free
  8473                           
  8474                           ;MOTEapp.c: 998: if (periodicState)
  8475  000FD0  0100               	movlb	0	; () banked
  8476  000FD2  51F9               	movf	_periodicState& (0+255),w,b
  8477  000FD4  E00A               	bz	l11778
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;MOTEapp.c: 999: oled_putString("    Enabled   ", 0,2);
  8481  000FD6  0E5B               	movlw	low STR_225
  8482  000FD8  6FD5               	movwf	oled_putString@string& (0+255),b
  8483  000FDA  0E7C               	movlw	high STR_225
  8484  000FDC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8485  000FDE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8486  000FE0  0E02               	movlw	2
  8487  000FE2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8488  000FE4  ECDF  F01A         	call	_oled_putString	;wreg free
  8489  000FE8  D009               	goto	l596
  8490  000FEA                     l11778:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;MOTEapp.c: 1000: else
  8494                           ;MOTEapp.c: 1001: oled_putString("    Disabled  ", 0,2);
  8495  000FEA  0E6A               	movlw	low STR_226
  8496  000FEC  6FD5               	movwf	oled_putString@string& (0+255),b
  8497  000FEE  0E7C               	movlw	high STR_226
  8498  000FF0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8499  000FF2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8500  000FF4  0E02               	movlw	2
  8501  000FF6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8502  000FF8  ECDF  F01A         	call	_oled_putString	;wreg free
  8503  000FFC                     l596:
  8504                           
  8505                           ;MOTEapp.c: 1002: oled_putString("(NAV)    (SEL) ",0,3);
  8506  000FFC  0EFC               	movlw	low STR_75
  8507  000FFE  0100               	movlb	0	; () banked
  8508  001000  6FD5               	movwf	oled_putString@string& (0+255),b
  8509  001002  0E7B               	movlw	high STR_75
  8510  001004  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8511  001006  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8512  001008  0E03               	movlw	3
  8513  00100A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8514  00100C  ECDF  F01A         	call	_oled_putString	;wreg free
  8515                           
  8516                           ;MOTEapp.c: 1003: runningState = runningPeriodic;
  8517  001010  0E0C               	movlw	12
  8518  001012  0100               	movlb	0	; () banked
  8519  001014  6F98               	movwf	_runningState& (0+255),b
  8520                           
  8521                           ;MOTEapp.c: 1004: }
  8522  001016  0C0C               	retlw	12
  8523  001018                     l11782:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;MOTEapp.c: 1005: else if (selectButton)
  8527  001018  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8528  00101A  B4D8               	btfsc	status,2,c
  8529  00101C  0012               	return	
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;MOTEapp.c: 1006: {
  8533                           ;MOTEapp.c: 1007: oled_clear();
  8534  00101E  EC72  F020         	call	_oled_clear	;wreg free
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;MOTEapp.c: 1009: LATAbits.LATA7 = 0;
  8538  001022  9E89               	bcf	3977,7,c	;volatile
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;MOTEapp.c: 1011: oled_putString("Downlink Display",0,0);
  8542  001024  0ECB               	movlw	low STR_228
  8543  001026  6FD5               	movwf	oled_putString@string& (0+255),b
  8544  001028  0E7B               	movlw	high STR_228
  8545  00102A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8546  00102C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8547  00102E  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8548  001030  ECDF  F01A         	call	_oled_putString	;wreg free
  8549                           
  8550                           ;MOTEapp.c: 1013: oled_putString("Rx Port# ",0,1);
  8551  001034  0EF1               	movlw	low STR_229
  8552  001036  0100               	movlb	0	; () banked
  8553  001038  6FD5               	movwf	oled_putString@string& (0+255),b
  8554  00103A  0E7E               	movlw	high STR_229
  8555  00103C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8556  00103E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8557  001040  0E01               	movlw	1
  8558  001042  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8559  001044  ECDF  F01A         	call	_oled_putString	;wreg free
  8560                           
  8561                           ;MOTEapp.c: 1014: oled_putString(&responsePortNum,9,1);
  8562  001048  0EC3               	movlw	low _responsePortNum
  8563  00104A  0100               	movlb	0	; () banked
  8564  00104C  6FD5               	movwf	oled_putString@string& (0+255),b
  8565  00104E  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8566  001050  0E09               	movlw	9
  8567  001052  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8568  001054  0E01               	movlw	1
  8569  001056  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8570  001058  ECDF  F01A         	call	_oled_putString	;wreg free
  8571                           
  8572                           ;MOTEapp.c: 1016: oled_putString("Data: ",0,2);
  8573  00105C  0E60               	movlw	low (STR_208+5)
  8574  00105E  0100               	movlb	0	; () banked
  8575  001060  6FD5               	movwf	oled_putString@string& (0+255),b
  8576  001062  0E7E               	movlw	high (STR_208+5)
  8577  001064  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8578  001066  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8579  001068  0E02               	movlw	2
  8580  00106A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8581  00106C  ECDF  F01A         	call	_oled_putString	;wreg free
  8582                           
  8583                           ;MOTEapp.c: 1017: oled_putString(&responseData[0],6,2);
  8584  001070  0EB4               	movlw	low _responseData
  8585  001072  0100               	movlb	0	; () banked
  8586  001074  6FD5               	movwf	oled_putString@string& (0+255),b
  8587  001076  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8588  001078  0E06               	movlw	6
  8589  00107A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8590  00107C  0E02               	movlw	2
  8591  00107E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8592  001080  ECDF  F01A         	call	_oled_putString	;wreg free
  8593                           
  8594                           ;MOTEapp.c: 1018: oled_putString(" ",11,2);
  8595  001084  0E59               	movlw	low (STR_163+13)
  8596  001086  0100               	movlb	0	; () banked
  8597  001088  6FD5               	movwf	oled_putString@string& (0+255),b
  8598  00108A  0E7C               	movlw	high (STR_163+13)
  8599  00108C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8600  00108E  0E0B               	movlw	11
  8601  001090  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8602  001092  0E02               	movlw	2
  8603  001094  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8604  001096  ECDF  F01A         	call	_oled_putString	;wreg free
  8605                           
  8606                           ;MOTEapp.c: 1019: oled_putString(&responseData[5],12,2);
  8607  00109A  0EB9               	movlw	low (_responseData+5)
  8608  00109C  0100               	movlb	0	; () banked
  8609  00109E  6FD5               	movwf	oled_putString@string& (0+255),b
  8610  0010A0  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8611  0010A2  0E0C               	movlw	12
  8612  0010A4  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8613  0010A6  0E02               	movlw	2
  8614  0010A8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8615  0010AA  ECDF  F01A         	call	_oled_putString	;wreg free
  8616                           
  8617                           ;MOTEapp.c: 1021: oled_putString(&responseId[0],0,3);
  8618  0010AE  0EC0               	movlw	low _responseId
  8619  0010B0  0100               	movlb	0	; () banked
  8620  0010B2  6FD5               	movwf	oled_putString@string& (0+255),b
  8621  0010B4  0E01               	movlw	high _responseId
  8622  0010B6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8623  0010B8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8624  0010BA  0E03               	movlw	3
  8625  0010BC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8626  0010BE  ECDF  F01A         	call	_oled_putString	;wreg free
  8627                           
  8628                           ;MOTEapp.c: 1023: runningState = runningDownlinkDisplay;
  8629  0010C2  0E0B               	movlw	11
  8630  0010C4  0100               	movlb	0	; () banked
  8631  0010C6  6F98               	movwf	_runningState& (0+255),b
  8632  0010C8  0C0B               	retlw	11
  8633  0010CA                     l11806:
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;MOTEapp.c: 1027: if ( (changeStates) || (selectButton) )
  8637  0010CA  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8638  0010CC  E103               	bnz	l11810
  8639                           
  8640                           ; BSR set to: 0
  8641  0010CE  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8642  0010D0  B4D8               	btfsc	status,2,c
  8643  0010D2  0012               	return	
  8644  0010D4                     l11810:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;MOTEapp.c: 1028: {
  8648                           ;MOTEapp.c: 1029: oled_clear();
  8649  0010D4  EC72  F020         	call	_oled_clear	;wreg free
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;MOTEapp.c: 1030: oled_putString(" View Downlink  ",0,0);
  8653  0010D8  0EEE               	movlw	low STR_200
  8654  0010DA  6FD5               	movwf	oled_putString@string& (0+255),b
  8655  0010DC  0E7A               	movlw	high STR_200
  8656  0010DE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8657  0010E0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8658  0010E2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8659  0010E4  ECDF  F01A         	call	_oled_putString	;wreg free
  8660                           
  8661                           ;MOTEapp.c: 1031: oled_putString("  Last Message  ",0,1);
  8662  0010E8  0EDD               	movlw	low STR_201
  8663  0010EA  0100               	movlb	0	; () banked
  8664  0010EC  6FD5               	movwf	oled_putString@string& (0+255),b
  8665  0010EE  0E7A               	movlw	high STR_201
  8666  0010F0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8667  0010F2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8668  0010F4  0E01               	movlw	1
  8669  0010F6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8670  0010F8  ECDF  F01A         	call	_oled_putString	;wreg free
  8671                           
  8672                           ;MOTEapp.c: 1032: oled_putString("(NAV)    (SEL) ",0,3);
  8673  0010FC  0EFC               	movlw	low STR_75
  8674  0010FE  0100               	movlb	0	; () banked
  8675  001100  6FD5               	movwf	oled_putString@string& (0+255),b
  8676  001102  0E7B               	movlw	high STR_75
  8677  001104  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8678  001106  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8679  001108  0E03               	movlw	3
  8680  00110A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8681  00110C  ECDF  F01A         	call	_oled_putString	;wreg free
  8682  001110  D57A               	goto	l11598
  8683  001112                     l11820:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;MOTEapp.c: 1037: if (changeStates)
  8687  001112  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8688  001114  E018               	bz	l11830
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;MOTEapp.c: 1038: {
  8692                           ;MOTEapp.c: 1039: oled_clear();
  8693  001116  EC72  F020         	call	_oled_clear	;wreg free
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;MOTEapp.c: 1040: oled_putString("Enter Sleep Mode",0,0);
  8697  00111A  0E87               	movlw	low STR_235
  8698  00111C  6FD5               	movwf	oled_putString@string& (0+255),b
  8699  00111E  0E7B               	movlw	high STR_235
  8700  001120  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8701  001122  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8702  001124  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8703  001126  ECDF  F01A         	call	_oled_putString	;wreg free
  8704                           
  8705                           ;MOTEapp.c: 1041: oled_putString("(NAV)    (SLP) ",0,3);
  8706  00112A  0E0C               	movlw	low STR_236
  8707  00112C  0100               	movlb	0	; () banked
  8708  00112E  6FD5               	movwf	oled_putString@string& (0+255),b
  8709  001130  0E7C               	movlw	high STR_236
  8710  001132  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8711  001134  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8712  001136  0E03               	movlw	3
  8713  001138  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8714  00113A  ECDF  F01A         	call	_oled_putString	;wreg free
  8715                           
  8716                           ;MOTEapp.c: 1042: runningState = runningSleep;
  8717  00113E  0E0E               	movlw	14
  8718  001140  0100               	movlb	0	; () banked
  8719  001142  6F98               	movwf	_runningState& (0+255),b
  8720                           
  8721                           ;MOTEapp.c: 1043: }
  8722  001144  0C0E               	retlw	14
  8723  001146                     l11830:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;MOTEapp.c: 1044: else if (selectButton)
  8727  001146  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8728  001148  B4D8               	btfsc	status,2,c
  8729  00114A  0012               	return	
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;MOTEapp.c: 1045: {
  8733                           ;MOTEapp.c: 1046: if (periodicState)
  8734  00114C  51F9               	movf	_periodicState& (0+255),w,b
  8735  00114E  E008               	bz	l11838
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;MOTEapp.c: 1047: {
  8739                           ;MOTEapp.c: 1048: periodicState = 0;
  8740  001150  6BF9               	clrf	_periodicState& (0+255),b
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;MOTEapp.c: 1049: oled_putString("    Disabled  ", 0,2);
  8744  001152  0E6A               	movlw	low STR_226
  8745  001154  6FD5               	movwf	oled_putString@string& (0+255),b
  8746  001156  0E7C               	movlw	high STR_226
  8747  001158  D008               	goto	L30
  8748  00115A                     L29:
  8749  00115A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8750  00115C  EFDF  F01A         	goto	_oled_putString	;wreg free
  8751  001160                     l11838:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;MOTEapp.c: 1051: else
  8755                           ;MOTEapp.c: 1052: {
  8756                           ;MOTEapp.c: 1053: periodicState = 1;
  8757  001160  0E01               	movlw	1
  8758  001162  6FF9               	movwf	_periodicState& (0+255),b
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;MOTEapp.c: 1054: oled_putString("    Enabled   ", 0,2);
  8762  001164  0E5B               	movlw	low STR_225
  8763  001166  6FD5               	movwf	oled_putString@string& (0+255),b
  8764  001168  0E7C               	movlw	high STR_225
  8765  00116A                     L30:
  8766  00116A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8767  00116C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8768  00116E  EFFF  F003         	goto	L35
  8769  001172                     l11842:
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;MOTEapp.c: 1059: if (selectButton)
  8773  001172  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8774  001174  E009               	bz	l610
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;MOTEapp.c: 1060: {
  8778                           ;MOTEapp.c: 1061: if( moteApp_GoToSleep() )
  8779  001176  EC0A  F019         	call	_moteApp_GoToSleep	;wreg free
  8780  00117A  0900               	iorlw	0
  8781  00117C  E003               	bz	l11848
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;MOTEapp.c: 1062: {
  8785                           ;MOTEapp.c: 1063: changeStates = 1;
  8786  00117E  0E01               	movlw	1
  8787  001180  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  8788                           
  8789                           ;MOTEapp.c: 1064: }
  8790  001182  D002               	goto	l610
  8791  001184                     l11848:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;MOTEapp.c: 1065: else
  8795                           ;MOTEapp.c: 1066: {
  8796                           ;MOTEapp.c: 1067: secTicker = 10 - 1;
  8797  001184  0E09               	movlw	9
  8798  001186  6F99               	movwf	_secTicker& (0+255),b
  8799  001188                     l610:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;MOTEapp.c: 1068: }
  8803                           ;MOTEapp.c: 1069: }
  8804                           ;MOTEapp.c: 1070: if (changeStates)
  8805  001188  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8806  00118A  B4D8               	btfsc	status,2,c
  8807  00118C  0012               	return	
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;MOTEapp.c: 1071: {
  8811                           ;MOTEapp.c: 1072: oled_clear();
  8812  00118E  EC72  F020         	call	_oled_clear	;wreg free
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;MOTEapp.c: 1073: oled_putString("  Sensor Data  ",0,0);
  8816  001192  0EEC               	movlw	low STR_80
  8817  001194  6FD5               	movwf	oled_putString@string& (0+255),b
  8818  001196  0E7B               	movlw	high STR_80
  8819  001198  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8820  00119A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8821  00119C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8822  00119E  ECDF  F01A         	call	_oled_putString	;wreg free
  8823                           
  8824                           ;MOTEapp.c: 1074: oled_putString("    Display    ",0,1);
  8825  0011A2  0EDC               	movlw	low STR_81
  8826  0011A4  0100               	movlb	0	; () banked
  8827  0011A6  6FD5               	movwf	oled_putString@string& (0+255),b
  8828  0011A8  0E7B               	movlw	high STR_81
  8829  0011AA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8830  0011AC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8831  0011AE  0E01               	movlw	1
  8832  0011B0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8833  0011B2  ECDF  F01A         	call	_oled_putString	;wreg free
  8834                           
  8835                           ;MOTEapp.c: 1075: oled_putString("(NAV)    (SEL) ",0,3);
  8836  0011B6  0EFC               	movlw	low STR_75
  8837  0011B8  0100               	movlb	0	; () banked
  8838  0011BA  6FD5               	movwf	oled_putString@string& (0+255),b
  8839  0011BC  0E7B               	movlw	high STR_75
  8840  0011BE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8841  0011C0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8842  0011C2  0E03               	movlw	3
  8843  0011C4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8844  0011C6  ECDF  F01A         	call	_oled_putString	;wreg free
  8845  0011CA  EF67  F001         	goto	l11182
  8846  0011CE                     l11862:
  8847                           
  8848                           ; BSR set to: 0
  8849  0011CE  5198               	movf	_runningState& (0+255),w,b
  8850                           
  8851                           ; Switch size 1, requested type "speed"
  8852                           ; Number of cases is 12, Range of values is 0 to 14
  8853                           ; switch strategies available:
  8854                           ; Name         Instructions Cycles
  8855                           ; simple_byte           37    19 (average)
  8856                           ;	Chosen strategy is simple_byte
  8857  0011D0  E102 EF44  F001    	bz	l11170
  8858  0011D6  0A01               	xorlw	1	; case 1
  8859  0011D8  E102 EF6B  F001    	bz	l11184
  8860  0011DE  0A03               	xorlw	3	; case 2
  8861  0011E0  E102 EFD8  F001    	bz	l11214
  8862  0011E6  0A01               	xorlw	1	; case 3
  8863  0011E8  E102 EF12  F002    	bz	l11230
  8864  0011EE  0A07               	xorlw	7	; case 4
  8865  0011F0  E102 EFA4  F002    	bz	l11274
  8866  0011F6  0A02               	xorlw	2	; case 6
  8867  0011F8  E101 D4E5          	bz	l11588
  8868  0011FC  0A01               	xorlw	1	; case 7
  8869  0011FE  E101 D557          	bz	l11638
  8870  001202  0A0F               	xorlw	15	; case 8
  8871  001204  E101 D5B1          	bz	l11668
  8872  001208  0A02               	xorlw	2	; case 10
  8873  00120A  E101 D6D5          	bz	l11768
  8874  00120E  0A01               	xorlw	1	; case 11
  8875  001210  E101 D75B          	bz	l11806
  8876  001214  0A07               	xorlw	7	; case 12
  8877  001216  E101 D77C          	bz	l11820
  8878  00121A  0A02               	xorlw	2	; case 14
  8879  00121C  E0AA               	bz	l11842
  8880  00121E  EF43  F001         	goto	l448
  8881  001222                     __end_of_moteRunningProcess:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodl	equ	0xFF3
  8888                           intcon	equ	0xFF2
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           postdec1	equ	0xFE5
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           fsr2h	equ	0xFDA
  8895                           fsr2l	equ	0xFD9
  8896                           status	equ	0xFD8
  8897                           
  8898 ;; *************** function _unhex *****************
  8899 ;; Defined at:
  8900 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  c               1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  c               1    0[BANK0 ] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      unsigned char 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : F/0
  8911 ;;		On exit  : F/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0
  8915 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8917 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8918 ;;Total ram usage:        1 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:   11
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_moteRunningProcess
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text11
  8929  003EDE                     __ptext11:
  8930                           	opt stack 0
  8931  003EDE                     _unhex:
  8932                           	opt stack 17
  8933                           
  8934                           ;incstack = 0
  8935                           ;unhex@c stored from wreg
  8936  003EDE  6FC8               	movwf	unhex@c& (0+255),b
  8937                           
  8938                           ;MOTEapp.c: 1266: if (c >= '0' && c <= '9')
  8939  003EE0  0E2F               	movlw	47
  8940  003EE2  0100               	movlb	0	; () banked
  8941  003EE4  65C8               	cpfsgt	unhex@c& (0+255),b
  8942  003EE6  D006               	goto	l10462
  8943                           
  8944                           ; BSR set to: 0
  8945  003EE8  0E3A               	movlw	58
  8946  003EEA  61C8               	cpfslt	unhex@c& (0+255),b
  8947  003EEC  D003               	goto	l10462
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;MOTEapp.c: 1267: return c - '0';
  8951  003EEE  51C8               	movf	unhex@c& (0+255),w,b
  8952  003EF0  0FD0               	addlw	208
  8953  003EF2  0012               	return	
  8954  003EF4                     l10462:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;MOTEapp.c: 1268: if (c >= 'A' && c <= 'F')
  8958  003EF4  0E40               	movlw	64
  8959  003EF6  65C8               	cpfsgt	unhex@c& (0+255),b
  8960  003EF8  0C2D               	retlw	45
  8961                           
  8962                           ; BSR set to: 0
  8963  003EFA  0E47               	movlw	71
  8964  003EFC  61C8               	cpfslt	unhex@c& (0+255),b
  8965  003EFE  0C2D               	retlw	45
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;MOTEapp.c: 1269: return c - 'A' + 10;
  8969  003F00  51C8               	movf	unhex@c& (0+255),w,b
  8970  003F02  0FC9               	addlw	201
  8971  003F04  0012               	return	
  8972  003F06                     __end_of_unhex:
  8973                           	opt stack 0
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodl	equ	0xFF3
  8979                           intcon	equ	0xFF2
  8980                           postinc0	equ	0xFEE
  8981                           wreg	equ	0xFE8
  8982                           postdec1	equ	0xFE5
  8983                           fsr1l	equ	0xFE1
  8984                           indf2	equ	0xFDF
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function _sendDataCommand *****************
  8990 ;; Defined at:
  8991 ;;		line 1241 in file "../Includes/Board/MOTEapp.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  8994 ;;		 -> STR_207(12), STR_206(14), STR_79(14), STR_77(12), 
  8995 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  8996 ;;		 -> dataBuffer(12), 
  8997 ;;  dataLength      1    4[BANK0 ] unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9000 ;;  byteCount       1    6[BANK0 ] unsigned char 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : F/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9010 ;;      Params:         0       4       0       0       0       0       0       0       0
  9011 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9012 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9013 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9014 ;;Total ram usage:        7 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:   13
  9017 ;; This function calls:
  9018 ;;		_EUSART_Write
  9019 ;;		_EndLine
  9020 ;;		_hexToStr
  9021 ;; This function is called by:
  9022 ;;		_moteRunningProcess
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text12
  9027  002ECE                     __ptext12:
  9028                           	opt stack 0
  9029  002ECE                     _sendDataCommand:
  9030                           	opt stack 15
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;MOTEapp.c: 1244: while (*string)
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;incstack = 0
  9037  002ECE  D00B               	goto	l10430
  9038  002ED0                     l10426:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;MOTEapp.c: 1245: {
  9042                           ;MOTEapp.c: 1246: EUSART_Write(*string++);
  9043  002ED0  C0C9  FFF6         	movff	sendDataCommand@string,tblptrl
  9044  002ED4  C0CA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9045  002ED8                     	if	0	;tblptru may be non-zero
  9046  002ED8                     	endif
  9047  002ED8                     	if	0	;tblptru may be non-zero
  9048  002ED8                     	endif
  9049  002ED8  0008               	tblrd		*
  9050  002EDA  50F5               	movf	tablat,w,c
  9051  002EDC  EC91  F01E         	call	_EUSART_Write
  9052  002EE0  0100               	movlb	0	; () banked
  9053  002EE2  4BC9               	infsnz	sendDataCommand@string& (0+255),f,b
  9054  002EE4  2BCA               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9055  002EE6                     l10430:
  9056                           
  9057                           ; BSR set to: 0
  9058  002EE6  C0C9  FFF6         	movff	sendDataCommand@string,tblptrl
  9059  002EEA  C0CA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9060  002EEE                     	if	0	;tblptru may be non-zero
  9061  002EEE                     	endif
  9062  002EEE                     	if	0	;tblptru may be non-zero
  9063  002EEE                     	endif
  9064  002EEE  0008               	tblrd		*
  9065  002EF0  50F5               	movf	tablat,w,c
  9066  002EF2  E1EE               	bnz	l10426
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;MOTEapp.c: 1247: }
  9070                           ;MOTEapp.c: 1249: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9071  002EF4  6BCE               	clrf	sendDataCommand@byteCount& (0+255),b
  9072  002EF6                     l10436:
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;MOTEapp.c: 1250: {
  9076                           ;MOTEapp.c: 1251: EUSART_Write(appData[byteCount]);
  9077  002EF6  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9078  002EF8  25CE               	addwf	sendDataCommand@byteCount& (0+255),w,b
  9079  002EFA  6ED9               	movwf	fsr2l,c
  9080  002EFC  6ADA               	clrf	fsr2h,c
  9081  002EFE  50DF               	movf	indf2,w,c
  9082  002F00  EC91  F01E         	call	_EUSART_Write
  9083  002F04  0100               	movlb	0	; () banked
  9084  002F06  2BCE               	incf	sendDataCommand@byteCount& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 0
  9087  002F08  0E02               	movlw	2
  9088  002F0A  65CE               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9089  002F0C  D7F4               	goto	l10436
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;MOTEapp.c: 1252: }
  9093                           ;MOTEapp.c: 1254: EUSART_Write(appData[3]);
  9094  002F0E  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9095  002F10  6ED9               	movwf	fsr2l,c
  9096  002F12  6ADA               	clrf	fsr2h,c
  9097  002F14  0E03               	movlw	3
  9098  002F16  26D9               	addwf	fsr2l,f,c
  9099  002F18  50DF               	movf	indf2,w,c
  9100  002F1A  EC91  F01E         	call	_EUSART_Write
  9101                           
  9102                           ;MOTEapp.c: 1256: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9103  002F1E  0E04               	movlw	4
  9104  002F20  0100               	movlb	0	; () banked
  9105  002F22  6FCF               	movwf	sendDataCommand@byteCount_1608& (0+255),b
  9106  002F24  D019               	goto	l10450
  9107  002F26                     l10446:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;MOTEapp.c: 1257: {
  9111                           ;MOTEapp.c: 1258: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9112  002F26  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9113  002F28  25CF               	addwf	sendDataCommand@byteCount_1608& (0+255),w,b
  9114  002F2A  6ED9               	movwf	fsr2l,c
  9115  002F2C  6ADA               	clrf	fsr2h,c
  9116  002F2E  50DF               	movf	indf2,w,c
  9117  002F30  6FCD               	movwf	??_sendDataCommand& (0+255),b
  9118  002F32  39CD               	swapf	??_sendDataCommand& (0+255),w,b
  9119  002F34  0B0F               	andlw	15
  9120  002F36  ECD3  F01F         	call	_hexToStr
  9121  002F3A  EC91  F01E         	call	_EUSART_Write
  9122                           
  9123                           ;MOTEapp.c: 1259: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9124  002F3E  0100               	movlb	0	; () banked
  9125  002F40  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9126  002F42  25CF               	addwf	sendDataCommand@byteCount_1608& (0+255),w,b
  9127  002F44  6ED9               	movwf	fsr2l,c
  9128  002F46  6ADA               	clrf	fsr2h,c
  9129  002F48  50DF               	movf	indf2,w,c
  9130  002F4A  0B0F               	andlw	15
  9131  002F4C  ECD3  F01F         	call	_hexToStr
  9132  002F50  EC91  F01E         	call	_EUSART_Write
  9133  002F54  0100               	movlb	0	; () banked
  9134  002F56  2BCF               	incf	sendDataCommand@byteCount_1608& (0+255),f,b
  9135  002F58                     l10450:
  9136                           
  9137                           ; BSR set to: 0
  9138  002F58  51CC               	movf	sendDataCommand@dataLength& (0+255),w,b
  9139  002F5A  5DCF               	subwf	sendDataCommand@byteCount_1608& (0+255),w,b
  9140  002F5C  E3E4               	bnc	l10446
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;MOTEapp.c: 1260: }
  9144                           ;MOTEapp.c: 1261: EndLine();
  9145  002F5E  EFEB  F020         	goto	_EndLine	;wreg free
  9146  002F62                     __end_of_sendDataCommand:
  9147                           	opt stack 0
  9148                           tblptru	equ	0xFF8
  9149                           tblptrh	equ	0xFF7
  9150                           tblptrl	equ	0xFF6
  9151                           tablat	equ	0xFF5
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           postdec1	equ	0xFE5
  9157                           fsr1l	equ	0xFE1
  9158                           indf2	equ	0xFDF
  9159                           fsr2h	equ	0xFDA
  9160                           fsr2l	equ	0xFD9
  9161                           status	equ	0xFD8
  9162                           
  9163 ;; *************** function _hexToStr *****************
  9164 ;; Defined at:
  9165 ;;		line 1273 in file "../Includes/Board/MOTEapp.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  character       1    wreg     unsigned char 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  character       1    0[BANK0 ] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      unsigned char 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0
  9174 ;; Tracked objects:
  9175 ;;		On entry : F/0
  9176 ;;		On exit  : F/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9179 ;;      Params:         0       0       0       0       0       0       0       0       0
  9180 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9182 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9183 ;;Total ram usage:        1 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:   11
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_sendDataCommand
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text13
  9194  003FA6                     __ptext13:
  9195                           	opt stack 0
  9196  003FA6                     _hexToStr:
  9197                           	opt stack 16
  9198                           
  9199                           ;incstack = 0
  9200                           ;hexToStr@character stored from wreg
  9201  003FA6  6FC8               	movwf	hexToStr@character& (0+255),b
  9202                           
  9203                           ;MOTEapp.c: 1276: character = character & 0x0F;
  9204  003FA8  0E0F               	movlw	15
  9205  003FAA  0100               	movlb	0	; () banked
  9206  003FAC  17C8               	andwf	hexToStr@character& (0+255),f,b
  9207                           
  9208                           ;MOTEapp.c: 1278: if (character < 0x0A)
  9209  003FAE  0E0A               	movlw	10
  9210  003FB0  61C8               	cpfslt	hexToStr@character& (0+255),b
  9211  003FB2  D003               	goto	l10044
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;MOTEapp.c: 1279: {
  9215                           ;MOTEapp.c: 1280: return character + '0';
  9216  003FB4  51C8               	movf	hexToStr@character& (0+255),w,b
  9217  003FB6  0F30               	addlw	48
  9218  003FB8  0012               	return	
  9219  003FBA                     l10044:
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;MOTEapp.c: 1282: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9223  003FBA  0E09               	movlw	9
  9224  003FBC  65C8               	cpfsgt	hexToStr@character& (0+255),b
  9225  003FBE  0C00               	retlw	0
  9226                           
  9227                           ; BSR set to: 0
  9228  003FC0  0E10               	movlw	16
  9229  003FC2  61C8               	cpfslt	hexToStr@character& (0+255),b
  9230  003FC4  0C00               	retlw	0
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;MOTEapp.c: 1283: {
  9234                           ;MOTEapp.c: 1284: return character + '0' + 7;
  9235  003FC6  51C8               	movf	hexToStr@character& (0+255),w,b
  9236  003FC8  0F37               	addlw	55
  9237  003FCA  0012               	return	
  9238  003FCC                     __end_of_hexToStr:
  9239                           	opt stack 0
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           wreg	equ	0xFE8
  9248                           postdec1	equ	0xFE5
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _oled_putUint8 *****************
  9256 ;; Defined at:
  9257 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  number          1    wreg     unsigned char 
  9260 ;;  station_dot     1   18[BANK0 ] unsigned char 
  9261 ;;  start_page      1   19[BANK0 ] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  number          1   20[BANK0 ] unsigned char 
  9264 ;;  numData         6   21[BANK0 ] struct .
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : F/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9274 ;;      Params:         0       2       0       0       0       0       0       0       0
  9275 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9277 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9278 ;;Total ram usage:        9 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:   16
  9281 ;; This function calls:
  9282 ;;		___lbdiv
  9283 ;;		___lbmod
  9284 ;;		_oled_putString
  9285 ;; This function is called by:
  9286 ;;		_test_adc
  9287 ;;		_moteRunningProcess
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text14
  9292  0037A4                     __ptext14:
  9293                           	opt stack 0
  9294  0037A4                     _oled_putUint8:
  9295                           	opt stack 12
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299                           ;oled_putUint8@number stored from wreg
  9300  0037A4  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9301                           
  9302                           ;SSD1306oLED.c: 228: display_data_t numData;
  9303                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  9304  0037A6  0E0A               	movlw	10
  9305  0037A8  0100               	movlb	0	; () banked
  9306  0037AA  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9307  0037AC  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9308  0037AE  EC83  F01F         	call	___lbmod
  9309  0037B2  0F30               	addlw	48
  9310  0037B4  6FDF               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9311                           
  9312                           ;SSD1306oLED.c: 230: number /= 10;
  9313  0037B6  0E0A               	movlw	10
  9314  0037B8  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9315  0037BA  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9316  0037BC  EC5B  F01E         	call	___lbdiv
  9317  0037C0  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9318                           
  9319                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  9320  0037C2  0E0A               	movlw	10
  9321  0037C4  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9322  0037C6  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9323  0037C8  EC83  F01F         	call	___lbmod
  9324  0037CC  0F30               	addlw	48
  9325  0037CE  6FDE               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9326                           
  9327                           ;SSD1306oLED.c: 232: number /= 10;
  9328  0037D0  0E0A               	movlw	10
  9329  0037D2  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9330  0037D4  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9331  0037D6  EC5B  F01E         	call	___lbdiv
  9332  0037DA  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9333                           
  9334                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  9335  0037DC  0E0A               	movlw	10
  9336  0037DE  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9337  0037E0  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9338  0037E2  EC83  F01F         	call	___lbmod
  9339  0037E6  0F30               	addlw	48
  9340  0037E8  6FDD               	movwf	oled_putUint8@numData& (0+255),b
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  9344  0037EA  6BE0               	clrf	(oled_putUint8@numData+3)& (0+255),b
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  9348  0037EC  0EDD               	movlw	low oled_putUint8@numData
  9349  0037EE  6FD5               	movwf	oled_putString@string& (0+255),b
  9350  0037F0  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  9351  0037F2  C0DA  F0D7         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9352  0037F6  C0DB  F0D8         	movff	oled_putUint8@start_page,oled_putString@start_page
  9353  0037FA  EFDF  F01A         	goto	_oled_putString	;wreg free
  9354  0037FE                     __end_of_oled_putUint8:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodl	equ	0xFF3
  9361                           intcon	equ	0xFF2
  9362                           postinc0	equ	0xFEE
  9363                           wreg	equ	0xFE8
  9364                           postdec1	equ	0xFE5
  9365                           fsr1l	equ	0xFE1
  9366                           indf2	equ	0xFDF
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _oled_putUint16 *****************
  9372 ;; Defined at:
  9373 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  number          2   18[BANK0 ] unsigned int 
  9376 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9377 ;;  start_page      1   21[BANK0 ] unsigned char 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  numData         6   22[BANK0 ] struct .
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : F/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9389 ;;      Params:         0       4       0       0       0       0       0       0       0
  9390 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9392 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       10 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:   16
  9396 ;; This function calls:
  9397 ;;		___lwdiv
  9398 ;;		___lwmod
  9399 ;;		_oled_putString
  9400 ;; This function is called by:
  9401 ;;		_test_adc
  9402 ;;		_moteRunningProcess
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text15
  9407  002036                     __ptext15:
  9408                           	opt stack 0
  9409  002036                     _oled_putUint16:
  9410                           	opt stack 12
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;SSD1306oLED.c: 242: display_data_t numData;
  9414                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  9415                           
  9416                           ;incstack = 0
  9417  002036  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9418  00203A  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9419  00203E  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9420  002040  0E0A               	movlw	10
  9421  002042  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9422  002044  ECAB  F01D         	call	___lwmod	;wreg free
  9423  002048  51C8               	movf	?___lwmod& (0+255),w,b
  9424  00204A  0F30               	addlw	48
  9425  00204C  6FE2               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9426                           
  9427                           ;SSD1306oLED.c: 244: number /= 10;
  9428  00204E  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9429  002052  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9430  002056  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9431  002058  0E0A               	movlw	10
  9432  00205A  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9433  00205C  EC1C  F01D         	call	___lwdiv	;wreg free
  9434  002060  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9435  002064  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9436                           
  9437                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  9438  002068  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9439  00206C  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9440  002070  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9441  002072  0E0A               	movlw	10
  9442  002074  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9443  002076  ECAB  F01D         	call	___lwmod	;wreg free
  9444  00207A  51C8               	movf	?___lwmod& (0+255),w,b
  9445  00207C  0F30               	addlw	48
  9446  00207E  6FE1               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9447                           
  9448                           ;SSD1306oLED.c: 246: number /= 10;
  9449  002080  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9450  002084  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9451  002088  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9452  00208A  0E0A               	movlw	10
  9453  00208C  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9454  00208E  EC1C  F01D         	call	___lwdiv	;wreg free
  9455  002092  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9456  002096  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9457                           
  9458                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  9459  00209A  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9460  00209E  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9461  0020A2  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9462  0020A4  0E0A               	movlw	10
  9463  0020A6  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9464  0020A8  ECAB  F01D         	call	___lwmod	;wreg free
  9465  0020AC  51C8               	movf	?___lwmod& (0+255),w,b
  9466  0020AE  0F30               	addlw	48
  9467  0020B0  6FE0               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9468                           
  9469                           ;SSD1306oLED.c: 248: number /= 10;
  9470  0020B2  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9471  0020B6  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9472  0020BA  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9473  0020BC  0E0A               	movlw	10
  9474  0020BE  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9475  0020C0  EC1C  F01D         	call	___lwdiv	;wreg free
  9476  0020C4  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9477  0020C8  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9478                           
  9479                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  9480  0020CC  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9481  0020D0  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9482  0020D4  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9483  0020D6  0E0A               	movlw	10
  9484  0020D8  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9485  0020DA  ECAB  F01D         	call	___lwmod	;wreg free
  9486  0020DE  51C8               	movf	?___lwmod& (0+255),w,b
  9487  0020E0  0F30               	addlw	48
  9488  0020E2  6FDF               	movwf	(oled_putUint16@numData+1)& (0+255),b
  9489                           
  9490                           ;SSD1306oLED.c: 250: number /= 10;
  9491  0020E4  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9492  0020E8  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9493  0020EC  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9494  0020EE  0E0A               	movlw	10
  9495  0020F0  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9496  0020F2  EC1C  F01D         	call	___lwdiv	;wreg free
  9497  0020F6  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9498  0020FA  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9499                           
  9500                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  9501  0020FE  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9502  002102  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9503  002106  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9504  002108  0E0A               	movlw	10
  9505  00210A  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9506  00210C  ECAB  F01D         	call	___lwmod	;wreg free
  9507  002110  51C8               	movf	?___lwmod& (0+255),w,b
  9508  002112  0F30               	addlw	48
  9509  002114  6FDE               	movwf	oled_putUint16@numData& (0+255),b
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  9513  002116  6BE3               	clrf	(oled_putUint16@numData+5)& (0+255),b
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  9517  002118  0EDE               	movlw	low oled_putUint16@numData
  9518  00211A  6FD5               	movwf	oled_putString@string& (0+255),b
  9519  00211C  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  9520  00211E  C0DC  F0D7         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  9521  002122  C0DD  F0D8         	movff	oled_putUint16@start_page,oled_putString@start_page
  9522  002126  EFDF  F01A         	goto	_oled_putString	;wreg free
  9523  00212A                     __end_of_oled_putUint16:
  9524                           	opt stack 0
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodl	equ	0xFF3
  9530                           intcon	equ	0xFF2
  9531                           postinc0	equ	0xFEE
  9532                           wreg	equ	0xFE8
  9533                           postdec1	equ	0xFE5
  9534                           fsr1l	equ	0xFE1
  9535                           indf2	equ	0xFDF
  9536                           fsr2h	equ	0xFDA
  9537                           fsr2l	equ	0xFD9
  9538                           status	equ	0xFD8
  9539                           
  9540 ;; *************** function _moteApp_clearBuffers *****************
  9541 ;; Defined at:
  9542 ;;		line 1383 in file "../Includes/Board/MOTEapp.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  counter         1    2[BANK0 ] unsigned char 
  9547 ;;  counter         1    1[BANK0 ] unsigned char 
  9548 ;;  counter         1    0[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : F/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        3 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:   11
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_moteRunningProcess
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text16
  9573  003B12                     __ptext16:
  9574                           	opt stack 0
  9575  003B12                     _moteApp_clearBuffers:
  9576                           	opt stack 17
  9577                           
  9578                           ;MOTEapp.c: 1385: for (uint8_t counter = 0; counter < 3; counter++)
  9579                           
  9580                           ;incstack = 0
  9581  003B12  0100               	movlb	0	; () banked
  9582  003B14  6BC8               	clrf	moteApp_clearBuffers@counter& (0+255),b
  9583  003B16                     l10370:
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;MOTEapp.c: 1386: {
  9587                           ;MOTEapp.c: 1387: responsePortNum[counter] = 0;
  9588  003B16  51C8               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  9589  003B18  0FC3               	addlw	low _responsePortNum
  9590  003B1A  6ED9               	movwf	fsr2l,c
  9591  003B1C  6ADA               	clrf	fsr2h,c
  9592  003B1E  6ADF               	clrf	indf2,c
  9593                           
  9594                           ; BSR set to: 0
  9595  003B20  2BC8               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  003B22  0E02               	movlw	2
  9599  003B24  65C8               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  9600  003B26  D7F7               	goto	l10370
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;MOTEapp.c: 1388: }
  9604                           ;MOTEapp.c: 1389: for (uint8_t counter = 0; counter < 34; counter++)
  9605  003B28  6BC9               	clrf	moteApp_clearBuffers@counter_1676& (0+255),b
  9606  003B2A                     l10380:
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;MOTEapp.c: 1390: {
  9610                           ;MOTEapp.c: 1391: responseId[counter] = 0;
  9611  003B2A  0EC0               	movlw	low _responseId
  9612  003B2C  25C9               	addwf	moteApp_clearBuffers@counter_1676& (0+255),w,b
  9613  003B2E  6ED9               	movwf	fsr2l,c
  9614  003B30  6ADA               	clrf	fsr2h,c
  9615  003B32  0E01               	movlw	high _responseId
  9616  003B34  22DA               	addwfc	fsr2h,f,c
  9617  003B36  6ADF               	clrf	indf2,c
  9618                           
  9619                           ; BSR set to: 0
  9620  003B38  2BC9               	incf	moteApp_clearBuffers@counter_1676& (0+255),f,b
  9621                           
  9622                           ; BSR set to: 0
  9623  003B3A  0E21               	movlw	33
  9624  003B3C  65C9               	cpfsgt	moteApp_clearBuffers@counter_1676& (0+255),b
  9625  003B3E  D7F5               	goto	l10380
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;MOTEapp.c: 1392: }
  9629                           ;MOTEapp.c: 1393: for (uint8_t counter = 0; counter < 10; counter++)
  9630  003B40  6BCA               	clrf	moteApp_clearBuffers@counter_1677& (0+255),b
  9631  003B42                     l10390:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;MOTEapp.c: 1394: {
  9635                           ;MOTEapp.c: 1395: responseData[counter] = 0;
  9636  003B42  51CA               	movf	moteApp_clearBuffers@counter_1677& (0+255),w,b
  9637  003B44  0FB4               	addlw	low _responseData
  9638  003B46  6ED9               	movwf	fsr2l,c
  9639  003B48  6ADA               	clrf	fsr2h,c
  9640  003B4A  6ADF               	clrf	indf2,c
  9641                           
  9642                           ; BSR set to: 0
  9643  003B4C  2BCA               	incf	moteApp_clearBuffers@counter_1677& (0+255),f,b
  9644                           
  9645                           ; BSR set to: 0
  9646  003B4E  0E09               	movlw	9
  9647  003B50  65CA               	cpfsgt	moteApp_clearBuffers@counter_1677& (0+255),b
  9648  003B52  D7F7               	goto	l10390
  9649  003B54  0C09               	retlw	9
  9650  003B56                     __end_of_moteApp_clearBuffers:
  9651                           	opt stack 0
  9652                           tblptru	equ	0xFF8
  9653                           tblptrh	equ	0xFF7
  9654                           tblptrl	equ	0xFF6
  9655                           tablat	equ	0xFF5
  9656                           prodl	equ	0xFF3
  9657                           intcon	equ	0xFF2
  9658                           postinc0	equ	0xFEE
  9659                           wreg	equ	0xFE8
  9660                           postdec1	equ	0xFE5
  9661                           fsr1l	equ	0xFE1
  9662                           indf2	equ	0xFDF
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667 ;; *************** function _moteApp_add8bToDataBuffer *****************
  9668 ;; Defined at:
  9669 ;;		line 1399 in file "../Includes/Board/MOTEapp.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  number          1    wreg     unsigned char 
  9672 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  number          1    5[BANK0 ] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : F/0
  9681 ;;		On exit  : F/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9684 ;;      Params:         0       1       0       0       0       0       0       0       0
  9685 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9687 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9688 ;;Total ram usage:        2 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:   12
  9691 ;; This function calls:
  9692 ;;		___lbdiv
  9693 ;;		___lbmod
  9694 ;; This function is called by:
  9695 ;;		_moteRunningProcess
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text17
  9700  003688                     __ptext17:
  9701                           	opt stack 0
  9702  003688                     _moteApp_add8bToDataBuffer:
  9703                           	opt stack 16
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;incstack = 0
  9707                           ;moteApp_add8bToDataBuffer@number stored from wreg
  9708  003688  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9709                           
  9710                           ;MOTEapp.c: 1401: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  9711  00368A  0100               	movlb	0	; () banked
  9712  00368C  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9713  00368E  0FA0               	addlw	low (_dataBuffer+2)
  9714  003690  6ED9               	movwf	fsr2l,c
  9715  003692  6ADA               	clrf	fsr2h,c
  9716  003694  0E0A               	movlw	10
  9717  003696  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9718  003698  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9719  00369A  EC83  F01F         	call	___lbmod
  9720  00369E  0F30               	addlw	48
  9721  0036A0  6EDF               	movwf	indf2,c
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;MOTEapp.c: 1402: number /= 10;
  9725  0036A2  0E0A               	movlw	10
  9726  0036A4  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9727  0036A6  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9728  0036A8  EC5B  F01E         	call	___lbdiv
  9729  0036AC  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;MOTEapp.c: 1403: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  9733  0036AE  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9734  0036B0  0F9F               	addlw	low (_dataBuffer+1)
  9735  0036B2  6ED9               	movwf	fsr2l,c
  9736  0036B4  6ADA               	clrf	fsr2h,c
  9737  0036B6  0E0A               	movlw	10
  9738  0036B8  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9739  0036BA  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9740  0036BC  EC83  F01F         	call	___lbmod
  9741  0036C0  0F30               	addlw	48
  9742  0036C2  6EDF               	movwf	indf2,c
  9743                           
  9744                           ;MOTEapp.c: 1404: number /= 10;
  9745  0036C4  0E0A               	movlw	10
  9746  0036C6  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9747  0036C8  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9748  0036CA  EC5B  F01E         	call	___lbdiv
  9749  0036CE  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;MOTEapp.c: 1405: dataBuffer[bufferLocation] = '0' + (number % 10);
  9753  0036D0  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9754  0036D2  0F9E               	addlw	low _dataBuffer
  9755  0036D4  6ED9               	movwf	fsr2l,c
  9756  0036D6  6ADA               	clrf	fsr2h,c
  9757  0036D8  0E0A               	movlw	10
  9758  0036DA  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9759  0036DC  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9760  0036DE  EC83  F01F         	call	___lbmod
  9761  0036E2  0F30               	addlw	48
  9762  0036E4  6EDF               	movwf	indf2,c
  9763                           
  9764                           ; BSR set to: 0
  9765  0036E6  0012               	return		;funcret
  9766  0036E8                     __end_of_moteApp_add8bToDataBuffer:
  9767                           	opt stack 0
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           postinc0	equ	0xFEE
  9775                           wreg	equ	0xFE8
  9776                           postdec1	equ	0xFE5
  9777                           fsr1l	equ	0xFE1
  9778                           indf2	equ	0xFDF
  9779                           fsr2h	equ	0xFDA
  9780                           fsr2l	equ	0xFD9
  9781                           status	equ	0xFD8
  9782                           
  9783 ;; *************** function ___lbmod *****************
  9784 ;; Defined at:
  9785 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  dividend        1    wreg     unsigned char 
  9788 ;;  divisor         1    0[BANK0 ] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  dividend        1    1[BANK0 ] unsigned char 
  9791 ;;  rem             1    3[BANK0 ] unsigned char 
  9792 ;;  counter         1    2[BANK0 ] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      unsigned char 
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : F/0
  9799 ;;		On exit  : F/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9802 ;;      Params:         0       1       0       0       0       0       0       0       0
  9803 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9805 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9806 ;;Total ram usage:        4 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:   11
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_moteApp_add8bToDataBuffer
  9813 ;;		_oled_putUint8
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text18
  9818  003F06                     __ptext18:
  9819                           	opt stack 0
  9820  003F06                     ___lbmod:
  9821                           	opt stack 16
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;incstack = 0
  9825                           ;___lbmod@dividend stored from wreg
  9826  003F06  6FC9               	movwf	___lbmod@dividend& (0+255),b
  9827  003F08  0E08               	movlw	8
  9828  003F0A  0100               	movlb	0	; () banked
  9829  003F0C  6FCA               	movwf	___lbmod@counter& (0+255),b
  9830                           
  9831                           ; BSR set to: 0
  9832  003F0E  6BCB               	clrf	___lbmod@rem& (0+255),b
  9833  003F10                     l10156:
  9834                           
  9835                           ; BSR set to: 0
  9836  003F10  90D8               	bcf	status,0,c
  9837  003F12  35C9               	rlcf	___lbmod@dividend& (0+255),w,b
  9838  003F14  35CB               	rlcf	___lbmod@rem& (0+255),w,b
  9839  003F16  6FCB               	movwf	___lbmod@rem& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842  003F18  90D8               	bcf	status,0,c
  9843  003F1A  37C9               	rlcf	___lbmod@dividend& (0+255),f,b
  9844                           
  9845                           ; BSR set to: 0
  9846  003F1C  51C8               	movf	___lbmod@divisor& (0+255),w,b
  9847  003F1E  5DCB               	subwf	___lbmod@rem& (0+255),w,b
  9848  003F20  E302               	bnc	l10164
  9849                           
  9850                           ; BSR set to: 0
  9851  003F22  51C8               	movf	___lbmod@divisor& (0+255),w,b
  9852  003F24  5FCB               	subwf	___lbmod@rem& (0+255),f,b
  9853  003F26                     l10164:
  9854                           
  9855                           ; BSR set to: 0
  9856  003F26  2FCA               	decfsz	___lbmod@counter& (0+255),f,b
  9857  003F28  D7F3               	goto	l10156
  9858                           
  9859                           ; BSR set to: 0
  9860  003F2A  51CB               	movf	___lbmod@rem& (0+255),w,b
  9861                           
  9862                           ; BSR set to: 0
  9863  003F2C  0012               	return		;funcret
  9864  003F2E                     __end_of___lbmod:
  9865                           	opt stack 0
  9866                           tblptru	equ	0xFF8
  9867                           tblptrh	equ	0xFF7
  9868                           tblptrl	equ	0xFF6
  9869                           tablat	equ	0xFF5
  9870                           prodl	equ	0xFF3
  9871                           intcon	equ	0xFF2
  9872                           postinc0	equ	0xFEE
  9873                           wreg	equ	0xFE8
  9874                           postdec1	equ	0xFE5
  9875                           fsr1l	equ	0xFE1
  9876                           indf2	equ	0xFDF
  9877                           fsr2h	equ	0xFDA
  9878                           fsr2l	equ	0xFD9
  9879                           status	equ	0xFD8
  9880                           
  9881 ;; *************** function ___lbdiv *****************
  9882 ;; Defined at:
  9883 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  dividend        1    wreg     unsigned char 
  9886 ;;  divisor         1    0[BANK0 ] unsigned char 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  dividend        1    1[BANK0 ] unsigned char 
  9889 ;;  quotient        1    3[BANK0 ] unsigned char 
  9890 ;;  counter         1    2[BANK0 ] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      unsigned char 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2, status,0
  9895 ;; Tracked objects:
  9896 ;;		On entry : F/0
  9897 ;;		On exit  : F/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9900 ;;      Params:         0       1       0       0       0       0       0       0       0
  9901 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9903 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9904 ;;Total ram usage:        4 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   11
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_moteApp_add8bToDataBuffer
  9911 ;;		_oled_putUint8
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text19
  9916  003CB6                     __ptext19:
  9917                           	opt stack 0
  9918  003CB6                     ___lbdiv:
  9919                           	opt stack 16
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;incstack = 0
  9923                           ;___lbdiv@dividend stored from wreg
  9924  003CB6  6FC9               	movwf	___lbdiv@dividend& (0+255),b
  9925  003CB8  0100               	movlb	0	; () banked
  9926  003CBA  6BCB               	clrf	___lbdiv@quotient& (0+255),b
  9927                           
  9928                           ; BSR set to: 0
  9929  003CBC  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9930  003CBE  E014               	bz	l10148
  9931                           
  9932                           ; BSR set to: 0
  9933  003CC0  0E01               	movlw	1
  9934  003CC2  6FCA               	movwf	___lbdiv@counter& (0+255),b
  9935  003CC4  D003               	goto	l10136
  9936  003CC6                     l10132:
  9937                           
  9938                           ; BSR set to: 0
  9939  003CC6  90D8               	bcf	status,0,c
  9940  003CC8  37C8               	rlcf	___lbdiv@divisor& (0+255),f,b
  9941                           
  9942                           ; BSR set to: 0
  9943  003CCA  2BCA               	incf	___lbdiv@counter& (0+255),f,b
  9944  003CCC                     l10136:
  9945                           
  9946                           ; BSR set to: 0
  9947  003CCC  AFC8               	btfss	___lbdiv@divisor& (0+255),7,b
  9948  003CCE  D7FB               	goto	l10132
  9949  003CD0                     l10138:
  9950                           
  9951                           ; BSR set to: 0
  9952  003CD0  90D8               	bcf	status,0,c
  9953  003CD2  37CB               	rlcf	___lbdiv@quotient& (0+255),f,b
  9954  003CD4  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9955  003CD6  5DC9               	subwf	___lbdiv@dividend& (0+255),w,b
  9956  003CD8  E303               	bnc	l10144
  9957                           
  9958                           ; BSR set to: 0
  9959  003CDA  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9960  003CDC  5FC9               	subwf	___lbdiv@dividend& (0+255),f,b
  9961                           
  9962                           ; BSR set to: 0
  9963  003CDE  81CB               	bsf	___lbdiv@quotient& (0+255),0,b
  9964  003CE0                     l10144:
  9965                           
  9966                           ; BSR set to: 0
  9967  003CE0  90D8               	bcf	status,0,c
  9968  003CE2  33C8               	rrcf	___lbdiv@divisor& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 0
  9971  003CE4  2FCA               	decfsz	___lbdiv@counter& (0+255),f,b
  9972  003CE6  D7F4               	goto	l10138
  9973  003CE8                     l10148:
  9974                           
  9975                           ; BSR set to: 0
  9976  003CE8  51CB               	movf	___lbdiv@quotient& (0+255),w,b
  9977                           
  9978                           ; BSR set to: 0
  9979  003CEA  0012               	return		;funcret
  9980  003CEC                     __end_of___lbdiv:
  9981                           	opt stack 0
  9982                           tblptru	equ	0xFF8
  9983                           tblptrh	equ	0xFF7
  9984                           tblptrl	equ	0xFF6
  9985                           tablat	equ	0xFF5
  9986                           prodl	equ	0xFF3
  9987                           intcon	equ	0xFF2
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           postdec1	equ	0xFE5
  9991                           fsr1l	equ	0xFE1
  9992                           indf2	equ	0xFDF
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function _moteApp_add16bToDataBuffer *****************
  9998 ;; Defined at:
  9999 ;;		line 1408 in file "../Includes/Board/MOTEapp.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  number          2    7[BANK0 ] unsigned int 
 10002 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : F/0
 10011 ;;		On exit  : F/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10014 ;;      Params:         0       3       0       0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10017 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10018 ;;Total ram usage:        3 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   12
 10021 ;; This function calls:
 10022 ;;		___lwdiv
 10023 ;;		___lwmod
 10024 ;; This function is called by:
 10025 ;;		_moteRunningProcess
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text20
 10030  001C2C                     __ptext20:
 10031                           	opt stack 0
 10032  001C2C                     _moteApp_add16bToDataBuffer:
 10033                           	opt stack 16
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;MOTEapp.c: 1410: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;incstack = 0
 10040  001C2C  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10041  001C2E  0FA2               	addlw	low (_dataBuffer+4)
 10042  001C30  6ED9               	movwf	fsr2l,c
 10043  001C32  6ADA               	clrf	fsr2h,c
 10044  001C34  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10045  001C38  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10046  001C3C  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10047  001C3E  0E0A               	movlw	10
 10048  001C40  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10049  001C42  ECAB  F01D         	call	___lwmod	;wreg free
 10050  001C46  51C8               	movf	?___lwmod& (0+255),w,b
 10051  001C48  0F30               	addlw	48
 10052  001C4A  6EDF               	movwf	indf2,c
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;MOTEapp.c: 1411: number /= 10;
 10056  001C4C  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10057  001C50  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10058  001C54  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10059  001C56  0E0A               	movlw	10
 10060  001C58  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10061  001C5A  EC1C  F01D         	call	___lwdiv	;wreg free
 10062  001C5E  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10063  001C62  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;MOTEapp.c: 1412: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 10067  001C66  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10068  001C68  0FA1               	addlw	low (_dataBuffer+3)
 10069  001C6A  6ED9               	movwf	fsr2l,c
 10070  001C6C  6ADA               	clrf	fsr2h,c
 10071  001C6E  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10072  001C72  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10073  001C76  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10074  001C78  0E0A               	movlw	10
 10075  001C7A  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10076  001C7C  ECAB  F01D         	call	___lwmod	;wreg free
 10077  001C80  51C8               	movf	?___lwmod& (0+255),w,b
 10078  001C82  0F30               	addlw	48
 10079  001C84  6EDF               	movwf	indf2,c
 10080                           
 10081                           ;MOTEapp.c: 1413: number /= 10;
 10082  001C86  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10083  001C8A  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10084  001C8E  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10085  001C90  0E0A               	movlw	10
 10086  001C92  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10087  001C94  EC1C  F01D         	call	___lwdiv	;wreg free
 10088  001C98  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10089  001C9C  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;MOTEapp.c: 1414: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 10093  001CA0  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10094  001CA2  0FA0               	addlw	low (_dataBuffer+2)
 10095  001CA4  6ED9               	movwf	fsr2l,c
 10096  001CA6  6ADA               	clrf	fsr2h,c
 10097  001CA8  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10098  001CAC  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10099  001CB0  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10100  001CB2  0E0A               	movlw	10
 10101  001CB4  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10102  001CB6  ECAB  F01D         	call	___lwmod	;wreg free
 10103  001CBA  51C8               	movf	?___lwmod& (0+255),w,b
 10104  001CBC  0F30               	addlw	48
 10105  001CBE  6EDF               	movwf	indf2,c
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;MOTEapp.c: 1415: number /= 10;
 10109  001CC0  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10110  001CC4  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10111  001CC8  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10112  001CCA  0E0A               	movlw	10
 10113  001CCC  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10114  001CCE  EC1C  F01D         	call	___lwdiv	;wreg free
 10115  001CD2  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10116  001CD6  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10117                           
 10118                           ;MOTEapp.c: 1416: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 10119  001CDA  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10120  001CDC  0F9F               	addlw	low (_dataBuffer+1)
 10121  001CDE  6ED9               	movwf	fsr2l,c
 10122  001CE0  6ADA               	clrf	fsr2h,c
 10123  001CE2  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10124  001CE6  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10125  001CEA  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10126  001CEC  0E0A               	movlw	10
 10127  001CEE  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10128  001CF0  ECAB  F01D         	call	___lwmod	;wreg free
 10129  001CF4  51C8               	movf	?___lwmod& (0+255),w,b
 10130  001CF6  0F30               	addlw	48
 10131  001CF8  6EDF               	movwf	indf2,c
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;MOTEapp.c: 1417: number /= 10;
 10135  001CFA  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10136  001CFE  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10137  001D02  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10138  001D04  0E0A               	movlw	10
 10139  001D06  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10140  001D08  EC1C  F01D         	call	___lwdiv	;wreg free
 10141  001D0C  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10142  001D10  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;MOTEapp.c: 1418: dataBuffer[bufferLocation] = '0' + (number % 10);
 10146  001D14  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10147  001D16  0F9E               	addlw	low _dataBuffer
 10148  001D18  6ED9               	movwf	fsr2l,c
 10149  001D1A  6ADA               	clrf	fsr2h,c
 10150  001D1C  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10151  001D20  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10152  001D24  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10153  001D26  0E0A               	movlw	10
 10154  001D28  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10155  001D2A  ECAB  F01D         	call	___lwmod	;wreg free
 10156  001D2E  51C8               	movf	?___lwmod& (0+255),w,b
 10157  001D30  0F30               	addlw	48
 10158  001D32  6EDF               	movwf	indf2,c
 10159                           
 10160                           ; BSR set to: 0
 10161  001D34  0012               	return		;funcret
 10162  001D36                     __end_of_moteApp_add16bToDataBuffer:
 10163                           	opt stack 0
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodl	equ	0xFF3
 10169                           intcon	equ	0xFF2
 10170                           postinc0	equ	0xFEE
 10171                           wreg	equ	0xFE8
 10172                           postdec1	equ	0xFE5
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           fsr2h	equ	0xFDA
 10176                           fsr2l	equ	0xFD9
 10177                           status	equ	0xFD8
 10178                           
 10179 ;; *************** function _moteApp_GoToSleep *****************
 10180 ;; Defined at:
 10181 ;;		line 1292 in file "../Includes/Board/MOTEapp.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;		None
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  status          1   15[BANK0 ] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      unsigned char 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : F/0
 10192 ;;		On exit  : F/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0
 10196 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10198 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10199 ;;Total ram usage:        1 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   18
 10202 ;; This function calls:
 10203 ;;		_EUSART_FlushBuffer
 10204 ;;		_EUSART_Initialize
 10205 ;;		_PIN_MANAGER_Initialize
 10206 ;;		_modemResync
 10207 ;;		_modemSleep
 10208 ;;		_oled_displayOff
 10209 ;;		_oled_init
 10210 ;; This function is called by:
 10211 ;;		_moteRunningProcess
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text21
 10216  003214                     __ptext21:
 10217                           	opt stack 0
 10218  003214                     _moteApp_GoToSleep:
 10219                           	opt stack 10
 10220  003214                     l696:
 10221                           
 10222                           ; BSR set to: 0
 10223  003214  A282               	btfss	3970,1,c	;volatile
 10224  003216  D7FE               	goto	l696
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;MOTEapp.c: 1296: modemSleep();
 10228  003218  EC56  F020         	call	_modemSleep	;wreg free
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;MOTEapp.c: 1297: oled_displayOff(1);
 10232  00321C  0E01               	movlw	1
 10233  00321E  ECBB  F020         	call	_oled_displayOff
 10234                           
 10235                           ;MOTEapp.c: 1298: ADCON0bits.ADON = 0;
 10236  003222  90C2               	bcf	4034,0,c	;volatile
 10237                           
 10238                           ;MOTEapp.c: 1299: INTCONbits.GIE = 0;
 10239  003224  9EF2               	bcf	intcon,7,c	;volatile
 10240                           
 10241                           ;MOTEapp.c: 1300: GIE = 0;
 10242  003226  9EF2               	bcf	intcon,7,c	;volatile
 10243                           
 10244                           ;MOTEapp.c: 1301: PEIE = 0;
 10245  003228  9CF2               	bcf	intcon,6,c	;volatile
 10246                           
 10247                           ;MOTEapp.c: 1303: ANSELAbits.ANSA0 = 1;
 10248  00322A  010F               	movlb	15	; () banked
 10249  00322C  815B               	bsf	91,0,b	;volatile
 10250                           
 10251                           ; BSR set to: 15
 10252                           ;MOTEapp.c: 1305: PIE2bits.C1IE = 1;
 10253  00322E  8CA0               	bsf	4000,6,c	;volatile
 10254                           
 10255                           ; BSR set to: 15
 10256                           ;MOTEapp.c: 1306: IOCCbits.IOCC0 = 1;
 10257  003230  8087               	bsf	3975,0,c	;volatile
 10258                           
 10259                           ; BSR set to: 15
 10260                           ;MOTEapp.c: 1307: IOCCbits.IOCC1 = 1;
 10261  003232  8287               	bsf	3975,1,c	;volatile
 10262                           
 10263                           ; BSR set to: 15
 10264                           ;MOTEapp.c: 1308: IOCCbits.IOCC2 = 1;
 10265  003234  8487               	bsf	3975,2,c	;volatile
 10266                           
 10267                           ; BSR set to: 15
 10268                           ;MOTEapp.c: 1309: INTCONbits.IOCIE = 1;
 10269  003236  86F2               	bsf	intcon,3,c	;volatile
 10270                           
 10271                           ; BSR set to: 15
 10272  003238  5082               	movf	3970,w,c	;volatile
 10273                           
 10274                           ; BSR set to: 15
 10275  00323A  5082               	movf	3970,w,c	;volatile
 10276                           
 10277                           ; BSR set to: 15
 10278  00323C  5082               	movf	3970,w,c	;volatile
 10279                           
 10280                           ; BSR set to: 15
 10281                           ;MOTEapp.c: 1314: if (periodicState)
 10282  00323E  0100               	movlb	0	; () banked
 10283  003240  51F9               	movf	_periodicState& (0+255),w,b
 10284  003242  E001               	bz	l699
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;MOTEapp.c: 1315: {
 10288                           ;MOTEapp.c: 1316: WDTCONbits.SWDTEN = 1;
 10289  003244  80D1               	bsf	4049,0,c	;volatile
 10290  003246                     l699:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;MOTEapp.c: 1317: }
 10294                           ;MOTEapp.c: 1318: INTCONbits.IOCIF = 0;
 10295  003246  90F2               	bcf	intcon,0,c	;volatile
 10296                           
 10297                           ;MOTEapp.c: 1319: PIR2bits.C1IF = 0;
 10298  003248  9CA1               	bcf	4001,6,c	;volatile
 10299                           
 10300                           ;MOTEapp.c: 1320: __nop();
 10301  00324A  F000               	nop	
 10302  00324C  0003               	sleep		;# 
 10303                           
 10304                           ;MOTEapp.c: 1322: __nop();
 10305  00324E  F000               	nop	
 10306                           
 10307                           ;MOTEapp.c: 1324: WDTCONbits.SWDTEN = 0;
 10308  003250  90D1               	bcf	4049,0,c	;volatile
 10309                           
 10310                           ;MOTEapp.c: 1325: EUSART_FlushBuffer();
 10311  003252  ECC2  F01E         	call	_EUSART_FlushBuffer	;wreg free
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;MOTEapp.c: 1327: INTCONbits.IOCIE = 0;
 10315  003256  96F2               	bcf	intcon,3,c	;volatile
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;MOTEapp.c: 1328: IOCCbits.IOCC0 = 0;
 10319  003258  9087               	bcf	3975,0,c	;volatile
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;MOTEapp.c: 1329: IOCCbits.IOCC1 = 0;
 10323  00325A  9287               	bcf	3975,1,c	;volatile
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;MOTEapp.c: 1330: IOCCbits.IOCC2 = 0;
 10327  00325C  9487               	bcf	3975,2,c	;volatile
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;MOTEapp.c: 1331: PIE2bits.C1IE = 0;
 10331  00325E  9CA0               	bcf	4000,6,c	;volatile
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;MOTEapp.c: 1332: GIE = 1;
 10335  003260  8EF2               	bsf	intcon,7,c	;volatile
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;MOTEapp.c: 1334: PIN_MANAGER_Initialize();
 10339  003262  EC66  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 10340                           
 10341                           ; BSR set to: 15
 10342                           ;MOTEapp.c: 1335: EUSART_Initialize();
 10343  003266  EC04  F01F         	call	_EUSART_Initialize	;wreg free
 10344                           
 10345                           ;MOTEapp.c: 1337: if (INTCONbits.IOCIF)
 10346  00326A  A0F2               	btfss	intcon,0,c	;volatile
 10347  00326C  D005               	goto	l10534
 10348                           
 10349                           ;MOTEapp.c: 1338: {
 10350                           ;MOTEapp.c: 1339: INTCONbits.IOCIF = 0;
 10351  00326E  90F2               	bcf	intcon,0,c	;volatile
 10352                           
 10353                           ;MOTEapp.c: 1340: status = 1;
 10354  003270  0E01               	movlw	1
 10355  003272  0100               	movlb	0	; () banked
 10356  003274  6FD7               	movwf	moteApp_GoToSleep@status& (0+255),b
 10357                           
 10358                           ;MOTEapp.c: 1341: }
 10359  003276  D004               	goto	l10538
 10360  003278                     l10534:
 10361                           
 10362                           ;MOTEapp.c: 1347: else
 10363                           ;MOTEapp.c: 1348: {
 10364                           ;MOTEapp.c: 1349: secTicker = 10;
 10365  003278  0E0A               	movlw	10
 10366  00327A  0100               	movlb	0	; () banked
 10367  00327C  6F99               	movwf	_secTicker& (0+255),b
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;MOTEapp.c: 1350: status = 0;
 10371  00327E  6BD7               	clrf	moteApp_GoToSleep@status& (0+255),b
 10372  003280                     l10538:
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;MOTEapp.c: 1351: }
 10376                           ;MOTEapp.c: 1352: ANSELAbits.ANSA0 = 0;
 10377  003280  010F               	movlb	15	; () banked
 10378  003282  915B               	bcf	91,0,b	;volatile
 10379                           
 10380                           ; BSR set to: 15
 10381                           ;MOTEapp.c: 1353: oled_displayOff(0);
 10382  003284  0E00               	movlw	0
 10383  003286  ECBB  F020         	call	_oled_displayOff
 10384                           
 10385                           ;MOTEapp.c: 1354: oled_init();
 10386  00328A  ECE6  F01F         	call	_oled_init	;wreg free
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;MOTEapp.c: 1356: modemResync();
 10390  00328E  EC12  F01B         	call	_modemResync	;wreg free
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;MOTEapp.c: 1357: return status;
 10394  003292  51D7               	movf	moteApp_GoToSleep@status& (0+255),w,b
 10395                           
 10396                           ; BSR set to: 0
 10397  003294  0012               	return		;funcret
 10398  003296                     __end_of_moteApp_GoToSleep:
 10399                           	opt stack 0
 10400                           tblptru	equ	0xFF8
 10401                           tblptrh	equ	0xFF7
 10402                           tblptrl	equ	0xFF6
 10403                           tablat	equ	0xFF5
 10404                           prodl	equ	0xFF3
 10405                           intcon	equ	0xFF2
 10406                           postinc0	equ	0xFEE
 10407                           wreg	equ	0xFE8
 10408                           postdec1	equ	0xFE5
 10409                           fsr1l	equ	0xFE1
 10410                           indf2	equ	0xFDF
 10411                           fsr2h	equ	0xFDA
 10412                           fsr2l	equ	0xFD9
 10413                           status	equ	0xFD8
 10414                           
 10415 ;; *************** function _oled_init *****************
 10416 ;; Defined at:
 10417 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : F/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10434 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10435 ;;Total ram usage:        0 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:   17
 10438 ;; This function calls:
 10439 ;;		_oled_clear
 10440 ;;		_oled_devInit
 10441 ;;		_oled_setDisplay
 10442 ;;		_oled_setFont
 10443 ;; This function is called by:
 10444 ;;		_main
 10445 ;;		_moteApp_GoToSleep
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text22
 10450  003FCC                     __ptext22:
 10451                           	opt stack 0
 10452  003FCC                     _oled_init:
 10453                           	opt stack 13
 10454                           
 10455                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;incstack = 0
 10459  003FCC  9493               	bcf	3987,2,c	;volatile
 10460                           
 10461                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
 10462  003FCE  9893               	bcf	3987,4,c	;volatile
 10463                           
 10464                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
 10465  003FD0  9A93               	bcf	3987,5,c	;volatile
 10466                           
 10467                           ;SSD1306oLED.c: 315: oled_devInit();
 10468  003FD2  ECED  F011         	call	_oled_devInit	;wreg free
 10469                           
 10470                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
 10471  003FD6  0E00               	movlw	0
 10472  003FD8  EC94  F020         	call	_oled_setDisplay
 10473                           
 10474                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
 10475  003FDC  0E49               	movlw	low _OledFont0
 10476  003FDE  0100               	movlb	0	; () banked
 10477  003FE0  6FC8               	movwf	oled_setFont@font& (0+255),b
 10478  003FE2  0E76               	movlw	high _OledFont0
 10479  003FE4  6FC9               	movwf	(oled_setFont@font+1)& (0+255),b
 10480  003FE6  ECB2  F020         	call	_oled_setFont	;wreg free
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;SSD1306oLED.c: 319: oled_clear();
 10484  003FEA  EF72  F020         	goto	_oled_clear	;wreg free
 10485  003FEE                     __end_of_oled_init:
 10486                           	opt stack 0
 10487                           tblptru	equ	0xFF8
 10488                           tblptrh	equ	0xFF7
 10489                           tblptrl	equ	0xFF6
 10490                           tablat	equ	0xFF5
 10491                           prodl	equ	0xFF3
 10492                           intcon	equ	0xFF2
 10493                           postinc0	equ	0xFEE
 10494                           wreg	equ	0xFE8
 10495                           postdec1	equ	0xFE5
 10496                           fsr1l	equ	0xFE1
 10497                           indf2	equ	0xFDF
 10498                           fsr2h	equ	0xFDA
 10499                           fsr2l	equ	0xFD9
 10500                           status	equ	0xFD8
 10501                           
 10502 ;; *************** function _oled_setFont *****************
 10503 ;; Defined at:
 10504 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10507 ;;		 -> OledFont0(768), 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;		None
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      void 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0
 10514 ;; Tracked objects:
 10515 ;;		On entry : F/0
 10516 ;;		On exit  : F/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10519 ;;      Params:         0       2       0       0       0       0       0       0       0
 10520 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10522 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10523 ;;Total ram usage:        2 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:   11
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_oled_init
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text23
 10534  004164                     __ptext23:
 10535                           	opt stack 0
 10536  004164                     _oled_setFont:
 10537                           	opt stack 18
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;SSD1306oLED.c: 220: if(font!=0)
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;incstack = 0
 10544  004164  51C8               	movf	oled_setFont@font& (0+255),w,b
 10545  004166  11C9               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 10546  004168  B4D8               	btfsc	status,2,c
 10547  00416A  0012               	return	
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;SSD1306oLED.c: 221: {
 10551                           ;SSD1306oLED.c: 222: selectedFont=font;
 10552  00416C  C0C8  F0F5         	movff	oled_setFont@font,_selectedFont
 10553  004170  C0C9  F0F6         	movff	oled_setFont@font+1,_selectedFont+1
 10554                           
 10555                           ; BSR set to: 0
 10556  004174  0012               	return		;funcret
 10557  004176                     __end_of_oled_setFont:
 10558                           	opt stack 0
 10559                           tblptru	equ	0xFF8
 10560                           tblptrh	equ	0xFF7
 10561                           tblptrl	equ	0xFF6
 10562                           tablat	equ	0xFF5
 10563                           prodl	equ	0xFF3
 10564                           intcon	equ	0xFF2
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           postdec1	equ	0xFE5
 10568                           fsr1l	equ	0xFE1
 10569                           indf2	equ	0xFDF
 10570                           fsr2h	equ	0xFDA
 10571                           fsr2l	equ	0xFD9
 10572                           status	equ	0xFD8
 10573                           
 10574 ;; *************** function _oled_setDisplay *****************
 10575 ;; Defined at:
 10576 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  displayType     1    wreg     enum E6298
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  displayType     1    2[BANK0 ] enum E6298
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0
 10591 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10593 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10594 ;;Total ram usage:        1 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:   13
 10597 ;; This function calls:
 10598 ;;		_oled_writeCommand
 10599 ;; This function is called by:
 10600 ;;		_oled_init
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text24
 10605  004128                     __ptext24:
 10606                           	opt stack 0
 10607  004128                     _oled_setDisplay:
 10608                           	opt stack 16
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;incstack = 0
 10612                           ;oled_setDisplay@displayType stored from wreg
 10613  004128  0100               	movlb	0	; () banked
 10614  00412A  6FCA               	movwf	oled_setDisplay@displayType& (0+255),b
 10615                           
 10616                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
 10617  00412C  0EA6               	movlw	166
 10618  00412E  27CA               	addwf	oled_setDisplay@displayType& (0+255),f,b
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
 10622  004130  988A               	bcf	3978,4,c	;volatile
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
 10626  004132  51CA               	movf	oled_setDisplay@displayType& (0+255),w,b
 10627  004134  ECF7  F020         	call	_oled_writeCommand
 10628                           
 10629                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
 10630  004138  888A               	bsf	3978,4,c	;volatile
 10631  00413A  0012               	return		;funcret
 10632  00413C                     __end_of_oled_setDisplay:
 10633                           	opt stack 0
 10634                           tblptru	equ	0xFF8
 10635                           tblptrh	equ	0xFF7
 10636                           tblptrl	equ	0xFF6
 10637                           tablat	equ	0xFF5
 10638                           prodl	equ	0xFF3
 10639                           intcon	equ	0xFF2
 10640                           postinc0	equ	0xFEE
 10641                           wreg	equ	0xFE8
 10642                           postdec1	equ	0xFE5
 10643                           fsr1l	equ	0xFE1
 10644                           indf2	equ	0xFDF
 10645                           fsr2h	equ	0xFDA
 10646                           fsr2l	equ	0xFD9
 10647                           status	equ	0xFD8
 10648                           
 10649 ;; *************** function _oled_devInit *****************
 10650 ;; Defined at:
 10651 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10667 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10668 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10669 ;;Total ram usage:        1 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:   13
 10672 ;; This function calls:
 10673 ;;		_oled_writeCommand
 10674 ;; This function is called by:
 10675 ;;		_oled_init
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text25
 10680  0023DA                     __ptext25:
 10681                           	opt stack 0
 10682  0023DA                     _oled_devInit:
 10683                           	opt stack 16
 10684                           
 10685                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
 10686                           
 10687                           ;incstack = 0
 10688  0023DA  888A               	bsf	3978,4,c	;volatile
 10689                           
 10690                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
 10691  0023DC  8A8A               	bsf	3978,5,c	;volatile
 10692                           
 10693                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
 10694  0023DE  848A               	bsf	3978,2,c	;volatile
 10695                           
 10696                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10697  0023E0  0E50               	movlw	80
 10698  0023E2                     u10587:
 10699  0023E2  2EE8               	decfsz	wreg,f,c
 10700  0023E4  D7FE               	goto	u10587
 10701                           
 10702                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
 10703  0023E6  948A               	bcf	3978,2,c	;volatile
 10704                           
 10705                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10706  0023E8  0E04               	movlw	4
 10707  0023EA  0100               	movlb	0	; () banked
 10708  0023EC  6FCA               	movwf	??_oled_devInit& (0+255),b
 10709  0023EE  0E1C               	movlw	28
 10710  0023F0                     u10597:
 10711  0023F0  2EE8               	decfsz	wreg,f,c
 10712  0023F2  D7FE               	goto	u10597
 10713  0023F4  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10714  0023F6  D7FC               	goto	u10597
 10715  0023F8  D000               	nop2	
 10716                           
 10717                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
 10718  0023FA  848A               	bsf	3978,2,c	;volatile
 10719                           
 10720                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
 10721  0023FC  988A               	bcf	3978,4,c	;volatile
 10722                           
 10723                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10724  0023FE  0E04               	movlw	4
 10725  002400  0100               	movlb	0	; () banked
 10726  002402  6FCA               	movwf	??_oled_devInit& (0+255),b
 10727  002404  0E1C               	movlw	28
 10728  002406                     u10607:
 10729  002406  2EE8               	decfsz	wreg,f,c
 10730  002408  D7FE               	goto	u10607
 10731  00240A  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10732  00240C  D7FC               	goto	u10607
 10733  00240E  D000               	nop2	
 10734                           
 10735                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
 10736  002410  9A8A               	bcf	3978,5,c	;volatile
 10737                           
 10738                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10739  002412  0E04               	movlw	4
 10740  002414  0100               	movlb	0	; () banked
 10741  002416  6FCA               	movwf	??_oled_devInit& (0+255),b
 10742  002418  0E1C               	movlw	28
 10743  00241A                     u10617:
 10744  00241A  2EE8               	decfsz	wreg,f,c
 10745  00241C  D7FE               	goto	u10617
 10746  00241E  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10747  002420  D7FC               	goto	u10617
 10748  002422  D000               	nop2	
 10749                           
 10750                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
 10751  002424  0EAE               	movlw	174
 10752  002426  ECF7  F020         	call	_oled_writeCommand
 10753                           
 10754                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
 10755  00242A  0ED5               	movlw	213
 10756  00242C  ECF7  F020         	call	_oled_writeCommand
 10757                           
 10758                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
 10759  002430  0E80               	movlw	128
 10760  002432  ECF7  F020         	call	_oled_writeCommand
 10761                           
 10762                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
 10763  002436  0EA8               	movlw	168
 10764  002438  ECF7  F020         	call	_oled_writeCommand
 10765                           
 10766                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
 10767  00243C  0E1F               	movlw	31
 10768  00243E  ECF7  F020         	call	_oled_writeCommand
 10769                           
 10770                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
 10771  002442  0ED3               	movlw	211
 10772  002444  ECF7  F020         	call	_oled_writeCommand
 10773                           
 10774                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
 10775  002448  0E00               	movlw	0
 10776  00244A  ECF7  F020         	call	_oled_writeCommand
 10777                           
 10778                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
 10779  00244E  0E8D               	movlw	141
 10780  002450  ECF7  F020         	call	_oled_writeCommand
 10781                           
 10782                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
 10783  002454  0E14               	movlw	20
 10784  002456  ECF7  F020         	call	_oled_writeCommand
 10785                           
 10786                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
 10787  00245A  0E40               	movlw	64
 10788  00245C  ECF7  F020         	call	_oled_writeCommand
 10789                           
 10790                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
 10791  002460  0EA6               	movlw	166
 10792  002462  ECF7  F020         	call	_oled_writeCommand
 10793                           
 10794                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
 10795  002466  0EA4               	movlw	164
 10796  002468  ECF7  F020         	call	_oled_writeCommand
 10797                           
 10798                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
 10799  00246C  0EA0               	movlw	160
 10800  00246E  ECF7  F020         	call	_oled_writeCommand
 10801                           
 10802                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
 10803  002472  0EC0               	movlw	192
 10804  002474  ECF7  F020         	call	_oled_writeCommand
 10805                           
 10806                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
 10807  002478  0EDA               	movlw	218
 10808  00247A  ECF7  F020         	call	_oled_writeCommand
 10809                           
 10810                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
 10811  00247E  0E42               	movlw	66
 10812  002480  ECF7  F020         	call	_oled_writeCommand
 10813                           
 10814                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
 10815  002484  0E81               	movlw	129
 10816  002486  ECF7  F020         	call	_oled_writeCommand
 10817                           
 10818                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
 10819  00248A  0E7F               	movlw	127
 10820  00248C  ECF7  F020         	call	_oled_writeCommand
 10821                           
 10822                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
 10823  002490  0ED9               	movlw	217
 10824  002492  ECF7  F020         	call	_oled_writeCommand
 10825                           
 10826                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
 10827  002496  0EF1               	movlw	241
 10828  002498  ECF7  F020         	call	_oled_writeCommand
 10829                           
 10830                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
 10831  00249C  0EDB               	movlw	219
 10832  00249E  ECF7  F020         	call	_oled_writeCommand
 10833                           
 10834                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
 10835  0024A2  0E40               	movlw	64
 10836  0024A4  ECF7  F020         	call	_oled_writeCommand
 10837                           
 10838                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
 10839  0024A8  0EAF               	movlw	175
 10840  0024AA  ECF7  F020         	call	_oled_writeCommand
 10841                           
 10842                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
 10843  0024AE  888A               	bsf	3978,4,c	;volatile
 10844  0024B0  0012               	return		;funcret
 10845  0024B2                     __end_of_oled_devInit:
 10846                           	opt stack 0
 10847                           tblptru	equ	0xFF8
 10848                           tblptrh	equ	0xFF7
 10849                           tblptrl	equ	0xFF6
 10850                           tablat	equ	0xFF5
 10851                           prodl	equ	0xFF3
 10852                           intcon	equ	0xFF2
 10853                           postinc0	equ	0xFEE
 10854                           wreg	equ	0xFE8
 10855                           postdec1	equ	0xFE5
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           fsr2h	equ	0xFDA
 10859                           fsr2l	equ	0xFD9
 10860                           status	equ	0xFD8
 10861                           
 10862 ;; *************** function _oled_displayOff *****************
 10863 ;; Defined at:
 10864 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  state           1    wreg     unsigned char 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;  state           1    2[BANK0 ] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  1    wreg      void 
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10878 ;;      Params:         0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10882 ;;Total ram usage:        1 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:   13
 10885 ;; This function calls:
 10886 ;;		_oled_writeCommand
 10887 ;; This function is called by:
 10888 ;;		_moteApp_GoToSleep
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text26
 10893  004176                     __ptext26:
 10894                           	opt stack 0
 10895  004176                     _oled_displayOff:
 10896                           	opt stack 14
 10897                           
 10898                           ;incstack = 0
 10899                           ;oled_displayOff@state stored from wreg
 10900  004176  0100               	movlb	0	; () banked
 10901  004178  6FCA               	movwf	oled_displayOff@state& (0+255),b
 10902                           
 10903                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
 10904  00417A  988A               	bcf	3978,4,c	;volatile
 10905                           
 10906                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
 10907  00417C  51CA               	movf	oled_displayOff@state& (0+255),w,b
 10908  00417E  08AF               	sublw	175
 10909  004180  ECF7  F020         	call	_oled_writeCommand
 10910                           
 10911                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
 10912  004184  888A               	bsf	3978,4,c	;volatile
 10913  004186  0012               	return		;funcret
 10914  004188                     __end_of_oled_displayOff:
 10915                           	opt stack 0
 10916                           tblptru	equ	0xFF8
 10917                           tblptrh	equ	0xFF7
 10918                           tblptrl	equ	0xFF6
 10919                           tablat	equ	0xFF5
 10920                           prodl	equ	0xFF3
 10921                           intcon	equ	0xFF2
 10922                           postinc0	equ	0xFEE
 10923                           wreg	equ	0xFE8
 10924                           postdec1	equ	0xFE5
 10925                           fsr1l	equ	0xFE1
 10926                           indf2	equ	0xFDF
 10927                           fsr2h	equ	0xFDA
 10928                           fsr2l	equ	0xFD9
 10929                           status	equ	0xFD8
 10930                           
 10931 ;; *************** function _modemSleep *****************
 10932 ;; Defined at:
 10933 ;;		line 146 in file "../Includes/Board/MOTEapp.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : F/0
 10944 ;;		On exit  : F/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10950 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:   14
 10954 ;; This function calls:
 10955 ;;		_moteApp_delayms
 10956 ;;		_sendCommand
 10957 ;; This function is called by:
 10958 ;;		_moteApp_GoToSleep
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text27
 10963  0040AC                     __ptext27:
 10964                           	opt stack 0
 10965  0040AC                     _modemSleep:
 10966                           	opt stack 13
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;MOTEapp.c: 148: sendCommand("sys sleep 999999999");
 10970                           
 10971                           ;incstack = 0
 10972  0040AC  0E72               	movlw	low STR_22
 10973  0040AE  6FC9               	movwf	sendCommand@string& (0+255),b
 10974  0040B0  0E7A               	movlw	high STR_22
 10975  0040B2  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 10976  0040B4  EC30  F01F         	call	_sendCommand	;wreg free
 10977  0040B8                     l310:
 10978  0040B8  B89D               	btfsc	3997,4,c	;volatile
 10979  0040BA  D7FE               	goto	l310
 10980                           
 10981                           ;MOTEapp.c: 151: moteApp_delayms(20);
 10982  0040BC  0100               	movlb	0	; () banked
 10983  0040BE  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 10984  0040C0  0E14               	movlw	20
 10985  0040C2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 10986  0040C4  EF97  F01F         	goto	_moteApp_delayms	;wreg free
 10987  0040C8                     __end_of_modemSleep:
 10988                           	opt stack 0
 10989                           tblptru	equ	0xFF8
 10990                           tblptrh	equ	0xFF7
 10991                           tblptrl	equ	0xFF6
 10992                           tablat	equ	0xFF5
 10993                           prodl	equ	0xFF3
 10994                           intcon	equ	0xFF2
 10995                           postinc0	equ	0xFEE
 10996                           wreg	equ	0xFE8
 10997                           postdec1	equ	0xFE5
 10998                           fsr1l	equ	0xFE1
 10999                           indf2	equ	0xFDF
 11000                           fsr2h	equ	0xFDA
 11001                           fsr2l	equ	0xFD9
 11002                           status	equ	0xFD8
 11003                           
 11004 ;; *************** function _modemResync *****************
 11005 ;; Defined at:
 11006 ;;		line 109 in file "../Includes/Board/MOTEapp.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;		None
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 11011 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  1    wreg      void 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : F/0
 11018 ;;		On exit  : F/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0
 11022 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11024 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11025 ;;Total ram usage:        3 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:   14
 11028 ;; This function calls:
 11029 ;;		_MOTEapp_getModemResponse
 11030 ;;		_moteApp_delayms
 11031 ;;		_sendCommand
 11032 ;; This function is called by:
 11033 ;;		_main
 11034 ;;		_moteApp_GoToSleep
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text28
 11039  003624                     __ptext28:
 11040                           	opt stack 0
 11041  003624                     _modemResync:
 11042                           	opt stack 13
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;MOTEapp.c: 111: bool escapeEvent = 0;
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;incstack = 0
 11049  003624  6BCF               	clrf	modemResync@escapeEvent& (0+255),b
 11050                           
 11051                           ;MOTEapp.c: 112: uint16_t escapeCounter = 0;
 11052  003626  6BCD               	clrf	modemResync@escapeCounter& (0+255),b
 11053  003628  6BCE               	clrf	(modemResync@escapeCounter+1)& (0+255),b
 11054                           
 11055                           ;MOTEapp.c: 120: TXSTAbits.TXEN = 0;
 11056  00362A  9AAC               	bcf	4012,5,c	;volatile
 11057                           
 11058                           ;MOTEapp.c: 121: LATCbits.LATC6 = 0;
 11059  00362C  9C8B               	bcf	3979,6,c	;volatile
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;MOTEapp.c: 122: moteApp_delayms(10);
 11063  00362E  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11064  003630  0E0A               	movlw	10
 11065  003632  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11066  003634  EC97  F01F         	call	_moteApp_delayms	;wreg free
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;MOTEapp.c: 127: TXSTAbits.TXEN = 1;
 11070  003638  8AAC               	bsf	4012,5,c	;volatile
 11071                           
 11072                           ;MOTEapp.c: 128: moteApp_delayms(5);
 11073  00363A  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11074  00363C  0E05               	movlw	5
 11075  00363E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11076  003640  EC97  F01F         	call	_moteApp_delayms	;wreg free
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;MOTEapp.c: 130: TXREG = 0x55;
 11080  003644  0E55               	movlw	85
 11081  003646  6EAD               	movwf	4013,c	;volatile
 11082  003648                     l298:
 11083                           
 11084                           ; BSR set to: 0
 11085  003648  A2AC               	btfss	4012,1,c	;volatile
 11086  00364A  D7FE               	goto	l298
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;MOTEapp.c: 134: sendCommand("z");
 11090  00364C  0EFD               	movlw	low STR_21
 11091  00364E  6FC9               	movwf	sendCommand@string& (0+255),b
 11092  003650  0E7F               	movlw	high STR_21
 11093  003652  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11094  003654  EC30  F01F         	call	_sendCommand	;wreg free
 11095                           
 11096                           ;MOTEapp.c: 136: moteApp_delayms(40);
 11097  003658  0100               	movlb	0	; () banked
 11098  00365A  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11099  00365C  0E28               	movlw	40
 11100  00365E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11101  003660  EC97  F01F         	call	_moteApp_delayms	;wreg free
 11102                           
 11103                           ;MOTEapp.c: 137: while (escapeEvent)
 11104  003664  D00E               	goto	l301
 11105  003666                     l10008:
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;MOTEapp.c: 138: {
 11109                           ;MOTEapp.c: 139: if(MOTEapp_getModemResponse())
 11110  003666  ECF7  F01C         	call	_MOTEapp_getModemResponse	;wreg free
 11111  00366A  0900               	iorlw	0
 11112  00366C  E003               	bz	l10012
 11113  00366E                     l10010:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;MOTEapp.c: 140: escapeEvent = 1;
 11117  00366E  0E01               	movlw	1
 11118  003670  6FCF               	movwf	modemResync@escapeEvent& (0+255),b
 11119  003672  D007               	goto	l301
 11120  003674                     l10012:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;MOTEapp.c: 141: else if (++escapeCounter > 5000)
 11124  003674  4BCD               	infsnz	modemResync@escapeCounter& (0+255),f,b
 11125  003676  2BCE               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
 11126  003678  0E89               	movlw	137
 11127  00367A  5DCD               	subwf	modemResync@escapeCounter& (0+255),w,b
 11128  00367C  0E13               	movlw	19
 11129  00367E  59CE               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
 11130  003680  E2F6               	bc	l10010
 11131  003682                     l301:
 11132                           
 11133                           ; BSR set to: 0
 11134  003682  51CF               	movf	modemResync@escapeEvent& (0+255),w,b
 11135  003684  E1F0               	bnz	l10008
 11136                           
 11137                           ; BSR set to: 0
 11138  003686  0012               	return		;funcret
 11139  003688                     __end_of_modemResync:
 11140                           	opt stack 0
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodl	equ	0xFF3
 11146                           intcon	equ	0xFF2
 11147                           postinc0	equ	0xFEE
 11148                           wreg	equ	0xFE8
 11149                           postdec1	equ	0xFE5
 11150                           fsr1l	equ	0xFE1
 11151                           indf2	equ	0xFDF
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _MOTEapp_getModemResponse *****************
 11157 ;; Defined at:
 11158 ;;		line 1192 in file "../Includes/Board/MOTEapp.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 11163 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      unsigned char 
 11166 ;; Registers used:
 11167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : E/1
 11170 ;;		On exit  : F/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11173 ;;      Params:         0       0       0       0       0       0       0       0       0
 11174 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11176 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11177 ;;Total ram usage:        2 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:   12
 11180 ;; This function calls:
 11181 ;;		_EUSART_Read
 11182 ;; This function is called by:
 11183 ;;		_modemResync
 11184 ;;		_moteHandler
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text29
 11189  0039EE                     __ptext29:
 11190                           	opt stack 0
 11191  0039EE                     _MOTEapp_getModemResponse:
 11192                           	opt stack 14
 11193                           
 11194                           ;MOTEapp.c: 1194: bool terminatorReceived = 0;
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;incstack = 0
 11198  0039EE  0100               	movlb	0	; () banked
 11199  0039F0  6BC9               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;MOTEapp.c: 1195: if ((eusartRxCount))
 11203  0039F2  5023               	movf	_eusartRxCount,w,c	;volatile
 11204  0039F4  E01F               	bz	l9910
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;MOTEapp.c: 1198: bufferByte = EUSART_Read();
 11208                           
 11209                           ; BSR set to: 0
 11210  0039F6  ECAB  F01E         	call	_EUSART_Read	;wreg free
 11211  0039FA  6FCA               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;MOTEapp.c: 1200: if (bufferByte == 0x0D)
 11215  0039FC  0E0D               	movlw	13
 11216  0039FE  19CA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11217  003A00  E10B               	bnz	l9902
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;MOTEapp.c: 1201: {
 11221                           ;MOTEapp.c: 1202: modemResonseBuffer[modemBufferIndex] = 0x00;
 11222  003A02  0E80               	movlw	low _modemResonseBuffer
 11223  003A04  2429               	addwf	_modemBufferIndex,w,c
 11224  003A06  6ED9               	movwf	fsr2l,c
 11225  003A08  6ADA               	clrf	fsr2h,c
 11226  003A0A  0E01               	movlw	high _modemResonseBuffer
 11227  003A0C  22DA               	addwfc	fsr2h,f,c
 11228  003A0E  6ADF               	clrf	indf2,c
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;MOTEapp.c: 1203: terminatorReceived = 1;
 11232  003A10  0E01               	movlw	1
 11233  003A12  6FC9               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;MOTEapp.c: 1204: modemBufferIndex = 0;
 11237  003A14  6A29               	clrf	_modemBufferIndex,c
 11238                           
 11239                           ;MOTEapp.c: 1205: }
 11240  003A16  D00E               	goto	l9910
 11241  003A18                     l9902:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;MOTEapp.c: 1206: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 11245  003A18  51CA               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11246  003A1A  E00C               	bz	l9910
 11247                           
 11248                           ; BSR set to: 0
 11249  003A1C  0E0A               	movlw	10
 11250  003A1E  19CA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11251  003A20  E009               	bz	l9910
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;MOTEapp.c: 1210: else
 11255                           ;MOTEapp.c: 1211: {
 11256                           ;MOTEapp.c: 1212: modemResonseBuffer[modemBufferIndex] = bufferByte;
 11257  003A22  0E80               	movlw	low _modemResonseBuffer
 11258  003A24  2429               	addwf	_modemBufferIndex,w,c
 11259  003A26  6ED9               	movwf	fsr2l,c
 11260  003A28  6ADA               	clrf	fsr2h,c
 11261  003A2A  0E01               	movlw	high _modemResonseBuffer
 11262  003A2C  22DA               	addwfc	fsr2h,f,c
 11263  003A2E  C0CA  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;MOTEapp.c: 1214: modemBufferIndex++;
 11267  003A32  2A29               	incf	_modemBufferIndex,f,c
 11268  003A34                     l9910:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;MOTEapp.c: 1215: }
 11272                           ;MOTEapp.c: 1216: }
 11273                           ;MOTEapp.c: 1217: return terminatorReceived;
 11274  003A34  51C9               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
 11275                           
 11276                           ; BSR set to: 0
 11277  003A36  0012               	return		;funcret
 11278  003A38                     __end_of_MOTEapp_getModemResponse:
 11279                           	opt stack 0
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           postinc0	equ	0xFEE
 11287                           wreg	equ	0xFE8
 11288                           postdec1	equ	0xFE5
 11289                           fsr1l	equ	0xFE1
 11290                           indf2	equ	0xFDF
 11291                           fsr2h	equ	0xFDA
 11292                           fsr2l	equ	0xFD9
 11293                           status	equ	0xFD8
 11294                           
 11295 ;; *************** function _EUSART_FlushBuffer *****************
 11296 ;; Defined at:
 11297 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;		None
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  index           1    0[BANK0 ] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  1    wreg      void 
 11304 ;; Registers used:
 11305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : F/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0
 11312 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11314 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11315 ;;Total ram usage:        1 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:   11
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_moteApp_GoToSleep
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text30
 11326  003D84                     __ptext30:
 11327                           	opt stack 0
 11328  003D84                     _EUSART_FlushBuffer:
 11329                           	opt stack 16
 11330                           
 11331                           ;eusart.c: 204: uint8_t index;
 11332                           ;eusart.c: 205: for (index=0; index < 64; index++)
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;incstack = 0
 11336  003D84  0100               	movlb	0	; () banked
 11337  003D86  6BC8               	clrf	EUSART_FlushBuffer@index& (0+255),b
 11338  003D88                     l10070:
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;eusart.c: 206: {
 11342                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 11343  003D88  0E00               	movlw	low _eusartRxBuffer
 11344  003D8A  25C8               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
 11345  003D8C  6ED9               	movwf	fsr2l,c
 11346  003D8E  6ADA               	clrf	fsr2h,c
 11347  003D90  0E01               	movlw	high _eusartRxBuffer
 11348  003D92  22DA               	addwfc	fsr2h,f,c
 11349  003D94  6ADF               	clrf	indf2,c
 11350                           
 11351                           ; BSR set to: 0
 11352  003D96  2BC8               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 11353                           
 11354                           ; BSR set to: 0
 11355  003D98  0E3F               	movlw	63
 11356  003D9A  65C8               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 11357  003D9C  D7F5               	goto	l10070
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;eusart.c: 208: }
 11361                           ;eusart.c: 209: eusartRxHead = 0;
 11362  003D9E  6A24               	clrf	_eusartRxHead,c
 11363                           
 11364                           ;eusart.c: 210: eusartRxTail = 0;
 11365  003DA0  6A25               	clrf	_eusartRxTail,c
 11366                           
 11367                           ;eusart.c: 211: eusartRxCount = 0;
 11368  003DA2  6A23               	clrf	_eusartRxCount,c	;volatile
 11369                           
 11370                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 11371  003DA4  989D               	bcf	3997,4,c	;volatile
 11372                           
 11373                           ;eusart.c: 214: eusartTxHead = 0;
 11374  003DA6  6A27               	clrf	_eusartTxHead,c
 11375                           
 11376                           ;eusart.c: 215: eusartTxTail = 0;
 11377  003DA8  6A28               	clrf	_eusartTxTail,c
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 11381  003DAA  0E40               	movlw	64
 11382  003DAC  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 11383                           
 11384                           ; BSR set to: 0
 11385  003DAE  0C40               	retlw	64	;funcret
 11386  003DB0                     __end_of_EUSART_FlushBuffer:
 11387                           	opt stack 0
 11388                           tblptru	equ	0xFF8
 11389                           tblptrh	equ	0xFF7
 11390                           tblptrl	equ	0xFF6
 11391                           tablat	equ	0xFF5
 11392                           prodl	equ	0xFF3
 11393                           intcon	equ	0xFF2
 11394                           postinc0	equ	0xFEE
 11395                           wreg	equ	0xFE8
 11396                           postdec1	equ	0xFE5
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           fsr2h	equ	0xFDA
 11400                           fsr2l	equ	0xFD9
 11401                           status	equ	0xFD8
 11402                           
 11403 ;; *************** function _TMR2_ReadTimer *****************
 11404 ;; Defined at:
 11405 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  readVal         1    0[BANK0 ] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      unsigned char 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2
 11414 ;; Tracked objects:
 11415 ;;		On entry : F/0
 11416 ;;		On exit  : F/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0
 11420 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11422 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11423 ;;Total ram usage:        1 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:   11
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_moteRunningProcess
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text31
 11434  004206                     __ptext31:
 11435                           	opt stack 0
 11436  004206                     _TMR2_ReadTimer:
 11437                           	opt stack 17
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;tmr2.c: 88: uint8_t readVal;
 11441                           ;tmr2.c: 90: readVal = TMR2;
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;incstack = 0
 11445  004206  CFBC F0C8          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;tmr2.c: 92: return readVal;
 11449  00420A  51C8               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 11450                           
 11451                           ; BSR set to: 0
 11452  00420C  0012               	return		;funcret
 11453  00420E                     __end_of_TMR2_ReadTimer:
 11454                           	opt stack 0
 11455                           tblptru	equ	0xFF8
 11456                           tblptrh	equ	0xFF7
 11457                           tblptrl	equ	0xFF6
 11458                           tablat	equ	0xFF5
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           postinc0	equ	0xFEE
 11462                           wreg	equ	0xFE8
 11463                           postdec1	equ	0xFE5
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _ADC_TempConversion *****************
 11471 ;; Defined at:
 11472 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  tempRaw         1    wreg     enum E6179
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  tempRaw         1    7[BANK0 ] enum E6179
 11477 ;;  temp            1    8[BANK0 ] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      unsigned char 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : E/0
 11484 ;;		On exit  : F/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0
 11488 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11490 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11491 ;;Total ram usage:        2 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:   12
 11494 ;; This function calls:
 11495 ;;		___lwdiv
 11496 ;; This function is called by:
 11497 ;;		_test_adc
 11498 ;;		_moteHandler
 11499 ;;		_moteRunningProcess
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text32
 11504  003FEE                     __ptext32:
 11505                           	opt stack 0
 11506  003FEE                     _ADC_TempConversion:
 11507                           	opt stack 16
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;incstack = 0
 11511                           ;ADC_TempConversion@tempRaw stored from wreg
 11512  003FEE  0100               	movlb	0	; () banked
 11513  003FF0  6FCF               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 11514                           
 11515                           ;adc.c: 138: uint8_t temp;
 11516                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 11517  003FF2  0E06               	movlw	6
 11518  003FF4  25CF               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 11519  003FF6  6FC8               	movwf	___lwdiv@dividend& (0+255),b
 11520  003FF8  6BC9               	clrf	(___lwdiv@dividend+1)& (0+255),b
 11521  003FFA  0EFF               	movlw	255
 11522  003FFC  23C9               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 11523  003FFE  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 11524  004000  0E05               	movlw	5
 11525  004002  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 11526  004004  EC1C  F01D         	call	___lwdiv	;wreg free
 11527  004008  51C8               	movf	?___lwdiv& (0+255),w,b
 11528  00400A  6FD0               	movwf	ADC_TempConversion@temp& (0+255),b
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;adc.c: 141: return temp;
 11532  00400C  51D0               	movf	ADC_TempConversion@temp& (0+255),w,b
 11533                           
 11534                           ; BSR set to: 0
 11535  00400E  0012               	return		;funcret
 11536  004010                     __end_of_ADC_TempConversion:
 11537                           	opt stack 0
 11538                           tblptru	equ	0xFF8
 11539                           tblptrh	equ	0xFF7
 11540                           tblptrl	equ	0xFF6
 11541                           tablat	equ	0xFF5
 11542                           prodl	equ	0xFF3
 11543                           intcon	equ	0xFF2
 11544                           postinc0	equ	0xFEE
 11545                           wreg	equ	0xFE8
 11546                           postdec1	equ	0xFE5
 11547                           fsr1l	equ	0xFE1
 11548                           indf2	equ	0xFDF
 11549                           fsr2h	equ	0xFDA
 11550                           fsr2l	equ	0xFD9
 11551                           status	equ	0xFD8
 11552                           
 11553 ;; *************** function ___lwdiv *****************
 11554 ;; Defined at:
 11555 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  dividend        2    0[BANK0 ] unsigned int 
 11558 ;;  divisor         2    2[BANK0 ] unsigned int 
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;  quotient        2    5[BANK0 ] unsigned int 
 11561 ;;  counter         1    4[BANK0 ] unsigned char 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  2    0[BANK0 ] unsigned int 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : F/0
 11568 ;;		On exit  : F/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11571 ;;      Params:         0       4       0       0       0       0       0       0       0
 11572 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11574 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11575 ;;Total ram usage:        7 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:   11
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_moteApp_add16bToDataBuffer
 11582 ;;		_oled_putUint16
 11583 ;;		_ADC_TempConversion
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text33
 11588  003A38                     __ptext33:
 11589                           	opt stack 0
 11590  003A38                     ___lwdiv:
 11591                           	opt stack 16
 11592                           
 11593                           ; BSR set to: 0
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;incstack = 0
 11597  003A38  6BCD               	clrf	___lwdiv@quotient& (0+255),b
 11598  003A3A  6BCE               	clrf	(___lwdiv@quotient+1)& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601  003A3C  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11602  003A3E  11CB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11603  003A40  E01B               	bz	l2352
 11604                           
 11605                           ; BSR set to: 0
 11606  003A42  0E01               	movlw	1
 11607  003A44  6FCC               	movwf	___lwdiv@counter& (0+255),b
 11608  003A46  D004               	goto	l10178
 11609  003A48                     l10176:
 11610                           
 11611                           ; BSR set to: 0
 11612  003A48  90D8               	bcf	status,0,c
 11613  003A4A  37CA               	rlcf	___lwdiv@divisor& (0+255),f,b
 11614  003A4C  37CB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11615  003A4E  2BCC               	incf	___lwdiv@counter& (0+255),f,b
 11616  003A50                     l10178:
 11617                           
 11618                           ; BSR set to: 0
 11619  003A50  AFCB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11620  003A52  D7FA               	goto	l10176
 11621  003A54                     l10180:
 11622                           
 11623                           ; BSR set to: 0
 11624  003A54  90D8               	bcf	status,0,c
 11625  003A56  37CD               	rlcf	___lwdiv@quotient& (0+255),f,b
 11626  003A58  37CE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11627                           
 11628                           ; BSR set to: 0
 11629  003A5A  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11630  003A5C  5DC8               	subwf	___lwdiv@dividend& (0+255),w,b
 11631  003A5E  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11632  003A60  59C9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11633  003A62  E305               	bnc	l10188
 11634                           
 11635                           ; BSR set to: 0
 11636  003A64  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11637  003A66  5FC8               	subwf	___lwdiv@dividend& (0+255),f,b
 11638  003A68  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11639  003A6A  5BC9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11640                           
 11641                           ; BSR set to: 0
 11642  003A6C  81CD               	bsf	___lwdiv@quotient& (0+255),0,b
 11643  003A6E                     l10188:
 11644                           
 11645                           ; BSR set to: 0
 11646  003A6E  90D8               	bcf	status,0,c
 11647  003A70  33CB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11648  003A72  33CA               	rrcf	___lwdiv@divisor& (0+255),f,b
 11649                           
 11650                           ; BSR set to: 0
 11651  003A74  2FCC               	decfsz	___lwdiv@counter& (0+255),f,b
 11652  003A76  D7EE               	goto	l10180
 11653  003A78                     l2352:
 11654                           
 11655                           ; BSR set to: 0
 11656  003A78  C0CD  F0C8         	movff	___lwdiv@quotient,?___lwdiv
 11657  003A7C  C0CE  F0C9         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11658                           
 11659                           ; BSR set to: 0
 11660  003A80  0012               	return		;funcret
 11661  003A82                     __end_of___lwdiv:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           postinc0	equ	0xFEE
 11670                           wreg	equ	0xFE8
 11671                           postdec1	equ	0xFE5
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function _ADC_GetConversion *****************
 11679 ;; Defined at:
 11680 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  channel         1    wreg     enum E6179
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  channel         1    4[BANK0 ] enum E6179
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  2    0[BANK0 ] unsigned int 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0
 11689 ;; Tracked objects:
 11690 ;;		On entry : E/0
 11691 ;;		On exit  : F/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11694 ;;      Params:         0       2       0       0       0       0       0       0       0
 11695 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11696 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11697 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11698 ;;Total ram usage:        5 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:   11
 11701 ;; This function calls:
 11702 ;;		Nothing
 11703 ;; This function is called by:
 11704 ;;		_test_adc
 11705 ;;		_moteHandler
 11706 ;;		_moteRunningProcess
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text34
 11711  003BD2                     __ptext34:
 11712                           	opt stack 0
 11713  003BD2                     _ADC_GetConversion:
 11714                           	opt stack 17
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;incstack = 0
 11718                           ;ADC_GetConversion@channel stored from wreg
 11719  003BD2  0100               	movlb	0	; () banked
 11720  003BD4  6FCC               	movwf	ADC_GetConversion@channel& (0+255),b
 11721                           
 11722                           ;adc.c: 116: ADCON0bits.CHS = channel;
 11723  003BD6  C0CC  F0CA         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 11724  003BDA  47CA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11725  003BDC  47CA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11726  003BDE  50C2               	movf	4034,w,c	;volatile
 11727  003BE0  19CA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11728  003BE2  0B83               	andlw	-125
 11729  003BE4  19CA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11730  003BE6  6EC2               	movwf	4034,c	;volatile
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;adc.c: 119: ADCON0bits.ADON = 1;
 11734  003BE8  80C2               	bsf	4034,0,c	;volatile
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 11738  003BEA  0E14               	movlw	20
 11739  003BEC                     u10627:
 11740  003BEC  2EE8               	decfsz	wreg,f,c
 11741  003BEE  D7FE               	goto	u10627
 11742                           
 11743                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 11744  003BF0  82C2               	bsf	4034,1,c	;volatile
 11745  003BF2                     l1179:
 11746  003BF2  B2C2               	btfsc	4034,1,c	;volatile
 11747  003BF4  D7FE               	goto	l1179
 11748                           
 11749                           ;adc.c: 130: }
 11750                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 11751  003BF6  50C4               	movf	4036,w,c	;volatile
 11752  003BF8  0100               	movlb	0	; () banked
 11753  003BFA  6FCB               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 11754  003BFC  6BCA               	clrf	??_ADC_GetConversion& (0+255),b
 11755  003BFE  50C3               	movf	4035,w,c	;volatile
 11756  003C00  25CA               	addwf	??_ADC_GetConversion& (0+255),w,b
 11757  003C02  6FC8               	movwf	?_ADC_GetConversion& (0+255),b
 11758  003C04  0E00               	movlw	0
 11759  003C06  21CB               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 11760  003C08  6FC9               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763  003C0A  0012               	return		;funcret
 11764  003C0C                     __end_of_ADC_GetConversion:
 11765                           	opt stack 0
 11766                           tblptru	equ	0xFF8
 11767                           tblptrh	equ	0xFF7
 11768                           tblptrl	equ	0xFF6
 11769                           tablat	equ	0xFF5
 11770                           prodl	equ	0xFF3
 11771                           intcon	equ	0xFF2
 11772                           postinc0	equ	0xFEE
 11773                           wreg	equ	0xFE8
 11774                           postdec1	equ	0xFE5
 11775                           fsr1l	equ	0xFE1
 11776                           indf2	equ	0xFDF
 11777                           fsr2h	equ	0xFDA
 11778                           fsr2l	equ	0xFD9
 11779                           status	equ	0xFD8
 11780                           
 11781 ;; *************** function _moteJoiningProcess *****************
 11782 ;; Defined at:
 11783 ;;		line 265 in file "../Includes/Board/MOTEapp.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;  messageReady    1    wreg     unsigned char 
 11786 ;;  switchEvent     1   18[BANK0 ] unsigned char 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  messageReady    1   21[BANK0 ] unsigned char 
 11789 ;;  readDataRate    1   20[BANK0 ] unsigned char 
 11790 ;;  joiningCompl    1   19[BANK0 ] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      enum E6481
 11793 ;; Registers used:
 11794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : F/1
 11797 ;;		On exit  : F/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11800 ;;      Params:         0       1       0       0       0       0       0       0       0
 11801 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11803 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11804 ;;Total ram usage:        4 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:   17
 11807 ;; This function calls:
 11808 ;;		_DATAEE_WriteByte
 11809 ;;		_MOTEapp_SetADR
 11810 ;;		_MOTEapp_SetDataRate
 11811 ;;		_MOTEapp_WriteDataRate
 11812 ;;		_moteApp_delayms
 11813 ;;		_oled_clear
 11814 ;;		_oled_putString
 11815 ;;		_sendCommand
 11816 ;;		_strcmp
 11817 ;;		_strncmp
 11818 ;; This function is called by:
 11819 ;;		_moteHandler
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text35
 11824  001222                     __ptext35:
 11825                           	opt stack 0
 11826  001222                     _moteJoiningProcess:
 11827                           	opt stack 12
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;incstack = 0
 11831                           ;moteJoiningProcess@messageReady stored from wreg
 11832  001222  0100               	movlb	0	; () banked
 11833  001224  6FDD               	movwf	moteJoiningProcess@messageReady& (0+255),b
 11834                           
 11835                           ;MOTEapp.c: 267: bool joiningComplete = 0;
 11836  001226  6BDB               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;MOTEapp.c: 269: if (switchEvent)
 11840  001228  51DA               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
 11841  00122A  E101 D260          	bz	l11064
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;MOTEapp.c: 270: {
 11845                           ;MOTEapp.c: 271: activeState = moteComFailure;
 11846  00122E  0E0C               	movlw	12
 11847  001230  6F8D               	movwf	_activeState& (0+255),b
 11848  001232                     l351:
 11849  001232  A282               	btfss	3970,1,c	;volatile
 11850  001234  D7FE               	goto	l351
 11851  001236  D25B               	goto	l11064
 11852  001238                     l356:
 11853  001238  D7FF               	goto	l356
 11854  00123A                     l10866:
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;MOTEapp.c: 282: sendCommand("sys get ver");
 11858  00123A  0E8B               	movlw	low STR_29
 11859  00123C  6FC9               	movwf	sendCommand@string& (0+255),b
 11860  00123E  0E7E               	movlw	high STR_29
 11861  001240  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11862  001242  EC30  F01F         	call	_sendCommand	;wreg free
 11863                           
 11864                           ;MOTEapp.c: 283: moteApp_delayms(50);
 11865  001246  0100               	movlb	0	; () banked
 11866  001248  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11867  00124A  0E32               	movlw	50
 11868  00124C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11869  00124E  EC97  F01F         	call	_moteApp_delayms	;wreg free
 11870  001252                     l10870:
 11871                           
 11872                           ;MOTEapp.c: 284: activeState = moteReset;
 11873  001252  0E01               	movlw	1
 11874  001254  D020               	goto	L39
 11875  001256                     l10872:
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;MOTEapp.c: 287: if ( messageReady )
 11879  001256  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11880  001258  E101 D26D          	bz	l11066
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;MOTEapp.c: 288: {
 11884                           ;MOTEapp.c: 289: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
 11885  00125C  0E80               	movlw	low _modemResonseBuffer
 11886  00125E  6FC8               	movwf	strncmp@s1& (0+255),b
 11887  001260  0E01               	movlw	high _modemResonseBuffer
 11888  001262  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 11889  001264  0EEF               	movlw	low STR_30
 11890  001266  6FCA               	movwf	strncmp@s2& (0+255),b
 11891  001268  0E7F               	movlw	high STR_30
 11892  00126A  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 11893  00126C  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 11894  00126E  0E02               	movlw	2
 11895  001270  6FCC               	movwf	strncmp@len& (0+255),b
 11896  001272  ECAB  F01A         	call	_strncmp	;wreg free
 11897  001276  51C8               	movf	?_strncmp& (0+255),w,b
 11898  001278  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 11899  00127A  E10F               	bnz	l363
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;MOTEapp.c: 290: {
 11903                           ;MOTEapp.c: 291: sendCommand("mac join abp");
 11904  00127C  0EF6               	movlw	low STR_31
 11905  00127E  6FC9               	movwf	sendCommand@string& (0+255),b
 11906  001280  0E7D               	movlw	high STR_31
 11907  001282  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11908  001284  EC30  F01F         	call	_sendCommand	;wreg free
 11909                           
 11910                           ;MOTEapp.c: 292: moteApp_delayms(50);
 11911  001288  0100               	movlb	0	; () banked
 11912  00128A  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11913  00128C  0E32               	movlw	50
 11914  00128E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11915  001290  EC97  F01F         	call	_moteApp_delayms	;wreg free
 11916  001294                     l10880:
 11917                           
 11918                           ;MOTEapp.c: 293: activeState = moteCheckAbp;
 11919  001294  0E02               	movlw	2
 11920  001296                     L39:
 11921  001296  0100               	movlb	0	; () banked
 11922  001298  D20E               	goto	L48
 11923  00129A                     l363:
 11924                           
 11925                           ;MOTEapp.c: 295: else
 11926                           ;MOTEapp.c: 296: {
 11927                           ;MOTEapp.c: 298: activeState = moteStartup;
 11928  00129A  0100               	movlb	0	; () banked
 11929  00129C  6B8D               	clrf	_activeState& (0+255),b
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;MOTEapp.c: 299: }
 11933                           ;MOTEapp.c: 300: }
 11934                           ;MOTEapp.c: 301: break;
 11935  00129E  D24B               	goto	l11066
 11936  0012A0                     l10882:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;MOTEapp.c: 303: if ( messageReady )
 11940  0012A0  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11941  0012A2  E101 D248          	bz	l11066
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;MOTEapp.c: 304: {
 11945                           ;MOTEapp.c: 305: if(strcmp(modemResonseBuffer, "ok") == 0)
 11946  0012A6  0E80               	movlw	low _modemResonseBuffer
 11947  0012A8  6FC8               	movwf	strcmp@s1& (0+255),b
 11948  0012AA  0E01               	movlw	high _modemResonseBuffer
 11949  0012AC  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 11950  0012AE  0EF2               	movlw	low STR_32
 11951  0012B0  6FCA               	movwf	strcmp@s2& (0+255),b
 11952  0012B2  0E7F               	movlw	high STR_32
 11953  0012B4  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 11954  0012B6  ECC8  F018         	call	_strcmp	;wreg free
 11955  0012BA  51C8               	movf	?_strcmp& (0+255),w,b
 11956  0012BC  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 11957  0012BE  E102               	bnz	l10888
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;MOTEapp.c: 306: {
 11961                           ;MOTEapp.c: 307: activeState = moteWaitAbp;
 11962  0012C0  0E03               	movlw	3
 11963  0012C2  D1F9               	goto	L48
 11964  0012C4                     l10888:
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;MOTEapp.c: 309: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 11968  0012C4  0E80               	movlw	low _modemResonseBuffer
 11969  0012C6  6FC8               	movwf	strcmp@s1& (0+255),b
 11970  0012C8  0E01               	movlw	high _modemResonseBuffer
 11971  0012CA  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 11972  0012CC  0E66               	movlw	low STR_33
 11973  0012CE  6FCA               	movwf	strcmp@s2& (0+255),b
 11974  0012D0  0E7D               	movlw	high STR_33
 11975  0012D2  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 11976  0012D4  ECC8  F018         	call	_strcmp	;wreg free
 11977  0012D8  51C8               	movf	?_strcmp& (0+255),w,b
 11978  0012DA  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 11979  0012DC  E141               	bnz	l10908
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;MOTEapp.c: 310: {
 11983                           ;MOTEapp.c: 311: oled_clear();
 11984  0012DE  EC72  F020         	call	_oled_clear	;wreg free
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;MOTEapp.c: 312: oled_putString("ABP Join",1,0);
 11988  0012E2  0E5A               	movlw	low STR_34
 11989  0012E4  6FD5               	movwf	oled_putString@string& (0+255),b
 11990  0012E6  0E7F               	movlw	high STR_34
 11991  0012E8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 11992  0012EA  0E01               	movlw	1
 11993  0012EC  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 11994  0012EE  6BD8               	clrf	oled_putString@start_page& (0+255),b
 11995  0012F0  ECDF  F01A         	call	_oled_putString	;wreg free
 11996                           
 11997                           ;MOTEapp.c: 313: oled_putString("No Keys",2,1);
 11998  0012F4  0E9F               	movlw	low STR_35
 11999  0012F6  0100               	movlb	0	; () banked
 12000  0012F8  6FD5               	movwf	oled_putString@string& (0+255),b
 12001  0012FA  0E7F               	movlw	high STR_35
 12002  0012FC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12003  0012FE  0E02               	movlw	2
 12004  001300  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12005  001302  0E01               	movlw	1
 12006  001304  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12007  001306  ECDF  F01A         	call	_oled_putString	;wreg free
 12008                           
 12009                           ;MOTEapp.c: 314: moteApp_delayms(500);
 12010  00130A  0E01               	movlw	1
 12011  00130C  0100               	movlb	0	; () banked
 12012  00130E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12013  001310  0EF4               	movlw	244
 12014  001312  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12015  001314  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;MOTEapp.c: 315: oled_clear();
 12019  001318  EC72  F020         	call	_oled_clear	;wreg free
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;MOTEapp.c: 316: oled_putString("Trying OTAA",1,0);
 12023  00131C  0E73               	movlw	low STR_36
 12024  00131E  6FD5               	movwf	oled_putString@string& (0+255),b
 12025  001320  0E7E               	movlw	high STR_36
 12026  001322  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12027  001324  0E01               	movlw	1
 12028  001326  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12029  001328  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12030  00132A  ECDF  F01A         	call	_oled_putString	;wreg free
 12031                           
 12032                           ;MOTEapp.c: 317: oled_putString("Join",2,1);
 12033  00132E  0E14               	movlw	low (STR_57+5)
 12034  001330  0100               	movlb	0	; () banked
 12035  001332  6FD5               	movwf	oled_putString@string& (0+255),b
 12036  001334  0E7F               	movlw	high (STR_57+5)
 12037  001336  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12038  001338  0E02               	movlw	2
 12039  00133A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12040  00133C  0E01               	movlw	1
 12041  00133E  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12042  001340  ECDF  F01A         	call	_oled_putString	;wreg free
 12043                           
 12044                           ;MOTEapp.c: 318: moteApp_delayms(200);
 12045  001344  0100               	movlb	0	; () banked
 12046  001346  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12047  001348  0EC8               	movlw	200
 12048  00134A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12049  00134C  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;MOTEapp.c: 319: sendCommand("mac join otaa");
 12053  001350  0E4A               	movlw	low STR_38
 12054  001352  6FC9               	movwf	sendCommand@string& (0+255),b
 12055  001354  0E7D               	movlw	high STR_38
 12056  001356  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12057  001358  EC30  F01F         	call	_sendCommand	;wreg free
 12058  00135C                     l10906:
 12059                           
 12060                           ;MOTEapp.c: 320: activeState = moteCheckOtaa;
 12061  00135C  0E04               	movlw	4
 12062  00135E  D79B               	goto	L39
 12063  001360                     l10908:
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;MOTEapp.c: 322: else
 12067                           ;MOTEapp.c: 323: {
 12068                           ;MOTEapp.c: 324: sendCommand("mac join abp");
 12069  001360  0EF6               	movlw	low STR_31
 12070  001362  6FC9               	movwf	sendCommand@string& (0+255),b
 12071  001364  0E7D               	movlw	high STR_31
 12072  001366  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12073  001368  EC30  F01F         	call	_sendCommand	;wreg free
 12074  00136C  D793               	goto	l10880
 12075  00136E                     l10912:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;MOTEapp.c: 330: if ( messageReady )
 12079  00136E  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12080  001370  E101 D1E1          	bz	l11066
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;MOTEapp.c: 331: {
 12084                           ;MOTEapp.c: 332: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12085  001374  0E80               	movlw	low _modemResonseBuffer
 12086  001376  6FC8               	movwf	strcmp@s1& (0+255),b
 12087  001378  0E01               	movlw	high _modemResonseBuffer
 12088  00137A  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12089  00137C  0E3F               	movlw	low STR_40
 12090  00137E  6FCA               	movwf	strcmp@s2& (0+255),b
 12091  001380  0E7F               	movlw	high STR_40
 12092  001382  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12093  001384  ECC8  F018         	call	_strcmp	;wreg free
 12094  001388  51C8               	movf	?_strcmp& (0+255),w,b
 12095  00138A  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12096  00138C  E11C               	bnz	l10926
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;MOTEapp.c: 333: {
 12100                           ;MOTEapp.c: 334: oled_clear();
 12101  00138E  EC72  F020         	call	_oled_clear	;wreg free
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;MOTEapp.c: 335: oled_putString("ABP Join ",0,0);
 12105  001392  0EFB               	movlw	low STR_41
 12106  001394  6FD5               	movwf	oled_putString@string& (0+255),b
 12107  001396  0E7E               	movlw	high STR_41
 12108  001398  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12109  00139A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12110  00139C  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12111  00139E  ECDF  F01A         	call	_oled_putString	;wreg free
 12112                           
 12113                           ;MOTEapp.c: 336: oled_putString("Successful",0,1);
 12114  0013A2  0EC5               	movlw	low STR_42
 12115  0013A4  0100               	movlb	0	; () banked
 12116  0013A6  6FD5               	movwf	oled_putString@string& (0+255),b
 12117  0013A8  0E7E               	movlw	high STR_42
 12118  0013AA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12119  0013AC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12120  0013AE  0E01               	movlw	1
 12121  0013B0  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12122  0013B2  ECDF  F01A         	call	_oled_putString	;wreg free
 12123                           
 12124                           ;MOTEapp.c: 337: moteApp_delayms(250);
 12125  0013B6  0100               	movlb	0	; () banked
 12126  0013B8  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12127  0013BA  0EFA               	movlw	250
 12128  0013BC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12129  0013BE  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12130  0013C2                     l10924:
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;MOTEapp.c: 338: activeState = moteJoined;
 12134  0013C2  0E06               	movlw	6
 12135  0013C4  D178               	goto	L48
 12136  0013C6                     l10926:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;MOTEapp.c: 340: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12140  0013C6  0E80               	movlw	low _modemResonseBuffer
 12141  0013C8  6FC8               	movwf	strcmp@s1& (0+255),b
 12142  0013CA  0E01               	movlw	high _modemResonseBuffer
 12143  0013CC  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12144  0013CE  0ECC               	movlw	low STR_43
 12145  0013D0  6FCA               	movwf	strcmp@s2& (0+255),b
 12146  0013D2  0E7F               	movlw	high STR_43
 12147  0013D4  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12148  0013D6  ECC8  F018         	call	_strcmp	;wreg free
 12149  0013DA  51C8               	movf	?_strcmp& (0+255),w,b
 12150  0013DC  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12151  0013DE  E107               	bnz	l10932
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;MOTEapp.c: 341: {
 12155                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 12156  0013E0  0EF6               	movlw	low STR_31
 12157  0013E2  6FC9               	movwf	sendCommand@string& (0+255),b
 12158  0013E4  0E7D               	movlw	high STR_31
 12159  0013E6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12160  0013E8  EC30  F01F         	call	_sendCommand	;wreg free
 12161  0013EC  D753               	goto	l10880
 12162  0013EE                     l10932:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;MOTEapp.c: 345: else
 12166                           ;MOTEapp.c: 346: {
 12167                           ;MOTEapp.c: 347: sendCommand("mac reset");
 12168  0013EE  0E19               	movlw	low STR_45
 12169  0013F0  6FC9               	movwf	sendCommand@string& (0+255),b
 12170  0013F2  0E7F               	movlw	high STR_45
 12171  0013F4  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12172  0013F6  EC30  F01F         	call	_sendCommand	;wreg free
 12173  0013FA  D72B               	goto	l10870
 12174  0013FC                     l10936:
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;MOTEapp.c: 354: if ( messageReady )
 12178  0013FC  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12179  0013FE  E101 D19A          	bz	l11066
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;MOTEapp.c: 355: {
 12183                           ;MOTEapp.c: 356: if(strcmp(modemResonseBuffer, "ok") == 0)
 12184  001402  0E80               	movlw	low _modemResonseBuffer
 12185  001404  6FC8               	movwf	strcmp@s1& (0+255),b
 12186  001406  0E01               	movlw	high _modemResonseBuffer
 12187  001408  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12188  00140A  0EF2               	movlw	low STR_32
 12189  00140C  6FCA               	movwf	strcmp@s2& (0+255),b
 12190  00140E  0E7F               	movlw	high STR_32
 12191  001410  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12192  001412  ECC8  F018         	call	_strcmp	;wreg free
 12193  001416  51C8               	movf	?_strcmp& (0+255),w,b
 12194  001418  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12195  00141A  E102               	bnz	l10942
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;MOTEapp.c: 357: {
 12199                           ;MOTEapp.c: 358: activeState = moteWaitOtaa;
 12200  00141C  0E05               	movlw	5
 12201  00141E  D14B               	goto	L48
 12202  001420                     l10942:
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;MOTEapp.c: 360: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 12206  001420  0E80               	movlw	low _modemResonseBuffer
 12207  001422  6FC8               	movwf	strcmp@s1& (0+255),b
 12208  001424  0E01               	movlw	high _modemResonseBuffer
 12209  001426  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12210  001428  0E66               	movlw	low STR_33
 12211  00142A  6FCA               	movwf	strcmp@s2& (0+255),b
 12212  00142C  0E7D               	movlw	high STR_33
 12213  00142E  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12214  001430  ECC8  F018         	call	_strcmp	;wreg free
 12215  001434  51C8               	movf	?_strcmp& (0+255),w,b
 12216  001436  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12217  001438  E116               	bnz	l10952
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;MOTEapp.c: 361: {
 12221                           ;MOTEapp.c: 362: oled_clear();
 12222  00143A  EC72  F020         	call	_oled_clear	;wreg free
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 12226  00143E  0EDB               	movlw	low STR_48
 12227  001440  6FD5               	movwf	oled_putString@string& (0+255),b
 12228  001442  0E7E               	movlw	high STR_48
 12229  001444  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12230  001446  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12231  001448  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12232  00144A  ECDF  F01A         	call	_oled_putString	;wreg free
 12233                           
 12234                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 12235  00144E  0E36               	movlw	low STR_49
 12236  001450  0100               	movlb	0	; () banked
 12237  001452  6FD5               	movwf	oled_putString@string& (0+255),b
 12238  001454  0E7F               	movlw	high STR_49
 12239  001456  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12240  001458  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12241  00145A  0E01               	movlw	1
 12242  00145C  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12243  00145E  ECDF  F01A         	call	_oled_putString	;wreg free
 12244                           
 12245                           ;MOTEapp.c: 365: activeState = moteNeedKeys;
 12246  001462  0E0B               	movlw	11
 12247  001464  D718               	goto	L39
 12248  001466                     l10952:
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;MOTEapp.c: 367: else if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12252  001466  0E80               	movlw	low _modemResonseBuffer
 12253  001468  6FC8               	movwf	strcmp@s1& (0+255),b
 12254  00146A  0E01               	movlw	high _modemResonseBuffer
 12255  00146C  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12256  00146E  0E58               	movlw	low STR_50
 12257  001470  6FCA               	movwf	strcmp@s2& (0+255),b
 12258  001472  0E7D               	movlw	high STR_50
 12259  001474  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12260  001476  ECC8  F018         	call	_strcmp	;wreg free
 12261  00147A  51C8               	movf	?_strcmp& (0+255),w,b
 12262  00147C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12263  00147E  E107               	bnz	l10958
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;MOTEapp.c: 368: {
 12267                           ;MOTEapp.c: 369: sendCommand("mac join otaa");
 12268  001480  0E4A               	movlw	low STR_38
 12269  001482  6FC9               	movwf	sendCommand@string& (0+255),b
 12270  001484  0E7D               	movlw	high STR_38
 12271  001486  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12272  001488  EC30  F01F         	call	_sendCommand	;wreg free
 12273  00148C  D703               	goto	l10880
 12274  00148E                     l10958:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;MOTEapp.c: 372: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12278  00148E  0E80               	movlw	low _modemResonseBuffer
 12279  001490  6FC8               	movwf	strcmp@s1& (0+255),b
 12280  001492  0E01               	movlw	high _modemResonseBuffer
 12281  001494  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12282  001496  0EBA               	movlw	low STR_52
 12283  001498  6FCA               	movwf	strcmp@s2& (0+255),b
 12284  00149A  0E7E               	movlw	high STR_52
 12285  00149C  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12286  00149E  ECC8  F018         	call	_strcmp	;wreg free
 12287  0014A2  51C8               	movf	?_strcmp& (0+255),w,b
 12288  0014A4  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12289  0014A6  E101 D6F8          	bz	l363
 12290  0014AA  D145               	goto	l11066
 12291  0014AC                     l10962:
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;MOTEapp.c: 379: if ( messageReady )
 12295  0014AC  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12296  0014AE  E101 D142          	bz	l11066
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;MOTEapp.c: 380: {
 12300                           ;MOTEapp.c: 381: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12301  0014B2  0E80               	movlw	low _modemResonseBuffer
 12302  0014B4  6FC8               	movwf	strcmp@s1& (0+255),b
 12303  0014B6  0E01               	movlw	high _modemResonseBuffer
 12304  0014B8  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12305  0014BA  0E3F               	movlw	low STR_40
 12306  0014BC  6FCA               	movwf	strcmp@s2& (0+255),b
 12307  0014BE  0E7F               	movlw	high STR_40
 12308  0014C0  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12309  0014C2  ECC8  F018         	call	_strcmp	;wreg free
 12310  0014C6  51C8               	movf	?_strcmp& (0+255),w,b
 12311  0014C8  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12312  0014CA  E11C               	bnz	l10976
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;MOTEapp.c: 382: {
 12316                           ;MOTEapp.c: 383: oled_clear();
 12317  0014CC  EC72  F020         	call	_oled_clear	;wreg free
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;MOTEapp.c: 384: oled_putString("OTAA Join ",0,0);
 12321  0014D0  0EAF               	movlw	low STR_54
 12322  0014D2  6FD5               	movwf	oled_putString@string& (0+255),b
 12323  0014D4  0E7E               	movlw	high STR_54
 12324  0014D6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12325  0014D8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12326  0014DA  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12327  0014DC  ECDF  F01A         	call	_oled_putString	;wreg free
 12328                           
 12329                           ;MOTEapp.c: 385: oled_putString("Successful",0,1);
 12330  0014E0  0EC5               	movlw	low STR_42
 12331  0014E2  0100               	movlb	0	; () banked
 12332  0014E4  6FD5               	movwf	oled_putString@string& (0+255),b
 12333  0014E6  0E7E               	movlw	high STR_42
 12334  0014E8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12335  0014EA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12336  0014EC  0E01               	movlw	1
 12337  0014EE  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12338  0014F0  ECDF  F01A         	call	_oled_putString	;wreg free
 12339                           
 12340                           ;MOTEapp.c: 386: moteApp_delayms(500);
 12341  0014F4  0E01               	movlw	1
 12342  0014F6  0100               	movlb	0	; () banked
 12343  0014F8  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12344  0014FA  0EF4               	movlw	244
 12345  0014FC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12346  0014FE  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12347  001502  D75F               	goto	l10924
 12348  001504                     l10976:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;MOTEapp.c: 389: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12352  001504  0E80               	movlw	low _modemResonseBuffer
 12353  001506  6FC8               	movwf	strcmp@s1& (0+255),b
 12354  001508  0E01               	movlw	high _modemResonseBuffer
 12355  00150A  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12356  00150C  0ECC               	movlw	low STR_43
 12357  00150E  6FCA               	movwf	strcmp@s2& (0+255),b
 12358  001510  0E7F               	movlw	high STR_43
 12359  001512  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12360  001514  ECC8  F018         	call	_strcmp	;wreg free
 12361  001518  51C8               	movf	?_strcmp& (0+255),w,b
 12362  00151A  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12363  00151C  E124               	bnz	l10990
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;MOTEapp.c: 390: {
 12367                           ;MOTEapp.c: 391: oled_clear();
 12368  00151E  EC72  F020         	call	_oled_clear	;wreg free
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;MOTEapp.c: 392: oled_putString("OTAA Join",1,0);
 12372  001522  0E0F               	movlw	low STR_57
 12373  001524  6FD5               	movwf	oled_putString@string& (0+255),b
 12374  001526  0E7F               	movlw	high STR_57
 12375  001528  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12376  00152A  0E01               	movlw	1
 12377  00152C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12378  00152E  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12379  001530  ECDF  F01A         	call	_oled_putString	;wreg free
 12380                           
 12381                           ;MOTEapp.c: 393: oled_putString("Denied",2,1);
 12382  001534  0EC5               	movlw	low STR_58
 12383  001536  0100               	movlb	0	; () banked
 12384  001538  6FD5               	movwf	oled_putString@string& (0+255),b
 12385  00153A  0E7F               	movlw	high STR_58
 12386  00153C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12387  00153E  0E02               	movlw	2
 12388  001540  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12389  001542  0E01               	movlw	1
 12390  001544  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12391  001546  ECDF  F01A         	call	_oled_putString	;wreg free
 12392                           
 12393                           ;MOTEapp.c: 394: sendCommand("mac join otaa");
 12394  00154A  0E4A               	movlw	low STR_38
 12395  00154C  0100               	movlb	0	; () banked
 12396  00154E  6FC9               	movwf	sendCommand@string& (0+255),b
 12397  001550  0E7D               	movlw	high STR_38
 12398  001552  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12399  001554  EC30  F01F         	call	_sendCommand	;wreg free
 12400                           
 12401                           ;MOTEapp.c: 395: moteApp_delayms(100);
 12402  001558  0100               	movlb	0	; () banked
 12403  00155A  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12404  00155C  0E64               	movlw	100
 12405  00155E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12406  001560  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12407  001564  D6FB               	goto	l10906
 12408  001566                     l10990:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;MOTEapp.c: 398: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12412  001566  0E80               	movlw	low _modemResonseBuffer
 12413  001568  6FC8               	movwf	strcmp@s1& (0+255),b
 12414  00156A  0E01               	movlw	high _modemResonseBuffer
 12415  00156C  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12416  00156E  0EBA               	movlw	low STR_52
 12417  001570  6FCA               	movwf	strcmp@s2& (0+255),b
 12418  001572  0E7E               	movlw	high STR_52
 12419  001574  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12420  001576  ECC8  F018         	call	_strcmp	;wreg free
 12421  00157A  51C8               	movf	?_strcmp& (0+255),w,b
 12422  00157C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12423  00157E  E001 D0DA          	bnz	l11066
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;MOTEapp.c: 399: {
 12427                           ;MOTEapp.c: 400: oled_clear();
 12428  001582  EC72  F020         	call	_oled_clear	;wreg free
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;MOTEapp.c: 401: oled_putString("NO FREE",1,0);
 12432  001586  0E8F               	movlw	low STR_61
 12433  001588  6FD5               	movwf	oled_putString@string& (0+255),b
 12434  00158A  0E7F               	movlw	high STR_61
 12435  00158C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12436  00158E  0E01               	movlw	1
 12437  001590  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12438  001592  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12439  001594  ECDF  F01A         	call	_oled_putString	;wreg free
 12440                           
 12441                           ;MOTEapp.c: 402: oled_putString("CHANNEL",2,1);
 12442  001598  0E97               	movlw	low STR_62
 12443  00159A  0100               	movlb	0	; () banked
 12444  00159C  6FD5               	movwf	oled_putString@string& (0+255),b
 12445  00159E  0E7F               	movlw	high STR_62
 12446  0015A0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12447  0015A2  0E02               	movlw	2
 12448  0015A4  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12449  0015A6  0E01               	movlw	1
 12450  0015A8  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12451  0015AA  ECDF  F01A         	call	_oled_putString	;wreg free
 12452  0015AE  D675               	goto	l363
 12453  0015B0                     l11000:
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;MOTEapp.c: 408: sendCommand("mac get adr");
 12457  0015B0  0E7F               	movlw	low STR_63
 12458  0015B2  6FC9               	movwf	sendCommand@string& (0+255),b
 12459  0015B4  0E7E               	movlw	high STR_63
 12460  0015B6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12461  0015B8  EC30  F01F         	call	_sendCommand	;wreg free
 12462                           
 12463                           ;MOTEapp.c: 409: moteApp_delayms(100);
 12464  0015BC  0100               	movlb	0	; () banked
 12465  0015BE  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12466  0015C0  0E64               	movlw	100
 12467  0015C2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12468  0015C4  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;MOTEapp.c: 410: activeState = moteSetAdr;
 12472  0015C8  0E08               	movlw	8
 12473  0015CA  D075               	goto	L48
 12474  0015CC                     l11006:
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;MOTEapp.c: 413: if ( messageReady )
 12478  0015CC  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12479  0015CE  E101 D0B2          	bz	l11066
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;MOTEapp.c: 414: {
 12483                           ;MOTEapp.c: 415: if(strncmp(modemResonseBuffer, "on", 2) == 0)
 12484  0015D2  0E80               	movlw	low _modemResonseBuffer
 12485  0015D4  6FC8               	movwf	strncmp@s1& (0+255),b
 12486  0015D6  0E01               	movlw	high _modemResonseBuffer
 12487  0015D8  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12488  0015DA  0E0C               	movlw	low (STR_242+12)
 12489  0015DC  6FCA               	movwf	strncmp@s2& (0+255),b
 12490  0015DE  0E7D               	movlw	high (STR_242+12)
 12491  0015E0  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12492  0015E2  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12493  0015E4  0E02               	movlw	2
 12494  0015E6  6FCC               	movwf	strncmp@len& (0+255),b
 12495  0015E8  ECAB  F01A         	call	_strncmp	;wreg free
 12496  0015EC  51C8               	movf	?_strncmp& (0+255),w,b
 12497  0015EE  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12498  0015F0  E10C               	bnz	l11016
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;MOTEapp.c: 416: {
 12502                           ;MOTEapp.c: 417: MOTEapp_SetADR(1);
 12503  0015F2  0E01               	movlw	1
 12504  0015F4  EC0B  F021         	call	_MOTEapp_SetADR
 12505                           
 12506                           ;MOTEapp.c: 418: sendCommand("mac get dr");
 12507  0015F8  0ED0               	movlw	low STR_65
 12508  0015FA  0100               	movlb	0	; () banked
 12509  0015FC  6FC9               	movwf	sendCommand@string& (0+255),b
 12510  0015FE  0E7E               	movlw	high STR_65
 12511  001600  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12512  001602  EC30  F01F         	call	_sendCommand	;wreg free
 12513  001606                     l11014:
 12514                           
 12515                           ;MOTEapp.c: 419: activeState = moteGetDr;
 12516  001606  0E07               	movlw	7
 12517  001608  D646               	goto	L39
 12518  00160A                     l11016:
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;MOTEapp.c: 421: else if(strncmp(modemResonseBuffer, "off", 2) == 0)
 12522  00160A  0E80               	movlw	low _modemResonseBuffer
 12523  00160C  6FC8               	movwf	strncmp@s1& (0+255),b
 12524  00160E  0E01               	movlw	high _modemResonseBuffer
 12525  001610  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12526  001612  0E28               	movlw	low (STR_243+12)
 12527  001614  6FCA               	movwf	strncmp@s2& (0+255),b
 12528  001616  0E7C               	movlw	high (STR_243+12)
 12529  001618  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12530  00161A  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12531  00161C  0E02               	movlw	2
 12532  00161E  6FCC               	movwf	strncmp@len& (0+255),b
 12533  001620  ECAB  F01A         	call	_strncmp	;wreg free
 12534  001624  51C8               	movf	?_strncmp& (0+255),w,b
 12535  001626  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12536  001628  E001 D6CB          	bnz	l10924
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;MOTEapp.c: 422: {
 12540                           ;MOTEapp.c: 423: MOTEapp_SetADR(0);
 12541  00162C  0E00               	movlw	0
 12542  00162E  EC0B  F021         	call	_MOTEapp_SetADR
 12543                           
 12544                           ;MOTEapp.c: 424: sendCommand("mac get dr");
 12545  001632  0ED0               	movlw	low STR_65
 12546  001634  0100               	movlb	0	; () banked
 12547  001636  6FC9               	movwf	sendCommand@string& (0+255),b
 12548  001638  0E7E               	movlw	high STR_65
 12549  00163A  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12550  00163C  EC30  F01F         	call	_sendCommand	;wreg free
 12551  001640  D7E2               	goto	l11014
 12552  001642                     l11026:
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;MOTEapp.c: 434: if ( messageReady )
 12556  001642  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12557  001644  E078               	bz	l11066
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;MOTEapp.c: 435: {
 12561                           ;MOTEapp.c: 436: if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12562  001646  0E80               	movlw	low _modemResonseBuffer
 12563  001648  6FC8               	movwf	strcmp@s1& (0+255),b
 12564  00164A  0E01               	movlw	high _modemResonseBuffer
 12565  00164C  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12566  00164E  0E58               	movlw	low STR_50
 12567  001650  6FCA               	movwf	strcmp@s2& (0+255),b
 12568  001652  0E7D               	movlw	high STR_50
 12569  001654  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12570  001656  ECC8  F018         	call	_strcmp	;wreg free
 12571  00165A  51C8               	movf	?_strcmp& (0+255),w,b
 12572  00165C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12573  00165E  E107               	bnz	l11034
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;MOTEapp.c: 437: {
 12577                           ;MOTEapp.c: 438: sendCommand("mac get dr");
 12578  001660  0ED0               	movlw	low STR_65
 12579  001662  6FC9               	movwf	sendCommand@string& (0+255),b
 12580  001664  0E7E               	movlw	high STR_65
 12581  001666  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12582  001668  EC30  F01F         	call	_sendCommand	;wreg free
 12583  00166C  D7CC               	goto	l11014
 12584  00166E                     l11034:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;MOTEapp.c: 441: else
 12588                           ;MOTEapp.c: 442: {
 12589                           ;MOTEapp.c: 443: uint8_t readDataRate;
 12590                           ;MOTEapp.c: 444: readDataRate = modemResonseBuffer[0] - '0';
 12591  00166E  0101               	movlb	1	; () banked
 12592  001670  5180               	movf	_modemResonseBuffer& (0+255),w,b
 12593  001672  0FD0               	addlw	208
 12594  001674  0100               	movlb	0	; () banked
 12595  001676  6FDC               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12596                           
 12597                           ;MOTEapp.c: 445: if (readDataRate > 6)
 12598  001678  0E06               	movlw	6
 12599  00167A  65DC               	cpfsgt	moteJoiningProcess@readDataRate& (0+255),b
 12600  00167C  D002               	goto	l11038
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;MOTEapp.c: 446: readDataRate = 2;
 12604  00167E  0E02               	movlw	2
 12605  001680  6FDC               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12606  001682                     l11038:
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;MOTEapp.c: 447: MOTEapp_SetDataRate(readDataRate);
 12610  001682  51DC               	movf	moteJoiningProcess@readDataRate& (0+255),w,b
 12611  001684  EC07  F021         	call	_MOTEapp_SetDataRate
 12612                           
 12613                           ;MOTEapp.c: 448: MOTEapp_WriteDataRate();
 12614  001688  EC95  F010         	call	_MOTEapp_WriteDataRate	;wreg free
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;MOTEapp.c: 449: activeState = moteSetDr;
 12618  00168C  0E09               	movlw	9
 12619  00168E  D013               	goto	L48
 12620  001690                     l11044:
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;MOTEapp.c: 454: if ( messageReady )
 12624  001690  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12625  001692  E051               	bz	l11066
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;MOTEapp.c: 455: {
 12629                           ;MOTEapp.c: 456: if(strncmp(modemResonseBuffer, "ok", 2) == 0)
 12630  001694  0E80               	movlw	low _modemResonseBuffer
 12631  001696  6FC8               	movwf	strncmp@s1& (0+255),b
 12632  001698  0E01               	movlw	high _modemResonseBuffer
 12633  00169A  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12634  00169C  0EF2               	movlw	low STR_32
 12635  00169E  6FCA               	movwf	strncmp@s2& (0+255),b
 12636  0016A0  0E7F               	movlw	high STR_32
 12637  0016A2  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12638  0016A4  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12639  0016A6  0E02               	movlw	2
 12640  0016A8  6FCC               	movwf	strncmp@len& (0+255),b
 12641  0016AA  ECAB  F01A         	call	_strncmp	;wreg free
 12642  0016AE  51C8               	movf	?_strncmp& (0+255),w,b
 12643  0016B0  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12644  0016B2  E103               	bnz	l11050
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;MOTEapp.c: 457: {
 12648                           ;MOTEapp.c: 458: activeState = moteDoneDr;
 12649  0016B4  0E0A               	movlw	10
 12650  0016B6                     L48:
 12651  0016B6  6F8D               	movwf	_activeState& (0+255),b
 12652                           
 12653                           ;MOTEapp.c: 459: }
 12654  0016B8  D03E               	goto	l11066
 12655  0016BA                     l11050:
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;MOTEapp.c: 460: else
 12659                           ;MOTEapp.c: 461: {
 12660                           ;MOTEapp.c: 462: sendCommand("mac get dr");
 12661  0016BA  0ED0               	movlw	low STR_65
 12662  0016BC  6FC9               	movwf	sendCommand@string& (0+255),b
 12663  0016BE  0E7E               	movlw	high STR_65
 12664  0016C0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12665  0016C2  EC30  F01F         	call	_sendCommand	;wreg free
 12666  0016C6  D79F               	goto	l11014
 12667  0016C8                     l11054:
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;MOTEapp.c: 468: joiningComplete = 1;
 12671  0016C8  0E01               	movlw	1
 12672  0016CA  6FDB               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 12673                           
 12674                           ;MOTEapp.c: 469: break;
 12675  0016CC  D034               	goto	l11066
 12676  0016CE                     l11056:
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;MOTEapp.c: 474: DATAEE_WriteByte(0x00, 0x00);
 12680  0016CE  0E00               	movlw	0
 12681  0016D0  6BC8               	clrf	DATAEE_WriteByte@bData& (0+255),b
 12682  0016D2  EC06  F01E         	call	_DATAEE_WriteByte
 12683  0016D6                     l412:
 12684  0016D6  B082               	btfsc	3970,0,c	;volatile
 12685  0016D8  D002               	goto	l11060
 12686  0016DA  A282               	btfss	3970,1,c	;volatile
 12687  0016DC  D7FC               	goto	l412
 12688  0016DE                     l11060:
 12689                           
 12690                           ;MOTEapp.c: 476: moteApp_delayms(40);
 12691  0016DE  0100               	movlb	0	; () banked
 12692  0016E0  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12693  0016E2  0E28               	movlw	40
 12694  0016E4  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12695  0016E6  EC97  F01F         	call	_moteApp_delayms	;wreg free
 12696  0016EA  00FF               	reset		;# 
 12697                           
 12698                           ;MOTEapp.c: 479: break;
 12699  0016EC  D024               	goto	l11066
 12700  0016EE                     l11064:
 12701  0016EE  0100               	movlb	0	; () banked
 12702  0016F0  518D               	movf	_activeState& (0+255),w,b
 12703                           
 12704                           ; Switch size 1, requested type "speed"
 12705                           ; Number of cases is 13, Range of values is 0 to 12
 12706                           ; switch strategies available:
 12707                           ; Name         Instructions Cycles
 12708                           ; simple_byte           40    21 (average)
 12709                           ;	Chosen strategy is simple_byte
 12710  0016F2  E101 D5A2          	bz	l10866
 12711  0016F6  0A01               	xorlw	1	; case 1
 12712  0016F8  E101 D5AD          	bz	l10872
 12713  0016FC  0A03               	xorlw	3	; case 2
 12714  0016FE  E101 D5CF          	bz	l10882
 12715  001702  0A01               	xorlw	1	; case 3
 12716  001704  E101 D633          	bz	l10912
 12717  001708  0A07               	xorlw	7	; case 4
 12718  00170A  E101 D677          	bz	l10936
 12719  00170E  0A01               	xorlw	1	; case 5
 12720  001710  E101 D6CC          	bz	l10962
 12721  001714  0A03               	xorlw	3	; case 6
 12722  001716  E101 D74B          	bz	l11000
 12723  00171A  0A01               	xorlw	1	; case 7
 12724  00171C  E092               	bz	l11026
 12725  00171E  0A0F               	xorlw	15	; case 8
 12726  001720  E101 D754          	bz	l11006
 12727  001724  0A01               	xorlw	1	; case 9
 12728  001726  E0B4               	bz	l11044
 12729  001728  0A03               	xorlw	3	; case 10
 12730  00172A  E0CE               	bz	l11054
 12731  00172C  0A01               	xorlw	1	; case 11
 12732  00172E  E003               	bz	l11066
 12733  001730  0A07               	xorlw	7	; case 12
 12734  001732  E0CD               	bz	l11056
 12735  001734  D581               	goto	l356
 12736  001736                     l11066:
 12737                           
 12738                           ;MOTEapp.c: 481: return joiningComplete;
 12739  001736  0100               	movlb	0	; () banked
 12740  001738  51DB               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 12741                           
 12742                           ; BSR set to: 0
 12743  00173A  0012               	return		;funcret
 12744  00173C                     __end_of_moteJoiningProcess:
 12745                           	opt stack 0
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodl	equ	0xFF3
 12751                           intcon	equ	0xFF2
 12752                           postinc0	equ	0xFEE
 12753                           wreg	equ	0xFE8
 12754                           postdec1	equ	0xFE5
 12755                           fsr1l	equ	0xFE1
 12756                           indf2	equ	0xFDF
 12757                           fsr2h	equ	0xFDA
 12758                           fsr2l	equ	0xFD9
 12759                           status	equ	0xFD8
 12760                           
 12761 ;; *************** function _strncmp *****************
 12762 ;; Defined at:
 12763 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12766 ;;		 -> modemResonseBuffer(64), 
 12767 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12768 ;;		 -> STR_219(7), STR_217(7), STR_215(7), STR_212(7), 
 12769 ;;		 -> STR_70(3), STR_66(4), STR_64(3), STR_30(3), 
 12770 ;;  len             2    4[BANK0 ] unsigned int 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;		None
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  2    0[BANK0 ] int 
 12775 ;; Registers used:
 12776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12777 ;; Tracked objects:
 12778 ;;		On entry : F/0
 12779 ;;		On exit  : F/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12782 ;;      Params:         0       6       0       0       0       0       0       0       0
 12783 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12784 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12785 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12786 ;;Total ram usage:        7 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:   11
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_moteJoiningProcess
 12793 ;;		_moteRunningProcess
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text36
 12798  003556                     __ptext36:
 12799                           	opt stack 0
 12800  003556                     _strncmp:
 12801                           	opt stack 17
 12802                           
 12803                           ; BSR set to: 0
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;incstack = 0
 12807  003556  D029               	goto	l10286
 12808  003558                     l10276:
 12809                           
 12810                           ; BSR set to: 0
 12811  003558  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12812  00355C  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12813  003560  50DF               	movf	indf2,w,c
 12814  003562  E00D               	bz	l10280
 12815                           
 12816                           ; BSR set to: 0
 12817  003564  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12818  003568  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12819  00356C  50DF               	movf	indf2,w,c
 12820  00356E  6FCE               	movwf	??_strncmp& (0+255),b
 12821  003570  C0CA  FFF6         	movff	strncmp@s2,tblptrl
 12822  003574  C0CB  FFF7         	movff	strncmp@s2+1,tblptrh
 12823  003578                     	if	0	;tblptru may be non-zero
 12824  003578                     	endif
 12825  003578                     	if	0	;tblptru may be non-zero
 12826  003578                     	endif
 12827  003578  0008               	tblrd		*
 12828  00357A  18F5               	xorwf	tablat,w,c
 12829  00357C  E012               	bz	l10284
 12830  00357E                     l10280:
 12831                           
 12832                           ; BSR set to: 0
 12833  00357E  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12834  003582  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12835  003586  50DF               	movf	indf2,w,c
 12836  003588  6FCE               	movwf	??_strncmp& (0+255),b
 12837  00358A  C0CA  FFF6         	movff	strncmp@s2,tblptrl
 12838  00358E  C0CB  FFF7         	movff	strncmp@s2+1,tblptrh
 12839  003592                     	if	0	;tblptru may be non-zero
 12840  003592                     	endif
 12841  003592                     	if	0	;tblptru may be non-zero
 12842  003592                     	endif
 12843  003592  0008               	tblrd		*
 12844  003594  50F5               	movf	tablat,w,c
 12845  003596  5DCE               	subwf	??_strncmp& (0+255),w,b
 12846  003598  6FC8               	movwf	?_strncmp& (0+255),b
 12847  00359A  6BC9               	clrf	(?_strncmp+1)& (0+255),b
 12848  00359C  A0D8               	btfss	status,0,c
 12849  00359E  07C9               	decf	(?_strncmp+1)& (0+255),f,b
 12850  0035A0  0012               	return	
 12851  0035A2                     l10284:
 12852                           
 12853                           ; BSR set to: 0
 12854  0035A2  4BC8               	infsnz	strncmp@s1& (0+255),f,b
 12855  0035A4  2BC9               	incf	(strncmp@s1+1)& (0+255),f,b
 12856  0035A6  4BCA               	infsnz	strncmp@s2& (0+255),f,b
 12857  0035A8  2BCB               	incf	(strncmp@s2+1)& (0+255),f,b
 12858  0035AA                     l10286:
 12859                           
 12860                           ; BSR set to: 0
 12861  0035AA  07CC               	decf	strncmp@len& (0+255),f,b
 12862  0035AC  A0D8               	btfss	status,0,c
 12863  0035AE  07CD               	decf	(strncmp@len+1)& (0+255),f,b
 12864  0035B0  29CC               	incf	strncmp@len& (0+255),w,b
 12865  0035B2  E1D2               	bnz	l10276
 12866  0035B4  29CD               	incf	(strncmp@len+1)& (0+255),w,b
 12867  0035B6  E1D0               	bnz	l10276
 12868                           
 12869                           ; BSR set to: 0
 12870  0035B8  6BC8               	clrf	?_strncmp& (0+255),b
 12871  0035BA  6BC9               	clrf	(?_strncmp+1)& (0+255),b
 12872                           
 12873                           ; BSR set to: 0
 12874  0035BC  0012               	return		;funcret
 12875  0035BE                     __end_of_strncmp:
 12876                           	opt stack 0
 12877                           tblptru	equ	0xFF8
 12878                           tblptrh	equ	0xFF7
 12879                           tblptrl	equ	0xFF6
 12880                           tablat	equ	0xFF5
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           postinc0	equ	0xFEE
 12884                           wreg	equ	0xFE8
 12885                           postdec1	equ	0xFE5
 12886                           fsr1l	equ	0xFE1
 12887                           indf2	equ	0xFDF
 12888                           fsr2h	equ	0xFDA
 12889                           fsr2l	equ	0xFD9
 12890                           status	equ	0xFD8
 12891                           
 12892 ;; *************** function _strcmp *****************
 12893 ;; Defined at:
 12894 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12897 ;;		 -> modemResonseBuffer(64), 
 12898 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12899 ;;		 -> STR_211(3), STR_68(14), STR_60(11), STR_56(7), 
 12900 ;;		 -> STR_53(9), STR_52(11), STR_50(14), STR_47(14), 
 12901 ;;		 -> STR_46(3), STR_43(7), STR_40(9), STR_33(14), 
 12902 ;;		 -> STR_32(3), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  t1              1    8[BANK0 ] unsigned char 
 12905 ;;  t2              1    7[BANK0 ] unsigned char 
 12906 ;;  t0              1    6[BANK0 ] unsigned char 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  2    0[BANK0 ] int 
 12909 ;; Registers used:
 12910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12911 ;; Tracked objects:
 12912 ;;		On entry : F/0
 12913 ;;		On exit  : F/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12916 ;;      Params:         0       4       0       0       0       0       0       0       0
 12917 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12918 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12919 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12920 ;;Total ram usage:        9 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:   11
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_moteJoiningProcess
 12927 ;;		_moteRunningProcess
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text37
 12932  003190                     __ptext37:
 12933                           	opt stack 0
 12934  003190                     _strcmp:
 12935                           	opt stack 17
 12936  003190                     l10288:
 12937                           
 12938                           ; BSR set to: 0
 12939  003190  C0C8  FFD9         	movff	strcmp@s1,fsr2l
 12940  003194  C0C9  FFDA         	movff	strcmp@s1+1,fsr2h
 12941  003198  50DF               	movf	indf2,w,c
 12942  00319A  6FCE               	movwf	strcmp@t0& (0+255),b
 12943                           
 12944                           ; BSR set to: 0
 12945  00319C  C0CA  FFF6         	movff	strcmp@s2,tblptrl
 12946  0031A0  C0CB  FFF7         	movff	strcmp@s2+1,tblptrh
 12947  0031A4                     	if	0	;tblptru may be non-zero
 12948  0031A4                     	endif
 12949  0031A4                     	if	0	;tblptru may be non-zero
 12950  0031A4                     	endif
 12951  0031A4  0008               	tblrd		*
 12952  0031A6  CFF5 F0D0          	movff	tablat,strcmp@t1
 12953                           
 12954                           ; BSR set to: 0
 12955  0031AA  51CE               	movf	strcmp@t0& (0+255),w,b
 12956  0031AC  E02C               	bz	l10318
 12957                           
 12958                           ; BSR set to: 0
 12959  0031AE  0E02               	movlw	2
 12960  0031B0  27C8               	addwf	strcmp@s1& (0+255),f,b
 12961  0031B2  0E00               	movlw	0
 12962  0031B4  23C9               	addwfc	(strcmp@s1+1)& (0+255),f,b
 12963  0031B6  51D0               	movf	strcmp@t1& (0+255),w,b
 12964  0031B8  19CE               	xorwf	strcmp@t0& (0+255),w,b
 12965  0031BA  E125               	bnz	l10318
 12966                           
 12967                           ; BSR set to: 0
 12968  0031BC  EE2F F0FF          	lfsr	2,-1
 12969  0031C0  51C8               	movf	strcmp@s1& (0+255),w,b
 12970  0031C2  26D9               	addwf	fsr2l,f,c
 12971  0031C4  51C9               	movf	(strcmp@s1+1)& (0+255),w,b
 12972  0031C6  22DA               	addwfc	fsr2h,f,c
 12973  0031C8  50DF               	movf	indf2,w,c
 12974  0031CA  6FCF               	movwf	strcmp@t2& (0+255),b
 12975                           
 12976                           ; BSR set to: 0
 12977  0031CC  29CA               	incf	strcmp@s2& (0+255),w,b
 12978  0031CE  6FCC               	movwf	??_strcmp& (0+255),b
 12979  0031D0  0E00               	movlw	0
 12980  0031D2  21CB               	addwfc	(strcmp@s2+1)& (0+255),w,b
 12981  0031D4  6FCD               	movwf	(??_strcmp+1)& (0+255),b
 12982  0031D6  C0CC  FFF6         	movff	??_strcmp,tblptrl
 12983  0031DA  C0CD  FFF7         	movff	??_strcmp+1,tblptrh
 12984  0031DE                     	if	0	;tblptru may be non-zero
 12985  0031DE                     	endif
 12986  0031DE                     	if	0	;tblptru may be non-zero
 12987  0031DE                     	endif
 12988  0031DE  0008               	tblrd		*
 12989  0031E0  CFF5 F0D0          	movff	tablat,strcmp@t1
 12990                           
 12991                           ; BSR set to: 0
 12992  0031E4  51CF               	movf	strcmp@t2& (0+255),w,b
 12993  0031E6  E107               	bnz	l10310
 12994  0031E8                     l10306:
 12995                           
 12996                           ; BSR set to: 0
 12997  0031E8  51D0               	movf	strcmp@t1& (0+255),w,b
 12998  0031EA  5DCF               	subwf	strcmp@t2& (0+255),w,b
 12999  0031EC  6FC8               	movwf	?_strcmp& (0+255),b
 13000  0031EE  6BC9               	clrf	(?_strcmp+1)& (0+255),b
 13001  0031F0  A0D8               	btfss	status,0,c
 13002  0031F2  07C9               	decf	(?_strcmp+1)& (0+255),f,b
 13003  0031F4  0012               	return	
 13004  0031F6                     l10310:
 13005                           
 13006                           ; BSR set to: 0
 13007  0031F6  0E02               	movlw	2
 13008  0031F8  27CA               	addwf	strcmp@s2& (0+255),f,b
 13009  0031FA  0E00               	movlw	0
 13010  0031FC  23CB               	addwfc	(strcmp@s2+1)& (0+255),f,b
 13011  0031FE  51CF               	movf	strcmp@t2& (0+255),w,b
 13012  003200  19D0               	xorwf	strcmp@t1& (0+255),w,b
 13013  003202  E1F2               	bnz	l10306
 13014  003204  D7C5               	goto	l10288
 13015  003206                     l10318:
 13016                           
 13017                           ; BSR set to: 0
 13018  003206  51D0               	movf	strcmp@t1& (0+255),w,b
 13019  003208  5DCE               	subwf	strcmp@t0& (0+255),w,b
 13020  00320A  6FC8               	movwf	?_strcmp& (0+255),b
 13021  00320C  6BC9               	clrf	(?_strcmp+1)& (0+255),b
 13022  00320E  A0D8               	btfss	status,0,c
 13023  003210  07C9               	decf	(?_strcmp+1)& (0+255),f,b
 13024                           
 13025                           ; BSR set to: 0
 13026  003212  0012               	return		;funcret
 13027  003214                     __end_of_strcmp:
 13028                           	opt stack 0
 13029                           tblptru	equ	0xFF8
 13030                           tblptrh	equ	0xFF7
 13031                           tblptrl	equ	0xFF6
 13032                           tablat	equ	0xFF5
 13033                           prodl	equ	0xFF3
 13034                           intcon	equ	0xFF2
 13035                           postinc0	equ	0xFEE
 13036                           wreg	equ	0xFE8
 13037                           postdec1	equ	0xFE5
 13038                           fsr1l	equ	0xFE1
 13039                           indf2	equ	0xFDF
 13040                           fsr2h	equ	0xFDA
 13041                           fsr2l	equ	0xFD9
 13042                           status	equ	0xFD8
 13043                           
 13044 ;; *************** function _MOTEapp_WriteDataRate *****************
 13045 ;; Defined at:
 13046 ;;		line 1102 in file "../Includes/Board/MOTEapp.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;		None
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;		None
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      void 
 13053 ;; Registers used:
 13054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : F/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13060 ;;      Params:         0       0       0       0       0       0       0       0       0
 13061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13064 ;;Total ram usage:        0 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:   14
 13067 ;; This function calls:
 13068 ;;		_moteApp_delayms
 13069 ;;		_sendCommand
 13070 ;; This function is called by:
 13071 ;;		_moteJoiningProcess
 13072 ;;		_moteRunningProcess
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           	psect	text38
 13077  00212A                     __ptext38:
 13078                           	opt stack 0
 13079  00212A                     _MOTEapp_WriteDataRate:
 13080                           	opt stack 14
 13081                           
 13082                           ;MOTEapp.c: 1105: moteApp_delayms(100);
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;incstack = 0
 13086  00212A  0100               	movlb	0	; () banked
 13087  00212C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13088  00212E  0E64               	movlw	100
 13089  002130  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13090  002132  EC97  F01F         	call	_moteApp_delayms	;wreg free
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;MOTEapp.c: 1107: if (adrStatus)
 13094  002136  518E               	movf	_adrStatus& (0+255),w,b
 13095  002138  E00D               	bz	l10334
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;MOTEapp.c: 1108: {
 13099                           ;MOTEapp.c: 1109: sendCommand("mac set adr on");
 13100  00213A  0E00               	movlw	low STR_242
 13101  00213C  6FC9               	movwf	sendCommand@string& (0+255),b
 13102  00213E  0E7D               	movlw	high STR_242
 13103  002140  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13104  002142  EC30  F01F         	call	_sendCommand	;wreg free
 13105  002146                     l10332:
 13106                           
 13107                           ;MOTEapp.c: 1110: moteApp_delayms(100);
 13108  002146  0100               	movlb	0	; () banked
 13109  002148  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13110  00214A  0E64               	movlw	100
 13111  00214C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13112  00214E  EC97  F01F         	call	_moteApp_delayms	;wreg free
 13113                           
 13114                           ;MOTEapp.c: 1111: }
 13115  002152  D03F               	goto	l10356
 13116  002154                     l10334:
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;MOTEapp.c: 1112: else
 13120                           ;MOTEapp.c: 1113: {
 13121                           ;MOTEapp.c: 1114: sendCommand("mac set adr off");
 13122  002154  0E1C               	movlw	low STR_243
 13123  002156  6FC9               	movwf	sendCommand@string& (0+255),b
 13124  002158  0E7C               	movlw	high STR_243
 13125  00215A  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13126  00215C  EC30  F01F         	call	_sendCommand	;wreg free
 13127  002160  D7F2               	goto	l10332
 13128  002162                     l10338:
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;MOTEapp.c: 1121: sendCommand("mac set dr 0");
 13132  002162  0E8E               	movlw	low STR_244
 13133  002164  6FC9               	movwf	sendCommand@string& (0+255),b
 13134  002166  0E7D               	movlw	high STR_244
 13135  002168  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13136  00216A  EC30  F01F         	call	_sendCommand	;wreg free
 13137                           
 13138                           ;MOTEapp.c: 1122: break;
 13139  00216E  D041               	goto	l10358
 13140  002170                     l10340:
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;MOTEapp.c: 1124: sendCommand("mac set dr 1");
 13144  002170  0E9B               	movlw	low STR_245
 13145  002172  6FC9               	movwf	sendCommand@string& (0+255),b
 13146  002174  0E7D               	movlw	high STR_245
 13147  002176  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13148  002178  EC30  F01F         	call	_sendCommand	;wreg free
 13149                           
 13150                           ;MOTEapp.c: 1125: break;
 13151  00217C  D03A               	goto	l10358
 13152  00217E                     l10342:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;MOTEapp.c: 1127: sendCommand("mac set dr 2");
 13156  00217E  0EA8               	movlw	low STR_246
 13157  002180  6FC9               	movwf	sendCommand@string& (0+255),b
 13158  002182  0E7D               	movlw	high STR_246
 13159  002184  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13160  002186  EC30  F01F         	call	_sendCommand	;wreg free
 13161                           
 13162                           ;MOTEapp.c: 1128: break;
 13163  00218A  D033               	goto	l10358
 13164  00218C                     l10344:
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;MOTEapp.c: 1130: sendCommand("mac set dr 3");
 13168  00218C  0EB5               	movlw	low STR_247
 13169  00218E  6FC9               	movwf	sendCommand@string& (0+255),b
 13170  002190  0E7D               	movlw	high STR_247
 13171  002192  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13172  002194  EC30  F01F         	call	_sendCommand	;wreg free
 13173                           
 13174                           ;MOTEapp.c: 1131: break;
 13175  002198  D02C               	goto	l10358
 13176  00219A                     l10346:
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;MOTEapp.c: 1133: sendCommand("mac set dr 4");
 13180  00219A  0EC2               	movlw	low STR_248
 13181  00219C  6FC9               	movwf	sendCommand@string& (0+255),b
 13182  00219E  0E7D               	movlw	high STR_248
 13183  0021A0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13184  0021A2  EC30  F01F         	call	_sendCommand	;wreg free
 13185                           
 13186                           ;MOTEapp.c: 1134: break;
 13187  0021A6  D025               	goto	l10358
 13188  0021A8                     l10348:
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;MOTEapp.c: 1136: sendCommand("mac set dr 5");
 13192  0021A8  0ECF               	movlw	low STR_249
 13193  0021AA  6FC9               	movwf	sendCommand@string& (0+255),b
 13194  0021AC  0E7D               	movlw	high STR_249
 13195  0021AE  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13196  0021B0  EC30  F01F         	call	_sendCommand	;wreg free
 13197                           
 13198                           ;MOTEapp.c: 1137: break;
 13199  0021B4  D01E               	goto	l10358
 13200  0021B6                     l10350:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;MOTEapp.c: 1139: sendCommand("mac set dr 6");
 13204  0021B6  0EDC               	movlw	low STR_250
 13205  0021B8  6FC9               	movwf	sendCommand@string& (0+255),b
 13206  0021BA  0E7D               	movlw	high STR_250
 13207  0021BC  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13208  0021BE  EC30  F01F         	call	_sendCommand	;wreg free
 13209                           
 13210                           ;MOTEapp.c: 1140: break;
 13211  0021C2  D017               	goto	l10358
 13212  0021C4                     l10352:
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;MOTEapp.c: 1142: sendCommand("mac set dr 7");
 13216  0021C4  0EE9               	movlw	low STR_251
 13217  0021C6  6FC9               	movwf	sendCommand@string& (0+255),b
 13218  0021C8  0E7D               	movlw	high STR_251
 13219  0021CA  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13220  0021CC  EC30  F01F         	call	_sendCommand	;wreg free
 13221                           
 13222                           ;MOTEapp.c: 1143: break;
 13223  0021D0  D010               	goto	l10358
 13224  0021D2                     l10356:
 13225                           
 13226                           ; BSR set to: 0
 13227  0021D2  51F7               	movf	_dataRateSelection& (0+255),w,b
 13228                           
 13229                           ; Switch size 1, requested type "speed"
 13230                           ; Number of cases is 8, Range of values is 0 to 7
 13231                           ; switch strategies available:
 13232                           ; Name         Instructions Cycles
 13233                           ; simple_byte           25    13 (average)
 13234                           ;	Chosen strategy is simple_byte
 13235  0021D4  E0C6               	bz	l10338
 13236  0021D6  0A01               	xorlw	1	; case 1
 13237  0021D8  E0CB               	bz	l10340
 13238  0021DA  0A03               	xorlw	3	; case 2
 13239  0021DC  E0D0               	bz	l10342
 13240  0021DE  0A01               	xorlw	1	; case 3
 13241  0021E0  E0D5               	bz	l10344
 13242  0021E2  0A07               	xorlw	7	; case 4
 13243  0021E4  E0DA               	bz	l10346
 13244  0021E6  0A01               	xorlw	1	; case 5
 13245  0021E8  E0DF               	bz	l10348
 13246  0021EA  0A03               	xorlw	3	; case 6
 13247  0021EC  E0E4               	bz	l10350
 13248  0021EE  0A01               	xorlw	1	; case 7
 13249  0021F0  E0E9               	bz	l10352
 13250  0021F2                     l10358:
 13251                           
 13252                           ;MOTEapp.c: 1148: moteApp_delayms(100);
 13253  0021F2  0100               	movlb	0	; () banked
 13254  0021F4  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13255  0021F6  0E64               	movlw	100
 13256  0021F8  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13257  0021FA  EC97  F01F         	call	_moteApp_delayms	;wreg free
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;MOTEapp.c: 1149: sendCommand("mac save");
 13261  0021FE  0E48               	movlw	low STR_252
 13262  002200  6FC9               	movwf	sendCommand@string& (0+255),b
 13263  002202  0E7F               	movlw	high STR_252
 13264  002204  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13265  002206  EC30  F01F         	call	_sendCommand	;wreg free
 13266                           
 13267                           ;MOTEapp.c: 1150: moteApp_delayms(300);
 13268  00220A  0E01               	movlw	1
 13269  00220C  0100               	movlb	0	; () banked
 13270  00220E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13271  002210  0E2C               	movlw	44
 13272  002212  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13273  002214  EF97  F01F         	goto	_moteApp_delayms	;wreg free
 13274  002218                     __end_of_MOTEapp_WriteDataRate:
 13275                           	opt stack 0
 13276                           tblptru	equ	0xFF8
 13277                           tblptrh	equ	0xFF7
 13278                           tblptrl	equ	0xFF6
 13279                           tablat	equ	0xFF5
 13280                           prodl	equ	0xFF3
 13281                           intcon	equ	0xFF2
 13282                           postinc0	equ	0xFEE
 13283                           wreg	equ	0xFE8
 13284                           postdec1	equ	0xFE5
 13285                           fsr1l	equ	0xFE1
 13286                           indf2	equ	0xFDF
 13287                           fsr2h	equ	0xFDA
 13288                           fsr2l	equ	0xFD9
 13289                           status	equ	0xFD8
 13290                           
 13291 ;; *************** function _sendCommand *****************
 13292 ;; Defined at:
 13293 ;;		line 1231 in file "../Includes/Board/MOTEapp.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 13296 ;;		 -> STR_257(26), STR_256(26), STR_255(26), STR_254(26), 
 13297 ;;		 -> STR_253(1), STR_252(9), STR_251(13), STR_250(13), 
 13298 ;;		 -> STR_249(13), STR_248(13), STR_247(13), STR_246(13), 
 13299 ;;		 -> STR_245(13), STR_244(13), STR_243(16), STR_242(15), 
 13300 ;;		 -> STR_71(11), STR_69(11), STR_67(11), STR_65(11), 
 13301 ;;		 -> STR_63(12), STR_59(14), STR_51(14), STR_45(10), 
 13302 ;;		 -> STR_44(13), STR_39(13), STR_38(14), STR_31(13), 
 13303 ;;		 -> STR_29(12), STR_22(20), STR_21(2), 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;		None
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  1    wreg      void 
 13308 ;; Registers used:
 13309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13310 ;; Tracked objects:
 13311 ;;		On entry : F/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13315 ;;      Params:         0       2       0       0       0       0       0       0       0
 13316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13318 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13319 ;;Total ram usage:        2 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:   13
 13322 ;; This function calls:
 13323 ;;		_EUSART_Write
 13324 ;;		_EndLine
 13325 ;; This function is called by:
 13326 ;;		_modemResync
 13327 ;;		_modemSleep
 13328 ;;		_moteJoiningProcess
 13329 ;;		_MOTEapp_WriteDataRate
 13330 ;;		_moteApp_toggleLeds
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text39
 13335  003E60                     __ptext39:
 13336                           	opt stack 0
 13337  003E60                     _sendCommand:
 13338                           	opt stack 14
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;MOTEapp.c: 1234: while (*string)
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;incstack = 0
 13345  003E60  D00B               	goto	l9882
 13346  003E62                     l9878:
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;MOTEapp.c: 1235: {
 13350                           ;MOTEapp.c: 1236: EUSART_Write(*string++);
 13351  003E62  C0C9  FFF6         	movff	sendCommand@string,tblptrl
 13352  003E66  C0CA  FFF7         	movff	sendCommand@string+1,tblptrh
 13353  003E6A                     	if	0	;tblptru may be non-zero
 13354  003E6A                     	endif
 13355  003E6A                     	if	0	;tblptru may be non-zero
 13356  003E6A                     	endif
 13357  003E6A  0008               	tblrd		*
 13358  003E6C  50F5               	movf	tablat,w,c
 13359  003E6E  EC91  F01E         	call	_EUSART_Write
 13360  003E72  0100               	movlb	0	; () banked
 13361  003E74  4BC9               	infsnz	sendCommand@string& (0+255),f,b
 13362  003E76  2BCA               	incf	(sendCommand@string+1)& (0+255),f,b
 13363  003E78                     l9882:
 13364                           
 13365                           ; BSR set to: 0
 13366  003E78  C0C9  FFF6         	movff	sendCommand@string,tblptrl
 13367  003E7C  C0CA  FFF7         	movff	sendCommand@string+1,tblptrh
 13368  003E80                     	if	0	;tblptru may be non-zero
 13369  003E80                     	endif
 13370  003E80                     	if	0	;tblptru may be non-zero
 13371  003E80                     	endif
 13372  003E80  0008               	tblrd		*
 13373  003E82  50F5               	movf	tablat,w,c
 13374  003E84  E1EE               	bnz	l9878
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;MOTEapp.c: 1237: }
 13378                           ;MOTEapp.c: 1238: EndLine();
 13379  003E86  EFEB  F020         	goto	_EndLine	;wreg free
 13380  003E8A                     __end_of_sendCommand:
 13381                           	opt stack 0
 13382                           tblptru	equ	0xFF8
 13383                           tblptrh	equ	0xFF7
 13384                           tblptrl	equ	0xFF6
 13385                           tablat	equ	0xFF5
 13386                           prodl	equ	0xFF3
 13387                           intcon	equ	0xFF2
 13388                           postinc0	equ	0xFEE
 13389                           wreg	equ	0xFE8
 13390                           postdec1	equ	0xFE5
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397 ;; *************** function _EndLine *****************
 13398 ;; Defined at:
 13399 ;;		line 1225 in file "../Includes/Board/MOTEapp.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;		None
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : F/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13413 ;;      Params:         0       0       0       0       0       0       0       0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13416 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13417 ;;Total ram usage:        0 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:   12
 13420 ;; This function calls:
 13421 ;;		_EUSART_Write
 13422 ;; This function is called by:
 13423 ;;		_sendCommand
 13424 ;;		_sendDataCommand
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text40
 13429  0041D6                     __ptext40:
 13430                           	opt stack 0
 13431  0041D6                     _EndLine:
 13432                           	opt stack 14
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;MOTEapp.c: 1227: EUSART_Write(0x0D);
 13436                           
 13437                           ;incstack = 0
 13438  0041D6  0E0D               	movlw	13
 13439  0041D8  EC91  F01E         	call	_EUSART_Write
 13440                           
 13441                           ;MOTEapp.c: 1228: EUSART_Write(0x0A);
 13442  0041DC  0E0A               	movlw	10
 13443  0041DE  EF91  F01E         	goto	_EUSART_Write
 13444  0041E2                     __end_of_EndLine:
 13445                           	opt stack 0
 13446                           tblptru	equ	0xFF8
 13447                           tblptrh	equ	0xFF7
 13448                           tblptrl	equ	0xFF6
 13449                           tablat	equ	0xFF5
 13450                           prodl	equ	0xFF3
 13451                           intcon	equ	0xFF2
 13452                           postinc0	equ	0xFEE
 13453                           wreg	equ	0xFE8
 13454                           postdec1	equ	0xFE5
 13455                           fsr1l	equ	0xFE1
 13456                           indf2	equ	0xFDF
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function _moteApp_delayms *****************
 13462 ;; Defined at:
 13463 ;;		line 1421 in file "../Includes/Board/MOTEapp.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  length          2    0[BANK0 ] unsigned int 
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;  counter         2    3[BANK0 ] unsigned int 
 13468 ;; Return value:  Size  Location     Type
 13469 ;;                  1    wreg      void 
 13470 ;; Registers used:
 13471 ;;		wreg, status,2, status,0
 13472 ;; Tracked objects:
 13473 ;;		On entry : F/0
 13474 ;;		On exit  : F/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13477 ;;      Params:         0       2       0       0       0       0       0       0       0
 13478 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13479 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13480 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13481 ;;Total ram usage:        5 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; Hardware stack levels required when called:   11
 13484 ;; This function calls:
 13485 ;;		Nothing
 13486 ;; This function is called by:
 13487 ;;		_main
 13488 ;;		_test_powerup
 13489 ;;		_test_switch
 13490 ;;		_test_comms
 13491 ;;		_test_leds
 13492 ;;		_test_adc
 13493 ;;		_modemResync
 13494 ;;		_modemSleep
 13495 ;;		_moteHandler
 13496 ;;		_moteJoiningProcess
 13497 ;;		_moteRunningProcess
 13498 ;;		_MOTEapp_WriteDataRate
 13499 ;;		_moteApp_toggleLeds
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text41
 13504  003F2E                     __ptext41:
 13505                           	opt stack 0
 13506  003F2E                     _moteApp_delayms:
 13507                           	opt stack 17
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;MOTEapp.c: 1423: uint16_t counter;
 13511                           ;MOTEapp.c: 1424: for(counter = 0; counter < length; counter++)
 13512                           
 13513                           ;incstack = 0
 13514  003F2E  6BCB               	clrf	moteApp_delayms@counter& (0+255),b
 13515  003F30  6BCC               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 13516  003F32  D00B               	goto	l728
 13517  003F34                     l9870:
 13518                           
 13519                           ; BSR set to: 0
 13520                           ;MOTEapp.c: 1425: {
 13521                           ;MOTEapp.c: 1426: _delay((unsigned long)((1)*(48000000/4000.0)));
 13522  003F34  0E10               	movlw	16
 13523  003F36  6FCA               	movwf	??_moteApp_delayms& (0+255),b
 13524  003F38  0E94               	movlw	148
 13525  003F3A                     u10637:
 13526  003F3A  2EE8               	decfsz	wreg,f,c
 13527  003F3C  D7FE               	goto	u10637
 13528  003F3E  2FCA               	decfsz	??_moteApp_delayms& (0+255),f,b
 13529  003F40  D7FC               	goto	u10637
 13530  003F42  D000               	nop2	
 13531  003F44  0100               	movlb	0	; () banked
 13532  003F46  4BCB               	infsnz	moteApp_delayms@counter& (0+255),f,b
 13533  003F48  2BCC               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 13534  003F4A                     l728:
 13535                           
 13536                           ; BSR set to: 0
 13537  003F4A  51C8               	movf	moteApp_delayms@length& (0+255),w,b
 13538  003F4C  5DCB               	subwf	moteApp_delayms@counter& (0+255),w,b
 13539  003F4E  51C9               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 13540  003F50  59CC               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 13541  003F52  E3F0               	bnc	l9870
 13542                           
 13543                           ; BSR set to: 0
 13544  003F54  0012               	return		;funcret
 13545  003F56                     __end_of_moteApp_delayms:
 13546                           	opt stack 0
 13547                           tblptru	equ	0xFF8
 13548                           tblptrh	equ	0xFF7
 13549                           tblptrl	equ	0xFF6
 13550                           tablat	equ	0xFF5
 13551                           prodl	equ	0xFF3
 13552                           intcon	equ	0xFF2
 13553                           postinc0	equ	0xFEE
 13554                           wreg	equ	0xFE8
 13555                           postdec1	equ	0xFE5
 13556                           fsr1l	equ	0xFE1
 13557                           indf2	equ	0xFDF
 13558                           fsr2h	equ	0xFDA
 13559                           fsr2l	equ	0xFD9
 13560                           status	equ	0xFD8
 13561                           
 13562 ;; *************** function _MOTEapp_SetDataRate *****************
 13563 ;; Defined at:
 13564 ;;		line 1097 in file "../Includes/Board/MOTEapp.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;  dataRate        1    wreg     unsigned char 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  dataRate        1    0[BANK0 ] unsigned char 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1    wreg      void 
 13571 ;; Registers used:
 13572 ;;		wreg
 13573 ;; Tracked objects:
 13574 ;;		On entry : F/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13578 ;;      Params:         0       0       0       0       0       0       0       0       0
 13579 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13580 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13581 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13582 ;;Total ram usage:        1 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:   11
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_moteJoiningProcess
 13589 ;;		_moteRunningProcess
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           	psect	text42
 13594  00420E                     __ptext42:
 13595                           	opt stack 0
 13596  00420E                     _MOTEapp_SetDataRate:
 13597                           	opt stack 17
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;incstack = 0
 13601                           ;MOTEapp_SetDataRate@dataRate stored from wreg
 13602  00420E  6FC8               	movwf	MOTEapp_SetDataRate@dataRate& (0+255),b
 13603                           
 13604                           ;MOTEapp.c: 1099: dataRateSelection = dataRate;
 13605  004210  C0C8  F0F7         	movff	MOTEapp_SetDataRate@dataRate,_dataRateSelection
 13606  004214  0012               	return		;funcret
 13607  004216                     __end_of_MOTEapp_SetDataRate:
 13608                           	opt stack 0
 13609                           tblptru	equ	0xFF8
 13610                           tblptrh	equ	0xFF7
 13611                           tblptrl	equ	0xFF6
 13612                           tablat	equ	0xFF5
 13613                           prodl	equ	0xFF3
 13614                           intcon	equ	0xFF2
 13615                           postinc0	equ	0xFEE
 13616                           wreg	equ	0xFE8
 13617                           postdec1	equ	0xFE5
 13618                           fsr1l	equ	0xFE1
 13619                           indf2	equ	0xFDF
 13620                           fsr2h	equ	0xFDA
 13621                           fsr2l	equ	0xFD9
 13622                           status	equ	0xFD8
 13623                           
 13624 ;; *************** function _MOTEapp_SetADR *****************
 13625 ;; Defined at:
 13626 ;;		line 1092 in file "../Includes/Board/MOTEapp.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  state           1    wreg     unsigned char 
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;  state           1    0[BANK0 ] unsigned char 
 13631 ;; Return value:  Size  Location     Type
 13632 ;;                  1    wreg      void 
 13633 ;; Registers used:
 13634 ;;		wreg
 13635 ;; Tracked objects:
 13636 ;;		On entry : F/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13640 ;;      Params:         0       0       0       0       0       0       0       0       0
 13641 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13643 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13644 ;;Total ram usage:        1 bytes
 13645 ;; Hardware stack levels used:    1
 13646 ;; Hardware stack levels required when called:   11
 13647 ;; This function calls:
 13648 ;;		Nothing
 13649 ;; This function is called by:
 13650 ;;		_moteJoiningProcess
 13651 ;;		_moteRunningProcess
 13652 ;; This function uses a non-reentrant model
 13653 ;;
 13654                           
 13655                           	psect	text43
 13656  004216                     __ptext43:
 13657                           	opt stack 0
 13658  004216                     _MOTEapp_SetADR:
 13659                           	opt stack 17
 13660                           
 13661                           ;incstack = 0
 13662                           ;MOTEapp_SetADR@state stored from wreg
 13663  004216  6FC8               	movwf	MOTEapp_SetADR@state& (0+255),b
 13664                           
 13665                           ;MOTEapp.c: 1094: adrStatus = state;
 13666  004218  C0C8  F08E         	movff	MOTEapp_SetADR@state,_adrStatus
 13667  00421C  0012               	return		;funcret
 13668  00421E                     __end_of_MOTEapp_SetADR:
 13669                           	opt stack 0
 13670                           tblptru	equ	0xFF8
 13671                           tblptrh	equ	0xFF7
 13672                           tblptrl	equ	0xFF6
 13673                           tablat	equ	0xFF5
 13674                           prodl	equ	0xFF3
 13675                           intcon	equ	0xFF2
 13676                           postinc0	equ	0xFEE
 13677                           wreg	equ	0xFE8
 13678                           postdec1	equ	0xFE5
 13679                           fsr1l	equ	0xFE1
 13680                           indf2	equ	0xFDF
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function _DATAEE_WriteByte *****************
 13686 ;; Defined at:
 13687 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  bAdd            1    wreg     unsigned char 
 13690 ;;  bData           1    0[BANK0 ] unsigned char 
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  bAdd            1    1[BANK0 ] unsigned char 
 13693 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  1    wreg      void 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2
 13698 ;; Tracked objects:
 13699 ;;		On entry : F/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13703 ;;      Params:         0       1       0       0       0       0       0       0       0
 13704 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13706 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13707 ;;Total ram usage:        3 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:   11
 13710 ;; This function calls:
 13711 ;;		Nothing
 13712 ;; This function is called by:
 13713 ;;		_main
 13714 ;;		_moteJoiningProcess
 13715 ;; This function uses a non-reentrant model
 13716 ;;
 13717                           
 13718                           	psect	text44
 13719  003C0C                     __ptext44:
 13720                           	opt stack 0
 13721  003C0C                     _DATAEE_WriteByte:
 13722                           	opt stack 17
 13723                           
 13724                           ;incstack = 0
 13725                           ;DATAEE_WriteByte@bAdd stored from wreg
 13726  003C0C  6FC9               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 13727                           
 13728                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 13729  003C0E  0E00               	movlw	0
 13730  003C10  BEF2               	btfsc	intcon,7,c	;volatile
 13731  003C12  0E01               	movlw	1
 13732  003C14  0100               	movlb	0	; () banked
 13733  003C16  6FCA               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 13737  003C18  C0C9  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;memory.c: 171: EEDATA = bData;
 13741  003C1C  C0C8  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 13745  003C20  9EA6               	bcf	4006,7,c	;volatile
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;memory.c: 173: EECON1bits.CFGS = 0;
 13749  003C22  9CA6               	bcf	4006,6,c	;volatile
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;memory.c: 174: EECON1bits.WREN = 1;
 13753  003C24  84A6               	bsf	4006,2,c	;volatile
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;memory.c: 175: INTCONbits.GIE = 0;
 13757  003C26  9EF2               	bcf	intcon,7,c	;volatile
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;memory.c: 176: EECON2 = 0x55;
 13761  003C28  0E55               	movlw	85
 13762  003C2A  6EA7               	movwf	4007,c	;volatile
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;memory.c: 177: EECON2 = 0xAA;
 13766  003C2C  0EAA               	movlw	170
 13767  003C2E  6EA7               	movwf	4007,c	;volatile
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;memory.c: 178: EECON1bits.WR = 1;
 13771  003C30  82A6               	bsf	4006,1,c	;volatile
 13772  003C32                     l1351:
 13773  003C32  B2A6               	btfsc	4006,1,c	;volatile
 13774  003C34  D7FE               	goto	l1351
 13775                           
 13776                           ;memory.c: 182: }
 13777                           ;memory.c: 184: EECON1bits.WREN = 0;
 13778  003C36  94A6               	bcf	4006,2,c	;volatile
 13779                           
 13780                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 13781  003C38  0100               	movlb	0	; () banked
 13782  003C3A  B1CA               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 13783  003C3C  D002               	bra	u8355
 13784  003C3E  9EF2               	bcf	intcon,7,c	;volatile
 13785  003C40  D001               	bra	u8356
 13786  003C42                     u8355:
 13787  003C42  8EF2               	bsf	intcon,7,c	;volatile
 13788  003C44                     u8356:
 13789  003C44  0012               	return		;funcret
 13790  003C46                     __end_of_DATAEE_WriteByte:
 13791                           	opt stack 0
 13792                           tblptru	equ	0xFF8
 13793                           tblptrh	equ	0xFF7
 13794                           tblptrl	equ	0xFF6
 13795                           tablat	equ	0xFF5
 13796                           prodl	equ	0xFF3
 13797                           intcon	equ	0xFF2
 13798                           postinc0	equ	0xFEE
 13799                           wreg	equ	0xFE8
 13800                           postdec1	equ	0xFE5
 13801                           fsr1l	equ	0xFE1
 13802                           indf2	equ	0xFDF
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function _TMRapp_Handler *****************
 13808 ;; Defined at:
 13809 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;		None
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2, status,0, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : F/0
 13820 ;;		On exit  : F/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13826 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13827 ;;Total ram usage:        0 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:   12
 13830 ;; This function calls:
 13831 ;;		___lwmod
 13832 ;; This function is called by:
 13833 ;;		_moteHandler
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           	psect	text45
 13838  0022FC                     __ptext45:
 13839                           	opt stack 0
 13840  0022FC                     _TMRapp_Handler:
 13841                           	opt stack 17
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;TMRapp.c: 25: timerMsTickCount++;
 13845                           
 13846                           ;incstack = 0
 13847  0022FC  4B84               	infsnz	_timerMsTickCount& (0+255),f,b
 13848  0022FE  2B85               	incf	(_timerMsTickCount+1)& (0+255),f,b
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 13852  002300  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13853  002304  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13854  002308  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13855  00230A  0E0A               	movlw	10
 13856  00230C  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13857  00230E  ECAB  F01D         	call	___lwmod	;wreg free
 13858  002312  51C8               	movf	?___lwmod& (0+255),w,b
 13859  002314  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13860  002316  A4D8               	btfss	status,2,c
 13861  002318  0012               	return	
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;TMRapp.c: 28: {
 13865                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 13866  00231A  838F               	bsf	_appTimer& (0+255),1,b
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 13870  00231C  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13871  002320  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13872  002324  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13873  002326  0E64               	movlw	100
 13874  002328  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13875  00232A  ECAB  F01D         	call	___lwmod	;wreg free
 13876  00232E  51C8               	movf	?___lwmod& (0+255),w,b
 13877  002330  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13878  002332  A4D8               	btfss	status,2,c
 13879  002334  0012               	return	
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;TMRapp.c: 31: {
 13883                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 13884  002336  858F               	bsf	_appTimer& (0+255),2,b
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 13888  002338  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13889  00233C  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13890  002340  0E03               	movlw	3
 13891  002342  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13892  002344  0EE8               	movlw	232
 13893  002346  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13894  002348  ECAB  F01D         	call	___lwmod	;wreg free
 13895  00234C  51C8               	movf	?___lwmod& (0+255),w,b
 13896  00234E  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13897  002350  A4D8               	btfss	status,2,c
 13898  002352  0012               	return	
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;TMRapp.c: 34: {
 13902                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 13903  002354  878F               	bsf	_appTimer& (0+255),3,b
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 13907  002356  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13908  00235A  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13909  00235E  0EEA               	movlw	234
 13910  002360  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13911  002362  0E60               	movlw	96
 13912  002364  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13913  002366  ECAB  F01D         	call	___lwmod	;wreg free
 13914  00236A  51C8               	movf	?___lwmod& (0+255),w,b
 13915  00236C  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13916  00236E  A4D8               	btfss	status,2,c
 13917  002370  0012               	return	
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;TMRapp.c: 37: {
 13921                           ;TMRapp.c: 38: timerMinTickCount++;
 13922  002372  4B82               	infsnz	_timerMinTickCount& (0+255),f,b
 13923  002374  2B83               	incf	(_timerMinTickCount+1)& (0+255),f,b
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 13927  002376  898F               	bsf	_appTimer& (0+255),4,b
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 13931  002378  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13932  00237C  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13933  002380  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13934  002382  0E3C               	movlw	60
 13935  002384  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13936  002386  ECAB  F01D         	call	___lwmod	;wreg free
 13937  00238A  51C8               	movf	?___lwmod& (0+255),w,b
 13938  00238C  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13939  00238E  A4D8               	btfss	status,2,c
 13940  002390  0012               	return	
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;TMRapp.c: 41: {
 13944                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 13945  002392  8B8F               	bsf	_appTimer& (0+255),5,b
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 13949  002394  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13950  002398  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13951  00239C  0E02               	movlw	2
 13952  00239E  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13953  0023A0  0ED0               	movlw	208
 13954  0023A2  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13955  0023A4  ECAB  F01D         	call	___lwmod	;wreg free
 13956  0023A8  51C8               	movf	?___lwmod& (0+255),w,b
 13957  0023AA  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13958  0023AC  A4D8               	btfss	status,2,c
 13959  0023AE  0012               	return	
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;TMRapp.c: 44: {
 13963                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 13964  0023B0  8D8F               	bsf	_appTimer& (0+255),6,b
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 13968  0023B2  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13969  0023B6  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13970  0023BA  0E05               	movlw	5
 13971  0023BC  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13972  0023BE  0EA0               	movlw	160
 13973  0023C0  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13974  0023C2  ECAB  F01D         	call	___lwmod	;wreg free
 13975  0023C6  51C8               	movf	?___lwmod& (0+255),w,b
 13976  0023C8  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13977  0023CA  A4D8               	btfss	status,2,c
 13978  0023CC  0012               	return	
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;TMRapp.c: 47: {
 13982                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 13983  0023CE  8F8F               	bsf	_appTimer& (0+255),7,b
 13984                           
 13985                           ;TMRapp.c: 50: timerMsTickCount = 0;
 13986  0023D0  6B84               	clrf	_timerMsTickCount& (0+255),b
 13987  0023D2  6B85               	clrf	(_timerMsTickCount+1)& (0+255),b
 13988                           
 13989                           ;TMRapp.c: 51: timerMinTickCount = 0;
 13990  0023D4  6B82               	clrf	_timerMinTickCount& (0+255),b
 13991  0023D6  6B83               	clrf	(_timerMinTickCount+1)& (0+255),b
 13992  0023D8  0012               	return	
 13993  0023DA                     __end_of_TMRapp_Handler:
 13994                           	opt stack 0
 13995                           tblptru	equ	0xFF8
 13996                           tblptrh	equ	0xFF7
 13997                           tblptrl	equ	0xFF6
 13998                           tablat	equ	0xFF5
 13999                           prodl	equ	0xFF3
 14000                           intcon	equ	0xFF2
 14001                           postinc0	equ	0xFEE
 14002                           wreg	equ	0xFE8
 14003                           postdec1	equ	0xFE5
 14004                           fsr1l	equ	0xFE1
 14005                           indf2	equ	0xFDF
 14006                           fsr2h	equ	0xFDA
 14007                           fsr2l	equ	0xFD9
 14008                           status	equ	0xFD8
 14009                           
 14010 ;; *************** function ___lwmod *****************
 14011 ;; Defined at:
 14012 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  dividend        2    0[BANK0 ] unsigned int 
 14015 ;;  divisor         2    2[BANK0 ] unsigned int 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  counter         1    4[BANK0 ] unsigned char 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  2    0[BANK0 ] unsigned int 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2, status,0
 14022 ;; Tracked objects:
 14023 ;;		On entry : F/0
 14024 ;;		On exit  : F/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14027 ;;      Params:         0       4       0       0       0       0       0       0       0
 14028 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14030 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14031 ;;Total ram usage:        5 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:   11
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		_moteApp_add16bToDataBuffer
 14038 ;;		_TMRapp_Handler
 14039 ;;		_oled_putUint16
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043                           	psect	text46
 14044  003B56                     __ptext46:
 14045                           	opt stack 0
 14046  003B56                     ___lwmod:
 14047                           	opt stack 16
 14048                           
 14049                           ; BSR set to: 0
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;incstack = 0
 14053  003B56  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14054  003B58  11CB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14055  003B5A  E017               	bz	l2362
 14056                           
 14057                           ; BSR set to: 0
 14058  003B5C  0E01               	movlw	1
 14059  003B5E  6FCC               	movwf	___lwmod@counter& (0+255),b
 14060  003B60  D004               	goto	l10198
 14061  003B62                     l10196:
 14062                           
 14063                           ; BSR set to: 0
 14064  003B62  90D8               	bcf	status,0,c
 14065  003B64  37CA               	rlcf	___lwmod@divisor& (0+255),f,b
 14066  003B66  37CB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14067  003B68  2BCC               	incf	___lwmod@counter& (0+255),f,b
 14068  003B6A                     l10198:
 14069                           
 14070                           ; BSR set to: 0
 14071  003B6A  AFCB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14072  003B6C  D7FA               	goto	l10196
 14073  003B6E                     l10200:
 14074                           
 14075                           ; BSR set to: 0
 14076  003B6E  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14077  003B70  5DC8               	subwf	___lwmod@dividend& (0+255),w,b
 14078  003B72  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14079  003B74  59C9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14080  003B76  E304               	bnc	l10204
 14081                           
 14082                           ; BSR set to: 0
 14083  003B78  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14084  003B7A  5FC8               	subwf	___lwmod@dividend& (0+255),f,b
 14085  003B7C  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14086  003B7E  5BC9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14087  003B80                     l10204:
 14088                           
 14089                           ; BSR set to: 0
 14090  003B80  90D8               	bcf	status,0,c
 14091  003B82  33CB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14092  003B84  33CA               	rrcf	___lwmod@divisor& (0+255),f,b
 14093                           
 14094                           ; BSR set to: 0
 14095  003B86  2FCC               	decfsz	___lwmod@counter& (0+255),f,b
 14096  003B88  D7F2               	goto	l10200
 14097  003B8A                     l2362:
 14098                           
 14099                           ; BSR set to: 0
 14100  003B8A  C0C8  F0C8         	movff	___lwmod@dividend,?___lwmod
 14101  003B8E  C0C9  F0C9         	movff	___lwmod@dividend+1,?___lwmod+1
 14102                           
 14103                           ; BSR set to: 0
 14104  003B92  0012               	return		;funcret
 14105  003B94                     __end_of___lwmod:
 14106                           	opt stack 0
 14107                           tblptru	equ	0xFF8
 14108                           tblptrh	equ	0xFF7
 14109                           tblptrl	equ	0xFF6
 14110                           tablat	equ	0xFF5
 14111                           prodl	equ	0xFF3
 14112                           intcon	equ	0xFF2
 14113                           postinc0	equ	0xFEE
 14114                           wreg	equ	0xFE8
 14115                           postdec1	equ	0xFE5
 14116                           fsr1l	equ	0xFE1
 14117                           indf2	equ	0xFDF
 14118                           fsr2h	equ	0xFDA
 14119                           fsr2l	equ	0xFD9
 14120                           status	equ	0xFD8
 14121                           
 14122 ;; *************** function _TMRapp_ClearBitFlags *****************
 14123 ;; Defined at:
 14124 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1    wreg      void 
 14131 ;; Registers used:
 14132 ;;		None
 14133 ;; Tracked objects:
 14134 ;;		On entry : F/0
 14135 ;;		On exit  : F/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14138 ;;      Params:         0       0       0       0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14141 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14142 ;;Total ram usage:        0 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:   11
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_moteHandler
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text47
 14153  004240                     __ptext47:
 14154                           	opt stack 0
 14155  004240                     _TMRapp_ClearBitFlags:
 14156                           	opt stack 18
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;incstack = 0
 14163  004240  6B8F               	clrf	_appTimer& (0+255),b
 14164                           
 14165                           ; BSR set to: 0
 14166  004242  0012               	return		;funcret
 14167  004244                     __end_of_TMRapp_ClearBitFlags:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodl	equ	0xFF3
 14174                           intcon	equ	0xFF2
 14175                           postinc0	equ	0xFEE
 14176                           wreg	equ	0xFE8
 14177                           postdec1	equ	0xFE5
 14178                           fsr1l	equ	0xFE1
 14179                           indf2	equ	0xFDF
 14180                           fsr2h	equ	0xFDA
 14181                           fsr2l	equ	0xFD9
 14182                           status	equ	0xFD8
 14183                           
 14184 ;; *************** function _MOTEapp_TimerBasedTask *****************
 14185 ;; Defined at:
 14186 ;;		line 1153 in file "../Includes/Board/MOTEapp.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;  timerTask       1    wreg     struct .
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  timerTask       1    0[BANK0 ] struct .
 14191 ;; Return value:  Size  Location     Type
 14192 ;;                  1    wreg      void 
 14193 ;; Registers used:
 14194 ;;		wreg, status,2, status,0
 14195 ;; Tracked objects:
 14196 ;;		On entry : F/0
 14197 ;;		On exit  : F/0
 14198 ;;		Unchanged: 0/0
 14199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14200 ;;      Params:         0       0       0       0       0       0       0       0       0
 14201 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14203 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14204 ;;Total ram usage:        1 bytes
 14205 ;; Hardware stack levels used:    1
 14206 ;; Hardware stack levels required when called:   11
 14207 ;; This function calls:
 14208 ;;		Nothing
 14209 ;; This function is called by:
 14210 ;;		_moteHandler
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           	psect	text48
 14215  0041BA                     __ptext48:
 14216                           	opt stack 0
 14217  0041BA                     _MOTEapp_TimerBasedTask:
 14218                           	opt stack 18
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;incstack = 0
 14222                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 14223  0041BA  6FC8               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 14224                           
 14225                           ;MOTEapp.c: 1158: if (timerTask.mSecTenTick)
 14226  0041BC  0100               	movlb	0	; () banked
 14227  0041BE  B3C8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;MOTEapp.c: 1159: {
 14231                           ;MOTEapp.c: 1161: m10SecTicker++;
 14232  0041C0  2B94               	incf	_m10SecTicker& (0+255),f,b
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;MOTEapp.c: 1167: }
 14236                           ;MOTEapp.c: 1168: if (timerTask.SecTick)
 14237  0041C2  B7C8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;MOTEapp.c: 1169: {
 14241                           ;MOTEapp.c: 1171: secTicker++;
 14242  0041C4  2B99               	incf	_secTicker& (0+255),f,b
 14243  0041C6  0012               	return	
 14244  0041C8                     __end_of_MOTEapp_TimerBasedTask:
 14245                           	opt stack 0
 14246                           tblptru	equ	0xFF8
 14247                           tblptrh	equ	0xFF7
 14248                           tblptrl	equ	0xFF6
 14249                           tablat	equ	0xFF5
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           postinc0	equ	0xFEE
 14253                           wreg	equ	0xFE8
 14254                           postdec1	equ	0xFE5
 14255                           fsr1l	equ	0xFE1
 14256                           indf2	equ	0xFDF
 14257                           fsr2h	equ	0xFDA
 14258                           fsr2l	equ	0xFD9
 14259                           status	equ	0xFD8
 14260                           
 14261 ;; *************** function _USBapp_handlerState *****************
 14262 ;; Defined at:
 14263 ;;		line 63 in file "../Includes/Board/USBapp.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  state           1    wreg     enum E6263
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;  state           1    0[BANK0 ] enum E6263
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  1    wreg      void 
 14270 ;; Registers used:
 14271 ;;		wreg
 14272 ;; Tracked objects:
 14273 ;;		On entry : F/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14277 ;;      Params:         0       0       0       0       0       0       0       0       0
 14278 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14280 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14281 ;;Total ram usage:        1 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:   11
 14284 ;; This function calls:
 14285 ;;		Nothing
 14286 ;; This function is called by:
 14287 ;;		_main
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           	psect	text49
 14292  00421E                     __ptext49:
 14293                           	opt stack 0
 14294  00421E                     _USBapp_handlerState:
 14295                           	opt stack 19
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;incstack = 0
 14299                           ;USBapp_handlerState@state stored from wreg
 14300  00421E  6FC8               	movwf	USBapp_handlerState@state& (0+255),b
 14301                           
 14302                           ;USBapp.c: 65: usbState = state;
 14303  004220  C0C8  F09C         	movff	USBapp_handlerState@state,_usbState
 14304  004224  0012               	return		;funcret
 14305  004226                     __end_of_USBapp_handlerState:
 14306                           	opt stack 0
 14307                           tblptru	equ	0xFF8
 14308                           tblptrh	equ	0xFF7
 14309                           tblptrl	equ	0xFF6
 14310                           tablat	equ	0xFF5
 14311                           prodl	equ	0xFF3
 14312                           intcon	equ	0xFF2
 14313                           postinc0	equ	0xFEE
 14314                           wreg	equ	0xFE8
 14315                           postdec1	equ	0xFE5
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           fsr2h	equ	0xFDA
 14319                           fsr2l	equ	0xFD9
 14320                           status	equ	0xFD8
 14321                           
 14322 ;; *************** function _USBapp_Handler *****************
 14323 ;; Defined at:
 14324 ;;		line 68 in file "../Includes/Board/USBapp.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;		None
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;		None
 14329 ;; Return value:  Size  Location     Type
 14330 ;;                  1    wreg      void 
 14331 ;; Registers used:
 14332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0
 14339 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14340 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14341 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14342 ;;Total ram usage:        0 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; Hardware stack levels required when called:   17
 14345 ;; This function calls:
 14346 ;;		_USBapp_DeviceCdcEmulatorHandler
 14347 ;;		_oled_clear
 14348 ;;		_oled_putString
 14349 ;; This function is called by:
 14350 ;;		_main
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           	psect	text50
 14355  00338C                     __ptext50:
 14356                           	opt stack 0
 14357  00338C                     _USBapp_Handler:
 14358                           	opt stack 13
 14359                           
 14360                           ;USBapp.c: 72: {
 14361                           ;USBapp.c: 73: switch(usbState)
 14362                           
 14363                           ;incstack = 0
 14364                           ;USBapp.c: 71: do
 14365  00338C  D02E               	goto	l12138
 14366  00338E                     l812:
 14367                           
 14368                           ; BSR set to: 0
 14369  00338E  D7FF               	goto	l812
 14370  003390                     l12118:
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;USBapp.c: 80: oled_clear();
 14374  003390  EC72  F020         	call	_oled_clear	;wreg free
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 14378  003394  0E2D               	movlw	low STR_258
 14379  003396  6FD5               	movwf	oled_putString@string& (0+255),b
 14380  003398  0E7F               	movlw	high STR_258
 14381  00339A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14382  00339C  0E01               	movlw	1
 14383  00339E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 14384  0033A0  6BD8               	clrf	oled_putString@start_page& (0+255),b
 14385  0033A2  ECDF  F01A         	call	_oled_putString	;wreg free
 14386                           
 14387                           ;USBapp.c: 82: oled_putString("Command",2,1);
 14388  0033A6  0E87               	movlw	low STR_259
 14389  0033A8  0100               	movlb	0	; () banked
 14390  0033AA  6FD5               	movwf	oled_putString@string& (0+255),b
 14391  0033AC  0E7F               	movlw	high STR_259
 14392  0033AE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14393  0033B0  0E02               	movlw	2
 14394  0033B2  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 14395  0033B4  0E01               	movlw	1
 14396  0033B6  6FD8               	movwf	oled_putString@start_page& (0+255),b
 14397  0033B8  ECDF  F01A         	call	_oled_putString	;wreg free
 14398                           
 14399                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 14400  0033BC  0E37               	movlw	low STR_260
 14401  0033BE  0100               	movlb	0	; () banked
 14402  0033C0  6FD5               	movwf	oled_putString@string& (0+255),b
 14403  0033C2  0E7E               	movlw	high STR_260
 14404  0033C4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14405  0033C6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 14406  0033C8  0E02               	movlw	2
 14407  0033CA  6FD8               	movwf	oled_putString@start_page& (0+255),b
 14408  0033CC  ECDF  F01A         	call	_oled_putString	;wreg free
 14409                           
 14410                           ;USBapp.c: 85: usbState = USB_RUNNING;
 14411  0033D0  0E01               	movlw	1
 14412  0033D2  0100               	movlb	0	; () banked
 14413  0033D4  D005               	goto	L51
 14414  0033D6                     l12128:
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 14418  0033D6  0E20               	movlw	32
 14419  0033D8  618A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 14420  0033DA  D001               	goto	l12132
 14421  0033DC  D00E               	goto	l819
 14422  0033DE                     l12132:
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;USBapp.c: 93: }
 14426                           ;USBapp.c: 94: usbState = USB_CDC;
 14427  0033DE  0E02               	movlw	2
 14428  0033E0                     L51:
 14429  0033E0  6F9C               	movwf	_usbState& (0+255),b
 14430                           
 14431                           ;USBapp.c: 95: break;
 14432  0033E2  D00B               	goto	l819
 14433  0033E4                     l12134:
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 14437  0033E4  EC1A  F015         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 14438                           
 14439                           ;USBapp.c: 101: break;
 14440  0033E8  D008               	goto	l819
 14441  0033EA                     l12138:
 14442  0033EA  0100               	movlb	0	; () banked
 14443  0033EC  519C               	movf	_usbState& (0+255),w,b
 14444                           
 14445                           ; Switch size 1, requested type "speed"
 14446                           ; Number of cases is 3, Range of values is 0 to 2
 14447                           ; switch strategies available:
 14448                           ; Name         Instructions Cycles
 14449                           ; simple_byte           10     6 (average)
 14450                           ;	Chosen strategy is simple_byte
 14451  0033EE  E0D0               	bz	l12118
 14452  0033F0  0A01               	xorlw	1	; case 1
 14453  0033F2  E0F1               	bz	l12128
 14454  0033F4  0A03               	xorlw	3	; case 2
 14455  0033F6  E0F6               	bz	l12134
 14456  0033F8  D7CA               	goto	l812
 14457  0033FA                     l819:
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 14461  0033FA  B080               	btfsc	3968,0,c	;volatile
 14462  0033FC  D7F6               	goto	l12138
 14463                           
 14464                           ; BSR set to: 0
 14465                           ;USBapp.c: 104: __nop();
 14466  0033FE  F000               	nop	
 14467  003400  0012               	return		;funcret
 14468  003402                     __end_of_USBapp_Handler:
 14469                           	opt stack 0
 14470                           tblptru	equ	0xFF8
 14471                           tblptrh	equ	0xFF7
 14472                           tblptrl	equ	0xFF6
 14473                           tablat	equ	0xFF5
 14474                           prodl	equ	0xFF3
 14475                           intcon	equ	0xFF2
 14476                           postinc0	equ	0xFEE
 14477                           wreg	equ	0xFE8
 14478                           postdec1	equ	0xFE5
 14479                           fsr1l	equ	0xFE1
 14480                           indf2	equ	0xFDF
 14481                           fsr2h	equ	0xFDA
 14482                           fsr2l	equ	0xFD9
 14483                           status	equ	0xFD8
 14484                           
 14485 ;; *************** function _oled_putString *****************
 14486 ;; Defined at:
 14487 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 14490 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_260(12), STR_259(8), 
 14491 ;;		 -> STR_258(9), STR_241(16), STR_240(16), STR_239(16), 
 14492 ;;		 -> STR_238(15), STR_237(15), STR_236(16), STR_235(17), 
 14493 ;;		 -> STR_234(16), STR_233(17), STR_232(17), STR_231(2), 
 14494 ;;		 -> STR_230(7), STR_229(10), STR_228(17), STR_227(16), 
 14495 ;;		 -> STR_226(15), STR_225(15), STR_224(17), STR_223(16), 
 14496 ;;		 -> STR_222(17), STR_221(17), STR_220(16), STR_218(18), 
 14497 ;;		 -> STR_216(17), STR_214(17), STR_213(17), responseData(8), 
 14498 ;;		 -> responseId(16), responsePortNum(3), STR_210(12), STR_209(13), 
 14499 ;;		 -> STR_208(12), STR_205(18), STR_204(13), STR_203(17), 
 14500 ;;		 -> STR_202(16), STR_201(17), STR_200(17), STR_199(2), 
 14501 ;;		 -> STR_198(2), STR_197(2), STR_196(2), STR_195(2), 
 14502 ;;		 -> STR_194(2), STR_193(16), STR_192(17), STR_191(17), 
 14503 ;;		 -> STR_190(2), STR_189(2), STR_188(2), STR_187(15), 
 14504 ;;		 -> STR_186(15), STR_185(15), STR_184(15), STR_183(2), 
 14505 ;;		 -> STR_182(2), STR_181(2), STR_180(2), STR_179(15), 
 14506 ;;		 -> STR_178(15), STR_177(15), STR_176(15), STR_175(2), 
 14507 ;;		 -> STR_174(2), STR_173(2), STR_172(2), STR_171(15), 
 14508 ;;		 -> STR_170(15), STR_169(15), STR_168(15), STR_167(2), 
 14509 ;;		 -> STR_166(2), STR_165(2), STR_164(2), STR_163(15), 
 14510 ;;		 -> STR_162(15), STR_161(15), STR_160(15), STR_159(2), 
 14511 ;;		 -> STR_158(2), STR_157(2), STR_156(2), STR_155(2), 
 14512 ;;		 -> STR_154(15), STR_153(15), STR_152(15), STR_151(15), 
 14513 ;;		 -> STR_150(2), STR_149(2), STR_148(2), STR_147(2), 
 14514 ;;		 -> STR_146(2), STR_145(15), STR_144(15), STR_143(15), 
 14515 ;;		 -> STR_142(15), STR_141(2), STR_140(2), STR_139(2), 
 14516 ;;		 -> STR_138(2), STR_137(2), STR_136(15), STR_135(15), 
 14517 ;;		 -> STR_134(15), STR_133(15), STR_132(2), STR_131(2), 
 14518 ;;		 -> STR_130(2), STR_129(2), STR_128(2), STR_127(15), 
 14519 ;;		 -> STR_126(15), STR_125(15), STR_124(15), STR_123(2), 
 14520 ;;		 -> STR_122(2), STR_121(2), STR_120(2), STR_119(2), 
 14521 ;;		 -> STR_118(15), STR_117(15), STR_116(15), STR_115(15), 
 14522 ;;		 -> STR_114(2), STR_113(2), STR_112(2), STR_111(2), 
 14523 ;;		 -> STR_110(2), STR_109(15), STR_108(15), STR_107(15), 
 14524 ;;		 -> STR_106(15), STR_105(2), STR_104(2), STR_103(2), 
 14525 ;;		 -> STR_102(2), STR_101(2), STR_100(15), STR_99(15), 
 14526 ;;		 -> STR_98(15), STR_97(15), STR_96(2), STR_95(16), 
 14527 ;;		 -> STR_94(17), STR_93(17), STR_92(16), STR_91(16), 
 14528 ;;		 -> STR_90(16), STR_89(2), STR_88(7), STR_87(7), 
 14529 ;;		 -> STR_86(16), STR_85(16), STR_84(17), STR_83(17), 
 14530 ;;		 -> STR_82(16), STR_81(16), STR_80(16), STR_78(2), 
 14531 ;;		 -> STR_76(2), STR_75(16), STR_74(13), STR_73(12), 
 14532 ;;		 -> STR_72(17), STR_62(8), STR_61(8), STR_58(7), 
 14533 ;;		 -> STR_57(10), STR_55(11), STR_54(11), STR_49(9), 
 14534 ;;		 -> STR_48(11), STR_42(11), STR_41(10), STR_37(5), 
 14535 ;;		 -> STR_36(12), STR_35(8), STR_34(9), STR_28(17), 
 14536 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(9), 
 14537 ;;		 -> STR_23(10), STR_20(9), STR_19(8), STR_18(8), 
 14538 ;;		 -> STR_17(9), STR_16(10), STR_15(11), STR_14(13), 
 14539 ;;		 -> STR_13(13), STR_12(13), STR_11(12), STR_10(13), 
 14540 ;;		 -> STR_9(9), STR_8(12), STR_7(16), STR_6(2), 
 14541 ;;		 -> STR_5(2), STR_4(9), STR_3(15), STR_2(15), 
 14542 ;;		 -> STR_1(15), 
 14543 ;;  station_dot     1   15[BANK0 ] unsigned char 
 14544 ;;  start_page      1   16[BANK0 ] unsigned char 
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;  index           1   17[BANK0 ] unsigned char 
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  1    wreg      void 
 14549 ;; Registers used:
 14550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14551 ;; Tracked objects:
 14552 ;;		On entry : F/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14556 ;;      Params:         0       4       0       0       0       0       0       0       0
 14557 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14559 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14560 ;;Total ram usage:        5 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:   15
 14563 ;; This function calls:
 14564 ;;		_oled_putChar
 14565 ;; This function is called by:
 14566 ;;		_main
 14567 ;;		_test_oled
 14568 ;;		_test_switch
 14569 ;;		_test_comms
 14570 ;;		_test_leds
 14571 ;;		_test_adc
 14572 ;;		_moteHandler
 14573 ;;		_moteJoiningProcess
 14574 ;;		_moteRunningProcess
 14575 ;;		_USBapp_Handler
 14576 ;;		_oled_putUint8
 14577 ;;		_oled_putUint16
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text51
 14582  0035BE                     __ptext51:
 14583                           	opt stack 0
 14584  0035BE                     _oled_putString:
 14585                           	opt stack 13
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;SSD1306oLED.c: 275: uint8_t index;
 14589                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 14590                           
 14591                           ;incstack = 0
 14592  0035BE  C0D7  F0D9         	movff	oled_putString@station_dot,oled_putString@index
 14593  0035C2                     l10018:
 14594                           
 14595                           ; BSR set to: 0
 14596  0035C2  0E0F               	movlw	15
 14597  0035C4  65D9               	cpfsgt	oled_putString@index& (0+255),b
 14598  0035C6  D001               	goto	l10022
 14599  0035C8  0C0F               	retlw	15
 14600  0035CA                     l10022:
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;SSD1306oLED.c: 277: {
 14604                           ;SSD1306oLED.c: 278: if (*string != 0)
 14605  0035CA  C0D5  FFF6         	movff	oled_putString@string,tblptrl
 14606  0035CE  C0D6  FFF7         	movff	oled_putString@string+1,tblptrh
 14607  0035D2  6AF8               	clrf	tblptru,c
 14608  0035D4  0E07               	movlw	(high __ramtop+-1)
 14609  0035D6  64F7               	cpfsgt	tblptrh,c
 14610  0035D8  D003               	bra	u8137
 14611  0035DA  0008               	tblrd		*
 14612  0035DC  50F5               	movf	tablat,w,c
 14613  0035DE  D005               	bra	u8130
 14614  0035E0                     u8137:
 14615  0035E0  CFF6 FFE1          	movff	tblptrl,fsr1l
 14616  0035E4  CFF7 FFE2          	movff	tblptrh,fsr1h
 14617  0035E8  50E7               	movf	indf1,w,c
 14618  0035EA                     u8130:
 14619  0035EA  0900               	iorlw	0
 14620  0035EC  B4D8               	btfsc	status,2,c
 14621  0035EE  0012               	return	
 14622                           
 14623                           ;SSD1306oLED.c: 279: {
 14624                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 14625  0035F0  C0D9  F0CB         	movff	oled_putString@index,oled_putChar@station_dot
 14626  0035F4  C0D8  F0CC         	movff	oled_putString@start_page,oled_putChar@start_page
 14627  0035F8  C0D5  FFF6         	movff	oled_putString@string,tblptrl
 14628  0035FC  C0D6  FFF7         	movff	oled_putString@string+1,tblptrh
 14629  003600  6AF8               	clrf	tblptru,c
 14630  003602  0E07               	movlw	(high __ramtop+-1)
 14631  003604  64F7               	cpfsgt	tblptrh,c
 14632  003606  D003               	bra	u8157
 14633  003608  0008               	tblrd		*
 14634  00360A  50F5               	movf	tablat,w,c
 14635  00360C  D005               	bra	u8150
 14636  00360E                     u8157:
 14637  00360E  CFF6 FFE1          	movff	tblptrl,fsr1l
 14638  003612  CFF7 FFE2          	movff	tblptrh,fsr1h
 14639  003616  50E7               	movf	indf1,w,c
 14640  003618                     u8150:
 14641  003618  EC01  F01A         	call	_oled_putChar
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;SSD1306oLED.c: 281: *string++;
 14645  00361C  4BD5               	infsnz	oled_putString@string& (0+255),f,b
 14646  00361E  2BD6               	incf	(oled_putString@string+1)& (0+255),f,b
 14647                           
 14648                           ; BSR set to: 0
 14649                           
 14650                           ;SSD1306oLED.c: 282: }
 14651  003620  2BD9               	incf	oled_putString@index& (0+255),f,b
 14652  003622  D7CF               	goto	l10018
 14653  003624                     __end_of_oled_putString:
 14654                           	opt stack 0
 14655                           tblptru	equ	0xFF8
 14656                           tblptrh	equ	0xFF7
 14657                           tblptrl	equ	0xFF6
 14658                           tablat	equ	0xFF5
 14659                           prodl	equ	0xFF3
 14660                           intcon	equ	0xFF2
 14661                           postinc0	equ	0xFEE
 14662                           wreg	equ	0xFE8
 14663                           indf1	equ	0xFE7
 14664                           postdec1	equ	0xFE5
 14665                           fsr1h	equ	0xFE2
 14666                           fsr1l	equ	0xFE1
 14667                           indf2	equ	0xFDF
 14668                           fsr2h	equ	0xFDA
 14669                           fsr2l	equ	0xFD9
 14670                           status	equ	0xFD8
 14671                           
 14672 ;; *************** function _oled_clear *****************
 14673 ;; Defined at:
 14674 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;		None
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;		None
 14679 ;; Return value:  Size  Location     Type
 14680 ;;                  1    wreg      void 
 14681 ;; Registers used:
 14682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14683 ;; Tracked objects:
 14684 ;;		On entry : 0/0
 14685 ;;		On exit  : F/0
 14686 ;;		Unchanged: 0/0
 14687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14688 ;;      Params:         0       0       0       0       0       0       0       0       0
 14689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14691 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14692 ;;Total ram usage:        0 bytes
 14693 ;; Hardware stack levels used:    1
 14694 ;; Hardware stack levels required when called:   16
 14695 ;; This function calls:
 14696 ;;		_oled_clearRow
 14697 ;; This function is called by:
 14698 ;;		_main
 14699 ;;		_test_powerup
 14700 ;;		_test_oled
 14701 ;;		_test_switch
 14702 ;;		_test_adc
 14703 ;;		_moteHandler
 14704 ;;		_moteJoiningProcess
 14705 ;;		_moteRunningProcess
 14706 ;;		_USBapp_Handler
 14707 ;;		_oled_init
 14708 ;; This function uses a non-reentrant model
 14709 ;;
 14710                           
 14711                           	psect	text52
 14712  0040E4                     __ptext52:
 14713                           	opt stack 0
 14714  0040E4                     _oled_clear:
 14715                           	opt stack 12
 14716                           
 14717                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 14718                           
 14719                           ;incstack = 0
 14720  0040E4  0E00               	movlw	0
 14721  0040E6  EC29  F020         	call	_oled_clearRow
 14722                           
 14723                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 14724  0040EA  0E01               	movlw	1
 14725  0040EC  EC29  F020         	call	_oled_clearRow
 14726                           
 14727                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 14728  0040F0  0E02               	movlw	2
 14729  0040F2  EC29  F020         	call	_oled_clearRow
 14730                           
 14731                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 14732  0040F6  0E03               	movlw	3
 14733  0040F8  EF29  F020         	goto	_oled_clearRow
 14734  0040FC                     __end_of_oled_clear:
 14735                           	opt stack 0
 14736                           tblptru	equ	0xFF8
 14737                           tblptrh	equ	0xFF7
 14738                           tblptrl	equ	0xFF6
 14739                           tablat	equ	0xFF5
 14740                           prodl	equ	0xFF3
 14741                           intcon	equ	0xFF2
 14742                           postinc0	equ	0xFEE
 14743                           wreg	equ	0xFE8
 14744                           indf1	equ	0xFE7
 14745                           postdec1	equ	0xFE5
 14746                           fsr1h	equ	0xFE2
 14747                           fsr1l	equ	0xFE1
 14748                           indf2	equ	0xFDF
 14749                           fsr2h	equ	0xFDA
 14750                           fsr2l	equ	0xFD9
 14751                           status	equ	0xFD8
 14752                           
 14753 ;; *************** function _oled_clearRow *****************
 14754 ;; Defined at:
 14755 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  page            1    wreg     unsigned char 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;  page            1   13[BANK0 ] unsigned char 
 14760 ;;  index           1   14[BANK0 ] unsigned char 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      void 
 14763 ;; Registers used:
 14764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : F/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0
 14771 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14773 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14774 ;;Total ram usage:        2 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:   15
 14777 ;; This function calls:
 14778 ;;		_oled_putChar
 14779 ;; This function is called by:
 14780 ;;		_oled_clear
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text53
 14785  004052                     __ptext53:
 14786                           	opt stack 0
 14787  004052                     _oled_clearRow:
 14788                           	opt stack 12
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;incstack = 0
 14792                           ;oled_clearRow@page stored from wreg
 14793  004052  0100               	movlb	0	; () banked
 14794  004054  6FD5               	movwf	oled_clearRow@page& (0+255),b
 14795                           
 14796                           ;SSD1306oLED.c: 300: uint8_t index;
 14797                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 14798  004056  6BD6               	clrf	oled_clearRow@index& (0+255),b
 14799  004058                     l9862:
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;SSD1306oLED.c: 303: {
 14803                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 14804  004058  C0D6  F0CB         	movff	oled_clearRow@index,oled_putChar@station_dot
 14805  00405C  C0D5  F0CC         	movff	oled_clearRow@page,oled_putChar@start_page
 14806  004060  0E20               	movlw	32
 14807  004062  EC01  F01A         	call	_oled_putChar
 14808                           
 14809                           ; BSR set to: 0
 14810  004066  2BD6               	incf	oled_clearRow@index& (0+255),f,b
 14811                           
 14812                           ; BSR set to: 0
 14813  004068  0E0F               	movlw	15
 14814  00406A  65D6               	cpfsgt	oled_clearRow@index& (0+255),b
 14815  00406C  D7F5               	goto	l9862
 14816  00406E  0C0F               	retlw	15
 14817  004070                     __end_of_oled_clearRow:
 14818                           	opt stack 0
 14819                           tblptru	equ	0xFF8
 14820                           tblptrh	equ	0xFF7
 14821                           tblptrl	equ	0xFF6
 14822                           tablat	equ	0xFF5
 14823                           prodl	equ	0xFF3
 14824                           intcon	equ	0xFF2
 14825                           postinc0	equ	0xFEE
 14826                           wreg	equ	0xFE8
 14827                           indf1	equ	0xFE7
 14828                           postdec1	equ	0xFE5
 14829                           fsr1h	equ	0xFE2
 14830                           fsr1l	equ	0xFE1
 14831                           indf2	equ	0xFDF
 14832                           fsr2h	equ	0xFDA
 14833                           fsr2l	equ	0xFD9
 14834                           status	equ	0xFD8
 14835                           
 14836 ;; *************** function _oled_putChar *****************
 14837 ;; Defined at:
 14838 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 14839 ;; Parameters:    Size  Location     Type
 14840 ;;  k               1    wreg     unsigned char 
 14841 ;;  station_dot     1    3[BANK0 ] unsigned char 
 14842 ;;  start_page      1    4[BANK0 ] unsigned char 
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;  k               1   11[BANK0 ] unsigned char 
 14845 ;;  index           1   12[BANK0 ] unsigned char 
 14846 ;; Return value:  Size  Location     Type
 14847 ;;                  1    wreg      void 
 14848 ;; Registers used:
 14849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : F/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14855 ;;      Params:         0       2       0       0       0       0       0       0       0
 14856 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14857 ;;      Temps:          0       6       0       0       0       0       0       0       0
 14858 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14859 ;;Total ram usage:       10 bytes
 14860 ;; Hardware stack levels used:    1
 14861 ;; Hardware stack levels required when called:   14
 14862 ;; This function calls:
 14863 ;;		_Set_Column_Address
 14864 ;;		_Set_Page_Address
 14865 ;;		_oled_writeData
 14866 ;; This function is called by:
 14867 ;;		_test_adc
 14868 ;;		_oled_putString
 14869 ;;		_oled_clearRow
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text54
 14874  003402                     __ptext54:
 14875                           	opt stack 0
 14876  003402                     _oled_putChar:
 14877                           	opt stack 13
 14878                           
 14879                           ; BSR set to: 0
 14880                           ;incstack = 0
 14881                           ;oled_putChar@k stored from wreg
 14882  003402  0100               	movlb	0	; () banked
 14883  003404  6FD3               	movwf	oled_putChar@k& (0+255),b
 14884                           
 14885                           ;SSD1306oLED.c: 260: uint8_t index;
 14886                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 14887  003406  51CC               	movf	oled_putChar@start_page& (0+255),w,b
 14888  003408  EC9E  F020         	call	_Set_Page_Address
 14889                           
 14890                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 14891  00340C  0100               	movlb	0	; () banked
 14892  00340E  51CB               	movf	oled_putChar@station_dot& (0+255),w,b
 14893  003410  0D08               	mullw	8
 14894  003412  50F3               	movf	prodl,w,c
 14895  003414  EC38  F020         	call	_Set_Column_Address
 14896                           
 14897                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 14898  003418  988A               	bcf	3978,4,c	;volatile
 14899                           
 14900                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 14901  00341A  0100               	movlb	0	; () banked
 14902  00341C  6BD4               	clrf	oled_putChar@index& (0+255),b
 14903  00341E                     l9810:
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;SSD1306oLED.c: 267: {
 14907                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 14908  00341E  6BCD               	clrf	??_oled_putChar& (0+255),b
 14909  003420  69CE               	setf	(??_oled_putChar+1)& (0+255),b
 14910  003422  51D3               	movf	oled_putChar@k& (0+255),w,b
 14911  003424  6FCF               	movwf	(??_oled_putChar+2)& (0+255),b
 14912  003426  6BD0               	clrf	(??_oled_putChar+3)& (0+255),b
 14913  003428  90D8               	bcf	status,0,c
 14914  00342A  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14915  00342C  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14916  00342E  90D8               	bcf	status,0,c
 14917  003430  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14918  003432  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14919  003434  90D8               	bcf	status,0,c
 14920  003436  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14921  003438  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14922  00343A  C0F5  F0D1         	movff	_selectedFont,??_oled_putChar+4
 14923  00343E  C0F6  F0D2         	movff	_selectedFont+1,??_oled_putChar+5
 14924  003442  51CF               	movf	(??_oled_putChar+2)& (0+255),w,b
 14925  003444  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14926  003446  51D0               	movf	(??_oled_putChar+3)& (0+255),w,b
 14927  003448  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14928  00344A  51D4               	movf	oled_putChar@index& (0+255),w,b
 14929  00344C  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14930  00344E  0E00               	movlw	0
 14931  003450  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14932  003452  51CD               	movf	??_oled_putChar& (0+255),w,b
 14933  003454  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14934  003456  51CE               	movf	(??_oled_putChar+1)& (0+255),w,b
 14935  003458  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14936  00345A  C0D1  FFF6         	movff	??_oled_putChar+4,tblptrl
 14937  00345E  C0D2  FFF7         	movff	??_oled_putChar+5,tblptrh
 14938  003462                     	if	0	;tblptru may be non-zero
 14939  003462                     	endif
 14940  003462                     	if	0	;tblptru may be non-zero
 14941  003462                     	endif
 14942  003462  0008               	tblrd		*
 14943  003464  50F5               	movf	tablat,w,c
 14944  003466  ECF1  F020         	call	_oled_writeData
 14945  00346A  0100               	movlb	0	; () banked
 14946  00346C  2BD4               	incf	oled_putChar@index& (0+255),f,b
 14947                           
 14948                           ; BSR set to: 0
 14949  00346E  0E07               	movlw	7
 14950  003470  65D4               	cpfsgt	oled_putChar@index& (0+255),b
 14951  003472  D7D5               	goto	l9810
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;SSD1306oLED.c: 269: }
 14955                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 14956  003474  888A               	bsf	3978,4,c	;volatile
 14957                           
 14958                           ; BSR set to: 0
 14959  003476  0C07               	retlw	7	;funcret
 14960  003478                     __end_of_oled_putChar:
 14961                           	opt stack 0
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodl	equ	0xFF3
 14967                           intcon	equ	0xFF2
 14968                           postinc0	equ	0xFEE
 14969                           wreg	equ	0xFE8
 14970                           indf1	equ	0xFE7
 14971                           postdec1	equ	0xFE5
 14972                           fsr1h	equ	0xFE2
 14973                           fsr1l	equ	0xFE1
 14974                           indf2	equ	0xFDF
 14975                           fsr2h	equ	0xFDA
 14976                           fsr2l	equ	0xFD9
 14977                           status	equ	0xFD8
 14978                           
 14979 ;; *************** function _oled_writeData *****************
 14980 ;; Defined at:
 14981 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;  data            1    wreg     unsigned char 
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;  data            1    1[BANK0 ] unsigned char 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      void 
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : F/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0
 14996 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14998 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14999 ;;Total ram usage:        1 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:   12
 15002 ;; This function calls:
 15003 ;;		_SPI_Exchange8bit
 15004 ;; This function is called by:
 15005 ;;		_oled_putChar
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text55
 15010  0041E2                     __ptext55:
 15011                           	opt stack 0
 15012  0041E2                     _oled_writeData:
 15013                           	opt stack 14
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;incstack = 0
 15017                           ;oled_writeData@data stored from wreg
 15018  0041E2  6FC9               	movwf	oled_writeData@data& (0+255),b
 15019                           
 15020                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 15021  0041E4  8A8A               	bsf	3978,5,c	;volatile
 15022                           
 15023                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 15024  0041E6  0100               	movlb	0	; () banked
 15025  0041E8  51C9               	movf	oled_writeData@data& (0+255),w,b
 15026  0041EA  EFCD  F020         	goto	_SPI_Exchange8bit
 15027  0041EE                     __end_of_oled_writeData:
 15028                           	opt stack 0
 15029                           tblptru	equ	0xFF8
 15030                           tblptrh	equ	0xFF7
 15031                           tblptrl	equ	0xFF6
 15032                           tablat	equ	0xFF5
 15033                           prodl	equ	0xFF3
 15034                           intcon	equ	0xFF2
 15035                           postinc0	equ	0xFEE
 15036                           wreg	equ	0xFE8
 15037                           indf1	equ	0xFE7
 15038                           postdec1	equ	0xFE5
 15039                           fsr1h	equ	0xFE2
 15040                           fsr1l	equ	0xFE1
 15041                           indf2	equ	0xFDF
 15042                           fsr2h	equ	0xFDA
 15043                           fsr2l	equ	0xFD9
 15044                           status	equ	0xFD8
 15045                           
 15046 ;; *************** function _Set_Page_Address *****************
 15047 ;; Defined at:
 15048 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;  address         1    wreg     unsigned char 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;  address         1    2[BANK0 ] unsigned char 
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  1    wreg      void 
 15055 ;; Registers used:
 15056 ;;		wreg, status,2, status,0, cstack
 15057 ;; Tracked objects:
 15058 ;;		On entry : F/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15062 ;;      Params:         0       0       0       0       0       0       0       0       0
 15063 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15065 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15066 ;;Total ram usage:        1 bytes
 15067 ;; Hardware stack levels used:    1
 15068 ;; Hardware stack levels required when called:   13
 15069 ;; This function calls:
 15070 ;;		_oled_writeCommand
 15071 ;; This function is called by:
 15072 ;;		_oled_putChar
 15073 ;; This function uses a non-reentrant model
 15074 ;;
 15075                           
 15076                           	psect	text56
 15077  00413C                     __ptext56:
 15078                           	opt stack 0
 15079  00413C                     _Set_Page_Address:
 15080                           	opt stack 13
 15081                           
 15082                           ;incstack = 0
 15083                           ;Set_Page_Address@address stored from wreg
 15084  00413C  6FCA               	movwf	Set_Page_Address@address& (0+255),b
 15085                           
 15086                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 15087  00413E  0EB0               	movlw	176
 15088  004140  0100               	movlb	0	; () banked
 15089  004142  13CA               	iorwf	Set_Page_Address@address& (0+255),f,b
 15090                           
 15091                           ; BSR set to: 0
 15092                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 15093  004144  988A               	bcf	3978,4,c	;volatile
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 15097  004146  51CA               	movf	Set_Page_Address@address& (0+255),w,b
 15098  004148  ECF7  F020         	call	_oled_writeCommand
 15099                           
 15100                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 15101  00414C  888A               	bsf	3978,4,c	;volatile
 15102  00414E  0012               	return		;funcret
 15103  004150                     __end_of_Set_Page_Address:
 15104                           	opt stack 0
 15105                           tblptru	equ	0xFF8
 15106                           tblptrh	equ	0xFF7
 15107                           tblptrl	equ	0xFF6
 15108                           tablat	equ	0xFF5
 15109                           prodl	equ	0xFF3
 15110                           intcon	equ	0xFF2
 15111                           postinc0	equ	0xFEE
 15112                           wreg	equ	0xFE8
 15113                           indf1	equ	0xFE7
 15114                           postdec1	equ	0xFE5
 15115                           fsr1h	equ	0xFE2
 15116                           fsr1l	equ	0xFE1
 15117                           indf2	equ	0xFDF
 15118                           fsr2h	equ	0xFDA
 15119                           fsr2l	equ	0xFD9
 15120                           status	equ	0xFD8
 15121                           
 15122 ;; *************** function _Set_Column_Address *****************
 15123 ;; Defined at:
 15124 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;  address         1    wreg     unsigned char 
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;  address         1    2[BANK0 ] unsigned char 
 15129 ;; Return value:  Size  Location     Type
 15130 ;;                  1    wreg      void 
 15131 ;; Registers used:
 15132 ;;		wreg, status,2, status,0, cstack
 15133 ;; Tracked objects:
 15134 ;;		On entry : F/0
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15138 ;;      Params:         0       0       0       0       0       0       0       0       0
 15139 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15141 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15142 ;;Total ram usage:        1 bytes
 15143 ;; Hardware stack levels used:    1
 15144 ;; Hardware stack levels required when called:   13
 15145 ;; This function calls:
 15146 ;;		_oled_writeCommand
 15147 ;; This function is called by:
 15148 ;;		_oled_putChar
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152                           	psect	text57
 15153  004070                     __ptext57:
 15154                           	opt stack 0
 15155  004070                     _Set_Column_Address:
 15156                           	opt stack 13
 15157                           
 15158                           ;incstack = 0
 15159                           ;Set_Column_Address@address stored from wreg
 15160  004070  6FCA               	movwf	Set_Column_Address@address& (0+255),b
 15161                           
 15162                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 15163  004072  988A               	bcf	3978,4,c	;volatile
 15164                           
 15165                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 15166  004074  0100               	movlb	0	; () banked
 15167  004076  39CA               	swapf	Set_Column_Address@address& (0+255),w,b
 15168  004078  0B0F               	andlw	15
 15169  00407A  0910               	iorlw	16
 15170  00407C  ECF7  F020         	call	_oled_writeCommand
 15171                           
 15172                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 15173  004080  0100               	movlb	0	; () banked
 15174  004082  51CA               	movf	Set_Column_Address@address& (0+255),w,b
 15175  004084  0B0F               	andlw	15
 15176  004086  ECF7  F020         	call	_oled_writeCommand
 15177                           
 15178                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 15179  00408A  888A               	bsf	3978,4,c	;volatile
 15180  00408C  0012               	return		;funcret
 15181  00408E                     __end_of_Set_Column_Address:
 15182                           	opt stack 0
 15183                           tblptru	equ	0xFF8
 15184                           tblptrh	equ	0xFF7
 15185                           tblptrl	equ	0xFF6
 15186                           tablat	equ	0xFF5
 15187                           prodl	equ	0xFF3
 15188                           intcon	equ	0xFF2
 15189                           postinc0	equ	0xFEE
 15190                           wreg	equ	0xFE8
 15191                           indf1	equ	0xFE7
 15192                           postdec1	equ	0xFE5
 15193                           fsr1h	equ	0xFE2
 15194                           fsr1l	equ	0xFE1
 15195                           indf2	equ	0xFDF
 15196                           fsr2h	equ	0xFDA
 15197                           fsr2l	equ	0xFD9
 15198                           status	equ	0xFD8
 15199                           
 15200 ;; *************** function _oled_writeCommand *****************
 15201 ;; Defined at:
 15202 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  command         1    wreg     unsigned char 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  command         1    1[BANK0 ] unsigned char 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      void 
 15209 ;; Registers used:
 15210 ;;		wreg, status,2, cstack
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15216 ;;      Params:         0       0       0       0       0       0       0       0       0
 15217 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15219 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15220 ;;Total ram usage:        1 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:   12
 15223 ;; This function calls:
 15224 ;;		_SPI_Exchange8bit
 15225 ;; This function is called by:
 15226 ;;		_Set_Page_Address
 15227 ;;		_Set_Column_Address
 15228 ;;		_oled_devInit
 15229 ;;		_oled_setDisplay
 15230 ;;		_oled_displayOff
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text58
 15235  0041EE                     __ptext58:
 15236                           	opt stack 0
 15237  0041EE                     _oled_writeCommand:
 15238                           	opt stack 13
 15239                           
 15240                           ;incstack = 0
 15241                           ;oled_writeCommand@command stored from wreg
 15242  0041EE  0100               	movlb	0	; () banked
 15243  0041F0  6FC9               	movwf	oled_writeCommand@command& (0+255),b
 15244                           
 15245                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 15246  0041F2  9A8A               	bcf	3978,5,c	;volatile
 15247                           
 15248                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 15249  0041F4  51C9               	movf	oled_writeCommand@command& (0+255),w,b
 15250  0041F6  EFCD  F020         	goto	_SPI_Exchange8bit
 15251  0041FA                     __end_of_oled_writeCommand:
 15252                           	opt stack 0
 15253                           tblptru	equ	0xFF8
 15254                           tblptrh	equ	0xFF7
 15255                           tblptrl	equ	0xFF6
 15256                           tablat	equ	0xFF5
 15257                           prodl	equ	0xFF3
 15258                           intcon	equ	0xFF2
 15259                           postinc0	equ	0xFEE
 15260                           wreg	equ	0xFE8
 15261                           indf1	equ	0xFE7
 15262                           postdec1	equ	0xFE5
 15263                           fsr1h	equ	0xFE2
 15264                           fsr1l	equ	0xFE1
 15265                           indf2	equ	0xFDF
 15266                           fsr2h	equ	0xFDA
 15267                           fsr2l	equ	0xFD9
 15268                           status	equ	0xFD8
 15269                           
 15270 ;; *************** function _SPI_Exchange8bit *****************
 15271 ;; Defined at:
 15272 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  data            1    wreg     unsigned char 
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;  data            1    0[BANK0 ] unsigned char 
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      unsigned char 
 15279 ;; Registers used:
 15280 ;;		wreg, status,2
 15281 ;; Tracked objects:
 15282 ;;		On entry : F/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0
 15287 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15289 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15290 ;;Total ram usage:        1 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; Hardware stack levels required when called:   11
 15293 ;; This function calls:
 15294 ;;		Nothing
 15295 ;; This function is called by:
 15296 ;;		_oled_writeCommand
 15297 ;;		_oled_writeData
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text59
 15302  00419A                     __ptext59:
 15303                           	opt stack 0
 15304  00419A                     _SPI_Exchange8bit:
 15305                           	opt stack 14
 15306                           
 15307                           ;incstack = 0
 15308                           ;SPI_Exchange8bit@data stored from wreg
 15309  00419A  6FC8               	movwf	SPI_Exchange8bit@data& (0+255),b
 15310                           
 15311                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 15312  00419C  9EC6               	bcf	4038,7,c	;volatile
 15313                           
 15314                           ;spi.c: 86: SSPBUF = data;
 15315  00419E  C0C8  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 15316  0041A2                     l1207:
 15317  0041A2  A0C7               	btfss	4039,0,c	;volatile
 15318  0041A4  D7FE               	goto	l1207
 15319                           
 15320                           ;spi.c: 90: }
 15321                           ;spi.c: 92: return (SSPBUF);
 15322  0041A6  50C9               	movf	4041,w,c	;volatile
 15323  0041A8  0012               	return		;funcret
 15324  0041AA                     __end_of_SPI_Exchange8bit:
 15325                           	opt stack 0
 15326                           tblptru	equ	0xFF8
 15327                           tblptrh	equ	0xFF7
 15328                           tblptrl	equ	0xFF6
 15329                           tablat	equ	0xFF5
 15330                           prodl	equ	0xFF3
 15331                           intcon	equ	0xFF2
 15332                           postinc0	equ	0xFEE
 15333                           wreg	equ	0xFE8
 15334                           indf1	equ	0xFE7
 15335                           postdec1	equ	0xFE5
 15336                           fsr1h	equ	0xFE2
 15337                           fsr1l	equ	0xFE1
 15338                           indf2	equ	0xFDF
 15339                           fsr2h	equ	0xFDA
 15340                           fsr2l	equ	0xFD9
 15341                           status	equ	0xFD8
 15342                           
 15343 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 15344 ;; Defined at:
 15345 ;;		line 125 in file "../Includes/Board/USBapp.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;		None
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;		None
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  1    wreg      void 
 15352 ;; Registers used:
 15353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15354 ;; Tracked objects:
 15355 ;;		On entry : F/0
 15356 ;;		On exit  : F/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0
 15360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15361 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15362 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15363 ;;Total ram usage:        1 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; Hardware stack levels required when called:   13
 15366 ;; This function calls:
 15367 ;;		_CDCTxService
 15368 ;;		_EUSART_Read
 15369 ;;		_EUSART_Write
 15370 ;;		_MOTEapp_setResponseReady
 15371 ;;		_USBapp_getrxByteFlag
 15372 ;;		_getsUSBUSART
 15373 ;;		_putUSBUSART
 15374 ;; This function is called by:
 15375 ;;		_USBapp_Handler
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text60
 15380  002A34                     __ptext60:
 15381                           	opt stack 0
 15382  002A34                     _USBapp_DeviceCdcEmulatorHandler:
 15383                           	opt stack 16
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 15387                           
 15388                           ;incstack = 0
 15389  002A34  0E1F               	movlw	31
 15390  002A36  658A               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 15391  002A38  0C1F               	retlw	31
 15392                           
 15393                           ; BSR set to: 0
 15394  002A3A  B260               	btfsc	3936,1,c	;volatile
 15395  002A3C  0C1F               	retlw	31
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 15399  002A3E  501B               	movf	_RS232_Out_Data_Rdy,w,c
 15400  002A40  E10E               	bnz	l834
 15401                           
 15402                           ; BSR set to: 0
 15403                           ;USBapp.c: 132: {
 15404                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 15405  002A42  0E40               	movlw	low _USB_Buffer
 15406  002A44  6FCF               	movwf	getsUSBUSART@buffer& (0+255),b
 15407  002A46  0E01               	movlw	high _USB_Buffer
 15408  002A48  6FD0               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15409  002A4A  0E40               	movlw	64
 15410  002A4C  6FD1               	movwf	getsUSBUSART@len& (0+255),b
 15411  002A4E  ECB1  F017         	call	_getsUSBUSART	;wreg free
 15412  002A52  6E19               	movwf	_LastRS232Out,c
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;USBapp.c: 134: if(LastRS232Out > 0)
 15416  002A54  5019               	movf	_LastRS232Out,w,c
 15417  002A56  E003               	bz	l834
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;USBapp.c: 135: {
 15421                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 15422  002A58  0E01               	movlw	1
 15423  002A5A  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;USBapp.c: 137: RS232cp = 0;
 15427  002A5C  6A1C               	clrf	_RS232cp,c
 15428  002A5E                     l834:
 15429                           
 15430                           ; BSR set to: 0
 15431                           ;USBapp.c: 138: }
 15432                           ;USBapp.c: 139: }
 15433                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 15434  002A5E  501B               	movf	_RS232_Out_Data_Rdy,w,c
 15435  002A60  E010               	bz	l11888
 15436                           
 15437                           ; BSR set to: 0
 15438  002A62  A2AC               	btfss	4012,1,c	;volatile
 15439  002A64  D00E               	goto	l11888
 15440                           
 15441                           ; BSR set to: 0
 15442                           ;USBapp.c: 143: {
 15443                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 15444  002A66  0E40               	movlw	low _USB_Buffer
 15445  002A68  241C               	addwf	_RS232cp,w,c
 15446  002A6A  6ED9               	movwf	fsr2l,c
 15447  002A6C  6ADA               	clrf	fsr2h,c
 15448  002A6E  0E01               	movlw	high _USB_Buffer
 15449  002A70  22DA               	addwfc	fsr2h,f,c
 15450  002A72  50DF               	movf	indf2,w,c
 15451  002A74  EC91  F01E         	call	_EUSART_Write
 15452                           
 15453                           ;USBapp.c: 146: ++RS232cp;
 15454  002A78  2A1C               	incf	_RS232cp,f,c
 15455                           
 15456                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 15457  002A7A  5019               	movf	_LastRS232Out,w,c
 15458  002A7C  181C               	xorwf	_RS232cp,w,c
 15459  002A7E  E101               	bnz	l11888
 15460                           
 15461                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 15462  002A80  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 15463  002A82                     l11888:
 15464                           
 15465                           ;USBapp.c: 149: }
 15466                           ;USBapp.c: 152: if ((eusartRxCount))
 15467  002A82  5023               	movf	_eusartRxCount,w,c	;volatile
 15468  002A84  E01C               	bz	l11904
 15469                           
 15470                           ;USBapp.c: 153: {
 15471                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 15472  002A86  EC22  F021         	call	_USBapp_getrxByteFlag	;wreg free
 15473  002A8A  0900               	iorlw	0
 15474  002A8C  E018               	bz	l11904
 15475  002A8E  0E3F               	movlw	63
 15476  002A90  601A               	cpfslt	_NextUSBOut,c
 15477  002A92  D015               	goto	l11904
 15478                           
 15479                           ;USBapp.c: 155: {
 15480                           ;USBapp.c: 156: __nop();
 15481  002A94  F000               	nop	
 15482                           
 15483                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 15484  002A96  ECAB  F01E         	call	_EUSART_Read	;wreg free
 15485  002A9A  6FD5               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 15486  002A9C  0E40               	movlw	low _USB_Buffer
 15487  002A9E  241A               	addwf	_NextUSBOut,w,c
 15488  002AA0  6ED9               	movwf	fsr2l,c
 15489  002AA2  6ADA               	clrf	fsr2h,c
 15490  002AA4  0E01               	movlw	high _USB_Buffer
 15491  002AA6  22DA               	addwfc	fsr2h,f,c
 15492  002AA8  C0D5  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;USBapp.c: 158: ++NextUSBOut;
 15496  002AAC  2A1A               	incf	_NextUSBOut,f,c
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 15500  002AAE  0E40               	movlw	low _USB_Buffer
 15501  002AB0  241A               	addwf	_NextUSBOut,w,c
 15502  002AB2  6ED9               	movwf	fsr2l,c
 15503  002AB4  6ADA               	clrf	fsr2h,c
 15504  002AB6  0E01               	movlw	high _USB_Buffer
 15505  002AB8  22DA               	addwfc	fsr2h,f,c
 15506  002ABA  6ADF               	clrf	indf2,c
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;USBapp.c: 160: rxByteFlag = 0;
 15510  002ABC  6A2A               	clrf	_rxByteFlag,c	;volatile
 15511  002ABE                     l11904:
 15512                           
 15513                           ;USBapp.c: 161: }
 15514                           ;USBapp.c: 162: }
 15515                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 15516  002ABE  5020               	movf	_cdc_trf_state,w,c
 15517  002AC0  E002 EF1C  F00F    	bnz	_CDCTxService
 15518  002AC6  501A               	movf	_NextUSBOut,w,c
 15519  002AC8  E102 EF1C  F00F    	bz	_CDCTxService
 15520                           
 15521                           ;USBapp.c: 167: {
 15522                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 15523  002ACE  0E40               	movlw	low _USB_Buffer
 15524  002AD0  0100               	movlb	0	; () banked
 15525  002AD2  6FC8               	movwf	putUSBUSART@data& (0+255),b
 15526  002AD4  0E01               	movlw	high _USB_Buffer
 15527  002AD6  6FC9               	movwf	(putUSBUSART@data+1)& (0+255),b
 15528  002AD8  C01A  F0CA         	movff	_NextUSBOut,putUSBUSART@length
 15529  002ADC  EC64  F020         	call	_putUSBUSART	;wreg free
 15530                           
 15531                           ; BSR set to: 0
 15532                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 15533  002AE0  EC2A  F021         	call	_MOTEapp_setResponseReady	;wreg free
 15534                           
 15535                           ; BSR set to: 0
 15536                           ;USBapp.c: 170: NextUSBOut = 0;
 15537  002AE4  6A1A               	clrf	_NextUSBOut,c
 15538                           
 15539                           ;USBapp.c: 171: }
 15540                           ;USBapp.c: 173: CDCTxService();
 15541  002AE6  EF1C  F00F         	goto	_CDCTxService	;wreg free
 15542  002AEA                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 15543                           	opt stack 0
 15544                           tblptru	equ	0xFF8
 15545                           tblptrh	equ	0xFF7
 15546                           tblptrl	equ	0xFF6
 15547                           tablat	equ	0xFF5
 15548                           prodl	equ	0xFF3
 15549                           intcon	equ	0xFF2
 15550                           postinc0	equ	0xFEE
 15551                           wreg	equ	0xFE8
 15552                           indf1	equ	0xFE7
 15553                           postdec1	equ	0xFE5
 15554                           fsr1h	equ	0xFE2
 15555                           fsr1l	equ	0xFE1
 15556                           indf2	equ	0xFDF
 15557                           fsr2h	equ	0xFDA
 15558                           fsr2l	equ	0xFD9
 15559                           status	equ	0xFD8
 15560                           
 15561 ;; *************** function _putUSBUSART *****************
 15562 ;; Defined at:
 15563 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  data            2    0[BANK0 ] PTR unsigned char 
 15566 ;;		 -> USB_Buffer(64), 
 15567 ;;  length          1    2[BANK0 ] unsigned char 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		wreg, status,2, status,0
 15574 ;; Tracked objects:
 15575 ;;		On entry : F/0
 15576 ;;		On exit  : F/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15579 ;;      Params:         0       3       0       0       0       0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15582 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15583 ;;Total ram usage:        3 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:   11
 15586 ;; This function calls:
 15587 ;;		Nothing
 15588 ;; This function is called by:
 15589 ;;		_USBapp_DeviceCdcEmulatorHandler
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           	psect	text61
 15594  0040C8                     __ptext61:
 15595                           	opt stack 0
 15596  0040C8                     _putUSBUSART:
 15597                           	opt stack 17
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;incstack = 0
 15604  0040C8  94A3               	bcf	4003,2,c	;volatile
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 15608  0040CA  5020               	movf	_cdc_trf_state,w,c
 15609  0040CC  E109               	bnz	l10592
 15610                           
 15611                           ; BSR set to: 0
 15612                           ;usb_device_cdc.c: 530: {
 15613                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 15614  0040CE  C0C8  F073         	movff	putUSBUSART@data,_pCDCSrc
 15615  0040D2  C0C9  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 15616                           
 15617                           ; BSR set to: 0
 15618  0040D6  C0CA  F092         	movff	putUSBUSART@length,_cdc_tx_len
 15619                           
 15620                           ; BSR set to: 0
 15621  0040DA  0E01               	movlw	1
 15622  0040DC  6F90               	movwf	_cdc_mem_type& (0+255),b
 15623                           
 15624                           ; BSR set to: 0
 15625  0040DE  6E20               	movwf	_cdc_trf_state,c
 15626  0040E0                     l10592:
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;usb_device_cdc.c: 532: }
 15630                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 15631  0040E0  84A3               	bsf	4003,2,c	;volatile
 15632                           
 15633                           ; BSR set to: 0
 15634  0040E2  0012               	return		;funcret
 15635  0040E4                     __end_of_putUSBUSART:
 15636                           	opt stack 0
 15637                           tblptru	equ	0xFF8
 15638                           tblptrh	equ	0xFF7
 15639                           tblptrl	equ	0xFF6
 15640                           tablat	equ	0xFF5
 15641                           prodl	equ	0xFF3
 15642                           intcon	equ	0xFF2
 15643                           postinc0	equ	0xFEE
 15644                           wreg	equ	0xFE8
 15645                           indf1	equ	0xFE7
 15646                           postdec1	equ	0xFE5
 15647                           fsr1h	equ	0xFE2
 15648                           fsr1l	equ	0xFE1
 15649                           indf2	equ	0xFDF
 15650                           fsr2h	equ	0xFDA
 15651                           fsr2l	equ	0xFD9
 15652                           status	equ	0xFD8
 15653                           
 15654 ;; *************** function _getsUSBUSART *****************
 15655 ;; Defined at:
 15656 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 15659 ;;		 -> USB_Buffer(64), 
 15660 ;;  len             1    9[BANK0 ] unsigned char 
 15661 ;; Auto vars:     Size  Location     Type
 15662 ;;		None
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  1    wreg      unsigned char 
 15665 ;; Registers used:
 15666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15667 ;; Tracked objects:
 15668 ;;		On entry : F/0
 15669 ;;		On exit  : F/0
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15672 ;;      Params:         0       3       0       0       0       0       0       0       0
 15673 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15674 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15675 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15676 ;;Total ram usage:        6 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:   12
 15679 ;; This function calls:
 15680 ;;		_USBTransferOnePacket
 15681 ;; This function is called by:
 15682 ;;		_USBapp_DeviceCdcEmulatorHandler
 15683 ;; This function uses a non-reentrant model
 15684 ;;
 15685                           
 15686                           	psect	text62
 15687  002F62                     __ptext62:
 15688                           	opt stack 0
 15689  002F62                     _getsUSBUSART:
 15690                           	opt stack 16
 15691                           
 15692                           ; BSR set to: 0
 15693                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;incstack = 0
 15697  002F62  6B91               	clrf	_cdc_rx_len& (0+255),b
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 15701  002F64  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15702  002F66  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 15703  002F68  E009               	bz	l1890
 15704                           
 15705                           ; BSR set to: 0
 15706  002F6A  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15707  002F6E  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15708  002F72  0E01               	movlw	1
 15709  002F74  AEDF               	btfss	indf2,7,c
 15710  002F76  0E00               	movlw	0
 15711  002F78  6FD3               	movwf	_getsUSBUSART$5683& (0+255),b
 15712  002F7A  D001               	goto	L52
 15713  002F7C                     l1890:
 15714                           
 15715                           ; BSR set to: 0
 15716  002F7C  6BD3               	clrf	_getsUSBUSART$5683& (0+255),b
 15717  002F7E                     L52:
 15718  002F7E  6BD4               	clrf	(_getsUSBUSART$5683+1)& (0+255),b
 15719                           
 15720                           ; BSR set to: 0
 15721  002F80  51D3               	movf	_getsUSBUSART$5683& (0+255),w,b
 15722  002F82  11D4               	iorwf	(_getsUSBUSART$5683+1)& (0+255),w,b
 15723  002F84  E134               	bnz	l10572
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;usb_device_cdc.c: 437: {
 15727                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15728  002F86  EE20 F001          	lfsr	2,1
 15729  002F8A  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15730  002F8C  26D9               	addwf	fsr2l,f,c
 15731  002F8E  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15732  002F90  22DA               	addwfc	fsr2h,f,c
 15733  002F92  51D1               	movf	getsUSBUSART@len& (0+255),w,b
 15734  002F94  5CDE               	subwf	postinc2,w,c
 15735  002F96  E208               	bc	l10562
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15739  002F98  EE20 F001          	lfsr	2,1
 15740  002F9C  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15741  002F9E  26D9               	addwf	fsr2l,f,c
 15742  002FA0  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15743  002FA2  22DA               	addwfc	fsr2h,f,c
 15744  002FA4  50DF               	movf	indf2,w,c
 15745  002FA6  6FD1               	movwf	getsUSBUSART@len& (0+255),b
 15746  002FA8                     l10562:
 15747                           
 15748                           ; BSR set to: 0
 15749                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15750  002FA8  6B91               	clrf	_cdc_rx_len& (0+255),b
 15751  002FAA  D00F               	goto	l10568
 15752  002FAC                     l10564:
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15756  002FAC  0E40               	movlw	64
 15757  002FAE  2591               	addwf	_cdc_rx_len& (0+255),w,b
 15758  002FB0  6ED9               	movwf	fsr2l,c
 15759  002FB2  6ADA               	clrf	fsr2h,c
 15760  002FB4  0E05               	movlw	5
 15761  002FB6  22DA               	addwfc	fsr2h,f,c
 15762  002FB8  5191               	movf	_cdc_rx_len& (0+255),w,b
 15763  002FBA  25CF               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15764  002FBC  6EE1               	movwf	fsr1l,c
 15765  002FBE  0E00               	movlw	0
 15766  002FC0  21D0               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15767  002FC2  6EE2               	movwf	fsr1h,c
 15768  002FC4  CFDF FFE7          	movff	indf2,indf1
 15769                           
 15770                           ; BSR set to: 0
 15771  002FC8  2B91               	incf	_cdc_rx_len& (0+255),f,b
 15772  002FCA                     l10568:
 15773                           
 15774                           ; BSR set to: 0
 15775  002FCA  51D1               	movf	getsUSBUSART@len& (0+255),w,b
 15776  002FCC  5D91               	subwf	_cdc_rx_len& (0+255),w,b
 15777  002FCE  E3EE               	bnc	l10564
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15781  002FD0  0E00               	movlw	0
 15782  002FD2  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 15783  002FD4  0E40               	movlw	64
 15784  002FD6  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 15785  002FD8  0E05               	movlw	5
 15786  002FDA  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15787  002FDC  0E40               	movlw	64
 15788  002FDE  6FCB               	movwf	USBTransferOnePacket@len& (0+255),b
 15789  002FE0  0E02               	movlw	2
 15790  002FE2  EC79  F016         	call	_USBTransferOnePacket
 15791  002FE6  C0C8  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15792  002FEA  C0C9  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15793  002FEE                     l10572:
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;usb_device_cdc.c: 457: }
 15797                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 15798  002FEE  5191               	movf	_cdc_rx_len& (0+255),w,b
 15799                           
 15800                           ; BSR set to: 0
 15801  002FF0  0012               	return		;funcret
 15802  002FF2                     __end_of_getsUSBUSART:
 15803                           	opt stack 0
 15804                           tblptru	equ	0xFF8
 15805                           tblptrh	equ	0xFF7
 15806                           tblptrl	equ	0xFF6
 15807                           tablat	equ	0xFF5
 15808                           prodl	equ	0xFF3
 15809                           intcon	equ	0xFF2
 15810                           postinc0	equ	0xFEE
 15811                           wreg	equ	0xFE8
 15812                           indf1	equ	0xFE7
 15813                           postdec1	equ	0xFE5
 15814                           fsr1h	equ	0xFE2
 15815                           fsr1l	equ	0xFE1
 15816                           indf2	equ	0xFDF
 15817                           postinc2	equ	0xFDE
 15818                           fsr2h	equ	0xFDA
 15819                           fsr2l	equ	0xFD9
 15820                           status	equ	0xFD8
 15821                           
 15822 ;; *************** function _USBapp_getrxByteFlag *****************
 15823 ;; Defined at:
 15824 ;;		line 231 in file "../Includes/Board/USBapp.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      unsigned char 
 15831 ;; Registers used:
 15832 ;;		wreg, status,2
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15841 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:   11
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_USBapp_DeviceCdcEmulatorHandler
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text63
 15853  004244                     __ptext63:
 15854                           	opt stack 0
 15855  004244                     _USBapp_getrxByteFlag:
 15856                           	opt stack 17
 15857                           
 15858                           ;USBapp.c: 233: return rxByteFlag;
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;incstack = 0
 15862  004244  502A               	movf	_rxByteFlag,w,c	;volatile
 15863  004246  0012               	return		;funcret
 15864  004248                     __end_of_USBapp_getrxByteFlag:
 15865                           	opt stack 0
 15866                           tblptru	equ	0xFF8
 15867                           tblptrh	equ	0xFF7
 15868                           tblptrl	equ	0xFF6
 15869                           tablat	equ	0xFF5
 15870                           prodl	equ	0xFF3
 15871                           intcon	equ	0xFF2
 15872                           postinc0	equ	0xFEE
 15873                           wreg	equ	0xFE8
 15874                           indf1	equ	0xFE7
 15875                           postdec1	equ	0xFE5
 15876                           fsr1h	equ	0xFE2
 15877                           fsr1l	equ	0xFE1
 15878                           indf2	equ	0xFDF
 15879                           postinc2	equ	0xFDE
 15880                           fsr2h	equ	0xFDA
 15881                           fsr2l	equ	0xFD9
 15882                           status	equ	0xFD8
 15883                           
 15884 ;; *************** function _MOTEapp_setResponseReady *****************
 15885 ;; Defined at:
 15886 ;;		line 1220 in file "../Includes/Board/MOTEapp.c"
 15887 ;; Parameters:    Size  Location     Type
 15888 ;;		None
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;		None
 15891 ;; Return value:  Size  Location     Type
 15892 ;;                  1    wreg      void 
 15893 ;; Registers used:
 15894 ;;		None
 15895 ;; Tracked objects:
 15896 ;;		On entry : F/0
 15897 ;;		On exit  : F/0
 15898 ;;		Unchanged: F/0
 15899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15900 ;;      Params:         0       0       0       0       0       0       0       0       0
 15901 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15902 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15903 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15904 ;;Total ram usage:        0 bytes
 15905 ;; Hardware stack levels used:    1
 15906 ;; Hardware stack levels required when called:   11
 15907 ;; This function calls:
 15908 ;;		Nothing
 15909 ;; This function is called by:
 15910 ;;		_USBapp_DeviceCdcEmulatorHandler
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text64
 15915  004254                     __ptext64:
 15916                           	opt stack 0
 15917  004254                     _MOTEapp_setResponseReady:
 15918                           	opt stack 17
 15919                           
 15920                           ; BSR set to: 0
 15921                           
 15922                           ;incstack = 0
 15923  004254  0012               	return		;funcret
 15924  004256                     __end_of_MOTEapp_setResponseReady:
 15925                           	opt stack 0
 15926                           tblptru	equ	0xFF8
 15927                           tblptrh	equ	0xFF7
 15928                           tblptrl	equ	0xFF6
 15929                           tablat	equ	0xFF5
 15930                           prodl	equ	0xFF3
 15931                           intcon	equ	0xFF2
 15932                           postinc0	equ	0xFEE
 15933                           wreg	equ	0xFE8
 15934                           indf1	equ	0xFE7
 15935                           postdec1	equ	0xFE5
 15936                           fsr1h	equ	0xFE2
 15937                           fsr1l	equ	0xFE1
 15938                           indf2	equ	0xFDF
 15939                           postinc2	equ	0xFDE
 15940                           fsr2h	equ	0xFDA
 15941                           fsr2l	equ	0xFD9
 15942                           status	equ	0xFD8
 15943                           
 15944 ;; *************** function _EUSART_Write *****************
 15945 ;; Defined at:
 15946 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;  txData          1    wreg     unsigned char 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  txData          1    0[BANK0 ] unsigned char 
 15951 ;; Return value:  Size  Location     Type
 15952 ;;                  1    wreg      void 
 15953 ;; Registers used:
 15954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15955 ;; Tracked objects:
 15956 ;;		On entry : 0/0
 15957 ;;		On exit  : 0/0
 15958 ;;		Unchanged: 0/0
 15959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15960 ;;      Params:         0       0       0       0       0       0       0       0       0
 15961 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15963 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15964 ;;Total ram usage:        1 bytes
 15965 ;; Hardware stack levels used:    1
 15966 ;; Hardware stack levels required when called:   11
 15967 ;; This function calls:
 15968 ;;		Nothing
 15969 ;; This function is called by:
 15970 ;;		_EndLine
 15971 ;;		_sendCommand
 15972 ;;		_sendDataCommand
 15973 ;;		_USBapp_DeviceCdcEmulatorHandler
 15974 ;; This function uses a non-reentrant model
 15975 ;;
 15976                           
 15977                           	psect	text65
 15978  003D22                     __ptext65:
 15979                           	opt stack 0
 15980  003D22                     _EUSART_Write:
 15981                           	opt stack 14
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;incstack = 0
 15985                           ;EUSART_Write@txData stored from wreg
 15986  003D22  0100               	movlb	0	; () banked
 15987  003D24  6FC8               	movwf	EUSART_Write@txData& (0+255),b
 15988  003D26                     l9818:
 15989  003D26  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 15990  003D28  E0FE               	bz	l9818
 15991                           
 15992                           ;eusart.c: 143: }
 15993                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 15994  003D2A  B89D               	btfsc	3997,4,c	;volatile
 15995  003D2C  D003               	goto	l1058
 15996                           
 15997                           ;eusart.c: 146: {
 15998                           ;eusart.c: 147: TXREG = txData;
 15999  003D2E  C0C8  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 16000                           
 16001                           ;eusart.c: 148: }
 16002  003D32  D00F               	goto	l9832
 16003  003D34                     l1058:
 16004                           
 16005                           ;eusart.c: 149: else
 16006                           ;eusart.c: 150: {
 16007                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 16008  003D34  989D               	bcf	3997,4,c	;volatile
 16009                           
 16010                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 16011  003D36  0E00               	movlw	low _eusartTxBuffer
 16012  003D38  2427               	addwf	_eusartTxHead,w,c
 16013  003D3A  6ED9               	movwf	fsr2l,c
 16014  003D3C  6ADA               	clrf	fsr2h,c
 16015  003D3E  0E02               	movlw	high _eusartTxBuffer
 16016  003D40  22DA               	addwfc	fsr2h,f,c
 16017  003D42  C0C8  FFDF         	movff	EUSART_Write@txData,indf2
 16018  003D46  2A27               	incf	_eusartTxHead,f,c
 16019                           
 16020                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16021  003D48  0E3F               	movlw	63
 16022  003D4A  6427               	cpfsgt	_eusartTxHead,c
 16023  003D4C  D001               	goto	l9830
 16024                           
 16025                           ;eusart.c: 154: {
 16026                           ;eusart.c: 155: eusartTxHead = 0;
 16027  003D4E  6A27               	clrf	_eusartTxHead,c
 16028  003D50                     l9830:
 16029                           
 16030                           ;eusart.c: 156: }
 16031                           ;eusart.c: 157: eusartTxBufferRemaining--;
 16032  003D50  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 16033  003D52                     l9832:
 16034                           
 16035                           ;eusart.c: 158: }
 16036                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 16037  003D52  889D               	bsf	3997,4,c	;volatile
 16038  003D54  0012               	return		;funcret
 16039  003D56                     __end_of_EUSART_Write:
 16040                           	opt stack 0
 16041                           tblptru	equ	0xFF8
 16042                           tblptrh	equ	0xFF7
 16043                           tblptrl	equ	0xFF6
 16044                           tablat	equ	0xFF5
 16045                           prodl	equ	0xFF3
 16046                           intcon	equ	0xFF2
 16047                           postinc0	equ	0xFEE
 16048                           wreg	equ	0xFE8
 16049                           indf1	equ	0xFE7
 16050                           postdec1	equ	0xFE5
 16051                           fsr1h	equ	0xFE2
 16052                           fsr1l	equ	0xFE1
 16053                           indf2	equ	0xFDF
 16054                           postinc2	equ	0xFDE
 16055                           fsr2h	equ	0xFDA
 16056                           fsr2l	equ	0xFD9
 16057                           status	equ	0xFD8
 16058                           
 16059 ;; *************** function _EUSART_Read *****************
 16060 ;; Defined at:
 16061 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  readValue       1    0[BANK0 ] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      unsigned char 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : F/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0
 16076 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16078 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16079 ;;Total ram usage:        1 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:   11
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_MOTEapp_getModemResponse
 16086 ;;		_USBapp_DeviceCdcEmulatorHandler
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text66
 16091  003D56                     __ptext66:
 16092                           	opt stack 0
 16093  003D56                     _EUSART_Read:
 16094                           	opt stack 14
 16095                           
 16096                           ;eusart.c: 121: while(0 == eusartRxCount)
 16097                           
 16098                           ;incstack = 0
 16099  003D56  D001               	goto	l9836
 16100  003D58                     l1049:
 16101                           
 16102                           ;eusart.c: 122: {
 16103                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 16104  003D58  8E89               	bsf	3977,7,c	;volatile
 16105  003D5A                     l9836:
 16106  003D5A  5023               	movf	_eusartRxCount,w,c	;volatile
 16107  003D5C  E0FD               	bz	l1049
 16108                           
 16109                           ;eusart.c: 124: }
 16110                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 16111  003D5E  9A9D               	bcf	3997,5,c	;volatile
 16112                           
 16113                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 16114  003D60  0E00               	movlw	low _eusartRxBuffer
 16115  003D62  2425               	addwf	_eusartRxTail,w,c
 16116  003D64  6ED9               	movwf	fsr2l,c
 16117  003D66  6ADA               	clrf	fsr2h,c
 16118  003D68  0E01               	movlw	high _eusartRxBuffer
 16119  003D6A  22DA               	addwfc	fsr2h,f,c
 16120  003D6C  50DF               	movf	indf2,w,c
 16121  003D6E  0100               	movlb	0	; () banked
 16122  003D70  6FC8               	movwf	EUSART_Read@readValue& (0+255),b
 16123                           
 16124                           ; BSR set to: 0
 16125  003D72  2A25               	incf	_eusartRxTail,f,c
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 16129  003D74  0E3F               	movlw	63
 16130  003D76  6425               	cpfsgt	_eusartRxTail,c
 16131  003D78  D001               	goto	l9846
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;eusart.c: 130: {
 16135                           ;eusart.c: 131: eusartRxTail = 0;
 16136  003D7A  6A25               	clrf	_eusartRxTail,c
 16137  003D7C                     l9846:
 16138                           
 16139                           ; BSR set to: 0
 16140                           ;eusart.c: 132: }
 16141                           ;eusart.c: 133: eusartRxCount--;
 16142  003D7C  0623               	decf	_eusartRxCount,f,c	;volatile
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 16146  003D7E  8A9D               	bsf	3997,5,c	;volatile
 16147                           
 16148                           ; BSR set to: 0
 16149                           ;eusart.c: 136: return readValue;
 16150  003D80  51C8               	movf	EUSART_Read@readValue& (0+255),w,b
 16151                           
 16152                           ; BSR set to: 0
 16153  003D82  0012               	return		;funcret
 16154  003D84                     __end_of_EUSART_Read:
 16155                           	opt stack 0
 16156                           tblptru	equ	0xFF8
 16157                           tblptrh	equ	0xFF7
 16158                           tblptrl	equ	0xFF6
 16159                           tablat	equ	0xFF5
 16160                           prodl	equ	0xFF3
 16161                           intcon	equ	0xFF2
 16162                           postinc0	equ	0xFEE
 16163                           wreg	equ	0xFE8
 16164                           indf1	equ	0xFE7
 16165                           postdec1	equ	0xFE5
 16166                           fsr1h	equ	0xFE2
 16167                           fsr1l	equ	0xFE1
 16168                           indf2	equ	0xFDF
 16169                           postinc2	equ	0xFDE
 16170                           fsr2h	equ	0xFDA
 16171                           fsr2l	equ	0xFD9
 16172                           status	equ	0xFD8
 16173                           
 16174 ;; *************** function _CDCTxService *****************
 16175 ;; Defined at:
 16176 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;		None
 16179 ;; Auto vars:     Size  Location     Type
 16180 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 16181 ;;  i               1    9[BANK0 ] unsigned char 
 16182 ;; Return value:  Size  Location     Type
 16183 ;;                  1    wreg      void 
 16184 ;; Registers used:
 16185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16186 ;; Tracked objects:
 16187 ;;		On entry : 0/0
 16188 ;;		On exit  : F/0
 16189 ;;		Unchanged: 0/0
 16190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16191 ;;      Params:         0       0       0       0       0       0       0       0       0
 16192 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16194 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16195 ;;Total ram usage:        4 bytes
 16196 ;; Hardware stack levels used:    1
 16197 ;; Hardware stack levels required when called:   12
 16198 ;; This function calls:
 16199 ;;		_USBTransferOnePacket
 16200 ;; This function is called by:
 16201 ;;		_USBapp_DeviceCdcEmulatorHandler
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           	psect	text67
 16206  001E38                     __ptext67:
 16207                           	opt stack 0
 16208  001E38                     _CDCTxService:
 16209                           	opt stack 16
 16210                           
 16211                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 16212                           ;usb_device_cdc.c: 786: uint8_t i;
 16213                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 16214                           
 16215                           ; BSR set to: 0
 16216                           ;incstack = 0
 16217  001E38  94A3               	bcf	4003,2,c	;volatile
 16218                           
 16219                           ;usb_device_cdc.c: 790: {};
 16220                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 16221  001E3A  0100               	movlb	0	; () banked
 16222  001E3C  5176               	movf	_CDCDataInHandle& (0+255),w,b
 16223  001E3E  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 16224  001E40  E009               	bz	l1920
 16225                           
 16226                           ; BSR set to: 0
 16227  001E42  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
 16228  001E46  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 16229  001E4A  0E01               	movlw	1
 16230  001E4C  AEDF               	btfss	indf2,7,c
 16231  001E4E  0E00               	movlw	0
 16232  001E50  6FCF               	movwf	_CDCTxService$5731& (0+255),b
 16233  001E52  D001               	goto	L53
 16234  001E54                     l1920:
 16235                           
 16236                           ; BSR set to: 0
 16237  001E54  6BCF               	clrf	_CDCTxService$5731& (0+255),b
 16238  001E56                     L53:
 16239  001E56  6BD0               	clrf	(_CDCTxService$5731+1)& (0+255),b
 16240                           
 16241                           ; BSR set to: 0
 16242  001E58  51CF               	movf	_CDCTxService$5731& (0+255),w,b
 16243  001E5A  11D0               	iorwf	(_CDCTxService$5731+1)& (0+255),w,b
 16244  001E5C  E002               	bz	l10604
 16245                           
 16246                           ; BSR set to: 0
 16247                           ;usb_device_cdc.c: 793: {
 16248                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 16249  001E5E  84A3               	bsf	4003,2,c	;volatile
 16250                           
 16251                           ;usb_device_cdc.c: 795: return;
 16252  001E60  0012               	return	
 16253  001E62                     l10604:
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;usb_device_cdc.c: 796: }
 16257                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 16258  001E62  0E03               	movlw	3
 16259  001E64  1820               	xorwf	_cdc_trf_state,w,c
 16260  001E66  E101               	bnz	l10608
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 16264  001E68  6A20               	clrf	_cdc_trf_state,c
 16265  001E6A                     l10608:
 16266                           
 16267                           ; BSR set to: 0
 16268                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 16269  001E6A  5020               	movf	_cdc_trf_state,w,c
 16270  001E6C  E102               	bnz	l10612
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;usb_device_cdc.c: 810: {
 16274                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 16275  001E6E  84A3               	bsf	4003,2,c	;volatile
 16276                           
 16277                           ;usb_device_cdc.c: 812: return;
 16278  001E70  0012               	return	
 16279  001E72                     l10612:
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;usb_device_cdc.c: 813: }
 16283                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 16284  001E72  0E02               	movlw	2
 16285  001E74  1820               	xorwf	_cdc_trf_state,w,c
 16286  001E76  E110               	bnz	l10618
 16287                           
 16288                           ; BSR set to: 0
 16289                           ;usb_device_cdc.c: 819: {
 16290                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 16291  001E78  0E01               	movlw	1
 16292  001E7A  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 16293  001E7C  0E00               	movlw	0
 16294  001E7E  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 16295  001E80  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16296  001E82  6FCB               	movwf	USBTransferOnePacket@len& (0+255),b
 16297  001E84  0E02               	movlw	2
 16298  001E86  EC79  F016         	call	_USBTransferOnePacket
 16299  001E8A  C0C8  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16300  001E8E  C0C9  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 16304  001E92  0E03               	movlw	3
 16305  001E94  6E20               	movwf	_cdc_trf_state,c
 16306                           
 16307                           ;usb_device_cdc.c: 823: }
 16308  001E96  D04E               	goto	l10662
 16309  001E98                     l10618:
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 16313  001E98  0420               	decf	_cdc_trf_state,w,c
 16314  001E9A  E14C               	bnz	l10662
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;usb_device_cdc.c: 825: {
 16318                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 16319  001E9C  0E40               	movlw	64
 16320  001E9E  6592               	cpfsgt	_cdc_tx_len& (0+255),b
 16321  001EA0  D002               	goto	l1929
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 16325  001EA2  6FD2               	movwf	CDCTxService@byte_to_send& (0+255),b
 16326  001EA4  D002               	goto	l10624
 16327  001EA6                     l1929:
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;usb_device_cdc.c: 831: else
 16331                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 16332  001EA6  C092  F0D2         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 16333  001EAA                     l10624:
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 16337  001EAA  51D2               	movf	CDCTxService@byte_to_send& (0+255),w,b
 16338  001EAC  5F92               	subwf	_cdc_tx_len& (0+255),f,b
 16339                           
 16340                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 16341  001EAE  0E00               	movlw	0
 16342  001EB0  6F70               	movwf	_pCDCDst& (0+255),b
 16343  001EB2  0E05               	movlw	5
 16344  001EB4  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device_cdc.c: 841: i = byte_to_send;
 16348  001EB6  C0D2  F0D1         	movff	CDCTxService@byte_to_send,CDCTxService@i
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 16352  001EBA  5190               	movf	_cdc_mem_type& (0+255),w,b
 16353  001EBC  E010               	bz	l10640
 16354  001EBE  D021               	goto	l10650
 16355  001EC0                     l10632:
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;usb_device_cdc.c: 845: {
 16359                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 16360  001EC0  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16361  001EC4  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16362  001EC8  C070  FFE1         	movff	_pCDCDst,fsr1l
 16363  001ECC  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16364  001ED0  CFDF FFE7          	movff	indf2,indf1
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 16368  001ED4  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16369  001ED6  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 16373  001ED8  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16374  001EDA  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;usb_device_cdc.c: 849: i--;
 16378  001EDC  07D1               	decf	CDCTxService@i& (0+255),f,b
 16379  001EDE                     l10640:
 16380                           
 16381                           ; BSR set to: 0
 16382  001EDE  51D1               	movf	CDCTxService@i& (0+255),w,b
 16383  001EE0  E012               	bz	l10652
 16384  001EE2  D7EE               	goto	l10632
 16385  001EE4                     l10642:
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;usb_device_cdc.c: 855: {
 16389                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 16390  001EE4  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16391  001EE8  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16392  001EEC  C070  FFE1         	movff	_pCDCDst,fsr1l
 16393  001EF0  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16394  001EF4  CFDF FFE7          	movff	indf2,indf1
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 16398  001EF8  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16399  001EFA  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16400                           
 16401                           ; BSR set to: 0
 16402                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 16403  001EFC  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16404  001EFE  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;usb_device_cdc.c: 859: i--;
 16408  001F00  07D1               	decf	CDCTxService@i& (0+255),f,b
 16409  001F02                     l10650:
 16410                           
 16411                           ; BSR set to: 0
 16412  001F02  51D1               	movf	CDCTxService@i& (0+255),w,b
 16413  001F04  E1EF               	bnz	l10642
 16414  001F06                     l10652:
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;usb_device_cdc.c: 860: }
 16418                           ;usb_device_cdc.c: 861: }
 16419                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 16420  001F06  5192               	movf	_cdc_tx_len& (0+255),w,b
 16421  001F08  E106               	bnz	l10660
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;usb_device_cdc.c: 868: {
 16425                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 16426  001F0A  0E40               	movlw	64
 16427  001F0C  19D2               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 16428                           
 16429                           ; BSR set to: 0
 16430                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 16431  001F0E  0E02               	movlw	2
 16432  001F10  A4D8               	btfss	status,2,c
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;usb_device_cdc.c: 871: else
 16436                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 16437  001F12  0E03               	movlw	3
 16438  001F14  6E20               	movwf	_cdc_trf_state,c
 16439  001F16                     l10660:
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;usb_device_cdc.c: 873: }
 16443                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 16444  001F16  0E01               	movlw	1
 16445  001F18  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 16446  001F1A  0E00               	movlw	0
 16447  001F1C  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 16448  001F1E  0E05               	movlw	5
 16449  001F20  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16450  001F22  C0D2  F0CB         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 16451  001F26  0E02               	movlw	2
 16452  001F28  EC79  F016         	call	_USBTransferOnePacket
 16453  001F2C  C0C8  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16454  001F30  C0C9  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16455  001F34                     l10662:
 16456                           
 16457                           ; BSR set to: 0
 16458                           ;usb_device_cdc.c: 876: }
 16459                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 16460  001F34  84A3               	bsf	4003,2,c	;volatile
 16461                           
 16462                           ; BSR set to: 0
 16463  001F36  0012               	return		;funcret
 16464  001F38                     __end_of_CDCTxService:
 16465                           	opt stack 0
 16466                           tblptru	equ	0xFF8
 16467                           tblptrh	equ	0xFF7
 16468                           tblptrl	equ	0xFF6
 16469                           tablat	equ	0xFF5
 16470                           prodl	equ	0xFF3
 16471                           intcon	equ	0xFF2
 16472                           postinc0	equ	0xFEE
 16473                           wreg	equ	0xFE8
 16474                           indf1	equ	0xFE7
 16475                           postdec1	equ	0xFE5
 16476                           fsr1h	equ	0xFE2
 16477                           fsr1l	equ	0xFE1
 16478                           indf2	equ	0xFDF
 16479                           postinc2	equ	0xFDE
 16480                           fsr2h	equ	0xFDA
 16481                           fsr2l	equ	0xFD9
 16482                           status	equ	0xFD8
 16483                           
 16484 ;; *************** function _USBTransferOnePacket *****************
 16485 ;; Defined at:
 16486 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 16487 ;; Parameters:    Size  Location     Type
 16488 ;;  ep              1    wreg     unsigned char 
 16489 ;;  dir             1    0[BANK0 ] unsigned char 
 16490 ;;  data            2    1[BANK0 ] PTR unsigned char 
 16491 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 16492 ;;  len             1    3[BANK0 ] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  ep              1    4[BANK0 ] unsigned char 
 16495 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 16496 ;;		 -> BDT(48), NULL(0), 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  2    0[BANK0 ] PTR void 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16501 ;; Tracked objects:
 16502 ;;		On entry : F/0
 16503 ;;		On exit  : F/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16506 ;;      Params:         0       4       0       0       0       0       0       0       0
 16507 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16509 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16510 ;;Total ram usage:        7 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   11
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_getsUSBUSART
 16517 ;;		_CDCTxService
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text68
 16522  002CF2                     __ptext68:
 16523                           	opt stack 0
 16524  002CF2                     _USBTransferOnePacket:
 16525                           	opt stack 16
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;incstack = 0
 16529                           ;USBTransferOnePacket@ep stored from wreg
 16530  002CF2  6FCC               	movwf	USBTransferOnePacket@ep& (0+255),b
 16531                           
 16532                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 16533                           ;usb_device.c: 762: if(dir != 0)
 16534  002CF4  0100               	movlb	0	; () banked
 16535  002CF6  51C8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16536  002CF8  E005               	bz	l10102
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;usb_device.c: 763: {
 16540                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 16541  002CFA  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16542  002CFC  0D02               	mullw	2
 16543  002CFE  50F3               	movf	prodl,w,c
 16544  002D00  0F0F               	addlw	low _pBDTEntryIn
 16545  002D02  D004               	goto	L55
 16546  002D04                     l10102:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;usb_device.c: 767: else
 16550                           ;usb_device.c: 768: {
 16551                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 16552  002D04  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16553  002D06  0D02               	mullw	2
 16554  002D08  50F3               	movf	prodl,w,c
 16555  002D0A  0F60               	addlw	low _pBDTEntryOut
 16556  002D0C                     L55:
 16557  002D0C  6ED9               	movwf	fsr2l,c
 16558  002D0E  6ADA               	clrf	fsr2h,c
 16559  002D10  CFDE F0CD          	movff	postinc2,USBTransferOnePacket@handle
 16560  002D14  CFDD F0CE          	movff	postdec2,USBTransferOnePacket@handle+1
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;usb_device.c: 771: }
 16564                           ;usb_device.c: 775: if(handle == 0)
 16565  002D18  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16566  002D1A  11CE               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16567  002D1C  E103               	bnz	l10108
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;usb_device.c: 776: {
 16571                           ;usb_device.c: 777: return 0;
 16572  002D1E  6BC8               	clrf	?_USBTransferOnePacket& (0+255),b
 16573  002D20  6BC9               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 16574  002D22  0012               	return	
 16575  002D24                     l10108:
 16576                           
 16577                           ; BSR set to: 0
 16578                           ;usb_device.c: 778: }
 16579                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 16580  002D24  EE20 F002          	lfsr	2,2
 16581  002D28  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16582  002D2A  26D9               	addwf	fsr2l,f,c
 16583  002D2C  51CE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16584  002D2E  22DA               	addwfc	fsr2h,f,c
 16585  002D30  C0C9  FFDE         	movff	USBTransferOnePacket@data,postinc2
 16586  002D34  C0CA  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 16587                           
 16588                           ;usb_device.c: 781: handle->CNT = len;
 16589  002D38  EE20 F001          	lfsr	2,1
 16590  002D3C  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16591  002D3E  26D9               	addwf	fsr2l,f,c
 16592  002D40  51CE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16593  002D42  22DA               	addwfc	fsr2h,f,c
 16594  002D44  C0CB  FFDF         	movff	USBTransferOnePacket@len,indf2
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 16598  002D48  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16599  002D4C  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16600  002D50  0E40               	movlw	64
 16601  002D52  16DF               	andwf	indf2,f,c
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 16605  002D54  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16606  002D58  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16607  002D5C  0E00               	movlw	0
 16608  002D5E  86DB               	bsf	plusw2,3,c
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 16612  002D60  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16613  002D64  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16614  002D68  8EDB               	bsf	plusw2,7,c
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;usb_device.c: 787: if(dir != 0)
 16618  002D6A  51C8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16619  002D6C  E005               	bz	l10120
 16620                           
 16621                           ; BSR set to: 0
 16622                           ;usb_device.c: 788: {
 16623                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16624  002D6E  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16625  002D70  0D02               	mullw	2
 16626  002D72  50F3               	movf	prodl,w,c
 16627  002D74  0F0F               	addlw	low _pBDTEntryIn
 16628  002D76  D004               	goto	L56
 16629  002D78                     l10120:
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;usb_device.c: 792: else
 16633                           ;usb_device.c: 793: {
 16634                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16635  002D78  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16636  002D7A  0D02               	mullw	2
 16637  002D7C  50F3               	movf	prodl,w,c
 16638  002D7E  0F60               	addlw	low _pBDTEntryOut
 16639  002D80                     L56:
 16640  002D80  6ED9               	movwf	fsr2l,c
 16641  002D82  6ADA               	clrf	fsr2h,c
 16642  002D84  0E04               	movlw	4
 16643  002D86  1ADF               	xorwf	indf2,f,c
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;usb_device.c: 796: }
 16647                           ;usb_device.c: 797: return (void*)handle;
 16648  002D88  C0CD  F0C8         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 16649  002D8C  C0CE  F0C9         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 16650                           
 16651                           ; BSR set to: 0
 16652  002D90  0C04               	retlw	4	;funcret
 16653  002D92                     __end_of_USBTransferOnePacket:
 16654                           	opt stack 0
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodl	equ	0xFF3
 16660                           intcon	equ	0xFF2
 16661                           postinc0	equ	0xFEE
 16662                           wreg	equ	0xFE8
 16663                           indf1	equ	0xFE7
 16664                           postdec1	equ	0xFE5
 16665                           fsr1h	equ	0xFE2
 16666                           fsr1l	equ	0xFE1
 16667                           indf2	equ	0xFDF
 16668                           postinc2	equ	0xFDE
 16669                           postdec2	equ	0xFDD
 16670                           plusw2	equ	0xFDB
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function _USBDeviceInit *****************
 16676 ;; Defined at:
 16677 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;		None
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;  i               1    8[BANK0 ] unsigned char 
 16682 ;; Return value:  Size  Location     Type
 16683 ;;                  1    wreg      void 
 16684 ;; Registers used:
 16685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16686 ;; Tracked objects:
 16687 ;;		On entry : F/0
 16688 ;;		On exit  : F/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16691 ;;      Params:         0       0       0       0       0       0       0       0       0
 16692 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16694 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16695 ;;Total ram usage:        1 bytes
 16696 ;; Hardware stack levels used:    1
 16697 ;; Hardware stack levels required when called:   12
 16698 ;; This function calls:
 16699 ;;		_memset
 16700 ;; This function is called by:
 16701 ;;		_main
 16702 ;; This function uses a non-reentrant model
 16703 ;;
 16704                           
 16705                           	psect	text69
 16706  00258A                     __ptext69:
 16707                           	opt stack 0
 16708  00258A                     _USBDeviceInit:
 16709                           	opt stack 18
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;usb_device.c: 239: uint8_t i;
 16713                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;incstack = 0
 16717  00258A  94A3               	bcf	4003,2,c	;volatile
 16718                           
 16719                           ;usb_device.c: 244: {UEIR = 0;};
 16720  00258C  6A67               	clrf	3943,c	;volatile
 16721                           
 16722                           ;usb_device.c: 247: {UIR = 0;};
 16723  00258E  6A65               	clrf	3941,c	;volatile
 16724                           
 16725                           ;usb_device.c: 250: UEP0 = 0;
 16726  002590  6A6A               	clrf	3946,c	;volatile
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 16730  002592  0E6B               	movlw	107
 16731  002594  6FC8               	movwf	memset@p1& (0+255),b
 16732  002596  0E0F               	movlw	15
 16733  002598  6FC9               	movwf	(memset@p1+1)& (0+255),b
 16734  00259A  6BCB               	clrf	(memset@c+1)& (0+255),b
 16735  00259C  6BCA               	clrf	memset@c& (0+255),b
 16736  00259E  6BCD               	clrf	(memset@n+1)& (0+255),b
 16737  0025A0  0E02               	movlw	2
 16738  0025A2  6FCC               	movwf	memset@n& (0+255),b
 16739  0025A4  EC45  F01F         	call	_memset	;wreg free
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16743  0025A8  0E16               	movlw	22
 16744  0025AA  6E62               	movwf	3938,c	;volatile
 16745                           
 16746                           ; BSR set to: 0
 16747  0025AC  0E9F               	movlw	159
 16748  0025AE  6E66               	movwf	3942,c	;volatile
 16749                           
 16750                           ; BSR set to: 0
 16751  0025B0  0E7B               	movlw	123
 16752  0025B2  6E64               	movwf	3940,c	;volatile
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;usb_device.c: 257: ;
 16756                           ;usb_device.c: 260: ;
 16757                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16758  0025B4  6BD0               	clrf	USBDeviceInit@i& (0+255),b
 16759  0025B6                     l12010:
 16760                           
 16761                           ; BSR set to: 0
 16762                           ;usb_device.c: 264: {
 16763                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 16764  0025B6  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16765  0025B8  0D04               	mullw	4
 16766  0025BA  0E00               	movlw	0
 16767  0025BC  24F3               	addwf	prodl,w,c
 16768  0025BE  6ED9               	movwf	fsr2l,c
 16769  0025C0  0E04               	movlw	4
 16770  0025C2  20F4               	addwfc	prodh,w,c
 16771  0025C4  6EDA               	movwf	fsr2h,c
 16772  0025C6  6ADE               	clrf	postinc2,c
 16773  0025C8  6ADE               	clrf	postinc2,c
 16774  0025CA  6ADE               	clrf	postinc2,c
 16775  0025CC  6ADD               	clrf	postdec2,c
 16776                           
 16777                           ; BSR set to: 0
 16778  0025CE  2BD0               	incf	USBDeviceInit@i& (0+255),f,b
 16779                           
 16780                           ; BSR set to: 0
 16781  0025D0  0E0B               	movlw	11
 16782  0025D2  65D0               	cpfsgt	USBDeviceInit@i& (0+255),b
 16783  0025D4  D7F0               	goto	l12010
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;usb_device.c: 266: }
 16787                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 16788  0025D6  8C60               	bsf	3936,6,c	;volatile
 16789                           
 16790                           ;usb_device.c: 272: UADDR = 0x00;
 16791  0025D8  6A63               	clrf	3939,c	;volatile
 16792                           
 16793                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 16794  0025DA  9860               	bcf	3936,4,c	;volatile
 16795                           
 16796                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 16797  0025DC  9C60               	bcf	3936,6,c	;volatile
 16798                           
 16799                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 16800  0025DE  D005               	goto	l12024
 16801  0025E0                     l12016:
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;usb_device.c: 282: {
 16805                           ;usb_device.c: 283: (UIR &= 0xF7);
 16806  0025E0  9665               	bcf	3941,3,c	;volatile
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 16810  0025E2  6A0C               	clrf	_inPipes+3,c	;volatile
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 16814  0025E4  6A04               	clrf	_outPipes+3,c	;volatile
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 16818  0025E6  6A05               	clrf	_outPipes+4,c	;volatile
 16819  0025E8  6A06               	clrf	_outPipes+5,c	;volatile
 16820  0025EA                     l12024:
 16821                           
 16822                           ; BSR set to: 0
 16823  0025EA  B665               	btfsc	3941,3,c	;volatile
 16824  0025EC  D7F9               	goto	l12016
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;usb_device.c: 288: }
 16828                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 16829  0025EE  0E01               	movlw	1
 16830  0025F0  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16831                           
 16832                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 16833  0025F2  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 16837  0025F4  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 16841  0025F6  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 16845  0025F8  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16846                           
 16847                           ; BSR set to: 0
 16848                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 16849  0025FA  6BD0               	clrf	USBDeviceInit@i& (0+255),b
 16850  0025FC                     l12040:
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;usb_device.c: 302: {
 16854                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 16855  0025FC  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16856  0025FE  0D02               	mullw	2
 16857  002600  50F3               	movf	prodl,w,c
 16858  002602  0F0F               	addlw	low _pBDTEntryIn
 16859  002604  6ED9               	movwf	fsr2l,c
 16860  002606  6ADA               	clrf	fsr2h,c
 16861  002608  6ADE               	clrf	postinc2,c
 16862  00260A  6ADD               	clrf	postdec2,c
 16863                           
 16864                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 16865  00260C  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16866  00260E  0D02               	mullw	2
 16867  002610  50F3               	movf	prodl,w,c
 16868  002612  0F60               	addlw	low _pBDTEntryOut
 16869  002614  6ED9               	movwf	fsr2l,c
 16870  002616  6ADA               	clrf	fsr2h,c
 16871  002618  6ADE               	clrf	postinc2,c
 16872  00261A  6ADD               	clrf	postdec2,c
 16873                           
 16874                           ; BSR set to: 0
 16875                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 16876  00261C  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16877  00261E  0F6A               	addlw	low _ep_data_in
 16878  002620  6ED9               	movwf	fsr2l,c
 16879  002622  6ADA               	clrf	fsr2h,c
 16880  002624  6ADF               	clrf	indf2,c
 16881                           
 16882                           ; BSR set to: 0
 16883                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 16884  002626  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16885  002628  0F6D               	addlw	low _ep_data_out
 16886  00262A  6ED9               	movwf	fsr2l,c
 16887  00262C  6ADA               	clrf	fsr2h,c
 16888  00262E  6ADF               	clrf	indf2,c
 16889                           
 16890                           ; BSR set to: 0
 16891  002630  2BD0               	incf	USBDeviceInit@i& (0+255),f,b
 16892                           
 16893                           ; BSR set to: 0
 16894  002632  0E02               	movlw	2
 16895  002634  65D0               	cpfsgt	USBDeviceInit@i& (0+255),b
 16896  002636  D7E2               	goto	l12040
 16897                           
 16898                           ; BSR set to: 0
 16899                           ;usb_device.c: 307: }
 16900                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16901  002638  0E08               	movlw	8
 16902  00263A  6E0F               	movwf	_pBDTEntryIn,c
 16903  00263C  0E04               	movlw	4
 16904  00263E  6E10               	movwf	_pBDTEntryIn+1,c
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 16908  002640  0E16               	movlw	22
 16909  002642  6E6A               	movwf	3946,c	;volatile
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16913  002644  0E04               	movlw	4
 16914  002646  0104               	movlb	4	; () banked
 16915  002648  6F03               	movwf	3,b	;volatile
 16916  00264A  0E30               	movlw	48
 16917  00264C  6F02               	movwf	2,b	;volatile
 16918                           
 16919                           ; BSR set to: 4
 16920                           ;usb_device.c: 315: BDT[0].CNT = 8;
 16921  00264E  0E08               	movlw	8
 16922  002650  6F01               	movwf	1,b	;volatile
 16923                           
 16924                           ; BSR set to: 4
 16925                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 16926  002652  0E04               	movlw	4
 16927  002654  6F00               	movwf	0,b	;volatile
 16928                           
 16929                           ; BSR set to: 4
 16930                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 16931  002656  8F00               	bsf	0,7,b	;volatile
 16932                           
 16933                           ; BSR set to: 4
 16934                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 16935  002658  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 16936                           
 16937                           ; BSR set to: 4
 16938                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 16939  00265A  0100               	movlb	0	; () banked
 16940  00265C  6B8A               	clrf	_USBDeviceState& (0+255),b	;volatile
 16941                           
 16942                           ; BSR set to: 0
 16943  00265E  0012               	return		;funcret
 16944  002660                     __end_of_USBDeviceInit:
 16945                           	opt stack 0
 16946                           tblptru	equ	0xFF8
 16947                           tblptrh	equ	0xFF7
 16948                           tblptrl	equ	0xFF6
 16949                           tablat	equ	0xFF5
 16950                           prodh	equ	0xFF4
 16951                           prodl	equ	0xFF3
 16952                           intcon	equ	0xFF2
 16953                           postinc0	equ	0xFEE
 16954                           wreg	equ	0xFE8
 16955                           indf1	equ	0xFE7
 16956                           postdec1	equ	0xFE5
 16957                           fsr1h	equ	0xFE2
 16958                           fsr1l	equ	0xFE1
 16959                           indf2	equ	0xFDF
 16960                           postinc2	equ	0xFDE
 16961                           postdec2	equ	0xFDD
 16962                           plusw2	equ	0xFDB
 16963                           fsr2h	equ	0xFDA
 16964                           fsr2l	equ	0xFD9
 16965                           status	equ	0xFD8
 16966                           
 16967 ;; *************** function _memset *****************
 16968 ;; Defined at:
 16969 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  p1              2    0[BANK0 ] PTR void 
 16972 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16973 ;;  c               2    2[BANK0 ] int 
 16974 ;;  n               2    4[BANK0 ] unsigned int 
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16977 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  2    0[BANK0 ] PTR void 
 16980 ;; Registers used:
 16981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16982 ;; Tracked objects:
 16983 ;;		On entry : F/0
 16984 ;;		On exit  : F/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16987 ;;      Params:         0       6       0       0       0       0       0       0       0
 16988 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16990 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16991 ;;Total ram usage:        8 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:   11
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_USBDeviceInit
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text70
 17002  003E8A                     __ptext70:
 17003                           	opt stack 0
 17004  003E8A                     _memset:
 17005                           	opt stack 18
 17006                           
 17007                           ; BSR set to: 0
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;incstack = 0
 17011  003E8A  C0C8  F0CE         	movff	memset@p1,memset@p
 17012  003E8E  C0C9  F0CF         	movff	memset@p1+1,memset@p+1
 17013  003E92  D008               	goto	l11976
 17014  003E94                     l11972:
 17015                           
 17016                           ; BSR set to: 0
 17017  003E94  C0CE  FFD9         	movff	memset@p,fsr2l
 17018  003E98  C0CF  FFDA         	movff	memset@p+1,fsr2h
 17019  003E9C  C0CA  FFDF         	movff	memset@c,indf2
 17020                           
 17021                           ; BSR set to: 0
 17022  003EA0  4BCE               	infsnz	memset@p& (0+255),f,b
 17023  003EA2  2BCF               	incf	(memset@p+1)& (0+255),f,b
 17024  003EA4                     l11976:
 17025                           
 17026                           ; BSR set to: 0
 17027  003EA4  07CC               	decf	memset@n& (0+255),f,b
 17028  003EA6  A0D8               	btfss	status,0,c
 17029  003EA8  07CD               	decf	(memset@n+1)& (0+255),f,b
 17030  003EAA  29CC               	incf	memset@n& (0+255),w,b
 17031  003EAC  E1F3               	bnz	l11972
 17032  003EAE  29CD               	incf	(memset@n+1)& (0+255),w,b
 17033  003EB0  E1F1               	bnz	l11972
 17034                           
 17035                           ; BSR set to: 0
 17036  003EB2  0012               	return		;funcret
 17037  003EB4                     __end_of_memset:
 17038                           	opt stack 0
 17039                           tblptru	equ	0xFF8
 17040                           tblptrh	equ	0xFF7
 17041                           tblptrl	equ	0xFF6
 17042                           tablat	equ	0xFF5
 17043                           prodh	equ	0xFF4
 17044                           prodl	equ	0xFF3
 17045                           intcon	equ	0xFF2
 17046                           postinc0	equ	0xFEE
 17047                           wreg	equ	0xFE8
 17048                           indf1	equ	0xFE7
 17049                           postdec1	equ	0xFE5
 17050                           fsr1h	equ	0xFE2
 17051                           fsr1l	equ	0xFE1
 17052                           indf2	equ	0xFDF
 17053                           postinc2	equ	0xFDE
 17054                           postdec2	equ	0xFDD
 17055                           plusw2	equ	0xFDB
 17056                           fsr2h	equ	0xFDA
 17057                           fsr2l	equ	0xFD9
 17058                           status	equ	0xFD8
 17059                           
 17060 ;; *************** function _USBDeviceAttach *****************
 17061 ;; Defined at:
 17062 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 17063 ;; Parameters:    Size  Location     Type
 17064 ;;		None
 17065 ;; Auto vars:     Size  Location     Type
 17066 ;;		None
 17067 ;; Return value:  Size  Location     Type
 17068 ;;                  1    wreg      void 
 17069 ;; Registers used:
 17070 ;;		wreg, status,2
 17071 ;; Tracked objects:
 17072 ;;		On entry : F/0
 17073 ;;		On exit  : F/0
 17074 ;;		Unchanged: 0/0
 17075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17076 ;;      Params:         0       0       0       0       0       0       0       0       0
 17077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17079 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17080 ;;Total ram usage:        0 bytes
 17081 ;; Hardware stack levels used:    1
 17082 ;; Hardware stack levels required when called:   11
 17083 ;; This function calls:
 17084 ;;		Nothing
 17085 ;; This function is called by:
 17086 ;;		_main
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           	psect	text71
 17091  003DB0                     __ptext71:
 17092                           	opt stack 0
 17093  003DB0                     _USBDeviceAttach:
 17094                           	opt stack 19
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;usb_device.c: 1050: {
 17098                           ;usb_device.c: 1051: if(1 == 1)
 17099                           
 17100                           ; BSR set to: 0
 17101                           ;incstack = 0
 17102  003DB0  518A               	movf	_USBDeviceState& (0+255),w,b	;volatile
 17103  003DB2  A4D8               	btfss	status,2,c
 17104  003DB4  0012               	return	
 17105                           
 17106                           ; BSR set to: 0
 17107                           ;usb_device.c: 1052: {
 17108                           ;usb_device.c: 1054: UCON = 0;
 17109  003DB6  6A60               	clrf	3936,c	;volatile
 17110                           
 17111                           ;usb_device.c: 1057: UIE = 0;
 17112  003DB8  6A64               	clrf	3940,c	;volatile
 17113                           
 17114                           ; BSR set to: 0
 17115                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17116  003DBA  0E16               	movlw	22
 17117  003DBC  6E62               	movwf	3938,c	;volatile
 17118  003DBE  0E9F               	movlw	159
 17119  003DC0  6E66               	movwf	3942,c	;volatile
 17120  003DC2  0E7B               	movlw	123
 17121  003DC4  6E64               	movwf	3940,c	;volatile
 17122                           
 17123                           ; BSR set to: 0
 17124                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17125  003DC6  8ED0               	bsf	4048,7,c	;volatile
 17126                           
 17127                           ; BSR set to: 0
 17128  003DC8  84A5               	bsf	4005,2,c	;volatile
 17129                           
 17130                           ; BSR set to: 0
 17131  003DCA  84A3               	bsf	4003,2,c	;volatile
 17132                           
 17133                           ; BSR set to: 0
 17134  003DCC  8EF2               	bsf	intcon,7,c	;volatile
 17135                           
 17136                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17137  003DCE  D001               	goto	l1625
 17138  003DD0                     l1626:
 17139                           
 17140                           ; BSR set to: 0
 17141  003DD0  8660               	bsf	3936,3,c	;volatile
 17142  003DD2                     l1625:
 17143                           
 17144                           ; BSR set to: 0
 17145  003DD2  A660               	btfss	3936,3,c	;volatile
 17146  003DD4  D7FD               	goto	l1626
 17147                           
 17148                           ; BSR set to: 0
 17149                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 17150  003DD6  0E01               	movlw	1
 17151  003DD8  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 17152                           
 17153                           ; BSR set to: 0
 17154  003DDA  0C01               	retlw	1	;funcret
 17155  003DDC                     __end_of_USBDeviceAttach:
 17156                           	opt stack 0
 17157                           tblptru	equ	0xFF8
 17158                           tblptrh	equ	0xFF7
 17159                           tblptrl	equ	0xFF6
 17160                           tablat	equ	0xFF5
 17161                           prodh	equ	0xFF4
 17162                           prodl	equ	0xFF3
 17163                           intcon	equ	0xFF2
 17164                           postinc0	equ	0xFEE
 17165                           wreg	equ	0xFE8
 17166                           indf1	equ	0xFE7
 17167                           postdec1	equ	0xFE5
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           indf2	equ	0xFDF
 17171                           postinc2	equ	0xFDE
 17172                           postdec2	equ	0xFDD
 17173                           plusw2	equ	0xFDB
 17174                           fsr2h	equ	0xFDA
 17175                           fsr2l	equ	0xFD9
 17176                           status	equ	0xFD8
 17177                           
 17178 ;; *************** function _SYSTEM_Initialize *****************
 17179 ;; Defined at:
 17180 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;		None
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  1    wreg      void 
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0, cstack
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17194 ;;      Params:         0       0       0       0       0       0       0       0       0
 17195 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17197 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17198 ;;Total ram usage:        0 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:   13
 17201 ;; This function calls:
 17202 ;;		_ADC_Initialize
 17203 ;;		_CMP1_Initialize
 17204 ;;		_EUSART_Initialize
 17205 ;;		_OSCILLATOR_Initialize
 17206 ;;		_PIN_MANAGER_Initialize
 17207 ;;		_SPI_Initialize
 17208 ;;		_TMR1_Initialize
 17209 ;;		_TMR2_Initialize
 17210 ;; This function is called by:
 17211 ;;		_main
 17212 ;; This function uses a non-reentrant model
 17213 ;;
 17214                           
 17215                           	psect	text72
 17216  004032                     __ptext72:
 17217                           	opt stack 0
 17218  004032                     _SYSTEM_Initialize:
 17219                           	opt stack 17
 17220                           
 17221                           ;mcc.c: 95: OSCILLATOR_Initialize();
 17222                           
 17223                           ; BSR set to: 0
 17224                           ;incstack = 0
 17225  004032  EC7E  F020         	call	_OSCILLATOR_Initialize	;wreg free
 17226                           
 17227                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 17228  004036  EC66  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 17229                           
 17230                           ; BSR set to: 15
 17231                           ;mcc.c: 97: SPI_Initialize();
 17232  00403A  ECE4  F020         	call	_SPI_Initialize	;wreg free
 17233                           
 17234                           ; BSR set to: 15
 17235                           ;mcc.c: 98: TMR1_Initialize();
 17236  00403E  ECEE  F01E         	call	_TMR1_Initialize	;wreg free
 17237                           
 17238                           ; BSR set to: 0
 17239                           ;mcc.c: 99: TMR2_Initialize();
 17240  004042  ECD5  F020         	call	_TMR2_Initialize	;wreg free
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;mcc.c: 100: EUSART_Initialize();
 17244  004046  EC04  F01F         	call	_EUSART_Initialize	;wreg free
 17245                           
 17246                           ;mcc.c: 101: ADC_Initialize();
 17247  00404A  EC89  F020         	call	_ADC_Initialize	;wreg free
 17248                           
 17249                           ;mcc.c: 102: CMP1_Initialize();
 17250  00404E  EFC4  F020         	goto	_CMP1_Initialize	;wreg free
 17251  004052                     __end_of_SYSTEM_Initialize:
 17252                           	opt stack 0
 17253                           tblptru	equ	0xFF8
 17254                           tblptrh	equ	0xFF7
 17255                           tblptrl	equ	0xFF6
 17256                           tablat	equ	0xFF5
 17257                           prodh	equ	0xFF4
 17258                           prodl	equ	0xFF3
 17259                           intcon	equ	0xFF2
 17260                           postinc0	equ	0xFEE
 17261                           wreg	equ	0xFE8
 17262                           indf1	equ	0xFE7
 17263                           postdec1	equ	0xFE5
 17264                           fsr1h	equ	0xFE2
 17265                           fsr1l	equ	0xFE1
 17266                           indf2	equ	0xFDF
 17267                           postinc2	equ	0xFDE
 17268                           postdec2	equ	0xFDD
 17269                           plusw2	equ	0xFDB
 17270                           fsr2h	equ	0xFDA
 17271                           fsr2l	equ	0xFD9
 17272                           status	equ	0xFD8
 17273                           
 17274 ;; *************** function _TMR2_Initialize *****************
 17275 ;; Defined at:
 17276 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 17277 ;; Parameters:    Size  Location     Type
 17278 ;;		None
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;		None
 17281 ;; Return value:  Size  Location     Type
 17282 ;;                  1    wreg      void 
 17283 ;; Registers used:
 17284 ;;		wreg, status,2, cstack
 17285 ;; Tracked objects:
 17286 ;;		On entry : F/0
 17287 ;;		On exit  : F/0
 17288 ;;		Unchanged: F/0
 17289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17290 ;;      Params:         0       0       0       0       0       0       0       0       0
 17291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17293 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17294 ;;Total ram usage:        0 bytes
 17295 ;; Hardware stack levels used:    1
 17296 ;; Hardware stack levels required when called:   12
 17297 ;; This function calls:
 17298 ;;		_TMR2_StartTimer
 17299 ;; This function is called by:
 17300 ;;		_SYSTEM_Initialize
 17301 ;; This function uses a non-reentrant model
 17302 ;;
 17303                           
 17304                           	psect	text73
 17305  0041AA                     __ptext73:
 17306                           	opt stack 0
 17307  0041AA                     _TMR2_Initialize:
 17308                           	opt stack 17
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;tmr2.c: 62: T2CON = 0x7A;
 17312                           
 17313                           ;incstack = 0
 17314  0041AA  0E7A               	movlw	122
 17315  0041AC  6EBA               	movwf	4026,c	;volatile
 17316                           
 17317                           ;tmr2.c: 65: PR2 = 0x9B;
 17318  0041AE  0E9B               	movlw	155
 17319  0041B0  6EBB               	movwf	4027,c	;volatile
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;tmr2.c: 68: TMR2 = 0x00;
 17323  0041B2  6ABC               	clrf	4028,c	;volatile
 17324                           
 17325                           ; BSR set to: 0
 17326                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 17327  0041B4  929E               	bcf	3998,1,c	;volatile
 17328                           
 17329                           ; BSR set to: 0
 17330                           ;tmr2.c: 74: TMR2_StartTimer();
 17331  0041B6  EF24  F021         	goto	_TMR2_StartTimer	;wreg free
 17332  0041BA                     __end_of_TMR2_Initialize:
 17333                           	opt stack 0
 17334                           tblptru	equ	0xFF8
 17335                           tblptrh	equ	0xFF7
 17336                           tblptrl	equ	0xFF6
 17337                           tablat	equ	0xFF5
 17338                           prodh	equ	0xFF4
 17339                           prodl	equ	0xFF3
 17340                           intcon	equ	0xFF2
 17341                           postinc0	equ	0xFEE
 17342                           wreg	equ	0xFE8
 17343                           indf1	equ	0xFE7
 17344                           postdec1	equ	0xFE5
 17345                           fsr1h	equ	0xFE2
 17346                           fsr1l	equ	0xFE1
 17347                           indf2	equ	0xFDF
 17348                           postinc2	equ	0xFDE
 17349                           postdec2	equ	0xFDD
 17350                           plusw2	equ	0xFDB
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _TMR2_StartTimer *****************
 17356 ;; Defined at:
 17357 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;		None
 17360 ;; Auto vars:     Size  Location     Type
 17361 ;;		None
 17362 ;; Return value:  Size  Location     Type
 17363 ;;                  1    wreg      void 
 17364 ;; Registers used:
 17365 ;;		None
 17366 ;; Tracked objects:
 17367 ;;		On entry : F/0
 17368 ;;		On exit  : F/0
 17369 ;;		Unchanged: F/0
 17370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17371 ;;      Params:         0       0       0       0       0       0       0       0       0
 17372 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17374 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17375 ;;Total ram usage:        0 bytes
 17376 ;; Hardware stack levels used:    1
 17377 ;; Hardware stack levels required when called:   11
 17378 ;; This function calls:
 17379 ;;		Nothing
 17380 ;; This function is called by:
 17381 ;;		_TMR2_Initialize
 17382 ;; This function uses a non-reentrant model
 17383 ;;
 17384                           
 17385                           	psect	text74
 17386  004248                     __ptext74:
 17387                           	opt stack 0
 17388  004248                     _TMR2_StartTimer:
 17389                           	opt stack 17
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 17393                           
 17394                           ; BSR set to: 0
 17395                           ;incstack = 0
 17396  004248  84BA               	bsf	4026,2,c	;volatile
 17397                           
 17398                           ; BSR set to: 0
 17399  00424A  0012               	return		;funcret
 17400  00424C                     __end_of_TMR2_StartTimer:
 17401                           	opt stack 0
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           postinc0	equ	0xFEE
 17410                           wreg	equ	0xFE8
 17411                           indf1	equ	0xFE7
 17412                           postdec1	equ	0xFE5
 17413                           fsr1h	equ	0xFE2
 17414                           fsr1l	equ	0xFE1
 17415                           indf2	equ	0xFDF
 17416                           postinc2	equ	0xFDE
 17417                           postdec2	equ	0xFDD
 17418                           plusw2	equ	0xFDB
 17419                           fsr2h	equ	0xFDA
 17420                           fsr2l	equ	0xFD9
 17421                           status	equ	0xFD8
 17422                           
 17423 ;; *************** function _TMR1_Initialize *****************
 17424 ;; Defined at:
 17425 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 17426 ;; Parameters:    Size  Location     Type
 17427 ;;		None
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;		None
 17430 ;; Return value:  Size  Location     Type
 17431 ;;                  1    wreg      void 
 17432 ;; Registers used:
 17433 ;;		wreg, status,2, status,0, cstack
 17434 ;; Tracked objects:
 17435 ;;		On entry : F/F
 17436 ;;		On exit  : F/0
 17437 ;;		Unchanged: 0/0
 17438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17439 ;;      Params:         0       0       0       0       0       0       0       0       0
 17440 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17441 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17442 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17443 ;;Total ram usage:        2 bytes
 17444 ;; Hardware stack levels used:    1
 17445 ;; Hardware stack levels required when called:   12
 17446 ;; This function calls:
 17447 ;;		_TMR1_StartTimer
 17448 ;; This function is called by:
 17449 ;;		_SYSTEM_Initialize
 17450 ;; This function uses a non-reentrant model
 17451 ;;
 17452                           
 17453                           	psect	text75
 17454  003DDC                     __ptext75:
 17455                           	opt stack 0
 17456  003DDC                     _TMR1_Initialize:
 17457                           	opt stack 17
 17458                           
 17459                           ; BSR set to: 15
 17460                           ;tmr1.c: 68: T1CON = 0x00;
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;incstack = 0
 17464  003DDC  6ACD               	clrf	4045,c	;volatile
 17465                           
 17466                           ;tmr1.c: 71: T1GCON = 0x00;
 17467  003DDE  6ACC               	clrf	4044,c	;volatile
 17468                           
 17469                           ; BSR set to: 15
 17470                           ;tmr1.c: 74: TMR1H = 0xD0;
 17471  003DE0  0ED0               	movlw	208
 17472  003DE2  6ECF               	movwf	4047,c	;volatile
 17473                           
 17474                           ;tmr1.c: 77: TMR1L = 0x20;
 17475  003DE4  0E20               	movlw	32
 17476  003DE6  6ECE               	movwf	4046,c	;volatile
 17477                           
 17478                           ; BSR set to: 15
 17479                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 17480  003DE8  50CE               	movf	4046,w,c	;volatile
 17481  003DEA  CFCF F0C8          	movff	4047,??_TMR1_Initialize	;volatile
 17482  003DEE  0100               	movlb	0	; () banked
 17483  003DF0  6BC9               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17484  003DF2  C0C8  F0C9         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17485  003DF6  6BC8               	clrf	??_TMR1_Initialize& (0+255),b
 17486  003DF8  11C8               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17487  003DFA  6F80               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17488  003DFC  51C9               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17489  003DFE  6F81               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 17493  003E00  909E               	bcf	3998,0,c	;volatile
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 17497  003E02  809D               	bsf	3997,0,c	;volatile
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;tmr1.c: 89: TMR1_StartTimer();
 17501  003E04  EF26  F021         	goto	_TMR1_StartTimer	;wreg free
 17502  003E08                     __end_of_TMR1_Initialize:
 17503                           	opt stack 0
 17504                           tblptru	equ	0xFF8
 17505                           tblptrh	equ	0xFF7
 17506                           tblptrl	equ	0xFF6
 17507                           tablat	equ	0xFF5
 17508                           prodh	equ	0xFF4
 17509                           prodl	equ	0xFF3
 17510                           intcon	equ	0xFF2
 17511                           postinc0	equ	0xFEE
 17512                           wreg	equ	0xFE8
 17513                           indf1	equ	0xFE7
 17514                           postdec1	equ	0xFE5
 17515                           fsr1h	equ	0xFE2
 17516                           fsr1l	equ	0xFE1
 17517                           indf2	equ	0xFDF
 17518                           postinc2	equ	0xFDE
 17519                           postdec2	equ	0xFDD
 17520                           plusw2	equ	0xFDB
 17521                           fsr2h	equ	0xFDA
 17522                           fsr2l	equ	0xFD9
 17523                           status	equ	0xFD8
 17524                           
 17525 ;; *************** function _TMR1_StartTimer *****************
 17526 ;; Defined at:
 17527 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;		None
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;		None
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      void 
 17534 ;; Registers used:
 17535 ;;		None
 17536 ;; Tracked objects:
 17537 ;;		On entry : F/0
 17538 ;;		On exit  : F/0
 17539 ;;		Unchanged: F/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0
 17542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17545 ;;Total ram usage:        0 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; Hardware stack levels required when called:   11
 17548 ;; This function calls:
 17549 ;;		Nothing
 17550 ;; This function is called by:
 17551 ;;		_TMR1_Initialize
 17552 ;; This function uses a non-reentrant model
 17553 ;;
 17554                           
 17555                           	psect	text76
 17556  00424C                     __ptext76:
 17557                           	opt stack 0
 17558  00424C                     _TMR1_StartTimer:
 17559                           	opt stack 17
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;incstack = 0
 17566  00424C  80CD               	bsf	4045,0,c	;volatile
 17567                           
 17568                           ; BSR set to: 0
 17569  00424E  0012               	return		;funcret
 17570  004250                     __end_of_TMR1_StartTimer:
 17571                           	opt stack 0
 17572                           tblptru	equ	0xFF8
 17573                           tblptrh	equ	0xFF7
 17574                           tblptrl	equ	0xFF6
 17575                           tablat	equ	0xFF5
 17576                           prodh	equ	0xFF4
 17577                           prodl	equ	0xFF3
 17578                           intcon	equ	0xFF2
 17579                           postinc0	equ	0xFEE
 17580                           wreg	equ	0xFE8
 17581                           indf1	equ	0xFE7
 17582                           postdec1	equ	0xFE5
 17583                           fsr1h	equ	0xFE2
 17584                           fsr1l	equ	0xFE1
 17585                           indf2	equ	0xFDF
 17586                           postinc2	equ	0xFDE
 17587                           postdec2	equ	0xFDD
 17588                           plusw2	equ	0xFDB
 17589                           fsr2h	equ	0xFDA
 17590                           fsr2l	equ	0xFD9
 17591                           status	equ	0xFD8
 17592                           
 17593 ;; *************** function _SPI_Initialize *****************
 17594 ;; Defined at:
 17595 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 17596 ;; Parameters:    Size  Location     Type
 17597 ;;		None
 17598 ;; Auto vars:     Size  Location     Type
 17599 ;;		None
 17600 ;; Return value:  Size  Location     Type
 17601 ;;                  1    wreg      void 
 17602 ;; Registers used:
 17603 ;;		wreg, status,2
 17604 ;; Tracked objects:
 17605 ;;		On entry : F/F
 17606 ;;		On exit  : F/F
 17607 ;;		Unchanged: E/0
 17608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17609 ;;      Params:         0       0       0       0       0       0       0       0       0
 17610 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17612 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17613 ;;Total ram usage:        0 bytes
 17614 ;; Hardware stack levels used:    1
 17615 ;; Hardware stack levels required when called:   11
 17616 ;; This function calls:
 17617 ;;		Nothing
 17618 ;; This function is called by:
 17619 ;;		_SYSTEM_Initialize
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           	psect	text77
 17624  0041C8                     __ptext77:
 17625                           	opt stack 0
 17626  0041C8                     _SPI_Initialize:
 17627                           	opt stack 18
 17628                           
 17629                           ; BSR set to: 15
 17630                           ;spi.c: 69: SSP1STAT = 0x00;
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;incstack = 0
 17634  0041C8  6AC7               	clrf	4039,c	;volatile
 17635                           
 17636                           ; BSR set to: 15
 17637                           ;spi.c: 72: SSP1CON1 = 0x21;
 17638  0041CA  0E21               	movlw	33
 17639  0041CC  6EC6               	movwf	4038,c	;volatile
 17640                           
 17641                           ; BSR set to: 15
 17642                           ;spi.c: 75: SSP1ADD = 0x00;
 17643  0041CE  6AC8               	clrf	4040,c	;volatile
 17644                           
 17645                           ; BSR set to: 15
 17646                           ;spi.c: 77: CKP = 1;
 17647  0041D0  88C6               	bsf	4038,4,c	;volatile
 17648                           
 17649                           ; BSR set to: 15
 17650                           ;spi.c: 78: CKE = 0;
 17651  0041D2  9CC7               	bcf	4039,6,c	;volatile
 17652                           
 17653                           ; BSR set to: 15
 17654  0041D4  0012               	return		;funcret
 17655  0041D6                     __end_of_SPI_Initialize:
 17656                           	opt stack 0
 17657                           tblptru	equ	0xFF8
 17658                           tblptrh	equ	0xFF7
 17659                           tblptrl	equ	0xFF6
 17660                           tablat	equ	0xFF5
 17661                           prodh	equ	0xFF4
 17662                           prodl	equ	0xFF3
 17663                           intcon	equ	0xFF2
 17664                           postinc0	equ	0xFEE
 17665                           wreg	equ	0xFE8
 17666                           indf1	equ	0xFE7
 17667                           postdec1	equ	0xFE5
 17668                           fsr1h	equ	0xFE2
 17669                           fsr1l	equ	0xFE1
 17670                           indf2	equ	0xFDF
 17671                           postinc2	equ	0xFDE
 17672                           postdec2	equ	0xFDD
 17673                           plusw2	equ	0xFDB
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function _PIN_MANAGER_Initialize *****************
 17679 ;; Defined at:
 17680 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;		None
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;		None
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  1    wreg      void 
 17687 ;; Registers used:
 17688 ;;		None
 17689 ;; Tracked objects:
 17690 ;;		On entry : 0/0
 17691 ;;		On exit  : F/F
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17694 ;;      Params:         0       0       0       0       0       0       0       0       0
 17695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17698 ;;Total ram usage:        0 bytes
 17699 ;; Hardware stack levels used:    1
 17700 ;; Hardware stack levels required when called:   11
 17701 ;; This function calls:
 17702 ;;		Nothing
 17703 ;; This function is called by:
 17704 ;;		_moteApp_GoToSleep
 17705 ;;		_SYSTEM_Initialize
 17706 ;; This function uses a non-reentrant model
 17707 ;;
 17708                           
 17709                           	psect	text78
 17710  003ACC                     __ptext78:
 17711                           	opt stack 0
 17712  003ACC                     _PIN_MANAGER_Initialize:
 17713                           	opt stack 16
 17714                           
 17715                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 17716                           
 17717                           ; BSR set to: 15
 17718                           ;incstack = 0
 17719  003ACC  8092               	bsf	3986,0,c	;volatile
 17720                           
 17721                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 17722  003ACE  8292               	bsf	3986,1,c	;volatile
 17723                           
 17724                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 17725  003AD0  8492               	bsf	3986,2,c	;volatile
 17726                           
 17727                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 17728  003AD2  8692               	bsf	3986,3,c	;volatile
 17729                           
 17730                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 17731  003AD4  9892               	bcf	3986,4,c	;volatile
 17732                           
 17733                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 17734  003AD6  9A92               	bcf	3986,5,c	;volatile
 17735                           
 17736                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 17737  003AD8  9C92               	bcf	3986,6,c	;volatile
 17738                           
 17739                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 17740  003ADA  9E92               	bcf	3986,7,c	;volatile
 17741                           
 17742                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 17743  003ADC  9093               	bcf	3987,0,c	;volatile
 17744                           
 17745                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 17746  003ADE  9293               	bcf	3987,1,c	;volatile
 17747                           
 17748                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 17749  003AE0  9493               	bcf	3987,2,c	;volatile
 17750                           
 17751                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 17752  003AE2  9693               	bcf	3987,3,c	;volatile
 17753                           
 17754                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 17755  003AE4  9A93               	bcf	3987,5,c	;volatile
 17756                           
 17757                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 17758  003AE6  8094               	bsf	3988,0,c	;volatile
 17759                           
 17760                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 17761  003AE8  8294               	bsf	3988,1,c	;volatile
 17762                           
 17763                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 17764  003AEA  8494               	bsf	3988,2,c	;volatile
 17765                           
 17766                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 17767  003AEC  9C94               	bcf	3988,6,c	;volatile
 17768                           
 17769                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 17770  003AEE  8E94               	bsf	3988,7,c	;volatile
 17771                           
 17772                           ;pin_manager.c: 77: LATAbits.LATA4 = 1;
 17773  003AF0  8889               	bsf	3977,4,c	;volatile
 17774                           
 17775                           ;pin_manager.c: 78: LATAbits.LATA5 = 0;
 17776  003AF2  9A89               	bcf	3977,5,c	;volatile
 17777                           
 17778                           ;pin_manager.c: 79: LATAbits.LATA6 = 0;
 17779  003AF4  9C89               	bcf	3977,6,c	;volatile
 17780                           
 17781                           ;pin_manager.c: 80: LATAbits.LATA7 = 0;
 17782  003AF6  9E89               	bcf	3977,7,c	;volatile
 17783                           
 17784                           ;pin_manager.c: 82: LATBbits.LATB2 = 0;
 17785  003AF8  948A               	bcf	3978,2,c	;volatile
 17786                           
 17787                           ;pin_manager.c: 83: LATBbits.LATB0 = 0;
 17788  003AFA  908A               	bcf	3978,0,c	;volatile
 17789                           
 17790                           ;pin_manager.c: 84: LATBbits.LATB5 = 0;
 17791  003AFC  9A8A               	bcf	3978,5,c	;volatile
 17792                           
 17793                           ;pin_manager.c: 86: LATCbits.LATC2 = 0;
 17794  003AFE  948B               	bcf	3979,2,c	;volatile
 17795                           
 17796                           ;pin_manager.c: 87: LATCbits.LATC6 = 0;
 17797  003B00  9C8B               	bcf	3979,6,c	;volatile
 17798                           
 17799                           ;pin_manager.c: 89: ANSELAbits.ANSA0 = 0;
 17800  003B02  010F               	movlb	15	; () banked
 17801  003B04  915B               	bcf	91,0,b	;volatile
 17802                           
 17803                           ;pin_manager.c: 90: ANSELAbits.ANSA1 = 1;
 17804  003B06  835B               	bsf	91,1,b	;volatile
 17805                           
 17806                           ;pin_manager.c: 91: ANSELAbits.ANSA2 = 1;
 17807  003B08  855B               	bsf	91,2,b	;volatile
 17808                           
 17809                           ;pin_manager.c: 92: ANSELAbits.ANSA3 = 1;
 17810  003B0A  875B               	bsf	91,3,b	;volatile
 17811                           
 17812                           ;pin_manager.c: 93: ANSELCbits.ANSC7 = 0;
 17813  003B0C  9F5D               	bcf	93,7,b	;volatile
 17814                           
 17815                           ;pin_manager.c: 94: ANSELCbits.ANSC6 = 0;
 17816  003B0E  9D5D               	bcf	93,6,b	;volatile
 17817                           
 17818                           ; BSR set to: 15
 17819  003B10  0012               	return		;funcret
 17820  003B12                     __end_of_PIN_MANAGER_Initialize:
 17821                           	opt stack 0
 17822                           tblptru	equ	0xFF8
 17823                           tblptrh	equ	0xFF7
 17824                           tblptrl	equ	0xFF6
 17825                           tablat	equ	0xFF5
 17826                           prodh	equ	0xFF4
 17827                           prodl	equ	0xFF3
 17828                           intcon	equ	0xFF2
 17829                           postinc0	equ	0xFEE
 17830                           wreg	equ	0xFE8
 17831                           indf1	equ	0xFE7
 17832                           postdec1	equ	0xFE5
 17833                           fsr1h	equ	0xFE2
 17834                           fsr1l	equ	0xFE1
 17835                           indf2	equ	0xFDF
 17836                           postinc2	equ	0xFDE
 17837                           postdec2	equ	0xFDD
 17838                           plusw2	equ	0xFDB
 17839                           fsr2h	equ	0xFDA
 17840                           fsr2l	equ	0xFD9
 17841                           status	equ	0xFD8
 17842                           
 17843 ;; *************** function _OSCILLATOR_Initialize *****************
 17844 ;; Defined at:
 17845 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;		None
 17848 ;; Auto vars:     Size  Location     Type
 17849 ;;		None
 17850 ;; Return value:  Size  Location     Type
 17851 ;;                  1    wreg      void 
 17852 ;; Registers used:
 17853 ;;		wreg, status,2
 17854 ;; Tracked objects:
 17855 ;;		On entry : 0/0
 17856 ;;		On exit  : 0/0
 17857 ;;		Unchanged: 0/0
 17858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17859 ;;      Params:         0       0       0       0       0       0       0       0       0
 17860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17863 ;;Total ram usage:        0 bytes
 17864 ;; Hardware stack levels used:    1
 17865 ;; Hardware stack levels required when called:   11
 17866 ;; This function calls:
 17867 ;;		Nothing
 17868 ;; This function is called by:
 17869 ;;		_SYSTEM_Initialize
 17870 ;; This function uses a non-reentrant model
 17871 ;;
 17872                           
 17873                           	psect	text79
 17874  0040FC                     __ptext79:
 17875                           	opt stack 0
 17876  0040FC                     _OSCILLATOR_Initialize:
 17877                           	opt stack 18
 17878                           
 17879                           ;mcc.c: 107: OSCTUNE = 0x80;
 17880                           
 17881                           ; BSR set to: 15
 17882                           ;incstack = 0
 17883  0040FC  0E80               	movlw	128
 17884  0040FE  6E9B               	movwf	3995,c	;volatile
 17885                           
 17886                           ;mcc.c: 108: OSCCON = 0x70;
 17887  004100  0E70               	movlw	112
 17888  004102  6ED3               	movwf	4051,c	;volatile
 17889                           
 17890                           ;mcc.c: 109: OSCCON2 = 0x10;
 17891  004104  0E10               	movlw	16
 17892  004106  6ED2               	movwf	4050,c	;volatile
 17893  004108                     l1145:
 17894  004108  AED2               	btfss	4050,7,c	;volatile
 17895  00410A  D7FE               	goto	l1145
 17896                           
 17897                           ;mcc.c: 111: ACTCON = 0x90;
 17898  00410C  0E90               	movlw	144
 17899  00410E  6EB5               	movwf	4021,c	;volatile
 17900  004110  0C90               	retlw	144	;funcret
 17901  004112                     __end_of_OSCILLATOR_Initialize:
 17902                           	opt stack 0
 17903                           tblptru	equ	0xFF8
 17904                           tblptrh	equ	0xFF7
 17905                           tblptrl	equ	0xFF6
 17906                           tablat	equ	0xFF5
 17907                           prodh	equ	0xFF4
 17908                           prodl	equ	0xFF3
 17909                           intcon	equ	0xFF2
 17910                           postinc0	equ	0xFEE
 17911                           wreg	equ	0xFE8
 17912                           indf1	equ	0xFE7
 17913                           postdec1	equ	0xFE5
 17914                           fsr1h	equ	0xFE2
 17915                           fsr1l	equ	0xFE1
 17916                           indf2	equ	0xFDF
 17917                           postinc2	equ	0xFDE
 17918                           postdec2	equ	0xFDD
 17919                           plusw2	equ	0xFDB
 17920                           fsr2h	equ	0xFDA
 17921                           fsr2l	equ	0xFD9
 17922                           status	equ	0xFD8
 17923                           
 17924 ;; *************** function _EUSART_Initialize *****************
 17925 ;; Defined at:
 17926 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;		None
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;		None
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  1    wreg      void 
 17933 ;; Registers used:
 17934 ;;		wreg, status,2
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/F
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17940 ;;      Params:         0       0       0       0       0       0       0       0       0
 17941 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17943 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17944 ;;Total ram usage:        0 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:   11
 17947 ;; This function calls:
 17948 ;;		Nothing
 17949 ;; This function is called by:
 17950 ;;		_moteApp_GoToSleep
 17951 ;;		_SYSTEM_Initialize
 17952 ;; This function uses a non-reentrant model
 17953 ;;
 17954                           
 17955                           	psect	text80
 17956  003E08                     __ptext80:
 17957                           	opt stack 0
 17958  003E08                     _EUSART_Initialize:
 17959                           	opt stack 16
 17960                           
 17961                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 17962                           
 17963                           ;incstack = 0
 17964  003E08  9A9D               	bcf	3997,5,c	;volatile
 17965                           
 17966                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 17967  003E0A  989D               	bcf	3997,4,c	;volatile
 17968                           
 17969                           ;eusart.c: 85: BAUDCON = 0x48;
 17970  003E0C  0E48               	movlw	72
 17971  003E0E  6EB8               	movwf	4024,c	;volatile
 17972                           
 17973                           ;eusart.c: 88: RCSTA = 0x90;
 17974  003E10  0E90               	movlw	144
 17975  003E12  6EAB               	movwf	4011,c	;volatile
 17976                           
 17977                           ;eusart.c: 91: TXSTA = 0x26;
 17978  003E14  0E26               	movlw	38
 17979  003E16  6EAC               	movwf	4012,c	;volatile
 17980                           
 17981                           ;eusart.c: 95: SPBRG = 0x71;
 17982  003E18  0E71               	movlw	113
 17983  003E1A  6EAF               	movwf	4015,c	;volatile
 17984                           
 17985                           ;eusart.c: 100: SPBRGH = 0x02;
 17986  003E1C  0E02               	movlw	2
 17987  003E1E  6EB0               	movwf	4016,c	;volatile
 17988                           
 17989                           ;eusart.c: 103: eusartTxHead = 0;
 17990  003E20  6A27               	clrf	_eusartTxHead,c
 17991                           
 17992                           ;eusart.c: 104: eusartTxTail = 0;
 17993  003E22  6A28               	clrf	_eusartTxTail,c
 17994                           
 17995                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 17996  003E24  0E40               	movlw	64
 17997  003E26  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 17998                           
 17999                           ;eusart.c: 107: eusartRxHead = 0;
 18000  003E28  6A24               	clrf	_eusartRxHead,c
 18001                           
 18002                           ;eusart.c: 108: eusartRxTail = 0;
 18003  003E2A  6A25               	clrf	_eusartRxTail,c
 18004                           
 18005                           ;eusart.c: 109: eusartRxCount = 0;
 18006  003E2C  6A23               	clrf	_eusartRxCount,c	;volatile
 18007                           
 18008                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 18009  003E2E  8A9D               	bsf	3997,5,c	;volatile
 18010                           
 18011                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 18012  003E30  88AB               	bsf	4011,4,c	;volatile
 18013  003E32  0012               	return		;funcret
 18014  003E34                     __end_of_EUSART_Initialize:
 18015                           	opt stack 0
 18016                           tblptru	equ	0xFF8
 18017                           tblptrh	equ	0xFF7
 18018                           tblptrl	equ	0xFF6
 18019                           tablat	equ	0xFF5
 18020                           prodh	equ	0xFF4
 18021                           prodl	equ	0xFF3
 18022                           intcon	equ	0xFF2
 18023                           postinc0	equ	0xFEE
 18024                           wreg	equ	0xFE8
 18025                           indf1	equ	0xFE7
 18026                           postdec1	equ	0xFE5
 18027                           fsr1h	equ	0xFE2
 18028                           fsr1l	equ	0xFE1
 18029                           indf2	equ	0xFDF
 18030                           postinc2	equ	0xFDE
 18031                           postdec2	equ	0xFDD
 18032                           plusw2	equ	0xFDB
 18033                           fsr2h	equ	0xFDA
 18034                           fsr2l	equ	0xFD9
 18035                           status	equ	0xFD8
 18036                           
 18037 ;; *************** function _CMP1_Initialize *****************
 18038 ;; Defined at:
 18039 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 18040 ;; Parameters:    Size  Location     Type
 18041 ;;		None
 18042 ;; Auto vars:     Size  Location     Type
 18043 ;;		None
 18044 ;; Return value:  Size  Location     Type
 18045 ;;                  1    wreg      void 
 18046 ;; Registers used:
 18047 ;;		wreg, status,2
 18048 ;; Tracked objects:
 18049 ;;		On entry : 0/0
 18050 ;;		On exit  : 0/0
 18051 ;;		Unchanged: 0/0
 18052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18053 ;;      Params:         0       0       0       0       0       0       0       0       0
 18054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18056 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18057 ;;Total ram usage:        0 bytes
 18058 ;; Hardware stack levels used:    1
 18059 ;; Hardware stack levels required when called:   11
 18060 ;; This function calls:
 18061 ;;		Nothing
 18062 ;; This function is called by:
 18063 ;;		_SYSTEM_Initialize
 18064 ;; This function uses a non-reentrant model
 18065 ;;
 18066                           
 18067                           	psect	text81
 18068  004188                     __ptext81:
 18069                           	opt stack 0
 18070  004188                     _CMP1_Initialize:
 18071                           	opt stack 18
 18072                           
 18073                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 18074                           
 18075                           ;incstack = 0
 18076  004188  9CA0               	bcf	4000,6,c	;volatile
 18077                           
 18078                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 18079  00418A  0E9C               	movlw	156
 18080  00418C  6E98               	movwf	3992,c	;volatile
 18081                           
 18082                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 18083  00418E  8A9A               	bsf	3994,5,c	;volatile
 18084                           
 18085                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 18086  004190  929A               	bcf	3994,1,c	;volatile
 18087                           
 18088                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 18089  004192  969A               	bcf	3994,3,c	;volatile
 18090                           
 18091                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 18092  004194  9CA1               	bcf	4001,6,c	;volatile
 18093                           
 18094                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 18095  004196  9CA0               	bcf	4000,6,c	;volatile
 18096  004198  0C9C               	retlw	156	;funcret
 18097  00419A                     __end_of_CMP1_Initialize:
 18098                           	opt stack 0
 18099                           tblptru	equ	0xFF8
 18100                           tblptrh	equ	0xFF7
 18101                           tblptrl	equ	0xFF6
 18102                           tablat	equ	0xFF5
 18103                           prodh	equ	0xFF4
 18104                           prodl	equ	0xFF3
 18105                           intcon	equ	0xFF2
 18106                           postinc0	equ	0xFEE
 18107                           wreg	equ	0xFE8
 18108                           indf1	equ	0xFE7
 18109                           postdec1	equ	0xFE5
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           indf2	equ	0xFDF
 18113                           postinc2	equ	0xFDE
 18114                           postdec2	equ	0xFDD
 18115                           plusw2	equ	0xFDB
 18116                           fsr2h	equ	0xFDA
 18117                           fsr2l	equ	0xFD9
 18118                           status	equ	0xFD8
 18119                           
 18120 ;; *************** function _ADC_Initialize *****************
 18121 ;; Defined at:
 18122 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;		None
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;		None
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      void 
 18129 ;; Registers used:
 18130 ;;		wreg, status,2
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0
 18137 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18139 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18140 ;;Total ram usage:        0 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:   11
 18143 ;; This function calls:
 18144 ;;		Nothing
 18145 ;; This function is called by:
 18146 ;;		_SYSTEM_Initialize
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text82
 18151  004112                     __ptext82:
 18152                           	opt stack 0
 18153  004112                     _ADC_Initialize:
 18154                           	opt stack 18
 18155                           
 18156                           ;adc.c: 68: VREFCON0 = 0b10100000;
 18157                           
 18158                           ;incstack = 0
 18159  004112  0EA0               	movlw	160
 18160  004114  6E7D               	movwf	3965,c	;volatile
 18161                           
 18162                           ;adc.c: 70: ADCON0 = 0x01;
 18163  004116  0E01               	movlw	1
 18164  004118  6EC2               	movwf	4034,c	;volatile
 18165                           
 18166                           ;adc.c: 73: ADCON1 = 0x08;
 18167  00411A  0E08               	movlw	8
 18168  00411C  6EC1               	movwf	4033,c	;volatile
 18169                           
 18170                           ;adc.c: 76: ADCON2 = 0b10001110;
 18171  00411E  0E8E               	movlw	142
 18172  004120  6EC0               	movwf	4032,c	;volatile
 18173                           
 18174                           ;adc.c: 79: ADRESL = 0x00;
 18175  004122  6AC3               	clrf	4035,c	;volatile
 18176                           
 18177                           ;adc.c: 82: ADRESH = 0x00;
 18178  004124  6AC4               	clrf	4036,c	;volatile
 18179  004126  0012               	return		;funcret
 18180  004128                     __end_of_ADC_Initialize:
 18181                           	opt stack 0
 18182                           tblptru	equ	0xFF8
 18183                           tblptrh	equ	0xFF7
 18184                           tblptrl	equ	0xFF6
 18185                           tablat	equ	0xFF5
 18186                           prodh	equ	0xFF4
 18187                           prodl	equ	0xFF3
 18188                           intcon	equ	0xFF2
 18189                           postinc0	equ	0xFEE
 18190                           wreg	equ	0xFE8
 18191                           indf1	equ	0xFE7
 18192                           postdec1	equ	0xFE5
 18193                           fsr1h	equ	0xFE2
 18194                           fsr1l	equ	0xFE1
 18195                           indf2	equ	0xFDF
 18196                           postinc2	equ	0xFDE
 18197                           postdec2	equ	0xFDD
 18198                           plusw2	equ	0xFDB
 18199                           fsr2h	equ	0xFDA
 18200                           fsr2l	equ	0xFD9
 18201                           status	equ	0xFD8
 18202                           
 18203 ;; *************** function _MOTEapp_handlerState *****************
 18204 ;; Defined at:
 18205 ;;		line 154 in file "../Includes/Board/MOTEapp.c"
 18206 ;; Parameters:    Size  Location     Type
 18207 ;;  state           1    wreg     enum E6294
 18208 ;; Auto vars:     Size  Location     Type
 18209 ;;  state           1    0[BANK0 ] enum E6294
 18210 ;; Return value:  Size  Location     Type
 18211 ;;                  1    wreg      void 
 18212 ;; Registers used:
 18213 ;;		wreg
 18214 ;; Tracked objects:
 18215 ;;		On entry : F/0
 18216 ;;		On exit  : 0/0
 18217 ;;		Unchanged: 0/0
 18218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18219 ;;      Params:         0       0       0       0       0       0       0       0       0
 18220 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18221 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18222 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18223 ;;Total ram usage:        1 bytes
 18224 ;; Hardware stack levels used:    1
 18225 ;; Hardware stack levels required when called:   11
 18226 ;; This function calls:
 18227 ;;		Nothing
 18228 ;; This function is called by:
 18229 ;;		_main
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text83
 18234  004226                     __ptext83:
 18235                           	opt stack 0
 18236  004226                     _MOTEapp_handlerState:
 18237                           	opt stack 19
 18238                           
 18239                           ;incstack = 0
 18240                           ;MOTEapp_handlerState@state stored from wreg
 18241  004226  6FC8               	movwf	MOTEapp_handlerState@state& (0+255),b
 18242                           
 18243                           ;MOTEapp.c: 156: moteState = state;
 18244  004228  C0C8  F0F8         	movff	MOTEapp_handlerState@state,_moteState
 18245  00422C  0012               	return		;funcret
 18246  00422E                     __end_of_MOTEapp_handlerState:
 18247                           	opt stack 0
 18248                           tblptru	equ	0xFF8
 18249                           tblptrh	equ	0xFF7
 18250                           tblptrl	equ	0xFF6
 18251                           tablat	equ	0xFF5
 18252                           prodh	equ	0xFF4
 18253                           prodl	equ	0xFF3
 18254                           intcon	equ	0xFF2
 18255                           postinc0	equ	0xFEE
 18256                           wreg	equ	0xFE8
 18257                           indf1	equ	0xFE7
 18258                           postdec1	equ	0xFE5
 18259                           fsr1h	equ	0xFE2
 18260                           fsr1l	equ	0xFE1
 18261                           indf2	equ	0xFDF
 18262                           postinc2	equ	0xFDE
 18263                           postdec2	equ	0xFDD
 18264                           plusw2	equ	0xFDB
 18265                           fsr2h	equ	0xFDA
 18266                           fsr2l	equ	0xFD9
 18267                           status	equ	0xFD8
 18268                           
 18269 ;; *************** function _DATAEE_ReadByte *****************
 18270 ;; Defined at:
 18271 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  bAdd            1    wreg     unsigned char 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;  bAdd            1    0[BANK0 ] unsigned char 
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      unsigned char 
 18278 ;; Registers used:
 18279 ;;		wreg, status,2
 18280 ;; Tracked objects:
 18281 ;;		On entry : F/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0
 18286 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18288 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18289 ;;Total ram usage:        1 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:   11
 18292 ;; This function calls:
 18293 ;;		Nothing
 18294 ;; This function is called by:
 18295 ;;		_main
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text84
 18300  004150                     __ptext84:
 18301                           	opt stack 0
 18302  004150                     _DATAEE_ReadByte:
 18303                           	opt stack 19
 18304                           
 18305                           ;incstack = 0
 18306                           ;DATAEE_ReadByte@bAdd stored from wreg
 18307  004150  6FC8               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 18308                           
 18309                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 18310  004152  C0C8  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 18311                           
 18312                           ;memory.c: 191: EECON1bits.CFGS = 0;
 18313  004156  9CA6               	bcf	4006,6,c	;volatile
 18314                           
 18315                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 18316  004158  9EA6               	bcf	4006,7,c	;volatile
 18317                           
 18318                           ;memory.c: 193: EECON1bits.RD = 1;
 18319  00415A  80A6               	bsf	4006,0,c	;volatile
 18320                           
 18321                           ;memory.c: 194: __nop();
 18322  00415C  F000               	nop	
 18323                           
 18324                           ;memory.c: 195: __nop();
 18325  00415E  F000               	nop	
 18326                           
 18327                           ;memory.c: 197: return (EEDATA);
 18328  004160  50A8               	movf	4008,w,c	;volatile
 18329  004162  0012               	return		;funcret
 18330  004164                     __end_of_DATAEE_ReadByte:
 18331                           	opt stack 0
 18332                           tblptru	equ	0xFF8
 18333                           tblptrh	equ	0xFF7
 18334                           tblptrl	equ	0xFF6
 18335                           tablat	equ	0xFF5
 18336                           prodh	equ	0xFF4
 18337                           prodl	equ	0xFF3
 18338                           intcon	equ	0xFF2
 18339                           postinc0	equ	0xFEE
 18340                           wreg	equ	0xFE8
 18341                           indf1	equ	0xFE7
 18342                           postdec1	equ	0xFE5
 18343                           fsr1h	equ	0xFE2
 18344                           fsr1l	equ	0xFE1
 18345                           indf2	equ	0xFDF
 18346                           postinc2	equ	0xFDE
 18347                           postdec2	equ	0xFDD
 18348                           plusw2	equ	0xFDB
 18349                           fsr2h	equ	0xFDA
 18350                           fsr2l	equ	0xFD9
 18351                           status	equ	0xFD8
 18352                           
 18353 ;; *************** function _INTERRUPT_InterruptManager *****************
 18354 ;; Defined at:
 18355 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 18356 ;; Parameters:    Size  Location     Type
 18357 ;;		None
 18358 ;; Auto vars:     Size  Location     Type
 18359 ;;		None
 18360 ;; Return value:  Size  Location     Type
 18361 ;;                  1    wreg      void 
 18362 ;; Registers used:
 18363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18364 ;; Tracked objects:
 18365 ;;		On entry : 0/0
 18366 ;;		On exit  : 0/0
 18367 ;;		Unchanged: 0/0
 18368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18369 ;;      Params:         0       0       0       0       0       0       0       0       0
 18370 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18371 ;;      Temps:         12       0       0       0       0       0       0       0       0
 18372 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18373 ;;Total ram usage:       12 bytes
 18374 ;; Hardware stack levels used:    1
 18375 ;; Hardware stack levels required when called:   10
 18376 ;; This function calls:
 18377 ;;		_CMP1_ISR
 18378 ;;		_EUSART_Receive_ISR
 18379 ;;		_EUSART_Transmit_ISR
 18380 ;;		_TMR1_ISR
 18381 ;;		_TMRapp_Tick
 18382 ;;		_USBDeviceTasks
 18383 ;;		_USBapp_setrxByteFlag
 18384 ;; This function is called by:
 18385 ;;		Interrupt level 2
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389                           	psect	intcode
 18390  000008                     __pintcode:
 18391                           	opt stack 0
 18392  000008                     _INTERRUPT_InterruptManager:
 18393                           	opt stack 10
 18394                           
 18395                           ;incstack = 0
 18396  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18397  00000A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 18398  00000E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18399  000012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 18400  000016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 18401  00001A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 18402  00001E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 18403  000022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 18404  000026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 18405  00002A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 18406  00002E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 18407  000032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 18408  000036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 18409                           
 18410                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 18411  00003A  B09D               	btfsc	3997,0,c	;volatile
 18412  00003C  A09E               	btfss	3998,0,c	;volatile
 18413  00003E  D005               	goto	i2l1105
 18414                           
 18415                           ;interrupt_manager.c: 59: {
 18416                           ;interrupt_manager.c: 60: TMR1_ISR();
 18417  000040  ECFD  F020         	call	_TMR1_ISR	;wreg free
 18418                           
 18419                           ;interrupt_manager.c: 62: TMRapp_Tick();
 18420  000044  EC1A  F021         	call	_TMRapp_Tick	;wreg free
 18421                           
 18422                           ;interrupt_manager.c: 63: }
 18423  000048  D016               	goto	i2l1113
 18424  00004A                     i2l1105:
 18425                           
 18426                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 18427  00004A  BA9D               	btfsc	3997,5,c	;volatile
 18428  00004C  AA9E               	btfss	3998,5,c	;volatile
 18429  00004E  D005               	goto	i2l1107
 18430                           
 18431                           ;interrupt_manager.c: 65: {
 18432                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 18433  000050  EC17  F021         	call	_USBapp_setrxByteFlag	;wreg free
 18434                           
 18435                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 18436  000054  ECBF  F01F         	call	_EUSART_Receive_ISR	;wreg free
 18437                           
 18438                           ;interrupt_manager.c: 68: }
 18439  000058  D00E               	goto	i2l1113
 18440  00005A                     i2l1107:
 18441                           
 18442                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 18443  00005A  B89D               	btfsc	3997,4,c	;volatile
 18444  00005C  A89E               	btfss	3998,4,c	;volatile
 18445  00005E  D003               	goto	i2l1109
 18446                           
 18447                           ;interrupt_manager.c: 70: {
 18448                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 18449  000060  ECAB  F01F         	call	_EUSART_Transmit_ISR	;wreg free
 18450                           
 18451                           ;interrupt_manager.c: 72: }
 18452  000064  D008               	goto	i2l1113
 18453  000066                     i2l1109:
 18454                           
 18455                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 18456  000066  BCA0               	btfsc	4000,6,c	;volatile
 18457  000068  ACA1               	btfss	4001,6,c	;volatile
 18458  00006A  D003               	goto	i2l9730
 18459                           
 18460                           ;interrupt_manager.c: 74: {
 18461                           ;interrupt_manager.c: 75: CMP1_ISR();
 18462  00006C  EC28  F021         	call	_CMP1_ISR	;wreg free
 18463                           
 18464                           ;interrupt_manager.c: 76: }
 18465  000070  D002               	goto	i2l1113
 18466  000072                     i2l9730:
 18467                           
 18468                           ;interrupt_manager.c: 77: else
 18469                           ;interrupt_manager.c: 78: {
 18470                           ;interrupt_manager.c: 80: USBDeviceTasks();
 18471  000072  EC9C  F00F         	call	_USBDeviceTasks	;wreg free
 18472  000076                     i2l1113:
 18473  000076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 18474  00007A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 18475  00007E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 18476  000082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 18477  000086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 18478  00008A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 18479  00008E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 18480  000092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 18481  000096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 18482  00009A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 18483  00009E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18484  0000A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18485  0000A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18486  0000A8  0011               	retfie		f
 18487  0000AA                     __end_of_INTERRUPT_InterruptManager:
 18488                           	opt stack 0
 18489                           pclatu	equ	0xFFB
 18490                           pclath	equ	0xFFA
 18491                           tblptru	equ	0xFF8
 18492                           tblptrh	equ	0xFF7
 18493                           tblptrl	equ	0xFF6
 18494                           tablat	equ	0xFF5
 18495                           prodh	equ	0xFF4
 18496                           prodl	equ	0xFF3
 18497                           intcon	equ	0xFF2
 18498                           postinc0	equ	0xFEE
 18499                           wreg	equ	0xFE8
 18500                           indf1	equ	0xFE7
 18501                           postdec1	equ	0xFE5
 18502                           fsr1h	equ	0xFE2
 18503                           fsr1l	equ	0xFE1
 18504                           indf2	equ	0xFDF
 18505                           postinc2	equ	0xFDE
 18506                           postdec2	equ	0xFDD
 18507                           plusw2	equ	0xFDB
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function _USBapp_setrxByteFlag *****************
 18513 ;; Defined at:
 18514 ;;		line 226 in file "../Includes/Board/USBapp.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;		None
 18517 ;; Auto vars:     Size  Location     Type
 18518 ;;		None
 18519 ;; Return value:  Size  Location     Type
 18520 ;;                  1    wreg      void 
 18521 ;; Registers used:
 18522 ;;		wreg, status,2
 18523 ;; Tracked objects:
 18524 ;;		On entry : 0/0
 18525 ;;		On exit  : 0/0
 18526 ;;		Unchanged: 0/0
 18527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18528 ;;      Params:         0       0       0       0       0       0       0       0       0
 18529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18532 ;;Total ram usage:        0 bytes
 18533 ;; Hardware stack levels used:    1
 18534 ;; This function calls:
 18535 ;;		Nothing
 18536 ;; This function is called by:
 18537 ;;		_INTERRUPT_InterruptManager
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text86
 18542  00422E                     __ptext86:
 18543                           	opt stack 0
 18544  00422E                     _USBapp_setrxByteFlag:
 18545                           	opt stack 19
 18546                           
 18547                           ;USBapp.c: 228: rxByteFlag = 1;
 18548                           
 18549                           ;incstack = 0
 18550  00422E  0E01               	movlw	1
 18551  004230  6E2A               	movwf	_rxByteFlag,c	;volatile
 18552  004232  0C01               	retlw	1	;funcret
 18553  004234                     __end_of_USBapp_setrxByteFlag:
 18554                           	opt stack 0
 18555                           pclatu	equ	0xFFB
 18556                           pclath	equ	0xFFA
 18557                           tblptru	equ	0xFF8
 18558                           tblptrh	equ	0xFF7
 18559                           tblptrl	equ	0xFF6
 18560                           tablat	equ	0xFF5
 18561                           prodh	equ	0xFF4
 18562                           prodl	equ	0xFF3
 18563                           intcon	equ	0xFF2
 18564                           postinc0	equ	0xFEE
 18565                           wreg	equ	0xFE8
 18566                           indf1	equ	0xFE7
 18567                           postdec1	equ	0xFE5
 18568                           fsr1h	equ	0xFE2
 18569                           fsr1l	equ	0xFE1
 18570                           indf2	equ	0xFDF
 18571                           postinc2	equ	0xFDE
 18572                           postdec2	equ	0xFDD
 18573                           plusw2	equ	0xFDB
 18574                           fsr2h	equ	0xFDA
 18575                           fsr2l	equ	0xFD9
 18576                           status	equ	0xFD8
 18577                           
 18578 ;; *************** function _USBDeviceTasks *****************
 18579 ;; Defined at:
 18580 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 18581 ;; Parameters:    Size  Location     Type
 18582 ;;		None
 18583 ;; Auto vars:     Size  Location     Type
 18584 ;;  i               1   32[COMRAM] unsigned char 
 18585 ;; Return value:  Size  Location     Type
 18586 ;;                  1    wreg      void 
 18587 ;; Registers used:
 18588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18589 ;; Tracked objects:
 18590 ;;		On entry : 0/0
 18591 ;;		On exit  : 0/0
 18592 ;;		Unchanged: 0/0
 18593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18594 ;;      Params:         0       0       0       0       0       0       0       0       0
 18595 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18597 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18598 ;;Total ram usage:        1 bytes
 18599 ;; Hardware stack levels used:    1
 18600 ;; Hardware stack levels required when called:    9
 18601 ;; This function calls:
 18602 ;;		_USBCtrlEPAllowStatusStage
 18603 ;;		_USBCtrlEPService
 18604 ;;		_USBStallHandler
 18605 ;;		_USBSuspend
 18606 ;;		_USBWakeFromSuspend
 18607 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18608 ;;		i2_USBDeviceInit
 18609 ;; This function is called by:
 18610 ;;		_INTERRUPT_InterruptManager
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text87
 18615  001F38                     __ptext87:
 18616                           	opt stack 0
 18617  001F38                     _USBDeviceTasks:
 18618                           	opt stack 10
 18619                           
 18620                           ;usb_device.c: 430: uint8_t i;
 18621                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 18622                           
 18623                           ;incstack = 0
 18624  001F38  0100               	movlb	0	; () banked
 18625  001F3A  058A               	decf	_USBDeviceState& (0+255),w,b	;volatile
 18626  001F3C  E107               	bnz	i2l9564
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;usb_device.c: 433: {
 18630                           ;usb_device.c: 443: if(!UCONbits.SE0)
 18631  001F3E  BA60               	btfsc	3936,5,c	;volatile
 18632  001F40  D005               	goto	i2l9564
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;usb_device.c: 444: {
 18636                           ;usb_device.c: 445: {UIR = 0;};
 18637  001F42  6A65               	clrf	3941,c	;volatile
 18638                           
 18639                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 18640  001F44  8064               	bsf	3940,0,c	;volatile
 18641                           
 18642                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 18643  001F46  8864               	bsf	3940,4,c	;volatile
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 18647  001F48  0E02               	movlw	2
 18648  001F4A  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18649  001F4C                     i2l9564:
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;usb_device.c: 449: }
 18653                           ;usb_device.c: 450: }
 18654                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18655  001F4C  B465               	btfsc	3941,2,c	;volatile
 18656                           
 18657                           ; BSR set to: 0
 18658  001F4E  A464               	btfss	3940,2,c	;volatile
 18659  001F50  D003               	goto	i2l9572
 18660                           
 18661                           ; BSR set to: 0
 18662                           ;usb_device.c: 455: {
 18663                           ;usb_device.c: 456: (UIR &= 0xFB);
 18664  001F52  9465               	bcf	3941,2,c	;volatile
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;usb_device.c: 457: USBWakeFromSuspend();
 18668  001F54  EC08  F020         	call	_USBWakeFromSuspend	;wreg free
 18669  001F58                     i2l9572:
 18670                           
 18671                           ;usb_device.c: 458: }
 18672                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 18673  001F58  A260               	btfss	3936,1,c	;volatile
 18674  001F5A  D002               	goto	i2l1576
 18675                           
 18676                           ;usb_device.c: 464: {
 18677                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 18678  001F5C  94A4               	bcf	4004,2,c	;volatile
 18679                           
 18680                           ;usb_device.c: 466: return;
 18681  001F5E  0012               	return	
 18682  001F60                     i2l1576:
 18683                           
 18684                           ;usb_device.c: 467: }
 18685                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18686  001F60  B065               	btfsc	3941,0,c	;volatile
 18687  001F62  A064               	btfss	3940,0,c	;volatile
 18688  001F64  D006               	goto	i2l9586
 18689                           
 18690                           ;usb_device.c: 480: {
 18691                           ;usb_device.c: 481: USBDeviceInit();
 18692  001F66  EC59  F012         	call	i2_USBDeviceInit	;wreg free
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 18696  001F6A  84A3               	bsf	4003,2,c	;volatile
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 18700  001F6C  0E04               	movlw	4
 18701  001F6E  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;usb_device.c: 489: (UIR &= 0xFE);
 18705  001F70  9065               	bcf	3941,0,c	;volatile
 18706  001F72                     i2l9586:
 18707                           
 18708                           ;usb_device.c: 490: }
 18709                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18710  001F72  B865               	btfsc	3941,4,c	;volatile
 18711  001F74  A864               	btfss	3940,4,c	;volatile
 18712  001F76  D003               	goto	i2l9594
 18713                           
 18714                           ;usb_device.c: 496: {
 18715                           ;usb_device.c: 497: USBSuspend();
 18716  001F78  EC47  F020         	call	_USBSuspend	;wreg free
 18717                           
 18718                           ;usb_device.c: 498: (UIR &= 0xEF);
 18719  001F7C  9865               	bcf	3941,4,c	;volatile
 18720  001F7E                     i2l9594:
 18721                           
 18722                           ;usb_device.c: 499: }
 18723                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 18724  001F7E  AC65               	btfss	3941,6,c	;volatile
 18725  001F80  D014               	goto	i2l9610
 18726                           
 18727                           ;usb_device.c: 502: {
 18728                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 18729  001F82  AC64               	btfss	3940,6,c	;volatile
 18730  001F84  D00A               	goto	i2l9600
 18731                           
 18732                           ;usb_device.c: 504: {
 18733                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18734  001F86  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18735  001F88  0E73               	movlw	115
 18736  001F8A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18737  001F8C  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18738  001F8E  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18739  001F90  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18740  001F92  0E01               	movlw	1
 18741  001F94  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18742  001F96  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18743  001F9A                     i2l9600:
 18744                           
 18745                           ;usb_device.c: 506: }
 18746                           ;usb_device.c: 507: (UIR &= 0xBF);
 18747  001F9A  9C65               	bcf	3941,6,c	;volatile
 18748                           
 18749                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 18750  001F9C  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 18751  001F9E  E001               	bz	i2l9606
 18752                           
 18753                           ;usb_device.c: 513: {
 18754                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 18755  001FA0  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18756  001FA2                     i2l9606:
 18757                           
 18758                           ;usb_device.c: 515: }
 18759                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 18760  001FA2  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18761  001FA4  E102               	bnz	i2l9610
 18762                           
 18763                           ;usb_device.c: 522: {
 18764                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 18765  001FA6  EC61  F014         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18766  001FAA                     i2l9610:
 18767                           
 18768                           ;usb_device.c: 524: }
 18769                           ;usb_device.c: 525: }
 18770                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18771  001FAA  BA65               	btfsc	3941,5,c	;volatile
 18772  001FAC  AA64               	btfss	3940,5,c	;volatile
 18773  001FAE  D002               	goto	i2l9616
 18774                           
 18775                           ;usb_device.c: 528: {
 18776                           ;usb_device.c: 529: USBStallHandler();
 18777  001FB0  ECCA  F01D         	call	_USBStallHandler	;wreg free
 18778  001FB4                     i2l9616:
 18779                           
 18780                           ;usb_device.c: 530: }
 18781                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18782  001FB4  B265               	btfsc	3941,1,c	;volatile
 18783  001FB6  A264               	btfss	3940,1,c	;volatile
 18784  001FB8  D00B               	goto	i2l9624
 18785                           
 18786                           ;usb_device.c: 533: {
 18787                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18788  001FBA  0E7F               	movlw	127
 18789  001FBC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18790  001FBE  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18791  001FC0  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18792  001FC2  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18793  001FC4  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18794  001FC6  0E01               	movlw	1
 18795  001FC8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18796  001FCA  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18797                           
 18798                           ;usb_device.c: 535: {UEIR = 0;};
 18799  001FCE  6A67               	clrf	3943,c	;volatile
 18800  001FD0                     i2l9624:
 18801                           
 18802                           ;usb_device.c: 536: }
 18803                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 18804  001FD0  0E04               	movlw	4
 18805  001FD2  0100               	movlb	0	; () banked
 18806  001FD4  618A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 18807  001FD6  D002               	goto	i2l1586
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;usb_device.c: 544: {
 18811                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 18812  001FD8  94A4               	bcf	4004,2,c	;volatile
 18813                           
 18814                           ;usb_device.c: 546: return;
 18815  001FDA  0C04               	retlw	4
 18816  001FDC                     i2l1586:
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;usb_device.c: 547: }
 18820                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 18821  001FDC  A664               	btfss	3940,3,c	;volatile
 18822  001FDE  D029               	goto	i2l1587
 18823                           
 18824                           ; BSR set to: 0
 18825                           ;usb_device.c: 553: {
 18826                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 18827  001FE0  6A4E               	clrf	USBDeviceTasks@i,c
 18828  001FE2                     i2l1588:
 18829                           
 18830                           ;usb_device.c: 555: {
 18831                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 18832  001FE2  A665               	btfss	3941,3,c	;volatile
 18833  001FE4  D026               	goto	i2l1587
 18834                           
 18835                           ;usb_device.c: 557: {
 18836                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 18837  001FE6  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 18838                           
 18839                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 18840  001FEA  302D               	rrcf	_USTATcopy,w,c	;volatile
 18841  001FEC  32E8               	rrcf	wreg,f,c
 18842  001FEE  32E8               	rrcf	wreg,f,c
 18843  001FF0  0B0F               	andlw	15
 18844  001FF2  6E22               	movwf	_endpoint_number,c	;volatile
 18845                           
 18846                           ;usb_device.c: 562: (UIR &= 0xF7);
 18847  001FF4  9665               	bcf	3941,3,c	;volatile
 18848                           
 18849                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 18850  001FF6  B42D               	btfsc	_USTATcopy,2,c	;volatile
 18851  001FF8  D003               	goto	i2l9644
 18852                           
 18853                           ;usb_device.c: 567: {
 18854                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18855  001FFA  5022               	movf	_endpoint_number,w,c
 18856  001FFC  0F6D               	addlw	low _ep_data_out
 18857  001FFE  D002               	goto	L57
 18858  002000                     i2l9644:
 18859                           
 18860                           ;usb_device.c: 570: else
 18861                           ;usb_device.c: 571: {
 18862                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18863  002000  5022               	movf	_endpoint_number,w,c
 18864  002002  0F6A               	addlw	low _ep_data_in
 18865  002004                     L57:
 18866  002004  6ED9               	movwf	fsr2l,c
 18867  002006  6ADA               	clrf	fsr2h,c
 18868  002008  0100               	movlb	0	; () banked
 18869  00200A  70DF               	btg	indf2,0,c
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;usb_device.c: 573: }
 18873                           ;usb_device.c: 577: if(endpoint_number == 0)
 18874  00200C  5022               	movf	_endpoint_number,w,c	;volatile
 18875  00200E  E103               	bnz	i2l9650
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;usb_device.c: 578: {
 18879                           ;usb_device.c: 579: USBCtrlEPService();
 18880  002010  EC75  F015         	call	_USBCtrlEPService	;wreg free
 18881                           
 18882                           ;usb_device.c: 580: }
 18883  002014  D00A               	goto	i2l9652
 18884  002016                     i2l9650:
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;usb_device.c: 581: else
 18888                           ;usb_device.c: 582: {
 18889                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18890  002016  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18891  002018  0E72               	movlw	114
 18892  00201A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18893  00201C  0E2D               	movlw	low _USTATcopy
 18894  00201E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18895  002020  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18896  002022  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18897  002024  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18898  002026  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18899  00202A                     i2l9652:
 18900  00202A  2A4E               	incf	USBDeviceTasks@i,f,c
 18901  00202C  0E03               	movlw	3
 18902  00202E  644E               	cpfsgt	USBDeviceTasks@i,c
 18903  002030  D7D8               	goto	i2l1588
 18904  002032                     i2l1587:
 18905                           
 18906                           ;usb_device.c: 589: }
 18907                           ;usb_device.c: 590: }
 18908                           ;usb_device.c: 591: }
 18909                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 18910  002032  94A4               	bcf	4004,2,c	;volatile
 18911  002034  0012               	return		;funcret
 18912  002036                     __end_of_USBDeviceTasks:
 18913                           	opt stack 0
 18914                           pclatu	equ	0xFFB
 18915                           pclath	equ	0xFFA
 18916                           tblptru	equ	0xFF8
 18917                           tblptrh	equ	0xFF7
 18918                           tblptrl	equ	0xFF6
 18919                           tablat	equ	0xFF5
 18920                           prodh	equ	0xFF4
 18921                           prodl	equ	0xFF3
 18922                           intcon	equ	0xFF2
 18923                           postinc0	equ	0xFEE
 18924                           wreg	equ	0xFE8
 18925                           indf1	equ	0xFE7
 18926                           postdec1	equ	0xFE5
 18927                           fsr1h	equ	0xFE2
 18928                           fsr1l	equ	0xFE1
 18929                           indf2	equ	0xFDF
 18930                           postinc2	equ	0xFDE
 18931                           postdec2	equ	0xFDD
 18932                           plusw2	equ	0xFDB
 18933                           fsr2h	equ	0xFDA
 18934                           fsr2l	equ	0xFD9
 18935                           status	equ	0xFD8
 18936                           
 18937 ;; *************** function i2_USBDeviceInit *****************
 18938 ;; Defined at:
 18939 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 18940 ;; Parameters:    Size  Location     Type
 18941 ;;		None
 18942 ;; Auto vars:     Size  Location     Type
 18943 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18944 ;; Return value:  Size  Location     Type
 18945 ;;                  1    wreg      void 
 18946 ;; Registers used:
 18947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18948 ;; Tracked objects:
 18949 ;;		On entry : 0/0
 18950 ;;		On exit  : F/0
 18951 ;;		Unchanged: 0/0
 18952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18953 ;;      Params:         0       0       0       0       0       0       0       0       0
 18954 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18956 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18957 ;;Total ram usage:        1 bytes
 18958 ;; Hardware stack levels used:    1
 18959 ;; Hardware stack levels required when called:    1
 18960 ;; This function calls:
 18961 ;;		i2_memset
 18962 ;; This function is called by:
 18963 ;;		_USBDeviceTasks
 18964 ;; This function uses a non-reentrant model
 18965 ;;
 18966                           
 18967                           	psect	text88
 18968  0024B2                     __ptext88:
 18969                           	opt stack 0
 18970  0024B2                     i2_USBDeviceInit:
 18971                           	opt stack 17
 18972                           
 18973                           ;usb_device.c: 239: uint8_t i;
 18974                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 18975                           
 18976                           ;incstack = 0
 18977  0024B2  94A3               	bcf	4003,2,c	;volatile
 18978                           
 18979                           ;usb_device.c: 244: {UEIR = 0;};
 18980  0024B4  6A67               	clrf	3943,c	;volatile
 18981                           
 18982                           ;usb_device.c: 247: {UIR = 0;};
 18983  0024B6  6A65               	clrf	3941,c	;volatile
 18984                           
 18985                           ;usb_device.c: 250: UEP0 = 0;
 18986  0024B8  6A6A               	clrf	3946,c	;volatile
 18987                           
 18988                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 18989  0024BA  0E6B               	movlw	107
 18990  0024BC  6E2E               	movwf	i2memset@p1,c
 18991  0024BE  0E0F               	movlw	15
 18992  0024C0  6E2F               	movwf	i2memset@p1+1,c
 18993  0024C2  6A31               	clrf	i2memset@c+1,c
 18994  0024C4  6A30               	clrf	i2memset@c,c
 18995  0024C6  6A33               	clrf	i2memset@n+1,c
 18996  0024C8  0E02               	movlw	2
 18997  0024CA  6E32               	movwf	i2memset@n,c
 18998  0024CC  EC5A  F01F         	call	i2_memset	;wreg free
 18999                           
 19000                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19001  0024D0  0E16               	movlw	22
 19002  0024D2  6E62               	movwf	3938,c	;volatile
 19003  0024D4  0E9F               	movlw	159
 19004  0024D6  6E66               	movwf	3942,c	;volatile
 19005  0024D8  0E7B               	movlw	123
 19006  0024DA  6E64               	movwf	3940,c	;volatile
 19007                           
 19008                           ;usb_device.c: 257: ;
 19009                           ;usb_device.c: 260: ;
 19010                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 19011  0024DC  6A36               	clrf	i2USBDeviceInit@i,c
 19012  0024DE                     i2l9190:
 19013                           
 19014                           ;usb_device.c: 264: {
 19015                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 19016  0024DE  5036               	movf	i2USBDeviceInit@i,w,c
 19017  0024E0  0D04               	mullw	4
 19018  0024E2  0E00               	movlw	0
 19019  0024E4  24F3               	addwf	prodl,w,c
 19020  0024E6  6ED9               	movwf	fsr2l,c
 19021  0024E8  0E04               	movlw	4
 19022  0024EA  20F4               	addwfc	prodh,w,c
 19023  0024EC  6EDA               	movwf	fsr2h,c
 19024  0024EE  6ADE               	clrf	postinc2,c
 19025  0024F0  6ADE               	clrf	postinc2,c
 19026  0024F2  6ADE               	clrf	postinc2,c
 19027  0024F4  6ADD               	clrf	postdec2,c
 19028  0024F6  2A36               	incf	i2USBDeviceInit@i,f,c
 19029  0024F8  0E0B               	movlw	11
 19030  0024FA  6436               	cpfsgt	i2USBDeviceInit@i,c
 19031  0024FC  D7F0               	goto	i2l9190
 19032                           
 19033                           ;usb_device.c: 266: }
 19034                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 19035  0024FE  8C60               	bsf	3936,6,c	;volatile
 19036                           
 19037                           ;usb_device.c: 272: UADDR = 0x00;
 19038  002500  6A63               	clrf	3939,c	;volatile
 19039                           
 19040                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 19041  002502  9860               	bcf	3936,4,c	;volatile
 19042                           
 19043                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 19044  002504  9C60               	bcf	3936,6,c	;volatile
 19045                           
 19046                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 19047  002506  D005               	goto	i2l9204
 19048  002508                     i2l9196:
 19049                           
 19050                           ;usb_device.c: 282: {
 19051                           ;usb_device.c: 283: (UIR &= 0xF7);
 19052  002508  9665               	bcf	3941,3,c	;volatile
 19053                           
 19054                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 19055  00250A  6A0C               	clrf	_inPipes+3,c	;volatile
 19056                           
 19057                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 19058  00250C  6A04               	clrf	_outPipes+3,c	;volatile
 19059                           
 19060                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 19061  00250E  6A05               	clrf	_outPipes+4,c	;volatile
 19062  002510  6A06               	clrf	_outPipes+5,c	;volatile
 19063  002512                     i2l9204:
 19064  002512  B665               	btfsc	3941,3,c	;volatile
 19065  002514  D7F9               	goto	i2l9196
 19066                           
 19067                           ;usb_device.c: 288: }
 19068                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 19069  002516  0E01               	movlw	1
 19070  002518  0100               	movlb	0	; () banked
 19071  00251A  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19072                           
 19073                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 19074  00251C  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 19078  00251E  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 19082  002520  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19083                           
 19084                           ; BSR set to: 0
 19085                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 19086  002522  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 19090  002524  6A36               	clrf	i2USBDeviceInit@i,c
 19091  002526                     i2l9220:
 19092                           
 19093                           ;usb_device.c: 302: {
 19094                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 19095  002526  5036               	movf	i2USBDeviceInit@i,w,c
 19096  002528  0D02               	mullw	2
 19097  00252A  50F3               	movf	prodl,w,c
 19098  00252C  0F0F               	addlw	low _pBDTEntryIn
 19099  00252E  6ED9               	movwf	fsr2l,c
 19100  002530  6ADA               	clrf	fsr2h,c
 19101  002532  6ADE               	clrf	postinc2,c
 19102  002534  6ADD               	clrf	postdec2,c
 19103                           
 19104                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 19105  002536  5036               	movf	i2USBDeviceInit@i,w,c
 19106  002538  0D02               	mullw	2
 19107  00253A  50F3               	movf	prodl,w,c
 19108  00253C  0F60               	addlw	low _pBDTEntryOut
 19109  00253E  6ED9               	movwf	fsr2l,c
 19110  002540  6ADA               	clrf	fsr2h,c
 19111  002542  6ADE               	clrf	postinc2,c
 19112  002544  6ADD               	clrf	postdec2,c
 19113                           
 19114                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 19115  002546  5036               	movf	i2USBDeviceInit@i,w,c
 19116  002548  0F6A               	addlw	low _ep_data_in
 19117  00254A  6ED9               	movwf	fsr2l,c
 19118  00254C  6ADA               	clrf	fsr2h,c
 19119  00254E  6ADF               	clrf	indf2,c
 19120                           
 19121                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 19122  002550  5036               	movf	i2USBDeviceInit@i,w,c
 19123  002552  0F6D               	addlw	low _ep_data_out
 19124  002554  6ED9               	movwf	fsr2l,c
 19125  002556  6ADA               	clrf	fsr2h,c
 19126  002558  6ADF               	clrf	indf2,c
 19127  00255A  2A36               	incf	i2USBDeviceInit@i,f,c
 19128  00255C  0E02               	movlw	2
 19129  00255E  6436               	cpfsgt	i2USBDeviceInit@i,c
 19130  002560  D7E2               	goto	i2l9220
 19131                           
 19132                           ;usb_device.c: 307: }
 19133                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19134  002562  0E08               	movlw	8
 19135  002564  6E0F               	movwf	_pBDTEntryIn,c
 19136  002566  0E04               	movlw	4
 19137  002568  6E10               	movwf	_pBDTEntryIn+1,c
 19138                           
 19139                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 19140  00256A  0E16               	movlw	22
 19141  00256C  6E6A               	movwf	3946,c	;volatile
 19142                           
 19143                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19144  00256E  0E04               	movlw	4
 19145  002570  0104               	movlb	4	; () banked
 19146  002572  6F03               	movwf	3,b	;volatile
 19147  002574  0E30               	movlw	48
 19148  002576  6F02               	movwf	2,b	;volatile
 19149                           
 19150                           ; BSR set to: 4
 19151                           ;usb_device.c: 315: BDT[0].CNT = 8;
 19152  002578  0E08               	movlw	8
 19153  00257A  6F01               	movwf	1,b	;volatile
 19154                           
 19155                           ; BSR set to: 4
 19156                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 19157  00257C  0E04               	movlw	4
 19158  00257E  6F00               	movwf	0,b	;volatile
 19159                           
 19160                           ; BSR set to: 4
 19161                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 19162  002580  8F00               	bsf	0,7,b	;volatile
 19163                           
 19164                           ; BSR set to: 4
 19165                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 19166  002582  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 19167                           
 19168                           ; BSR set to: 4
 19169                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 19170  002584  0100               	movlb	0	; () banked
 19171  002586  6B8A               	clrf	_USBDeviceState& (0+255),b	;volatile
 19172                           
 19173                           ; BSR set to: 0
 19174  002588  0012               	return		;funcret
 19175  00258A                     __end_ofi2_USBDeviceInit:
 19176                           	opt stack 0
 19177                           pclatu	equ	0xFFB
 19178                           pclath	equ	0xFFA
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           intcon	equ	0xFF2
 19186                           postinc0	equ	0xFEE
 19187                           wreg	equ	0xFE8
 19188                           indf1	equ	0xFE7
 19189                           postdec1	equ	0xFE5
 19190                           fsr1h	equ	0xFE2
 19191                           fsr1l	equ	0xFE1
 19192                           indf2	equ	0xFDF
 19193                           postinc2	equ	0xFDE
 19194                           postdec2	equ	0xFDD
 19195                           plusw2	equ	0xFDB
 19196                           fsr2h	equ	0xFDA
 19197                           fsr2l	equ	0xFD9
 19198                           status	equ	0xFD8
 19199                           
 19200 ;; *************** function _USBWakeFromSuspend *****************
 19201 ;; Defined at:
 19202 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;		None
 19205 ;; Auto vars:     Size  Location     Type
 19206 ;;		None
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  1    wreg      void 
 19209 ;; Registers used:
 19210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19211 ;; Tracked objects:
 19212 ;;		On entry : F/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19216 ;;      Params:         0       0       0       0       0       0       0       0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19219 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19220 ;;Total ram usage:        0 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:    5
 19223 ;; This function calls:
 19224 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19225 ;; This function is called by:
 19226 ;;		_USBDeviceTasks
 19227 ;; This function uses a non-reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text89
 19231  004010                     __ptext89:
 19232                           	opt stack 0
 19233  004010                     _USBWakeFromSuspend:
 19234                           	opt stack 13
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;incstack = 0
 19241  004010  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19245  004012  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19246  004014  0E74               	movlw	116
 19247  004016  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19248  004018  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19249  00401A  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19250  00401C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19251  00401E  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19252  004020  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19253                           
 19254                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 19255  004024  9260               	bcf	3936,1,c	;volatile
 19256                           
 19257                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 19258  004026  9464               	bcf	3940,2,c	;volatile
 19259                           
 19260                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 19261  004028  D001               	goto	i2l9114
 19262  00402A                     i2l9112:
 19263                           
 19264                           ;usb_device.c: 1977: {
 19265                           ;usb_device.c: 1978: (UIR &= 0xFB);
 19266  00402A  9465               	bcf	3941,2,c	;volatile
 19267  00402C                     i2l9114:
 19268  00402C  A465               	btfss	3941,2,c	;volatile
 19269  00402E  0012               	return		;funcret
 19270  004030  D7FC               	goto	i2l9112
 19271  004032                     __end_of_USBWakeFromSuspend:
 19272                           	opt stack 0
 19273                           pclatu	equ	0xFFB
 19274                           pclath	equ	0xFFA
 19275                           tblptru	equ	0xFF8
 19276                           tblptrh	equ	0xFF7
 19277                           tblptrl	equ	0xFF6
 19278                           tablat	equ	0xFF5
 19279                           prodh	equ	0xFF4
 19280                           prodl	equ	0xFF3
 19281                           intcon	equ	0xFF2
 19282                           postinc0	equ	0xFEE
 19283                           wreg	equ	0xFE8
 19284                           indf1	equ	0xFE7
 19285                           postdec1	equ	0xFE5
 19286                           fsr1h	equ	0xFE2
 19287                           fsr1l	equ	0xFE1
 19288                           indf2	equ	0xFDF
 19289                           postinc2	equ	0xFDE
 19290                           postdec2	equ	0xFDD
 19291                           plusw2	equ	0xFDB
 19292                           fsr2h	equ	0xFDA
 19293                           fsr2l	equ	0xFD9
 19294                           status	equ	0xFD8
 19295                           
 19296 ;; *************** function _USBSuspend *****************
 19297 ;; Defined at:
 19298 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 19299 ;; Parameters:    Size  Location     Type
 19300 ;;		None
 19301 ;; Auto vars:     Size  Location     Type
 19302 ;;		None
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  1    wreg      void 
 19305 ;; Registers used:
 19306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19312 ;;      Params:         0       0       0       0       0       0       0       0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19315 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19316 ;;Total ram usage:        0 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:    5
 19319 ;; This function calls:
 19320 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19321 ;; This function is called by:
 19322 ;;		_USBDeviceTasks
 19323 ;; This function uses a non-reentrant model
 19324 ;;
 19325                           
 19326                           	psect	text90
 19327  00408E                     __ptext90:
 19328                           	opt stack 0
 19329  00408E                     _USBSuspend:
 19330                           	opt stack 13
 19331                           
 19332                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 19333                           
 19334                           ;incstack = 0
 19335  00408E  8464               	bsf	3940,2,c	;volatile
 19336                           
 19337                           ;usb_device.c: 1915: (UIR &= 0xEF);
 19338  004090  9865               	bcf	3941,4,c	;volatile
 19339                           
 19340                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 19341  004092  8260               	bsf	3936,1,c	;volatile
 19342                           
 19343                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 19344  004094  0E01               	movlw	1
 19345  004096  0100               	movlb	0	; () banked
 19346  004098  6F87               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19347                           
 19348                           ; BSR set to: 0
 19349                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19350  00409A  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19351  00409C  0E75               	movlw	117
 19352  00409E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19353  0040A0  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19354  0040A2  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19355  0040A4  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19356  0040A6  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19357  0040A8  EF41  F01D         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19358  0040AC                     __end_of_USBSuspend:
 19359                           	opt stack 0
 19360                           pclatu	equ	0xFFB
 19361                           pclath	equ	0xFFA
 19362                           tblptru	equ	0xFF8
 19363                           tblptrh	equ	0xFF7
 19364                           tblptrl	equ	0xFF6
 19365                           tablat	equ	0xFF5
 19366                           prodh	equ	0xFF4
 19367                           prodl	equ	0xFF3
 19368                           intcon	equ	0xFF2
 19369                           postinc0	equ	0xFEE
 19370                           wreg	equ	0xFE8
 19371                           indf1	equ	0xFE7
 19372                           postdec1	equ	0xFE5
 19373                           fsr1h	equ	0xFE2
 19374                           fsr1l	equ	0xFE1
 19375                           indf2	equ	0xFDF
 19376                           postinc2	equ	0xFDE
 19377                           postdec2	equ	0xFDD
 19378                           plusw2	equ	0xFDB
 19379                           fsr2h	equ	0xFDA
 19380                           fsr2l	equ	0xFD9
 19381                           status	equ	0xFD8
 19382                           
 19383 ;; *************** function _USBStallHandler *****************
 19384 ;; Defined at:
 19385 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;		None
 19388 ;; Auto vars:     Size  Location     Type
 19389 ;;		None
 19390 ;; Return value:  Size  Location     Type
 19391 ;;                  1    wreg      void 
 19392 ;; Registers used:
 19393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19394 ;; Tracked objects:
 19395 ;;		On entry : 0/0
 19396 ;;		On exit  : 0/0
 19397 ;;		Unchanged: 0/0
 19398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19399 ;;      Params:         0       0       0       0       0       0       0       0       0
 19400 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19401 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19402 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19403 ;;Total ram usage:        1 bytes
 19404 ;; Hardware stack levels used:    1
 19405 ;; This function calls:
 19406 ;;		Nothing
 19407 ;; This function is called by:
 19408 ;;		_USBDeviceTasks
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text91
 19413  003B94                     __ptext91:
 19414                           	opt stack 0
 19415  003B94                     _USBStallHandler:
 19416                           	opt stack 18
 19417                           
 19418                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 19419                           
 19420                           ;incstack = 0
 19421  003B94  A06A               	btfss	3946,0,c	;volatile
 19422  003B96  D01B               	goto	i2l1726
 19423                           
 19424                           ;usb_device.c: 1859: {
 19425                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19426  003B98  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19427  003B9C  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19428  003BA0  0E80               	movlw	128
 19429  003BA2  18DE               	xorwf	postinc2,w,c
 19430  003BA4  E113               	bnz	i2l9136
 19431  003BA6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19432  003BAA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19433  003BAE  0E84               	movlw	132
 19434  003BB0  18DE               	xorwf	postinc2,w,c
 19435  003BB2  E10C               	bnz	i2l9136
 19436                           
 19437                           ;usb_device.c: 1862: {
 19438                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19439  003BB4  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19440  003BB8  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19441  003BBC  0E0C               	movlw	12
 19442  003BBE  6EDF               	movwf	indf2,c
 19443                           
 19444                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19445  003BC0  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19446  003BC4  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19447  003BC8  0E00               	movlw	0
 19448  003BCA  8EDB               	bsf	plusw2,7,c
 19449  003BCC                     i2l9136:
 19450                           
 19451                           ;usb_device.c: 1866: }
 19452                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 19453  003BCC  906A               	bcf	3946,0,c	;volatile
 19454  003BCE                     i2l1726:
 19455                           
 19456                           ;usb_device.c: 1868: }
 19457                           ;usb_device.c: 1870: (UIR &= 0xDF);
 19458  003BCE  9A65               	bcf	3941,5,c	;volatile
 19459  003BD0  0012               	return		;funcret
 19460  003BD2                     __end_of_USBStallHandler:
 19461                           	opt stack 0
 19462                           pclatu	equ	0xFFB
 19463                           pclath	equ	0xFFA
 19464                           tblptru	equ	0xFF8
 19465                           tblptrh	equ	0xFF7
 19466                           tblptrl	equ	0xFF6
 19467                           tablat	equ	0xFF5
 19468                           prodh	equ	0xFF4
 19469                           prodl	equ	0xFF3
 19470                           intcon	equ	0xFF2
 19471                           postinc0	equ	0xFEE
 19472                           wreg	equ	0xFE8
 19473                           indf1	equ	0xFE7
 19474                           postdec1	equ	0xFE5
 19475                           fsr1h	equ	0xFE2
 19476                           fsr1l	equ	0xFE1
 19477                           indf2	equ	0xFDF
 19478                           postinc2	equ	0xFDE
 19479                           postdec2	equ	0xFDD
 19480                           plusw2	equ	0xFDB
 19481                           fsr2h	equ	0xFDA
 19482                           fsr2l	equ	0xFD9
 19483                           status	equ	0xFD8
 19484                           
 19485 ;; *************** function _USBCtrlEPService *****************
 19486 ;; Defined at:
 19487 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 19488 ;; Parameters:    Size  Location     Type
 19489 ;;		None
 19490 ;; Auto vars:     Size  Location     Type
 19491 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 19492 ;; Return value:  Size  Location     Type
 19493 ;;                  1    wreg      void 
 19494 ;; Registers used:
 19495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19496 ;; Tracked objects:
 19497 ;;		On entry : F/0
 19498 ;;		On exit  : 0/0
 19499 ;;		Unchanged: 0/0
 19500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19501 ;;      Params:         0       0       0       0       0       0       0       0       0
 19502 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19503 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19504 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19505 ;;Total ram usage:        3 bytes
 19506 ;; Hardware stack levels used:    1
 19507 ;; Hardware stack levels required when called:    8
 19508 ;; This function calls:
 19509 ;;		_USBCtrlTrfInHandler
 19510 ;;		_USBCtrlTrfOutHandler
 19511 ;;		_USBCtrlTrfSetupHandler
 19512 ;; This function is called by:
 19513 ;;		_USBDeviceTasks
 19514 ;; This function uses a non-reentrant model
 19515 ;;
 19516                           
 19517                           	psect	text92
 19518  002AEA                     __ptext92:
 19519                           	opt stack 0
 19520  002AEA                     _USBCtrlEPService:
 19521                           	opt stack 10
 19522                           
 19523                           ; BSR set to: 0
 19524                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 19525                           
 19526                           ;incstack = 0
 19527  002AEA  0E2D               	movlw	45
 19528  002AEC  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 19532  002AEE  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19533  002AF2  0EFD               	movlw	253
 19534  002AF4  164B               	andwf	??_USBCtrlEPService,f,c
 19535  002AF6  E14B               	bnz	i2l9170
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;usb_device.c: 2013: {
 19539                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19540  002AF8  90D8               	bcf	status,0,c
 19541  002AFA  302D               	rrcf	_USTATcopy,w,c	;volatile
 19542  002AFC  0B3F               	andlw	63
 19543  002AFE  0D04               	mullw	4
 19544  002B00  0E00               	movlw	0
 19545  002B02  24F3               	addwf	prodl,w,c
 19546  002B04  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 19547  002B06  0E04               	movlw	4
 19548  002B08  20F4               	addwfc	prodh,w,c
 19549  002B0A  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19553  002B0C  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19554  002B10  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19555                           
 19556                           ; BSR set to: 0
 19557                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 19558  002B14  0E04               	movlw	4
 19559  002B16  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 19560                           
 19561                           ; BSR set to: 0
 19562                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19563  002B18  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19564  002B1C  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19565  002B20  30DF               	rrcf	indf2,w,c
 19566  002B22  32E8               	rrcf	wreg,f,c
 19567  002B24  0B0F               	andlw	15
 19568  002B26  0A0D               	xorlw	13
 19569  002B28  E002 EFA8  F01C    	bnz	_USBCtrlTrfOutHandler
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;usb_device.c: 2025: {
 19573                           ;usb_device.c: 2026: unsigned char setup_cnt;
 19574                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 19575  002B2E  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 19576  002B30                     i2l9156:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;usb_device.c: 2033: {
 19580                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 19581  002B30  EE20 F002          	lfsr	2,2
 19582  002B34  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19583  002B36  26D9               	addwf	fsr2l,f,c
 19584  002B38  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19585  002B3A  22DA               	addwfc	fsr2h,f,c
 19586  002B3C  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 19587  002B40  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 19588  002B44  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 19589  002B48  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 19590  002B4C  0E30               	movlw	48
 19591  002B4E  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 19592  002B50  6EE1               	movwf	fsr1l,c
 19593  002B52  6AE2               	clrf	fsr1h,c
 19594  002B54  0E04               	movlw	4
 19595  002B56  22E2               	addwfc	fsr1h,f,c
 19596  002B58  CFDF FFE7          	movff	indf2,indf1
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 19600  002B5C  EE20 F002          	lfsr	2,2
 19601  002B60  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19602  002B62  26D9               	addwf	fsr2l,f,c
 19603  002B64  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19604  002B66  22DA               	addwfc	fsr2h,f,c
 19605  002B68  2ADE               	incf	postinc2,f,c
 19606  002B6A  0E00               	movlw	0
 19607  002B6C  22DD               	addwfc	postdec2,f,c
 19608                           
 19609                           ; BSR set to: 0
 19610  002B6E  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 19611                           
 19612                           ; BSR set to: 0
 19613  002B70  0E07               	movlw	7
 19614  002B72  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 19615  002B74  D7DD               	goto	i2l9156
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;usb_device.c: 2036: }
 19619                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19620  002B76  EE20 F002          	lfsr	2,2
 19621  002B7A  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19622  002B7C  26D9               	addwf	fsr2l,f,c
 19623  002B7E  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19624  002B80  22DA               	addwfc	fsr2h,f,c
 19625  002B82  0E30               	movlw	48
 19626  002B84  6EDE               	movwf	postinc2,c
 19627  002B86  0E04               	movlw	4
 19628  002B88  6EDD               	movwf	postdec2,c
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 19632  002B8A  EFA3  F01B         	goto	_USBCtrlTrfSetupHandler	;wreg free
 19633  002B8E                     i2l9170:
 19634                           
 19635                           ; BSR set to: 0
 19636                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 19637  002B8E  502D               	movf	_USTATcopy,w,c	;volatile
 19638  002B90  0BFD               	andlw	253
 19639  002B92  0A04               	xorlw	4
 19640  002B94  B4D8               	btfsc	status,2,c
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;usb_device.c: 2049: {
 19644                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 19645  002B96  EC99  F013         	call	_USBCtrlTrfInHandler	;wreg free
 19646  002B9A  0012               	return		;funcret
 19647  002B9C                     __end_of_USBCtrlEPService:
 19648                           	opt stack 0
 19649                           pclatu	equ	0xFFB
 19650                           pclath	equ	0xFFA
 19651                           tblptru	equ	0xFF8
 19652                           tblptrh	equ	0xFF7
 19653                           tblptrl	equ	0xFF6
 19654                           tablat	equ	0xFF5
 19655                           prodh	equ	0xFF4
 19656                           prodl	equ	0xFF3
 19657                           intcon	equ	0xFF2
 19658                           postinc0	equ	0xFEE
 19659                           wreg	equ	0xFE8
 19660                           indf1	equ	0xFE7
 19661                           postdec1	equ	0xFE5
 19662                           fsr1h	equ	0xFE2
 19663                           fsr1l	equ	0xFE1
 19664                           indf2	equ	0xFDF
 19665                           postinc2	equ	0xFDE
 19666                           postdec2	equ	0xFDD
 19667                           plusw2	equ	0xFDB
 19668                           fsr2h	equ	0xFDA
 19669                           fsr2l	equ	0xFD9
 19670                           status	equ	0xFD8
 19671                           
 19672 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19673 ;; Defined at:
 19674 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 19675 ;; Parameters:    Size  Location     Type
 19676 ;;		None
 19677 ;; Auto vars:     Size  Location     Type
 19678 ;;		None
 19679 ;; Return value:  Size  Location     Type
 19680 ;;                  1    wreg      void 
 19681 ;; Registers used:
 19682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19683 ;; Tracked objects:
 19684 ;;		On entry : F/0
 19685 ;;		On exit  : 0/0
 19686 ;;		Unchanged: 0/0
 19687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19688 ;;      Params:         0       0       0       0       0       0       0       0       0
 19689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19691 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19692 ;;Total ram usage:        0 bytes
 19693 ;; Hardware stack levels used:    1
 19694 ;; Hardware stack levels required when called:    7
 19695 ;; This function calls:
 19696 ;;		_USBCheckStdRequest
 19697 ;;		_USBCtrlEPServiceComplete
 19698 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19699 ;; This function is called by:
 19700 ;;		_USBCtrlEPService
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           	psect	text93
 19705  003746                     __ptext93:
 19706                           	opt stack 0
 19707  003746                     _USBCtrlTrfSetupHandler:
 19708                           	opt stack 10
 19709                           
 19710                           ; BSR set to: 0
 19711                           ;usb_device.c: 2102: shortPacketStatus = 0;
 19712                           
 19713                           ;incstack = 0
 19714  003746  6A2B               	clrf	_shortPacketStatus,c	;volatile
 19715                           
 19716                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 19717  003748  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 19718                           
 19719                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 19720  00374A  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19721                           
 19722                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 19723  00374C  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19724                           
 19725                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 19726  00374E  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19727                           
 19728                           ;usb_device.c: 2107: controlTransferState = 0;
 19729  003750  6A21               	clrf	_controlTransferState,c	;volatile
 19730                           
 19731                           ; BSR set to: 0
 19732                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19733  003752  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19734  003756  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19735  00375A  0E7F               	movlw	127
 19736  00375C  16DF               	andwf	indf2,f,c
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19740  00375E  0E04               	movlw	4
 19741  003760  1A0F               	xorwf	_pBDTEntryIn,f,c
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19745  003762  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19746  003766  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19747  00376A  0E7F               	movlw	127
 19748  00376C  16DF               	andwf	indf2,f,c
 19749                           
 19750                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19751  00376E  0E04               	movlw	4
 19752  003770  1A0F               	xorwf	_pBDTEntryIn,f,c
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 19756  003772  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19757  003776  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19758  00377A  0E7F               	movlw	127
 19759  00377C  16DF               	andwf	indf2,f,c
 19760                           
 19761                           ; BSR set to: 0
 19762                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 19763  00377E  6A0C               	clrf	_inPipes+3,c	;volatile
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 19767  003780  6A0D               	clrf	_inPipes+4,c	;volatile
 19768  003782  6A0E               	clrf	_inPipes+5,c	;volatile
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 19772  003784  6A04               	clrf	_outPipes+3,c	;volatile
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 19776  003786  6A05               	clrf	_outPipes+4,c	;volatile
 19777  003788  6A06               	clrf	_outPipes+5,c	;volatile
 19778                           
 19779                           ; BSR set to: 0
 19780                           ;usb_device.c: 2131: USBCheckStdRequest();
 19781  00378A  ECC9  F016         	call	_USBCheckStdRequest	;wreg free
 19782                           
 19783                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 19784  00378E  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19785  003790  0E03               	movlw	3
 19786  003792  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19787  003794  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19788  003796  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19789  003798  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19790  00379A  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19791  00379C  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19792                           
 19793                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 19794  0037A0  EF0C  F011         	goto	_USBCtrlEPServiceComplete	;wreg free
 19795  0037A4                     __end_of_USBCtrlTrfSetupHandler:
 19796                           	opt stack 0
 19797                           pclatu	equ	0xFFB
 19798                           pclath	equ	0xFFA
 19799                           tblptru	equ	0xFF8
 19800                           tblptrh	equ	0xFF7
 19801                           tblptrl	equ	0xFF6
 19802                           tablat	equ	0xFF5
 19803                           prodh	equ	0xFF4
 19804                           prodl	equ	0xFF3
 19805                           intcon	equ	0xFF2
 19806                           postinc0	equ	0xFEE
 19807                           wreg	equ	0xFE8
 19808                           indf1	equ	0xFE7
 19809                           postdec1	equ	0xFE5
 19810                           fsr1h	equ	0xFE2
 19811                           fsr1l	equ	0xFE1
 19812                           indf2	equ	0xFDF
 19813                           postinc2	equ	0xFDE
 19814                           postdec2	equ	0xFDD
 19815                           plusw2	equ	0xFDB
 19816                           fsr2h	equ	0xFDA
 19817                           fsr2l	equ	0xFD9
 19818                           status	equ	0xFD8
 19819                           
 19820 ;; *************** function _USBCtrlEPServiceComplete *****************
 19821 ;; Defined at:
 19822 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 19823 ;; Parameters:    Size  Location     Type
 19824 ;;		None
 19825 ;; Auto vars:     Size  Location     Type
 19826 ;;		None
 19827 ;; Return value:  Size  Location     Type
 19828 ;;                  1    wreg      void 
 19829 ;; Registers used:
 19830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19831 ;; Tracked objects:
 19832 ;;		On entry : 0/0
 19833 ;;		On exit  : 0/0
 19834 ;;		Unchanged: 0/0
 19835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19836 ;;      Params:         0       0       0       0       0       0       0       0       0
 19837 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19838 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19839 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19840 ;;Total ram usage:        0 bytes
 19841 ;; Hardware stack levels used:    1
 19842 ;; Hardware stack levels required when called:    2
 19843 ;; This function calls:
 19844 ;;		_USBCtrlEPAllowDataStage
 19845 ;;		_USBCtrlEPAllowStatusStage
 19846 ;; This function is called by:
 19847 ;;		_USBCtrlTrfSetupHandler
 19848 ;; This function uses a non-reentrant model
 19849 ;;
 19850                           
 19851                           	psect	text94
 19852  002218                     __ptext94:
 19853                           	opt stack 0
 19854  002218                     _USBCtrlEPServiceComplete:
 19855                           	opt stack 14
 19856                           
 19857                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 19858                           
 19859                           ;incstack = 0
 19860  002218  9860               	bcf	3936,4,c	;volatile
 19861                           
 19862                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 19863  00221A  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 19864  00221C  D037               	goto	i2l1650
 19865                           
 19866                           ;usb_device.c: 1295: {
 19867                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 19868  00221E  AE04               	btfss	_outPipes+3,7,c	;volatile
 19869  002220  D00A               	goto	i2l7048
 19870                           
 19871                           ;usb_device.c: 1297: {
 19872                           ;usb_device.c: 1298: controlTransferState = 2;
 19873  002222  0E02               	movlw	2
 19874  002224  6E21               	movwf	_controlTransferState,c	;volatile
 19875                           
 19876                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 19877  002226  0100               	movlb	0	; () banked
 19878  002228  5189               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 19879  00222A  E102               	bnz	i2l7044
 19880                           
 19881                           ; BSR set to: 0
 19882                           ;usb_device.c: 1310: {
 19883                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 19884  00222C  ECF9  F017         	call	_USBCtrlEPAllowDataStage	;wreg free
 19885  002230                     i2l7044:
 19886                           
 19887                           ; BSR set to: 0
 19888                           ;usb_device.c: 1312: }
 19889                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 19890  002230  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 19894  002232  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19895                           
 19896                           ;usb_device.c: 1318: }
 19897  002234  0012               	return	
 19898  002236                     i2l7048:
 19899                           
 19900                           ;usb_device.c: 1319: else
 19901                           ;usb_device.c: 1320: {
 19902                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 19903  002236  EE20 F001          	lfsr	2,1
 19904  00223A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19905  00223C  26D9               	addwf	fsr2l,f,c
 19906  00223E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19907  002240  22DA               	addwfc	fsr2h,f,c
 19908  002242  0E08               	movlw	8
 19909  002244  6EDF               	movwf	indf2,c
 19910                           
 19911                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19912  002246  EE20 F002          	lfsr	2,2
 19913  00224A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19914  00224C  26D9               	addwf	fsr2l,f,c
 19915  00224E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19916  002250  22DA               	addwfc	fsr2h,f,c
 19917  002252  0E30               	movlw	48
 19918  002254  6EDE               	movwf	postinc2,c
 19919  002256  0E04               	movlw	4
 19920  002258  6EDD               	movwf	postdec2,c
 19921                           
 19922                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19923  00225A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19924  00225E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19925  002262  0E0C               	movlw	12
 19926  002264  6EDF               	movwf	indf2,c
 19927                           
 19928                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19929  002266  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19930  00226A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19931  00226E  0E00               	movlw	0
 19932  002270  8EDB               	bsf	plusw2,7,c
 19933                           
 19934                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 19935  002272  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19936  002276  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19937  00227A  0E04               	movlw	4
 19938  00227C  6EDF               	movwf	indf2,c
 19939                           
 19940                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19941  00227E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19942  002282  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19943  002286  0E00               	movlw	0
 19944  002288  8EDB               	bsf	plusw2,7,c
 19945  00228A  0C00               	retlw	0
 19946  00228C                     i2l1650:
 19947                           
 19948                           ;usb_device.c: 1333: else
 19949                           ;usb_device.c: 1334: {
 19950                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 19951  00228C  0104               	movlb	4	; () banked
 19952  00228E  AF30               	btfss	48,7,b	;volatile
 19953  002290  D00E               	goto	i2l7068
 19954                           
 19955                           ; BSR set to: 4
 19956                           ;usb_device.c: 1336: {
 19957                           ;usb_device.c: 1337: controlTransferState = 1;
 19958  002292  0E01               	movlw	1
 19959  002294  6E21               	movwf	_controlTransferState,c	;volatile
 19960                           
 19961                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 19962  002296  0100               	movlb	0	; () banked
 19963  002298  5188               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 19964  00229A  E102               	bnz	i2l7060
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;usb_device.c: 1352: {
 19968                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 19969  00229C  ECF9  F017         	call	_USBCtrlEPAllowDataStage	;wreg free
 19970  0022A0                     i2l7060:
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;usb_device.c: 1354: }
 19974                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 19975  0022A0  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 19979  0022A2  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 19983  0022A4  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19984  0022A6  A4D8               	btfss	status,2,c
 19985  0022A8  0012               	return	
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;usb_device.c: 1379: {
 19989                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 19990  0022AA  EF61  F014         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 19991  0022AE                     i2l7068:
 19992                           
 19993                           ; BSR set to: 4
 19994                           ;usb_device.c: 1383: else
 19995                           ;usb_device.c: 1384: {
 19996                           ;usb_device.c: 1395: controlTransferState = 2;
 19997  0022AE  0E02               	movlw	2
 19998  0022B0  6E21               	movwf	_controlTransferState,c	;volatile
 19999                           
 20000                           ; BSR set to: 4
 20001                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 20002  0022B2  EE20 F001          	lfsr	2,1
 20003  0022B6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20004  0022B8  26D9               	addwf	fsr2l,f,c
 20005  0022BA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20006  0022BC  22DA               	addwfc	fsr2h,f,c
 20007  0022BE  0E08               	movlw	8
 20008  0022C0  6EDF               	movwf	indf2,c
 20009                           
 20010                           ; BSR set to: 4
 20011                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20012  0022C2  EE20 F002          	lfsr	2,2
 20013  0022C6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20014  0022C8  26D9               	addwf	fsr2l,f,c
 20015  0022CA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20016  0022CC  22DA               	addwfc	fsr2h,f,c
 20017  0022CE  0E30               	movlw	48
 20018  0022D0  6EDE               	movwf	postinc2,c
 20019  0022D2  0E04               	movlw	4
 20020  0022D4  6EDD               	movwf	postdec2,c
 20021                           
 20022                           ; BSR set to: 4
 20023                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20024  0022D6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20025  0022DA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20026  0022DE  6EDF               	movwf	indf2,c
 20027                           
 20028                           ; BSR set to: 4
 20029                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20030  0022E0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20031  0022E4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20032  0022E8  0E00               	movlw	0
 20033  0022EA  8EDB               	bsf	plusw2,7,c
 20034                           
 20035                           ; BSR set to: 4
 20036                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 20037  0022EC  0100               	movlb	0	; () banked
 20038  0022EE  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 20042  0022F0  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 20046  0022F2  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20047  0022F4  E102 EF61  F014    	bz	_USBCtrlEPAllowStatusStage
 20048  0022FA  0012               	return	
 20049  0022FC                     __end_of_USBCtrlEPServiceComplete:
 20050                           	opt stack 0
 20051                           pclatu	equ	0xFFB
 20052                           pclath	equ	0xFFA
 20053                           tblptru	equ	0xFF8
 20054                           tblptrh	equ	0xFF7
 20055                           tblptrl	equ	0xFF6
 20056                           tablat	equ	0xFF5
 20057                           prodh	equ	0xFF4
 20058                           prodl	equ	0xFF3
 20059                           intcon	equ	0xFF2
 20060                           postinc0	equ	0xFEE
 20061                           wreg	equ	0xFE8
 20062                           indf1	equ	0xFE7
 20063                           postdec1	equ	0xFE5
 20064                           fsr1h	equ	0xFE2
 20065                           fsr1l	equ	0xFE1
 20066                           indf2	equ	0xFDF
 20067                           postinc2	equ	0xFDE
 20068                           postdec2	equ	0xFDD
 20069                           plusw2	equ	0xFDB
 20070                           fsr2h	equ	0xFDA
 20071                           fsr2l	equ	0xFD9
 20072                           status	equ	0xFD8
 20073                           
 20074 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20075 ;; Defined at:
 20076 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 20077 ;; Parameters:    Size  Location     Type
 20078 ;;		None
 20079 ;; Auto vars:     Size  Location     Type
 20080 ;;		None
 20081 ;; Return value:  Size  Location     Type
 20082 ;;                  1    wreg      void 
 20083 ;; Registers used:
 20084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20085 ;; Tracked objects:
 20086 ;;		On entry : F/0
 20087 ;;		On exit  : F/0
 20088 ;;		Unchanged: 0/0
 20089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20090 ;;      Params:         0       0       0       0       0       0       0       0       0
 20091 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20093 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20094 ;;Total ram usage:        0 bytes
 20095 ;; Hardware stack levels used:    1
 20096 ;; Hardware stack levels required when called:    1
 20097 ;; This function calls:
 20098 ;;		_USBCtrlTrfTxService
 20099 ;; This function is called by:
 20100 ;;		_USBCtrlEPServiceComplete
 20101 ;; This function uses a non-reentrant model
 20102 ;;
 20103                           
 20104                           	psect	text95
 20105  002FF2                     __ptext95:
 20106                           	opt stack 0
 20107  002FF2                     _USBCtrlEPAllowDataStage:
 20108                           	opt stack 14
 20109                           
 20110                           ; BSR set to: 0
 20111                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 20112                           
 20113                           ;incstack = 0
 20114  002FF2  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20115                           
 20116                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 20117  002FF4  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;usb_device.c: 1178: if(controlTransferState == 2)
 20121  002FF6  0E02               	movlw	2
 20122  002FF8  1821               	xorwf	_controlTransferState,w,c	;volatile
 20123  002FFA  E11F               	bnz	i2l6708
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;usb_device.c: 1179: {
 20127                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 20128  002FFC  EE20 F001          	lfsr	2,1
 20129  003000  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20130  003002  26D9               	addwf	fsr2l,f,c
 20131  003004  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20132  003006  22DA               	addwfc	fsr2h,f,c
 20133  003008  0E08               	movlw	8
 20134  00300A  6EDF               	movwf	indf2,c
 20135                           
 20136                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20137  00300C  EE20 F002          	lfsr	2,2
 20138  003010  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20139  003012  26D9               	addwf	fsr2l,f,c
 20140  003014  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20141  003016  22DA               	addwfc	fsr2h,f,c
 20142  003018  0E38               	movlw	56
 20143  00301A  6EDE               	movwf	postinc2,c
 20144  00301C  0E04               	movlw	4
 20145  00301E  6EDD               	movwf	postdec2,c
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20149  003020  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20150  003024  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20151  003028  0E48               	movlw	72
 20152  00302A  6EDF               	movwf	indf2,c
 20153                           
 20154                           ; BSR set to: 0
 20155                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20156  00302C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20157  003030  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20158  003034  0E00               	movlw	0
 20159  003036  8EDB               	bsf	plusw2,7,c
 20160                           
 20161                           ;usb_device.c: 1185: }
 20162  003038  0C00               	retlw	0
 20163  00303A                     i2l6708:
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;usb_device.c: 1186: else
 20167                           ;usb_device.c: 1187: {
 20168                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20169  00303A  500D               	movf	_inPipes+4,w,c	;volatile
 20170  00303C  0104               	movlb	4	; () banked
 20171  00303E  5D36               	subwf	54,w,b	;volatile
 20172  003040  500E               	movf	_inPipes+5,w,c	;volatile
 20173  003042  5937               	subwfb	55,w,b	;volatile
 20174  003044  E204               	bc	i2l6712
 20175                           
 20176                           ; BSR set to: 4
 20177                           ;usb_device.c: 1191: {
 20178                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 20179  003046  C436 F00D          	movff	1078,_inPipes+4	;volatile
 20180  00304A  C437 F00E          	movff	1079,_inPipes+5	;volatile
 20181  00304E                     i2l6712:
 20182                           
 20183                           ; BSR set to: 4
 20184                           ;usb_device.c: 1193: }
 20185                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 20186  00304E  EC00  F014         	call	_USBCtrlTrfTxService	;wreg free
 20187                           
 20188                           ; BSR set to: 0
 20189                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20190  003052  EE20 F002          	lfsr	2,2
 20191  003056  500F               	movf	_pBDTEntryIn,w,c
 20192  003058  26D9               	addwf	fsr2l,f,c
 20193  00305A  5010               	movf	_pBDTEntryIn+1,w,c
 20194  00305C  22DA               	addwfc	fsr2h,f,c
 20195  00305E  0E38               	movlw	56
 20196  003060  6EDE               	movwf	postinc2,c
 20197  003062  0E04               	movlw	4
 20198  003064  6EDD               	movwf	postdec2,c
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20202  003066  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20203  00306A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20204  00306E  0E48               	movlw	72
 20205  003070  6EDF               	movwf	indf2,c
 20206                           
 20207                           ; BSR set to: 0
 20208                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20209  003072  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20210  003076  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20211  00307A  0E00               	movlw	0
 20212  00307C  8EDB               	bsf	plusw2,7,c
 20213                           
 20214                           ; BSR set to: 0
 20215  00307E  0C00               	retlw	0	;funcret
 20216  003080                     __end_of_USBCtrlEPAllowDataStage:
 20217                           	opt stack 0
 20218                           pclatu	equ	0xFFB
 20219                           pclath	equ	0xFFA
 20220                           tblptru	equ	0xFF8
 20221                           tblptrh	equ	0xFF7
 20222                           tblptrl	equ	0xFF6
 20223                           tablat	equ	0xFF5
 20224                           prodh	equ	0xFF4
 20225                           prodl	equ	0xFF3
 20226                           intcon	equ	0xFF2
 20227                           postinc0	equ	0xFEE
 20228                           wreg	equ	0xFE8
 20229                           indf1	equ	0xFE7
 20230                           postdec1	equ	0xFE5
 20231                           fsr1h	equ	0xFE2
 20232                           fsr1l	equ	0xFE1
 20233                           indf2	equ	0xFDF
 20234                           postinc2	equ	0xFDE
 20235                           postdec2	equ	0xFDD
 20236                           plusw2	equ	0xFDB
 20237                           fsr2h	equ	0xFDA
 20238                           fsr2l	equ	0xFD9
 20239                           status	equ	0xFD8
 20240                           
 20241 ;; *************** function _USBCheckStdRequest *****************
 20242 ;; Defined at:
 20243 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 20244 ;; Parameters:    Size  Location     Type
 20245 ;;		None
 20246 ;; Auto vars:     Size  Location     Type
 20247 ;;		None
 20248 ;; Return value:  Size  Location     Type
 20249 ;;                  1    wreg      void 
 20250 ;; Registers used:
 20251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20252 ;; Tracked objects:
 20253 ;;		On entry : F/0
 20254 ;;		On exit  : 0/0
 20255 ;;		Unchanged: 0/0
 20256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20257 ;;      Params:         0       0       0       0       0       0       0       0       0
 20258 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20259 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20260 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20261 ;;Total ram usage:        1 bytes
 20262 ;; Hardware stack levels used:    1
 20263 ;; Hardware stack levels required when called:    6
 20264 ;; This function calls:
 20265 ;;		_USBStdFeatureReqHandler
 20266 ;;		_USBStdGetDscHandler
 20267 ;;		_USBStdGetStatusHandler
 20268 ;;		_USBStdSetCfgHandler
 20269 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20270 ;; This function is called by:
 20271 ;;		_USBCtrlTrfSetupHandler
 20272 ;; This function uses a non-reentrant model
 20273 ;;
 20274                           
 20275                           	psect	text96
 20276  002D92                     __ptext96:
 20277                           	opt stack 0
 20278  002D92                     _USBCheckStdRequest:
 20279                           	opt stack 10
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;incstack = 0
 20286  002D92  0104               	movlb	4	; () banked
 20287  002D94  3930               	swapf	48,w,b	;volatile
 20288  002D96  32E8               	rrcf	wreg,f,c
 20289  002D98  0B03               	andlw	3
 20290  002D9A  E02A               	bz	i2l7170
 20291  002D9C  0012               	return	
 20292  002D9E                     i2l1777:
 20293                           
 20294                           ; BSR set to: 4
 20295                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 20296  002D9E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20297                           
 20298                           ; BSR set to: 4
 20299                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 20300  002DA0  0E08               	movlw	8
 20301  002DA2  0100               	movlb	0	; () banked
 20302  002DA4  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20303                           
 20304                           ;usb_device.c: 2327: break;
 20305  002DA6  0C08               	retlw	8
 20306  002DA8                     i2l7144:
 20307                           
 20308                           ; BSR set to: 4
 20309                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20310  002DA8  0E2C               	movlw	low _USBActiveConfiguration
 20311  002DAA  6E09               	movwf	_inPipes,c	;volatile
 20312  002DAC  6A0A               	clrf	_inPipes+1,c	;volatile
 20313                           
 20314                           ; BSR set to: 4
 20315                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20316  002DAE  800C               	bsf	_inPipes+3,0,c	;volatile
 20317                           
 20318                           ; BSR set to: 4
 20319                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 20320  002DB0  0E01               	movlw	1
 20321  002DB2  6E0D               	movwf	_inPipes+4,c	;volatile
 20322                           
 20323                           ; BSR set to: 4
 20324                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 20325  002DB4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20326                           
 20327                           ;usb_device.c: 2339: break;
 20328  002DB6  0C01               	retlw	1
 20329  002DB8                     i2l7156:
 20330                           
 20331                           ; BSR set to: 4
 20332                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20333  002DB8  5134               	movf	52,w,b	;volatile
 20334  002DBA  0FC6               	addlw	low _USBAlternateInterface
 20335  002DBC  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 20336  002DBE  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 20337  002DC2  6A0A               	clrf	_inPipes+1,c	;volatile
 20338                           
 20339                           ; BSR set to: 4
 20340                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20341  002DC4  800C               	bsf	_inPipes+3,0,c	;volatile
 20342                           
 20343                           ; BSR set to: 4
 20344                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 20345  002DC6  0E01               	movlw	1
 20346  002DC8  6E0D               	movwf	_inPipes+4,c	;volatile
 20347                           
 20348                           ; BSR set to: 4
 20349                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 20350  002DCA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20351                           
 20352                           ;usb_device.c: 2352: break;
 20353  002DCC  0C01               	retlw	1
 20354  002DCE                     i2l1786:
 20355                           
 20356                           ; BSR set to: 4
 20357                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 20358  002DCE  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20359                           
 20360                           ; BSR set to: 4
 20361                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20362  002DD0  5134               	movf	52,w,b	;volatile
 20363  002DD2  0FC6               	addlw	low _USBAlternateInterface
 20364  002DD4  6ED9               	movwf	fsr2l,c
 20365  002DD6  6ADA               	clrf	fsr2h,c
 20366  002DD8  C432 FFDF          	movff	1074,indf2	;volatile
 20367                           
 20368                           ;usb_device.c: 2356: break;
 20369  002DDC  0012               	return	
 20370  002DDE                     i2l7166:
 20371                           
 20372                           ; BSR set to: 4
 20373                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20374  002DDE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20375  002DE0  0E02               	movlw	2
 20376  002DE2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20377  002DE4  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20378  002DE6  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20379  002DE8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20380  002DEA  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20381  002DEC  EF41  F01D         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20382  002DF0                     i2l7170:
 20383                           
 20384                           ; BSR set to: 4
 20385  002DF0  5131               	movf	49,w,b	;volatile
 20386                           
 20387                           ; Switch size 1, requested type "speed"
 20388                           ; Number of cases is 11, Range of values is 0 to 12
 20389                           ; switch strategies available:
 20390                           ; Name         Instructions Cycles
 20391                           ; simple_byte           34    18 (average)
 20392                           ;	Chosen strategy is simple_byte
 20393  002DF2  E102 EF4B  F019    	bz	_USBStdGetStatusHandler
 20394  002DF8  0A01               	xorlw	1	; case 1
 20395  002DFA  E102 EF9E  F00B    	bz	_USBStdFeatureReqHandler
 20396  002E00  0A02               	xorlw	2	; case 3
 20397  002E02  E102 EF9E  F00B    	bz	_USBStdFeatureReqHandler
 20398  002E08  0A06               	xorlw	6	; case 5
 20399  002E0A  E0C9               	bz	i2l1777
 20400  002E0C  0A03               	xorlw	3	; case 6
 20401  002E0E  E102 EF9B  F00E    	bz	_USBStdGetDscHandler
 20402  002E14  0A01               	xorlw	1	; case 7
 20403  002E16  E0E3               	bz	i2l7166
 20404  002E18  0A0F               	xorlw	15	; case 8
 20405  002E1A  E0C6               	bz	i2l7144
 20406  002E1C  0A01               	xorlw	1	; case 9
 20407  002E1E  E102 EF25  F016    	bz	_USBStdSetCfgHandler
 20408  002E24  0A03               	xorlw	3	; case 10
 20409  002E26  E0C8               	bz	i2l7156
 20410  002E28  0A01               	xorlw	1	; case 11
 20411  002E2A  E0D1               	bz	i2l1786
 20412  002E2C  0A07               	xorlw	7	; case 12
 20413  002E2E  0012               	return	
 20414  002E30                     __end_of_USBCheckStdRequest:
 20415                           	opt stack 0
 20416                           pclatu	equ	0xFFB
 20417                           pclath	equ	0xFFA
 20418                           tblptru	equ	0xFF8
 20419                           tblptrh	equ	0xFF7
 20420                           tblptrl	equ	0xFF6
 20421                           tablat	equ	0xFF5
 20422                           prodh	equ	0xFF4
 20423                           prodl	equ	0xFF3
 20424                           intcon	equ	0xFF2
 20425                           postinc0	equ	0xFEE
 20426                           wreg	equ	0xFE8
 20427                           indf1	equ	0xFE7
 20428                           postdec1	equ	0xFE5
 20429                           fsr1h	equ	0xFE2
 20430                           fsr1l	equ	0xFE1
 20431                           indf2	equ	0xFDF
 20432                           postinc2	equ	0xFDE
 20433                           postdec2	equ	0xFDD
 20434                           plusw2	equ	0xFDB
 20435                           fsr2h	equ	0xFDA
 20436                           fsr2l	equ	0xFD9
 20437                           status	equ	0xFD8
 20438                           
 20439 ;; *************** function _USBStdSetCfgHandler *****************
 20440 ;; Defined at:
 20441 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 20442 ;; Parameters:    Size  Location     Type
 20443 ;;		None
 20444 ;; Auto vars:     Size  Location     Type
 20445 ;;  i               1   21[COMRAM] unsigned char 
 20446 ;; Return value:  Size  Location     Type
 20447 ;;                  1    wreg      void 
 20448 ;; Registers used:
 20449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20450 ;; Tracked objects:
 20451 ;;		On entry : B/4
 20452 ;;		On exit  : F/0
 20453 ;;		Unchanged: 0/0
 20454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20455 ;;      Params:         0       0       0       0       0       0       0       0       0
 20456 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20458 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20459 ;;Total ram usage:        1 bytes
 20460 ;; Hardware stack levels used:    1
 20461 ;; Hardware stack levels required when called:    5
 20462 ;; This function calls:
 20463 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20464 ;;		i2_memset
 20465 ;; This function is called by:
 20466 ;;		_USBCheckStdRequest
 20467 ;; This function uses a non-reentrant model
 20468 ;;
 20469                           
 20470                           	psect	text97
 20471  002C4A                     __ptext97:
 20472                           	opt stack 0
 20473  002C4A                     _USBStdSetCfgHandler:
 20474                           	opt stack 10
 20475                           
 20476                           ;usb_device.c: 1631: uint8_t i;
 20477                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 20478                           
 20479                           ;incstack = 0
 20480  002C4A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20481                           
 20482                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 20483  002C4C  0E6B               	movlw	107
 20484  002C4E  6E2E               	movwf	i2memset@p1,c
 20485  002C50  0E0F               	movlw	15
 20486  002C52  6E2F               	movwf	i2memset@p1+1,c
 20487  002C54  6A31               	clrf	i2memset@c+1,c
 20488  002C56  6A30               	clrf	i2memset@c,c
 20489  002C58  6A33               	clrf	i2memset@n+1,c
 20490  002C5A  0E02               	movlw	2
 20491  002C5C  6E32               	movwf	i2memset@n,c
 20492  002C5E  EC5A  F01F         	call	i2_memset	;wreg free
 20493                           
 20494                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20495  002C62  6A2E               	clrf	i2memset@p1,c
 20496  002C64  0E04               	movlw	4
 20497  002C66  6E2F               	movwf	i2memset@p1+1,c
 20498  002C68  6A31               	clrf	i2memset@c+1,c
 20499  002C6A  6A30               	clrf	i2memset@c,c
 20500  002C6C  6A33               	clrf	i2memset@n+1,c
 20501  002C6E  0E30               	movlw	48
 20502  002C70  6E32               	movwf	i2memset@n,c
 20503  002C72  EC5A  F01F         	call	i2_memset	;wreg free
 20504                           
 20505                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 20506  002C76  8C60               	bsf	3936,6,c	;volatile
 20507                           
 20508                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 20509  002C78  6A43               	clrf	USBStdSetCfgHandler@i,c
 20510  002C7A                     i2l6732:
 20511                           
 20512                           ;usb_device.c: 1649: {
 20513                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 20514  002C7A  5043               	movf	USBStdSetCfgHandler@i,w,c
 20515  002C7C  0F6A               	addlw	low _ep_data_in
 20516  002C7E  6ED9               	movwf	fsr2l,c
 20517  002C80  6ADA               	clrf	fsr2h,c
 20518  002C82  6ADF               	clrf	indf2,c
 20519                           
 20520                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 20521  002C84  5043               	movf	USBStdSetCfgHandler@i,w,c
 20522  002C86  0F6D               	addlw	low _ep_data_out
 20523  002C88  6ED9               	movwf	fsr2l,c
 20524  002C8A  6ADA               	clrf	fsr2h,c
 20525  002C8C  6ADF               	clrf	indf2,c
 20526  002C8E  2A43               	incf	USBStdSetCfgHandler@i,f,c
 20527  002C90  0E02               	movlw	2
 20528  002C92  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 20529  002C94  D7F2               	goto	i2l6732
 20530                           
 20531                           ;usb_device.c: 1652: }
 20532                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 20533  002C96  0EC6               	movlw	low _USBAlternateInterface
 20534  002C98  6E2E               	movwf	i2memset@p1,c
 20535  002C9A  6A2F               	clrf	i2memset@p1+1,c
 20536  002C9C  6A31               	clrf	i2memset@c+1,c
 20537  002C9E  6A30               	clrf	i2memset@c,c
 20538  002CA0  6A33               	clrf	i2memset@n+1,c
 20539  002CA2  0E02               	movlw	2
 20540  002CA4  6E32               	movwf	i2memset@n,c
 20541  002CA6  EC5A  F01F         	call	i2_memset	;wreg free
 20542                           
 20543                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 20544  002CAA  9C60               	bcf	3936,6,c	;volatile
 20545                           
 20546                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20547  002CAC  0E08               	movlw	8
 20548  002CAE  6E0F               	movwf	_pBDTEntryIn,c
 20549  002CB0  0E04               	movlw	4
 20550  002CB2  6E10               	movwf	_pBDTEntryIn+1,c
 20551                           
 20552                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20553  002CB4  0E00               	movlw	0
 20554  002CB6  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 20555  002CB8  0E04               	movlw	4
 20556  002CBA  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20557                           
 20558                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20559  002CBC  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20560  002CC0  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20561                           
 20562                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20563  002CC4  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 20564                           
 20565                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 20566  002CC8  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 20567  002CCA  E104               	bnz	i2l6754
 20568                           
 20569                           ;usb_device.c: 1671: {
 20570                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 20571  002CCC  0E10               	movlw	16
 20572  002CCE  0100               	movlb	0	; () banked
 20573  002CD0  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20574                           
 20575                           ;usb_device.c: 1674: }
 20576  002CD2  0C10               	retlw	16
 20577  002CD4                     i2l6754:
 20578                           
 20579                           ;usb_device.c: 1675: else
 20580                           ;usb_device.c: 1676: {
 20581                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 20582  002CD4  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20583  002CD6  0E01               	movlw	1
 20584  002CD8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20585  002CDA  0E2C               	movlw	low _USBActiveConfiguration
 20586  002CDC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20587  002CDE  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20588  002CE0  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20589  002CE2  0E01               	movlw	1
 20590  002CE4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20591  002CE6  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20592                           
 20593                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 20594  002CEA  0E20               	movlw	32
 20595  002CEC  0100               	movlb	0	; () banked
 20596  002CEE  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20597                           
 20598                           ; BSR set to: 0
 20599  002CF0  0C20               	retlw	32	;funcret
 20600  002CF2                     __end_of_USBStdSetCfgHandler:
 20601                           	opt stack 0
 20602                           pclatu	equ	0xFFB
 20603                           pclath	equ	0xFFA
 20604                           tblptru	equ	0xFF8
 20605                           tblptrh	equ	0xFF7
 20606                           tblptrl	equ	0xFF6
 20607                           tablat	equ	0xFF5
 20608                           prodh	equ	0xFF4
 20609                           prodl	equ	0xFF3
 20610                           intcon	equ	0xFF2
 20611                           postinc0	equ	0xFEE
 20612                           wreg	equ	0xFE8
 20613                           indf1	equ	0xFE7
 20614                           postdec1	equ	0xFE5
 20615                           fsr1h	equ	0xFE2
 20616                           fsr1l	equ	0xFE1
 20617                           indf2	equ	0xFDF
 20618                           postinc2	equ	0xFDE
 20619                           postdec2	equ	0xFDD
 20620                           plusw2	equ	0xFDB
 20621                           fsr2h	equ	0xFDA
 20622                           fsr2l	equ	0xFD9
 20623                           status	equ	0xFD8
 20624                           
 20625 ;; *************** function i2_memset *****************
 20626 ;; Defined at:
 20627 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;  p1              2    0[COMRAM] PTR void 
 20630 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20631 ;;  c               2    2[COMRAM] int 
 20632 ;;  n               2    4[COMRAM] unsigned int 
 20633 ;; Auto vars:     Size  Location     Type
 20634 ;;  memset          2    6[COMRAM] PTR unsigned char 
 20635 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20636 ;; Return value:  Size  Location     Type
 20637 ;;                  2    0[COMRAM] PTR void 
 20638 ;; Registers used:
 20639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20640 ;; Tracked objects:
 20641 ;;		On entry : 0/0
 20642 ;;		On exit  : 0/0
 20643 ;;		Unchanged: 0/0
 20644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20645 ;;      Params:         6       0       0       0       0       0       0       0       0
 20646 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20648 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20649 ;;Total ram usage:        8 bytes
 20650 ;; Hardware stack levels used:    1
 20651 ;; This function calls:
 20652 ;;		Nothing
 20653 ;; This function is called by:
 20654 ;;		_USBStdSetCfgHandler
 20655 ;;		i2_USBDeviceInit
 20656 ;; This function uses a non-reentrant model
 20657 ;;
 20658                           
 20659                           	psect	text98
 20660  003EB4                     __ptext98:
 20661                           	opt stack 0
 20662  003EB4                     i2_memset:
 20663                           	opt stack 17
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;incstack = 0
 20667  003EB4  C02E  F034         	movff	i2memset@p1,i2memset@p
 20668  003EB8  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 20669  003EBC  D008               	goto	i2l6536
 20670  003EBE                     i2l6532:
 20671  003EBE  C034  FFD9         	movff	i2memset@p,fsr2l
 20672  003EC2  C035  FFDA         	movff	i2memset@p+1,fsr2h
 20673  003EC6  C030  FFDF         	movff	i2memset@c,indf2
 20674  003ECA  4A34               	infsnz	i2memset@p,f,c
 20675  003ECC  2A35               	incf	i2memset@p+1,f,c
 20676  003ECE                     i2l6536:
 20677  003ECE  0632               	decf	i2memset@n,f,c
 20678  003ED0  A0D8               	btfss	status,0,c
 20679  003ED2  0633               	decf	i2memset@n+1,f,c
 20680  003ED4  2832               	incf	i2memset@n,w,c
 20681  003ED6  E1F3               	bnz	i2l6532
 20682  003ED8  2833               	incf	i2memset@n+1,w,c
 20683  003EDA  E1F1               	bnz	i2l6532
 20684  003EDC  0012               	return		;funcret
 20685  003EDE                     __end_ofi2_memset:
 20686                           	opt stack 0
 20687                           pclatu	equ	0xFFB
 20688                           pclath	equ	0xFFA
 20689                           tblptru	equ	0xFF8
 20690                           tblptrh	equ	0xFF7
 20691                           tblptrl	equ	0xFF6
 20692                           tablat	equ	0xFF5
 20693                           prodh	equ	0xFF4
 20694                           prodl	equ	0xFF3
 20695                           intcon	equ	0xFF2
 20696                           postinc0	equ	0xFEE
 20697                           wreg	equ	0xFE8
 20698                           indf1	equ	0xFE7
 20699                           postdec1	equ	0xFE5
 20700                           fsr1h	equ	0xFE2
 20701                           fsr1l	equ	0xFE1
 20702                           indf2	equ	0xFDF
 20703                           postinc2	equ	0xFDE
 20704                           postdec2	equ	0xFDD
 20705                           plusw2	equ	0xFDB
 20706                           fsr2h	equ	0xFDA
 20707                           fsr2l	equ	0xFD9
 20708                           status	equ	0xFD8
 20709                           
 20710 ;; *************** function _USBStdGetStatusHandler *****************
 20711 ;; Defined at:
 20712 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 20713 ;; Parameters:    Size  Location     Type
 20714 ;;		None
 20715 ;; Auto vars:     Size  Location     Type
 20716 ;;  p               2    0[COMRAM] PTR struct __BDT
 20717 ;;		 -> BDT(48), NULL(0), 
 20718 ;; Return value:  Size  Location     Type
 20719 ;;                  1    wreg      void 
 20720 ;; Registers used:
 20721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20722 ;; Tracked objects:
 20723 ;;		On entry : B/4
 20724 ;;		On exit  : F/4
 20725 ;;		Unchanged: 0/0
 20726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20727 ;;      Params:         0       0       0       0       0       0       0       0       0
 20728 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20730 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20731 ;;Total ram usage:        2 bytes
 20732 ;; Hardware stack levels used:    1
 20733 ;; This function calls:
 20734 ;;		Nothing
 20735 ;; This function is called by:
 20736 ;;		_USBCheckStdRequest
 20737 ;; This function uses a non-reentrant model
 20738 ;;
 20739                           
 20740                           	psect	text99
 20741  003296                     __ptext99:
 20742                           	opt stack 0
 20743  003296                     _USBStdGetStatusHandler:
 20744                           	opt stack 15
 20745                           
 20746                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 20747                           
 20748                           ;incstack = 0
 20749  003296  0104               	movlb	4	; () banked
 20750  003298  6B38               	clrf	56,b	;volatile
 20751                           
 20752                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 20753  00329A  6B39               	clrf	57,b	;volatile
 20754                           
 20755                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 20756  00329C  D02A               	goto	i2l6804
 20757  00329E                     i2l1713:
 20758                           
 20759                           ; BSR set to: 4
 20760                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 20761  00329E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20762                           
 20763                           ; BSR set to: 4
 20764                           ;usb_device.c: 1789: }
 20765                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 20766                           
 20767                           ;usb_device.c: 1786: if(0 == 1)
 20768  0032A0  041D               	decf	_RemoteWakeup,w,c	;volatile
 20769  0032A2  E12E               	bnz	i2l1716
 20770                           
 20771                           ; BSR set to: 4
 20772                           ;usb_device.c: 1792: {
 20773                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 20774  0032A4  8338               	bsf	56,1,b	;volatile
 20775  0032A6  D02C               	goto	i2l1716
 20776  0032A8                     i2l1717:
 20777                           
 20778                           ; BSR set to: 4
 20779                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 20780  0032A8  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20781                           
 20782                           ;usb_device.c: 1798: break;
 20783  0032AA  D02A               	goto	i2l1716
 20784  0032AC                     i2l1718:
 20785                           
 20786                           ; BSR set to: 4
 20787                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 20788  0032AC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20789                           
 20790                           ;usb_device.c: 1804: {
 20791                           ;usb_device.c: 1805: BDT_ENTRY *p;
 20792                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 20793  0032AE  BF34               	btfsc	52,7,b	;volatile
 20794  0032B0  D006               	goto	i2l6794
 20795                           
 20796                           ; BSR set to: 4
 20797                           ;usb_device.c: 1808: {
 20798                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 20799  0032B2  5134               	movf	52,w,b	;volatile
 20800  0032B4  0B0F               	andlw	15
 20801  0032B6  0D02               	mullw	2
 20802  0032B8  50F3               	movf	prodl,w,c
 20803  0032BA  0F60               	addlw	low _pBDTEntryOut
 20804  0032BC  D005               	goto	L58
 20805  0032BE                     i2l6794:
 20806                           
 20807                           ; BSR set to: 4
 20808                           ;usb_device.c: 1811: else
 20809                           ;usb_device.c: 1812: {
 20810                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 20811  0032BE  5134               	movf	52,w,b	;volatile
 20812  0032C0  0B0F               	andlw	15
 20813  0032C2  0D02               	mullw	2
 20814  0032C4  50F3               	movf	prodl,w,c
 20815  0032C6  0F0F               	addlw	low _pBDTEntryIn
 20816  0032C8                     L58:
 20817  0032C8  6ED9               	movwf	fsr2l,c
 20818  0032CA  6ADA               	clrf	fsr2h,c
 20819  0032CC  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 20820  0032D0  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 20821                           
 20822                           ; BSR set to: 4
 20823                           ;usb_device.c: 1814: }
 20824                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 20825  0032D4  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20826  0032D8  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20827  0032DC  AEDF               	btfss	indf2,7,c
 20828  0032DE  D010               	goto	i2l1716
 20829                           
 20830                           ; BSR set to: 4
 20831  0032E0  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20832  0032E4  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20833  0032E8  A4DF               	btfss	indf2,2,c
 20834  0032EA  D00A               	goto	i2l1716
 20835                           
 20836                           ; BSR set to: 4
 20837                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 20838  0032EC  0E01               	movlw	1
 20839  0032EE  6F38               	movwf	56,b	;volatile
 20840  0032F0  D007               	goto	i2l1716
 20841  0032F2                     i2l6804:
 20842                           
 20843                           ; BSR set to: 4
 20844  0032F2  5130               	movf	48,w,b	;volatile
 20845  0032F4  0B1F               	andlw	31
 20846                           
 20847                           ; Switch size 1, requested type "speed"
 20848                           ; Number of cases is 3, Range of values is 0 to 2
 20849                           ; switch strategies available:
 20850                           ; Name         Instructions Cycles
 20851                           ; simple_byte           10     6 (average)
 20852                           ;	Chosen strategy is simple_byte
 20853  0032F6  E0D3               	bz	i2l1713
 20854  0032F8  0A01               	xorlw	1	; case 1
 20855  0032FA  E0D6               	bz	i2l1717
 20856  0032FC  0A03               	xorlw	3	; case 2
 20857  0032FE  E0D6               	bz	i2l1718
 20858  003300                     i2l1716:
 20859                           
 20860                           ; BSR set to: 4
 20861                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 20862  003300  AE0C               	btfss	_inPipes+3,7,c	;volatile
 20863  003302  0012               	return	
 20864                           
 20865                           ; BSR set to: 4
 20866                           ;usb_device.c: 1823: {
 20867                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 20868  003304  0E38               	movlw	56
 20869  003306  6E09               	movwf	_inPipes,c	;volatile
 20870  003308  0E04               	movlw	4
 20871  00330A  6E0A               	movwf	_inPipes+1,c	;volatile
 20872                           
 20873                           ; BSR set to: 4
 20874                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20875  00330C  800C               	bsf	_inPipes+3,0,c	;volatile
 20876                           
 20877                           ; BSR set to: 4
 20878                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 20879  00330E  0E02               	movlw	2
 20880  003310  6E0D               	movwf	_inPipes+4,c	;volatile
 20881                           
 20882                           ; BSR set to: 4
 20883  003312  0C02               	retlw	2	;funcret
 20884  003314                     __end_of_USBStdGetStatusHandler:
 20885                           	opt stack 0
 20886                           pclatu	equ	0xFFB
 20887                           pclath	equ	0xFFA
 20888                           tblptru	equ	0xFF8
 20889                           tblptrh	equ	0xFF7
 20890                           tblptrl	equ	0xFF6
 20891                           tablat	equ	0xFF5
 20892                           prodh	equ	0xFF4
 20893                           prodl	equ	0xFF3
 20894                           intcon	equ	0xFF2
 20895                           postinc0	equ	0xFEE
 20896                           wreg	equ	0xFE8
 20897                           indf1	equ	0xFE7
 20898                           postdec1	equ	0xFE5
 20899                           fsr1h	equ	0xFE2
 20900                           fsr1l	equ	0xFE1
 20901                           indf2	equ	0xFDF
 20902                           postinc2	equ	0xFDE
 20903                           postdec2	equ	0xFDD
 20904                           plusw2	equ	0xFDB
 20905                           fsr2h	equ	0xFDA
 20906                           fsr2l	equ	0xFD9
 20907                           status	equ	0xFD8
 20908                           
 20909 ;; *************** function _USBStdGetDscHandler *****************
 20910 ;; Defined at:
 20911 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 20912 ;; Parameters:    Size  Location     Type
 20913 ;;		None
 20914 ;; Auto vars:     Size  Location     Type
 20915 ;;		None
 20916 ;; Return value:  Size  Location     Type
 20917 ;;                  1    wreg      void 
 20918 ;; Registers used:
 20919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20920 ;; Tracked objects:
 20921 ;;		On entry : B/4
 20922 ;;		On exit  : 0/0
 20923 ;;		Unchanged: 0/0
 20924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20925 ;;      Params:         0       0       0       0       0       0       0       0       0
 20926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20927 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20928 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20929 ;;Total ram usage:        2 bytes
 20930 ;; Hardware stack levels used:    1
 20931 ;; This function calls:
 20932 ;;		Nothing
 20933 ;; This function is called by:
 20934 ;;		_USBCheckStdRequest
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text100
 20939  001D36                     __ptext100:
 20940                           	opt stack 0
 20941  001D36                     _USBStdGetDscHandler:
 20942                           	opt stack 15
 20943                           
 20944                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 20945                           
 20946                           ; BSR set to: 4
 20947                           ;incstack = 0
 20948  001D36  0E80               	movlw	128
 20949  001D38  0104               	movlb	4	; () banked
 20950  001D3A  1930               	xorwf	48,w,b	;volatile
 20951  001D3C  A4D8               	btfss	status,2,c
 20952  001D3E  0012               	return	
 20953                           
 20954                           ; BSR set to: 4
 20955                           ;usb_device.c: 1707: {
 20956                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 20957  001D40  0EC0               	movlw	192
 20958  001D42  6E0C               	movwf	_inPipes+3,c	;volatile
 20959                           
 20960                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 20961  001D44  D071               	goto	i2l6782
 20962  001D46                     i2l6762:
 20963                           
 20964                           ; BSR set to: 4
 20965                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 20966  001D46  0EF4               	movlw	low _device_dsc
 20967  001D48  6E09               	movwf	_inPipes,c	;volatile
 20968  001D4A  0E79               	movlw	high _device_dsc
 20969  001D4C  6E0A               	movwf	_inPipes+1,c	;volatile
 20970                           
 20971                           ; BSR set to: 4
 20972                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 20973  001D4E  6A0E               	clrf	_inPipes+5,c	;volatile
 20974  001D50  0E12               	movlw	18
 20975  001D52  6E0D               	movwf	_inPipes+4,c	;volatile
 20976                           
 20977                           ;usb_device.c: 1715: break;
 20978  001D54  0C12               	retlw	18
 20979  001D56                     i2l6766:
 20980                           
 20981                           ; BSR set to: 4
 20982                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 20983  001D56  5132               	movf	50,w,b	;volatile
 20984  001D58  E13D               	bnz	i2l1703
 20985                           
 20986                           ; BSR set to: 4
 20987                           ;usb_device.c: 1721: {
 20988                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 20989  001D5A  5132               	movf	50,w,b	;volatile
 20990  001D5C  0D02               	mullw	2
 20991  001D5E  0E47               	movlw	low _USB_CD_Ptr
 20992  001D60  24F3               	addwf	prodl,w,c
 20993  001D62  6EF6               	movwf	tblptrl,c
 20994  001D64  0E76               	movlw	high _USB_CD_Ptr
 20995  001D66  20F4               	addwfc	prodh,w,c
 20996  001D68  6EF7               	movwf	tblptrh,c
 20997  001D6A                     	if	0	;There are less than 3 active tblptr bytes
 20998  001D6A                     	endif
 20999  001D6A  0009               	tblrd		*+
 21000  001D6C  CFF5 F009          	movff	tablat,_inPipes	;volatile
 21001  001D70  000A               	tblrd		*-
 21002  001D72  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 21003                           
 21004                           ; BSR set to: 4
 21005                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21006  001D76  0E02               	movlw	2
 21007  001D78  2409               	addwf	_inPipes,w,c	;volatile
 21008  001D7A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 21009  001D7C  0E00               	movlw	0
 21010  001D7E  200A               	addwfc	_inPipes+1,w,c	;volatile
 21011  001D80  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21012  001D82  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21013  001D86  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21014  001D8A  6AF8               	clrf	tblptru,c
 21015  001D8C  0E07               	movlw	(high __ramtop+-1)
 21016  001D8E  64F7               	cpfsgt	tblptrh,c
 21017  001D90  D003               	bra	i2u445_47
 21018  001D92  0008               	tblrd		*
 21019  001D94  50F5               	movf	tablat,w,c
 21020  001D96  D005               	bra	i2u445_40
 21021  001D98                     i2u445_47:
 21022  001D98  CFF6 FFE1          	movff	tblptrl,fsr1l
 21023  001D9C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21024  001DA0  50E7               	movf	indf1,w,c
 21025  001DA2                     i2u445_40:
 21026  001DA2  6E0D               	movwf	_inPipes+4,c	;volatile
 21027                           
 21028                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21029  001DA4  0E03               	movlw	3
 21030  001DA6  2409               	addwf	_inPipes,w,c	;volatile
 21031  001DA8  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 21032  001DAA  0E00               	movlw	0
 21033  001DAC  200A               	addwfc	_inPipes+1,w,c	;volatile
 21034  001DAE  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21035  001DB0  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21036  001DB4  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21037  001DB8  6AF8               	clrf	tblptru,c
 21038  001DBA  0E07               	movlw	(high __ramtop+-1)
 21039  001DBC  64F7               	cpfsgt	tblptrh,c
 21040  001DBE  D003               	bra	i2u446_47
 21041  001DC0  0008               	tblrd		*
 21042  001DC2  50F5               	movf	tablat,w,c
 21043  001DC4  D005               	bra	i2u446_40
 21044  001DC6                     i2u446_47:
 21045  001DC6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21046  001DCA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21047  001DCE  50E7               	movf	indf1,w,c
 21048  001DD0                     i2u446_40:
 21049  001DD0  6E0E               	movwf	_inPipes+5,c	;volatile
 21050                           
 21051                           ;usb_device.c: 1729: }
 21052  001DD2  0012               	return	
 21053  001DD4                     i2l1703:
 21054                           
 21055                           ; BSR set to: 4
 21056                           ;usb_device.c: 1730: else
 21057                           ;usb_device.c: 1731: {
 21058                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 21059  001DD4  6A0C               	clrf	_inPipes+3,c	;volatile
 21060  001DD6  0012               	return	
 21061  001DD8                     i2l6774:
 21062                           
 21063                           ; BSR set to: 4
 21064                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 21065  001DD8  0E03               	movlw	3
 21066  001DDA  6132               	cpfslt	50,b	;volatile
 21067  001DDC  D021               	goto	i2l1706
 21068                           
 21069                           ; BSR set to: 4
 21070                           ;usb_device.c: 1740: {
 21071                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21072  001DDE  5132               	movf	50,w,b	;volatile
 21073  001DE0  0D02               	mullw	2
 21074  001DE2  0E41               	movlw	low _USB_SD_Ptr
 21075  001DE4  24F3               	addwf	prodl,w,c
 21076  001DE6  6EF6               	movwf	tblptrl,c
 21077  001DE8  0E76               	movlw	high _USB_SD_Ptr
 21078  001DEA  20F4               	addwfc	prodh,w,c
 21079  001DEC  6EF7               	movwf	tblptrh,c
 21080  001DEE                     	if	0	;There are less than 3 active tblptr bytes
 21081  001DEE                     	endif
 21082  001DEE  0009               	tblrd		*+
 21083  001DF0  CFF5 F009          	movff	tablat,_inPipes	;volatile
 21084  001DF4  000A               	tblrd		*-
 21085  001DF6  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 21086                           
 21087                           ; BSR set to: 4
 21088                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21089  001DFA  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 21090  001DFE  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21091  001E02  6AF8               	clrf	tblptru,c
 21092  001E04  0E07               	movlw	(high __ramtop+-1)
 21093  001E06  64F7               	cpfsgt	tblptrh,c
 21094  001E08  D003               	bra	i2u448_47
 21095  001E0A  0008               	tblrd		*
 21096  001E0C  50F5               	movf	tablat,w,c
 21097  001E0E  D005               	bra	i2u448_40
 21098  001E10                     i2u448_47:
 21099  001E10  CFF6 FFE1          	movff	tblptrl,fsr1l
 21100  001E14  CFF7 FFE2          	movff	tblptrh,fsr1h
 21101  001E18  50E7               	movf	indf1,w,c
 21102  001E1A                     i2u448_40:
 21103  001E1A  6E0D               	movwf	_inPipes+4,c	;volatile
 21104  001E1C  6A0E               	clrf	_inPipes+5,c	;volatile
 21105                           
 21106                           ;usb_device.c: 1745: }
 21107  001E1E  0012               	return	
 21108  001E20                     i2l1706:
 21109                           
 21110                           ; BSR set to: 4
 21111                           ;usb_device.c: 1746: else
 21112                           ;usb_device.c: 1747: {
 21113                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 21114  001E20  6A0C               	clrf	_inPipes+3,c	;volatile
 21115  001E22  0012               	return	
 21116  001E24                     i2l1708:
 21117                           
 21118                           ; BSR set to: 4
 21119                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 21120  001E24  6A0C               	clrf	_inPipes+3,c	;volatile
 21121                           
 21122                           ;usb_device.c: 1753: break;
 21123  001E26  0012               	return	
 21124  001E28                     i2l6782:
 21125                           
 21126                           ; BSR set to: 4
 21127  001E28  5133               	movf	51,w,b	;volatile
 21128                           
 21129                           ; Switch size 1, requested type "speed"
 21130                           ; Number of cases is 3, Range of values is 1 to 3
 21131                           ; switch strategies available:
 21132                           ; Name         Instructions Cycles
 21133                           ; simple_byte           10     6 (average)
 21134                           ;	Chosen strategy is simple_byte
 21135  001E2A  0A01               	xorlw	1	; case 1
 21136  001E2C  E08C               	bz	i2l6762
 21137  001E2E  0A03               	xorlw	3	; case 2
 21138  001E30  E092               	bz	i2l6766
 21139  001E32  0A01               	xorlw	1	; case 3
 21140  001E34  E0D1               	bz	i2l6774
 21141  001E36  D7F6               	goto	i2l1708
 21142  001E38                     __end_of_USBStdGetDscHandler:
 21143                           	opt stack 0
 21144                           pclatu	equ	0xFFB
 21145                           pclath	equ	0xFFA
 21146                           tblptru	equ	0xFF8
 21147                           tblptrh	equ	0xFF7
 21148                           tblptrl	equ	0xFF6
 21149                           tablat	equ	0xFF5
 21150                           prodh	equ	0xFF4
 21151                           prodl	equ	0xFF3
 21152                           intcon	equ	0xFF2
 21153                           postinc0	equ	0xFEE
 21154                           wreg	equ	0xFE8
 21155                           indf1	equ	0xFE7
 21156                           postdec1	equ	0xFE5
 21157                           fsr1h	equ	0xFE2
 21158                           fsr1l	equ	0xFE1
 21159                           indf2	equ	0xFDF
 21160                           postinc2	equ	0xFDE
 21161                           postdec2	equ	0xFDD
 21162                           plusw2	equ	0xFDB
 21163                           fsr2h	equ	0xFDA
 21164                           fsr2l	equ	0xFD9
 21165                           status	equ	0xFD8
 21166                           
 21167 ;; *************** function _USBStdFeatureReqHandler *****************
 21168 ;; Defined at:
 21169 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 21170 ;; Parameters:    Size  Location     Type
 21171 ;;		None
 21172 ;; Auto vars:     Size  Location     Type
 21173 ;;  p               2   26[COMRAM] PTR struct __BDT
 21174 ;;		 -> BDT(48), NULL(0), 
 21175 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 21176 ;;		 -> UEP0(1), 
 21177 ;;  current_ep_d    1   25[COMRAM] struct .
 21178 ;; Return value:  Size  Location     Type
 21179 ;;                  1    wreg      void 
 21180 ;; Registers used:
 21181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21182 ;; Tracked objects:
 21183 ;;		On entry : B/4
 21184 ;;		On exit  : B/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0
 21188 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21189 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21190 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21191 ;;Total ram usage:        7 bytes
 21192 ;; Hardware stack levels used:    1
 21193 ;; Hardware stack levels required when called:    5
 21194 ;; This function calls:
 21195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21196 ;; This function is called by:
 21197 ;;		_USBCheckStdRequest
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text101
 21202  00173C                     __ptext101:
 21203                           	opt stack 0
 21204  00173C                     _USBStdFeatureReqHandler:
 21205                           	opt stack 10
 21206                           
 21207                           ;usb_device.c: 2387: BDT_ENTRY *p;
 21208                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 21209                           ;usb_device.c: 2390: unsigned char* pUEP;
 21210                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 21211                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 21212                           
 21213                           ;incstack = 0
 21214  00173C  0104               	movlb	4	; () banked
 21215  00173E  0532               	decf	50,w,b	;volatile
 21216  001740  E10B               	bnz	i2l6822
 21217                           
 21218                           ; BSR set to: 4
 21219  001742  5130               	movf	48,w,b	;volatile
 21220  001744  0B1F               	andlw	31
 21221  001746  E108               	bnz	i2l6822
 21222                           
 21223                           ; BSR set to: 4
 21224                           ;usb_device.c: 2395: {
 21225                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 21226  001748  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21227                           
 21228                           ; BSR set to: 4
 21229                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 21230  00174A  0E03               	movlw	3
 21231  00174C  1931               	xorwf	49,w,b	;volatile
 21232  00174E  E103               	bnz	i2l1793
 21233                           
 21234                           ; BSR set to: 4
 21235                           ;usb_device.c: 2398: RemoteWakeup = 1;
 21236  001750  0E01               	movlw	1
 21237  001752  6E1D               	movwf	_RemoteWakeup,c	;volatile
 21238  001754  D001               	goto	i2l6822
 21239  001756                     i2l1793:
 21240                           
 21241                           ; BSR set to: 4
 21242                           ;usb_device.c: 2399: else
 21243                           ;usb_device.c: 2400: RemoteWakeup = 0;
 21244  001756  6A1D               	clrf	_RemoteWakeup,c	;volatile
 21245  001758                     i2l6822:
 21246                           
 21247                           ; BSR set to: 4
 21248                           ;usb_device.c: 2401: }
 21249                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 21250                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 21251                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21252                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 21253  001758  5132               	movf	50,w,b	;volatile
 21254  00175A  A4D8               	btfss	status,2,c
 21255  00175C  0012               	return	
 21256                           
 21257                           ; BSR set to: 4
 21258  00175E  5130               	movf	48,w,b	;volatile
 21259  001760  0B1F               	andlw	31
 21260  001762  0A02               	xorlw	2
 21261  001764  A4D8               	btfss	status,2,c
 21262  001766  0012               	return	
 21263                           
 21264                           ; BSR set to: 4
 21265  001768  5134               	movf	52,w,b	;volatile
 21266  00176A  0B0F               	andlw	15
 21267  00176C  B4D8               	btfsc	status,2,c
 21268  00176E  0012               	return	
 21269                           
 21270                           ; BSR set to: 4
 21271  001770  5134               	movf	52,w,b	;volatile
 21272  001772  0B0F               	andlw	15
 21273  001774  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21274  001776  0E03               	movlw	3
 21275  001778  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 21276  00177A  0C03               	retlw	3
 21277                           
 21278                           ; BSR set to: 4
 21279  00177C  0E20               	movlw	32
 21280  00177E  0100               	movlb	0	; () banked
 21281  001780  198A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 21282  001782  A4D8               	btfss	status,2,c
 21283  001784  0012               	return	
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;usb_device.c: 2408: {
 21287                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 21288  001786  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21289                           
 21290                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 21291  001788  0104               	movlb	4	; () banked
 21292  00178A  BF34               	btfsc	52,7,b	;volatile
 21293  00178C  D011               	goto	i2l6838
 21294                           
 21295                           ; BSR set to: 4
 21296                           ;usb_device.c: 2415: {
 21297                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21298  00178E  5134               	movf	52,w,b	;volatile
 21299  001790  0B0F               	andlw	15
 21300  001792  0D02               	mullw	2
 21301  001794  50F3               	movf	prodl,w,c
 21302  001796  0F60               	addlw	low _pBDTEntryOut
 21303  001798  6ED9               	movwf	fsr2l,c
 21304  00179A  6ADA               	clrf	fsr2h,c
 21305  00179C  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 21306  0017A0  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21307                           
 21308                           ; BSR set to: 4
 21309                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21310  0017A4  5134               	movf	52,w,b	;volatile
 21311  0017A6  0B0F               	andlw	15
 21312  0017A8  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21313  0017AA  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21314  0017AC  0F6D               	addlw	low _ep_data_out
 21315  0017AE  D010               	goto	L59
 21316  0017B0                     i2l6838:
 21317                           
 21318                           ; BSR set to: 4
 21319                           ;usb_device.c: 2419: else
 21320                           ;usb_device.c: 2420: {
 21321                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21322  0017B0  5134               	movf	52,w,b	;volatile
 21323  0017B2  0B0F               	andlw	15
 21324  0017B4  0D02               	mullw	2
 21325  0017B6  50F3               	movf	prodl,w,c
 21326  0017B8  0F0F               	addlw	low _pBDTEntryIn
 21327  0017BA  6ED9               	movwf	fsr2l,c
 21328  0017BC  6ADA               	clrf	fsr2h,c
 21329  0017BE  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 21330  0017C2  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21331                           
 21332                           ; BSR set to: 4
 21333                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21334  0017C6  5134               	movf	52,w,b	;volatile
 21335  0017C8  0B0F               	andlw	15
 21336  0017CA  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21337  0017CC  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21338  0017CE  0F6A               	addlw	low _ep_data_in
 21339  0017D0                     L59:
 21340  0017D0  6ED9               	movwf	fsr2l,c
 21341  0017D2  6ADA               	clrf	fsr2h,c
 21342  0017D4  50DF               	movf	indf2,w,c
 21343  0017D6  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21344                           
 21345                           ; BSR set to: 4
 21346                           ;usb_device.c: 2423: }
 21347                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 21348  0017D8  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21349  0017DA  D002               	goto	i2l6846
 21350                           
 21351                           ; BSR set to: 4
 21352                           ;usb_device.c: 2429: {
 21353                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 21354  0017DC  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 21355                           
 21356                           ;usb_device.c: 2431: }
 21357  0017DE  D001               	goto	i2l6848
 21358  0017E0                     i2l6846:
 21359                           
 21360                           ; BSR set to: 4
 21361                           ;usb_device.c: 2432: else
 21362                           ;usb_device.c: 2433: {
 21363                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 21364  0017E0  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 21365  0017E2                     i2l6848:
 21366                           
 21367                           ; BSR set to: 4
 21368                           ;usb_device.c: 2435: }
 21369                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 21370  0017E2  BF34               	btfsc	52,7,b	;volatile
 21371  0017E4  D006               	goto	i2l6852
 21372                           
 21373                           ; BSR set to: 4
 21374                           ;usb_device.c: 2440: {
 21375                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21376  0017E6  5134               	movf	52,w,b	;volatile
 21377  0017E8  0B0F               	andlw	15
 21378  0017EA  0D02               	mullw	2
 21379  0017EC  50F3               	movf	prodl,w,c
 21380  0017EE  0F60               	addlw	low _pBDTEntryOut
 21381  0017F0  D005               	goto	L60
 21382  0017F2                     i2l6852:
 21383                           
 21384                           ; BSR set to: 4
 21385                           ;usb_device.c: 2443: else
 21386                           ;usb_device.c: 2444: {
 21387                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21388  0017F2  5134               	movf	52,w,b	;volatile
 21389  0017F4  0B0F               	andlw	15
 21390  0017F6  0D02               	mullw	2
 21391  0017F8  50F3               	movf	prodl,w,c
 21392  0017FA  0F0F               	addlw	low _pBDTEntryIn
 21393  0017FC                     L60:
 21394  0017FC  6ED9               	movwf	fsr2l,c
 21395  0017FE  6ADA               	clrf	fsr2h,c
 21396  001800  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21397  001804  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21398                           
 21399                           ; BSR set to: 4
 21400                           ;usb_device.c: 2446: }
 21401                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 21402  001808  0E03               	movlw	3
 21403  00180A  1931               	xorwf	49,w,b	;volatile
 21404  00180C  E123               	bnz	i2l6864
 21405                           
 21406                           ; BSR set to: 4
 21407                           ;usb_device.c: 2450: {
 21408                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 21409  00180E  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21410  001812  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21411  001816  AEDF               	btfss	indf2,7,c
 21412  001818  D011               	goto	i2l1803
 21413                           
 21414                           ; BSR set to: 4
 21415                           ;usb_device.c: 2452: {
 21416                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 21417  00181A  BF34               	btfsc	52,7,b	;volatile
 21418  00181C  D006               	goto	i2l6862
 21419                           
 21420                           ; BSR set to: 4
 21421                           ;usb_device.c: 2456: {
 21422                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21423  00181E  5134               	movf	52,w,b	;volatile
 21424  001820  0B0F               	andlw	15
 21425  001822  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21426  001824  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21427  001826  0F6D               	addlw	low _ep_data_out
 21428  001828  D005               	goto	L61
 21429  00182A                     i2l6862:
 21430                           
 21431                           ; BSR set to: 4
 21432                           ;usb_device.c: 2459: else
 21433                           ;usb_device.c: 2460: {
 21434                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21435  00182A  5134               	movf	52,w,b	;volatile
 21436  00182C  0B0F               	andlw	15
 21437  00182E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21438  001830  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21439  001832  0F6A               	addlw	low _ep_data_in
 21440  001834                     L61:
 21441  001834  6ED9               	movwf	fsr2l,c
 21442  001836  6ADA               	clrf	fsr2h,c
 21443  001838  0100               	movlb	0	; () banked
 21444  00183A  82DF               	bsf	indf2,1,c
 21445  00183C                     i2l1803:
 21446                           
 21447                           ;usb_device.c: 2462: }
 21448                           ;usb_device.c: 2463: }
 21449                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 21450  00183C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21451  001840  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21452  001844  0E00               	movlw	0
 21453  001846  84DB               	bsf	plusw2,2,c
 21454                           
 21455                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 21456  001848  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21457  00184C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21458  001850  8EDB               	bsf	plusw2,7,c
 21459                           
 21460                           ;usb_device.c: 2468: }
 21461  001852  0C00               	retlw	0
 21462  001854                     i2l6864:
 21463                           
 21464                           ; BSR set to: 4
 21465                           ;usb_device.c: 2469: else
 21466                           ;usb_device.c: 2470: {
 21467                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21468  001854  0E04               	movlw	4
 21469  001856  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 21470                           
 21471                           ; BSR set to: 4
 21472                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 21473  001858  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21474  00185C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21475  001860  AEDF               	btfss	indf2,7,c
 21476  001862  D019               	goto	i2l6874
 21477                           
 21478                           ; BSR set to: 4
 21479                           ;usb_device.c: 2476: {
 21480                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 21481  001864  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21482  001868  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21483  00186C  0E7F               	movlw	127
 21484  00186E  16DF               	andwf	indf2,f,c
 21485                           
 21486                           ; BSR set to: 4
 21487                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 21488  001870  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21489  001874  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21490  001878  0E00               	movlw	0
 21491  00187A  8CDB               	bsf	plusw2,6,c
 21492                           
 21493                           ; BSR set to: 4
 21494                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21495  00187C  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21496  00187E  0E05               	movlw	5
 21497  001880  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21498  001882  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21499  001886  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21500  00188A  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21501  00188C  0E02               	movlw	2
 21502  00188E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21503  001890  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21504                           
 21505                           ;usb_device.c: 2482: }
 21506  001894  D006               	goto	i2l6876
 21507  001896                     i2l6874:
 21508                           
 21509                           ; BSR set to: 4
 21510                           ;usb_device.c: 2483: else
 21511                           ;usb_device.c: 2484: {
 21512                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 21513  001896  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21514  00189A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21515  00189E  0E00               	movlw	0
 21516  0018A0  8CDB               	bsf	plusw2,6,c
 21517  0018A2                     i2l6876:
 21518                           
 21519                           ;usb_device.c: 2487: }
 21520                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21521  0018A2  0E04               	movlw	4
 21522  0018A4  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 21523                           
 21524                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 21525  0018A6  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 21526  0018A8  D006               	goto	i2l1811
 21527  0018AA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21528  0018AE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21529  0018B2  AEDF               	btfss	indf2,7,c
 21530  0018B4  D025               	goto	i2l6890
 21531  0018B6                     i2l1811:
 21532                           
 21533                           ;usb_device.c: 2498: {
 21534                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 21535  0018B6  0104               	movlb	4	; () banked
 21536  0018B8  BF34               	btfsc	52,7,b	;volatile
 21537  0018BA  D006               	goto	i2l6884
 21538                           
 21539                           ; BSR set to: 4
 21540                           ;usb_device.c: 2500: {
 21541                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21542  0018BC  5134               	movf	52,w,b	;volatile
 21543  0018BE  0B0F               	andlw	15
 21544  0018C0  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21545  0018C2  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21546  0018C4  0F6D               	addlw	low _ep_data_out
 21547  0018C6  D005               	goto	L62
 21548  0018C8                     i2l6884:
 21549                           
 21550                           ; BSR set to: 4
 21551                           ;usb_device.c: 2503: else
 21552                           ;usb_device.c: 2504: {
 21553                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21554  0018C8  5134               	movf	52,w,b	;volatile
 21555  0018CA  0B0F               	andlw	15
 21556  0018CC  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21557  0018CE  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21558  0018D0  0F6A               	addlw	low _ep_data_in
 21559  0018D2                     L62:
 21560  0018D2  6ED9               	movwf	fsr2l,c
 21561  0018D4  6ADA               	clrf	fsr2h,c
 21562  0018D6  0100               	movlb	0	; () banked
 21563  0018D8  92DF               	bcf	indf2,1,c
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;usb_device.c: 2506: }
 21567                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21568  0018DA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21569  0018DE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21570  0018E2  0E3B               	movlw	59
 21571  0018E4  16DF               	andwf	indf2,f,c
 21572                           
 21573                           ; BSR set to: 0
 21574                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21575  0018E6  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21576  0018E8  0E05               	movlw	5
 21577  0018EA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21578  0018EC  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21579  0018F0  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21580  0018F4  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21581  0018F6  0E02               	movlw	2
 21582  0018F8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21583  0018FA  EC41  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21584                           
 21585                           ;usb_device.c: 2512: }
 21586  0018FE  D006               	goto	i2l6892
 21587  001900                     i2l6890:
 21588                           
 21589                           ;usb_device.c: 2513: else
 21590                           ;usb_device.c: 2514: {
 21591                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21592  001900  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21593  001904  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21594  001908  0E3B               	movlw	59
 21595  00190A  16DF               	andwf	indf2,f,c
 21596  00190C                     i2l6892:
 21597                           
 21598                           ;usb_device.c: 2517: }
 21599                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 21600  00190C  0104               	movlb	4	; () banked
 21601  00190E  5134               	movf	52,w,b	;volatile
 21602  001910  0B0F               	andlw	15
 21603  001912  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21604  001914  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 21605  001916  0E6A               	movlw	106
 21606  001918  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 21607  00191A  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 21608  00191C  0E0F               	movlw	15
 21609  00191E  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 21610  001920  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 21611                           
 21612                           ; BSR set to: 4
 21613                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 21614  001922  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 21615  001926  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 21616  00192A  0EFE               	movlw	254
 21617  00192C  16DF               	andwf	indf2,f,c
 21618  00192E  0CFE               	retlw	254	;funcret
 21619  001930                     __end_of_USBStdFeatureReqHandler:
 21620                           	opt stack 0
 21621                           pclatu	equ	0xFFB
 21622                           pclath	equ	0xFFA
 21623                           tblptru	equ	0xFF8
 21624                           tblptrh	equ	0xFF7
 21625                           tblptrl	equ	0xFF6
 21626                           tablat	equ	0xFF5
 21627                           prodh	equ	0xFF4
 21628                           prodl	equ	0xFF3
 21629                           intcon	equ	0xFF2
 21630                           postinc0	equ	0xFEE
 21631                           wreg	equ	0xFE8
 21632                           indf1	equ	0xFE7
 21633                           postdec1	equ	0xFE5
 21634                           fsr1h	equ	0xFE2
 21635                           fsr1l	equ	0xFE1
 21636                           indf2	equ	0xFDF
 21637                           postinc2	equ	0xFDE
 21638                           postdec2	equ	0xFDD
 21639                           plusw2	equ	0xFDB
 21640                           fsr2h	equ	0xFDA
 21641                           fsr2l	equ	0xFD9
 21642                           status	equ	0xFD8
 21643                           
 21644 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 21645 ;; Defined at:
 21646 ;;		line 271 in file "../Includes/Board/USBapp.c"
 21647 ;; Parameters:    Size  Location     Type
 21648 ;;  event           2   13[COMRAM] enum E6400
 21649 ;;  pdata           2   15[COMRAM] PTR void 
 21650 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 21651 ;;  size            2   17[COMRAM] unsigned int 
 21652 ;; Auto vars:     Size  Location     Type
 21653 ;;		None
 21654 ;; Return value:  Size  Location     Type
 21655 ;;                  1    wreg      unsigned char 
 21656 ;; Registers used:
 21657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21658 ;; Tracked objects:
 21659 ;;		On entry : 0/0
 21660 ;;		On exit  : 0/0
 21661 ;;		Unchanged: 0/0
 21662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21663 ;;      Params:         6       0       0       0       0       0       0       0       0
 21664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21665 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21666 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21667 ;;Total ram usage:        8 bytes
 21668 ;; Hardware stack levels used:    1
 21669 ;; Hardware stack levels required when called:    4
 21670 ;; This function calls:
 21671 ;;		_USBCheckCDCRequest
 21672 ;;		_USBapp_CdcEmulatorInitialize
 21673 ;; This function is called by:
 21674 ;;		_USBDeviceTasks
 21675 ;;		_USBStdSetCfgHandler
 21676 ;;		_USBSuspend
 21677 ;;		_USBWakeFromSuspend
 21678 ;;		_USBCtrlTrfSetupHandler
 21679 ;;		_USBCheckStdRequest
 21680 ;;		_USBStdFeatureReqHandler
 21681 ;; This function uses a non-reentrant model
 21682 ;;
 21683                           
 21684                           	psect	text102
 21685  003A82                     __ptext102:
 21686                           	opt stack 0
 21687  003A82                     _USER_USB_CALLBACK_EVENT_HANDLER:
 21688                           	opt stack 14
 21689                           
 21690                           ;USBapp.c: 307: break;
 21691                           
 21692                           ;USBapp.c: 306: USBCheckCDCRequest();
 21693                           
 21694                           ;USBapp.c: 298: break;
 21695                           
 21696                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 21697                           
 21698                           ;USBapp.c: 273: switch( (int) event )
 21699                           
 21700                           ;incstack = 0
 21701  003A82  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 21702  003A86  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 21703                           
 21704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21705                           ; Switch size 1, requested type "speed"
 21706                           ; Number of cases is 2, Range of values is 0 to 127
 21707                           ; switch strategies available:
 21708                           ; Name         Instructions Cycles
 21709                           ; simple_byte            7     4 (average)
 21710                           ;	Chosen strategy is simple_byte
 21711  003A8A  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 21712  003A8C  E004               	bz	i2l12352
 21713  003A8E  0A7F               	xorlw	127	; case 127
 21714  003A90  A4D8               	btfss	status,2,c
 21715  003A92  0012               	return	
 21716  003A94  D019               	goto	i2l12354
 21717  003A96                     i2l12352:
 21718                           
 21719                           ; Switch size 1, requested type "speed"
 21720                           ; Number of cases is 8, Range of values is 1 to 117
 21721                           ; switch strategies available:
 21722                           ; Name         Instructions Cycles
 21723                           ; simple_byte           25    13 (average)
 21724                           ;	Chosen strategy is simple_byte
 21725  003A96  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 21726  003A98  0A01               	xorlw	1	; case 1
 21727  003A9A  E102 EF3F  F01E    	bz	_USBapp_CdcEmulatorInitialize
 21728  003AA0  0A03               	xorlw	3	; case 2
 21729  003AA2  B4D8               	btfsc	status,2,c
 21730  003AA4  0012               	return	
 21731  003AA6  0A01               	xorlw	1	; case 3
 21732  003AA8  E102 EF84  F018    	bz	_USBCheckCDCRequest
 21733  003AAE  0A06               	xorlw	6	; case 5
 21734  003AB0  B4D8               	btfsc	status,2,c
 21735  003AB2  0012               	return	
 21736  003AB4  0A77               	xorlw	119	; case 114
 21737  003AB6  B4D8               	btfsc	status,2,c
 21738  003AB8  0012               	return	
 21739  003ABA  0A01               	xorlw	1	; case 115
 21740  003ABC  B4D8               	btfsc	status,2,c
 21741  003ABE  0012               	return	
 21742  003AC0  0A07               	xorlw	7	; case 116
 21743  003AC2  A4D8               	btfss	status,2,c
 21744  003AC4  0A01               	xorlw	1	; case 117
 21745  003AC6  0012               	return	
 21746  003AC8                     i2l12354:
 21747                           
 21748                           ; Switch size 1, requested type "speed"
 21749                           ; Number of cases is 1, Range of values is 255 to 255
 21750                           ; switch strategies available:
 21751                           ; Name         Instructions Cycles
 21752                           ; simple_byte            4     3 (average)
 21753                           ;	Chosen strategy is simple_byte
 21754  003AC8  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 21755  003ACA  0012               	return	
 21756  003ACC                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 21757                           	opt stack 0
 21758                           pclatu	equ	0xFFB
 21759                           pclath	equ	0xFFA
 21760                           tblptru	equ	0xFF8
 21761                           tblptrh	equ	0xFF7
 21762                           tblptrl	equ	0xFF6
 21763                           tablat	equ	0xFF5
 21764                           prodh	equ	0xFF4
 21765                           prodl	equ	0xFF3
 21766                           intcon	equ	0xFF2
 21767                           postinc0	equ	0xFEE
 21768                           wreg	equ	0xFE8
 21769                           indf1	equ	0xFE7
 21770                           postdec1	equ	0xFE5
 21771                           fsr1h	equ	0xFE2
 21772                           fsr1l	equ	0xFE1
 21773                           indf2	equ	0xFDF
 21774                           postinc2	equ	0xFDE
 21775                           postdec2	equ	0xFDD
 21776                           plusw2	equ	0xFDB
 21777                           fsr2h	equ	0xFDA
 21778                           fsr2l	equ	0xFD9
 21779                           status	equ	0xFD8
 21780                           
 21781 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 21782 ;; Defined at:
 21783 ;;		line 107 in file "../Includes/Board/USBapp.c"
 21784 ;; Parameters:    Size  Location     Type
 21785 ;;		None
 21786 ;; Auto vars:     Size  Location     Type
 21787 ;;  i               1   12[COMRAM] unsigned char 
 21788 ;; Return value:  Size  Location     Type
 21789 ;;                  1    wreg      void 
 21790 ;; Registers used:
 21791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21792 ;; Tracked objects:
 21793 ;;		On entry : 0/0
 21794 ;;		On exit  : 0/0
 21795 ;;		Unchanged: 0/0
 21796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21797 ;;      Params:         0       0       0       0       0       0       0       0       0
 21798 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21799 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21800 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21801 ;;Total ram usage:        1 bytes
 21802 ;; Hardware stack levels used:    1
 21803 ;; Hardware stack levels required when called:    3
 21804 ;; This function calls:
 21805 ;;		_CDCInitEP
 21806 ;;		i2_EUSART_Initialize
 21807 ;; This function is called by:
 21808 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21809 ;; This function uses a non-reentrant model
 21810 ;;
 21811                           
 21812                           	psect	text103
 21813  003C7E                     __ptext103:
 21814                           	opt stack 0
 21815  003C7E                     _USBapp_CdcEmulatorInitialize:
 21816                           	opt stack 14
 21817                           
 21818                           ;USBapp.c: 110: CDCInitEP();
 21819                           
 21820                           ;incstack = 0
 21821  003C7E  EC7F  F01C         	call	_CDCInitEP	;wreg free
 21822                           
 21823                           ; BSR set to: 0
 21824                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 21825  003C82  6BC0               	clrf	(_line_coding+4)& (0+255),b
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 21829  003C84  0E08               	movlw	8
 21830  003C86  6FC2               	movwf	(_line_coding+6)& (0+255),b
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;USBapp.c: 113: line_coding.bParityType = 0;
 21834  003C88  6BC1               	clrf	(_line_coding+5)& (0+255),b
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 21838  003C8A  6BBC               	clrf	_line_coding& (0+255),b
 21839  003C8C  0E4B               	movlw	75
 21840  003C8E  6FBD               	movwf	(_line_coding+1)& (0+255),b
 21841  003C90  6BBE               	clrf	(_line_coding+2)& (0+255),b
 21842  003C92  6BBF               	clrf	(_line_coding+3)& (0+255),b
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;USBapp.c: 115: EUSART_Initialize();
 21846  003C94  EC1A  F01F         	call	i2_EUSART_Initialize	;wreg free
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 21850  003C98  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 21851  003C9A                     i2l6362:
 21852                           
 21853                           ;USBapp.c: 118: {
 21854                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 21855  003C9A  0E40               	movlw	low _USB_Buffer
 21856  003C9C  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 21857  003C9E  6ED9               	movwf	fsr2l,c
 21858  003CA0  6ADA               	clrf	fsr2h,c
 21859  003CA2  0E01               	movlw	high _USB_Buffer
 21860  003CA4  22DA               	addwfc	fsr2h,f,c
 21861  003CA6  6ADF               	clrf	indf2,c
 21862  003CA8  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 21863  003CAA  0E3F               	movlw	63
 21864  003CAC  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 21865  003CAE  D7F5               	goto	i2l6362
 21866                           
 21867                           ;USBapp.c: 120: }
 21868                           ;USBapp.c: 121: NextUSBOut = 0;
 21869  003CB0  6A1A               	clrf	_NextUSBOut,c
 21870                           
 21871                           ;USBapp.c: 122: LastRS232Out = 0;
 21872  003CB2  6A19               	clrf	_LastRS232Out,c
 21873  003CB4  0012               	return		;funcret
 21874  003CB6                     __end_of_USBapp_CdcEmulatorInitialize:
 21875                           	opt stack 0
 21876                           pclatu	equ	0xFFB
 21877                           pclath	equ	0xFFA
 21878                           tblptru	equ	0xFF8
 21879                           tblptrh	equ	0xFF7
 21880                           tblptrl	equ	0xFF6
 21881                           tablat	equ	0xFF5
 21882                           prodh	equ	0xFF4
 21883                           prodl	equ	0xFF3
 21884                           intcon	equ	0xFF2
 21885                           postinc0	equ	0xFEE
 21886                           wreg	equ	0xFE8
 21887                           indf1	equ	0xFE7
 21888                           postdec1	equ	0xFE5
 21889                           fsr1h	equ	0xFE2
 21890                           fsr1l	equ	0xFE1
 21891                           indf2	equ	0xFDF
 21892                           postinc2	equ	0xFDE
 21893                           postdec2	equ	0xFDD
 21894                           plusw2	equ	0xFDB
 21895                           fsr2h	equ	0xFDA
 21896                           fsr2l	equ	0xFD9
 21897                           status	equ	0xFD8
 21898                           
 21899 ;; *************** function _CDCInitEP *****************
 21900 ;; Defined at:
 21901 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 21902 ;; Parameters:    Size  Location     Type
 21903 ;;		None
 21904 ;; Auto vars:     Size  Location     Type
 21905 ;;		None
 21906 ;; Return value:  Size  Location     Type
 21907 ;;                  1    wreg      void 
 21908 ;; Registers used:
 21909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21910 ;; Tracked objects:
 21911 ;;		On entry : 0/0
 21912 ;;		On exit  : F/0
 21913 ;;		Unchanged: 0/0
 21914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21915 ;;      Params:         0       0       0       0       0       0       0       0       0
 21916 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21917 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21918 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21919 ;;Total ram usage:        0 bytes
 21920 ;; Hardware stack levels used:    1
 21921 ;; Hardware stack levels required when called:    2
 21922 ;; This function calls:
 21923 ;;		_USBEnableEndpoint
 21924 ;;		i2_USBTransferOnePacket
 21925 ;; This function is called by:
 21926 ;;		_USBapp_CdcEmulatorInitialize
 21927 ;; This function uses a non-reentrant model
 21928 ;;
 21929                           
 21930                           	psect	text104
 21931  0038FE                     __ptext104:
 21932                           	opt stack 0
 21933  0038FE                     _CDCInitEP:
 21934                           	opt stack 14
 21935                           
 21936                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 21937                           
 21938                           ;incstack = 0
 21939  0038FE  0100               	movlb	0	; () banked
 21940  003900  6BBC               	clrf	_line_coding& (0+255),b
 21941  003902  0E4B               	movlw	75
 21942  003904  6FBD               	movwf	(_line_coding+1)& (0+255),b
 21943  003906  6BBE               	clrf	(_line_coding+2)& (0+255),b
 21944  003908  6BBF               	clrf	(_line_coding+3)& (0+255),b
 21945                           
 21946                           ; BSR set to: 0
 21947                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 21948  00390A  6BC0               	clrf	(_line_coding+4)& (0+255),b
 21949                           
 21950                           ; BSR set to: 0
 21951                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 21952  00390C  6BC1               	clrf	(_line_coding+5)& (0+255),b
 21953                           
 21954                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 21955  00390E  0E08               	movlw	8
 21956  003910  6FC2               	movwf	(_line_coding+6)& (0+255),b
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 21960  003912  6B91               	clrf	_cdc_rx_len& (0+255),b
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 21964  003914  0E1A               	movlw	26
 21965  003916  6E36               	movwf	USBEnableEndpoint@options,c
 21966  003918  0E01               	movlw	1
 21967  00391A  EC76  F01E         	call	_USBEnableEndpoint
 21968                           
 21969                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 21970  00391E  0E1E               	movlw	30
 21971  003920  6E36               	movwf	USBEnableEndpoint@options,c
 21972  003922  0E02               	movlw	2
 21973  003924  EC76  F01E         	call	_USBEnableEndpoint
 21974                           
 21975                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21976  003928  0E00               	movlw	0
 21977  00392A  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 21978  00392C  0E40               	movlw	64
 21979  00392E  6E2F               	movwf	i2USBTransferOnePacket@data,c
 21980  003930  0E05               	movlw	5
 21981  003932  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 21982  003934  0E40               	movlw	64
 21983  003936  6E31               	movwf	i2USBTransferOnePacket@len,c
 21984  003938  0E02               	movlw	2
 21985  00393A  EC18  F017         	call	i2_USBTransferOnePacket
 21986  00393E  C02E  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 21987  003942  C02F  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21988                           
 21989                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 21990  003946  0100               	movlb	0	; () banked
 21991  003948  6B76               	clrf	_CDCDataInHandle& (0+255),b
 21992  00394A  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
 21993                           
 21994                           ; BSR set to: 0
 21995                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 21996  00394C  6A20               	clrf	_cdc_trf_state,c
 21997                           
 21998                           ; BSR set to: 0
 21999  00394E  0012               	return		;funcret
 22000  003950                     __end_of_CDCInitEP:
 22001                           	opt stack 0
 22002                           pclatu	equ	0xFFB
 22003                           pclath	equ	0xFFA
 22004                           tblptru	equ	0xFF8
 22005                           tblptrh	equ	0xFF7
 22006                           tblptrl	equ	0xFF6
 22007                           tablat	equ	0xFF5
 22008                           prodh	equ	0xFF4
 22009                           prodl	equ	0xFF3
 22010                           intcon	equ	0xFF2
 22011                           postinc0	equ	0xFEE
 22012                           wreg	equ	0xFE8
 22013                           indf1	equ	0xFE7
 22014                           postdec1	equ	0xFE5
 22015                           fsr1h	equ	0xFE2
 22016                           fsr1l	equ	0xFE1
 22017                           indf2	equ	0xFDF
 22018                           postinc2	equ	0xFDE
 22019                           postdec2	equ	0xFDD
 22020                           plusw2	equ	0xFDB
 22021                           fsr2h	equ	0xFDA
 22022                           fsr2l	equ	0xFD9
 22023                           status	equ	0xFD8
 22024                           
 22025 ;; *************** function i2_USBTransferOnePacket *****************
 22026 ;; Defined at:
 22027 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 22028 ;; Parameters:    Size  Location     Type
 22029 ;;  ep              1    wreg     unsigned char 
 22030 ;;  dir             1    0[COMRAM] unsigned char 
 22031 ;;  data            2    1[COMRAM] PTR unsigned char 
 22032 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22033 ;;  len             1    3[COMRAM] unsigned char 
 22034 ;; Auto vars:     Size  Location     Type
 22035 ;;  ep              1    4[COMRAM] unsigned char 
 22036 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 22037 ;;		 -> BDT(48), NULL(0), 
 22038 ;; Return value:  Size  Location     Type
 22039 ;;                  2    0[COMRAM] PTR void 
 22040 ;; Registers used:
 22041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22042 ;; Tracked objects:
 22043 ;;		On entry : 0/0
 22044 ;;		On exit  : 0/0
 22045 ;;		Unchanged: 0/0
 22046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22047 ;;      Params:         4       0       0       0       0       0       0       0       0
 22048 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22050 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22051 ;;Total ram usage:        7 bytes
 22052 ;; Hardware stack levels used:    1
 22053 ;; This function calls:
 22054 ;;		Nothing
 22055 ;; This function is called by:
 22056 ;;		_CDCInitEP
 22057 ;; This function uses a non-reentrant model
 22058 ;;
 22059                           
 22060                           	psect	text105
 22061  002E30                     __ptext105:
 22062                           	opt stack 0
 22063  002E30                     i2_USBTransferOnePacket:
 22064                           	opt stack 15
 22065                           
 22066                           ; BSR set to: 0
 22067                           ;incstack = 0
 22068                           ;i2USBTransferOnePacket@ep stored from wreg
 22069  002E30  6E32               	movwf	i2USBTransferOnePacket@ep,c
 22070                           
 22071                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 22072                           ;usb_device.c: 762: if(dir != 0)
 22073  002E32  502E               	movf	i2USBTransferOnePacket@dir,w,c
 22074  002E34  E005               	bz	i2l6230
 22075                           
 22076                           ;usb_device.c: 763: {
 22077                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 22078  002E36  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22079  002E38  0D02               	mullw	2
 22080  002E3A  50F3               	movf	prodl,w,c
 22081  002E3C  0F0F               	addlw	low _pBDTEntryIn
 22082  002E3E  D004               	goto	L63
 22083  002E40                     i2l6230:
 22084                           
 22085                           ;usb_device.c: 767: else
 22086                           ;usb_device.c: 768: {
 22087                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 22088  002E40  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22089  002E42  0D02               	mullw	2
 22090  002E44  50F3               	movf	prodl,w,c
 22091  002E46  0F60               	addlw	low _pBDTEntryOut
 22092  002E48                     L63:
 22093  002E48  6ED9               	movwf	fsr2l,c
 22094  002E4A  6ADA               	clrf	fsr2h,c
 22095  002E4C  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 22096  002E50  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22097                           
 22098                           ;usb_device.c: 771: }
 22099                           ;usb_device.c: 775: if(handle == 0)
 22100  002E54  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22101  002E56  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22102  002E58  E103               	bnz	i2l6236
 22103                           
 22104                           ;usb_device.c: 776: {
 22105                           ;usb_device.c: 777: return 0;
 22106  002E5A  6A2E               	clrf	?i2_USBTransferOnePacket,c
 22107  002E5C  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 22108  002E5E  0012               	return	
 22109  002E60                     i2l6236:
 22110                           
 22111                           ;usb_device.c: 778: }
 22112                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 22113  002E60  EE20 F002          	lfsr	2,2
 22114  002E64  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22115  002E66  26D9               	addwf	fsr2l,f,c
 22116  002E68  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 22117  002E6A  22DA               	addwfc	fsr2h,f,c
 22118  002E6C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22119  002E70  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22120                           
 22121                           ;usb_device.c: 781: handle->CNT = len;
 22122  002E74  EE20 F001          	lfsr	2,1
 22123  002E78  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22124  002E7A  26D9               	addwf	fsr2l,f,c
 22125  002E7C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 22126  002E7E  22DA               	addwfc	fsr2h,f,c
 22127  002E80  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22128                           
 22129                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 22130  002E84  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22131  002E88  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22132  002E8C  0E40               	movlw	64
 22133  002E8E  16DF               	andwf	indf2,f,c
 22134                           
 22135                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 22136  002E90  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22137  002E94  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22138  002E98  0E00               	movlw	0
 22139  002E9A  86DB               	bsf	plusw2,3,c
 22140                           
 22141                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 22142  002E9C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22143  002EA0  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22144  002EA4  8EDB               	bsf	plusw2,7,c
 22145                           
 22146                           ;usb_device.c: 787: if(dir != 0)
 22147  002EA6  502E               	movf	i2USBTransferOnePacket@dir,w,c
 22148  002EA8  E005               	bz	i2l6248
 22149                           
 22150                           ;usb_device.c: 788: {
 22151                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22152  002EAA  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22153  002EAC  0D02               	mullw	2
 22154  002EAE  50F3               	movf	prodl,w,c
 22155  002EB0  0F0F               	addlw	low _pBDTEntryIn
 22156  002EB2  D004               	goto	L64
 22157  002EB4                     i2l6248:
 22158                           
 22159                           ;usb_device.c: 792: else
 22160                           ;usb_device.c: 793: {
 22161                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22162  002EB4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22163  002EB6  0D02               	mullw	2
 22164  002EB8  50F3               	movf	prodl,w,c
 22165  002EBA  0F60               	addlw	low _pBDTEntryOut
 22166  002EBC                     L64:
 22167  002EBC  6ED9               	movwf	fsr2l,c
 22168  002EBE  6ADA               	clrf	fsr2h,c
 22169  002EC0  0E04               	movlw	4
 22170  002EC2  1ADF               	xorwf	indf2,f,c
 22171                           
 22172                           ;usb_device.c: 796: }
 22173                           ;usb_device.c: 797: return (void*)handle;
 22174  002EC4  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22175  002EC8  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22176  002ECC  0C04               	retlw	4	;funcret
 22177  002ECE                     __end_ofi2_USBTransferOnePacket:
 22178                           	opt stack 0
 22179                           pclatu	equ	0xFFB
 22180                           pclath	equ	0xFFA
 22181                           tblptru	equ	0xFF8
 22182                           tblptrh	equ	0xFF7
 22183                           tblptrl	equ	0xFF6
 22184                           tablat	equ	0xFF5
 22185                           prodh	equ	0xFF4
 22186                           prodl	equ	0xFF3
 22187                           intcon	equ	0xFF2
 22188                           postinc0	equ	0xFEE
 22189                           wreg	equ	0xFE8
 22190                           indf1	equ	0xFE7
 22191                           postdec1	equ	0xFE5
 22192                           fsr1h	equ	0xFE2
 22193                           fsr1l	equ	0xFE1
 22194                           indf2	equ	0xFDF
 22195                           postinc2	equ	0xFDE
 22196                           postdec2	equ	0xFDD
 22197                           plusw2	equ	0xFDB
 22198                           fsr2h	equ	0xFDA
 22199                           fsr2l	equ	0xFD9
 22200                           status	equ	0xFD8
 22201                           
 22202 ;; *************** function _USBEnableEndpoint *****************
 22203 ;; Defined at:
 22204 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 22205 ;; Parameters:    Size  Location     Type
 22206 ;;  ep              1    wreg     unsigned char 
 22207 ;;  options         1    8[COMRAM] unsigned char 
 22208 ;; Auto vars:     Size  Location     Type
 22209 ;;  ep              1   11[COMRAM] unsigned char 
 22210 ;;  p               2    9[COMRAM] PTR unsigned char 
 22211 ;;		 -> UEP0(1), 
 22212 ;; Return value:  Size  Location     Type
 22213 ;;                  1    wreg      void 
 22214 ;; Registers used:
 22215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22216 ;; Tracked objects:
 22217 ;;		On entry : 0/0
 22218 ;;		On exit  : 0/0
 22219 ;;		Unchanged: 0/0
 22220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22221 ;;      Params:         1       0       0       0       0       0       0       0       0
 22222 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22223 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22224 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22225 ;;Total ram usage:        4 bytes
 22226 ;; Hardware stack levels used:    1
 22227 ;; Hardware stack levels required when called:    1
 22228 ;; This function calls:
 22229 ;;		_USBConfigureEndpoint
 22230 ;; This function is called by:
 22231 ;;		_CDCInitEP
 22232 ;; This function uses a non-reentrant model
 22233 ;;
 22234                           
 22235                           	psect	text106
 22236  003CEC                     __ptext106:
 22237                           	opt stack 0
 22238  003CEC                     _USBEnableEndpoint:
 22239                           	opt stack 14
 22240                           
 22241                           ;incstack = 0
 22242                           ;USBEnableEndpoint@ep stored from wreg
 22243  003CEC  6E39               	movwf	USBEnableEndpoint@ep,c
 22244                           
 22245                           ;usb_device.c: 647: unsigned char* p;
 22246                           ;usb_device.c: 651: if(options & 0x04)
 22247  003CEE  A436               	btfss	USBEnableEndpoint@options,2,c
 22248  003CF0  D004               	goto	i2l6218
 22249                           
 22250                           ;usb_device.c: 652: {
 22251                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 22252  003CF2  6A2E               	clrf	USBConfigureEndpoint@direction,c
 22253  003CF4  5039               	movf	USBEnableEndpoint@ep,w,c
 22254  003CF6  EC40  F018         	call	_USBConfigureEndpoint
 22255  003CFA                     i2l6218:
 22256                           
 22257                           ;usb_device.c: 654: }
 22258                           ;usb_device.c: 655: if(options & 0x02)
 22259  003CFA  A236               	btfss	USBEnableEndpoint@options,1,c
 22260  003CFC  D005               	goto	i2l6222
 22261                           
 22262                           ;usb_device.c: 656: {
 22263                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 22264  003CFE  0E01               	movlw	1
 22265  003D00  6E2E               	movwf	USBConfigureEndpoint@direction,c
 22266  003D02  5039               	movf	USBEnableEndpoint@ep,w,c
 22267  003D04  EC40  F018         	call	_USBConfigureEndpoint
 22268  003D08                     i2l6222:
 22269                           
 22270                           ;usb_device.c: 658: }
 22271                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 22272  003D08  0E6A               	movlw	106
 22273  003D0A  2439               	addwf	USBEnableEndpoint@ep,w,c
 22274  003D0C  6E37               	movwf	USBEnableEndpoint@p,c
 22275  003D0E  6A38               	clrf	USBEnableEndpoint@p+1,c
 22276  003D10  0E0F               	movlw	15
 22277  003D12  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 22278                           
 22279                           ;usb_device.c: 664: *p = options;
 22280  003D14  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 22281  003D18  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 22282  003D1C  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 22283  003D20  0C0F               	retlw	15	;funcret
 22284  003D22                     __end_of_USBEnableEndpoint:
 22285                           	opt stack 0
 22286                           pclatu	equ	0xFFB
 22287                           pclath	equ	0xFFA
 22288                           tblptru	equ	0xFF8
 22289                           tblptrh	equ	0xFF7
 22290                           tblptrl	equ	0xFF6
 22291                           tablat	equ	0xFF5
 22292                           prodh	equ	0xFF4
 22293                           prodl	equ	0xFF3
 22294                           intcon	equ	0xFF2
 22295                           postinc0	equ	0xFEE
 22296                           wreg	equ	0xFE8
 22297                           indf1	equ	0xFE7
 22298                           postdec1	equ	0xFE5
 22299                           fsr1h	equ	0xFE2
 22300                           fsr1l	equ	0xFE1
 22301                           indf2	equ	0xFDF
 22302                           postinc2	equ	0xFDE
 22303                           postdec2	equ	0xFDD
 22304                           plusw2	equ	0xFDB
 22305                           fsr2h	equ	0xFDA
 22306                           fsr2l	equ	0xFD9
 22307                           status	equ	0xFD8
 22308                           
 22309 ;; *************** function _USBConfigureEndpoint *****************
 22310 ;; Defined at:
 22311 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 22312 ;; Parameters:    Size  Location     Type
 22313 ;;  EPNum           1    wreg     unsigned char 
 22314 ;;  direction       1    0[COMRAM] unsigned char 
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;  EPNum           1    5[COMRAM] unsigned char 
 22317 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 22318 ;;		 -> BDT(48), 
 22319 ;; Return value:  Size  Location     Type
 22320 ;;                  1    wreg      void 
 22321 ;; Registers used:
 22322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22323 ;; Tracked objects:
 22324 ;;		On entry : 0/0
 22325 ;;		On exit  : 0/0
 22326 ;;		Unchanged: 0/0
 22327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22328 ;;      Params:         1       0       0       0       0       0       0       0       0
 22329 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22330 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22331 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22332 ;;Total ram usage:        8 bytes
 22333 ;; Hardware stack levels used:    1
 22334 ;; This function calls:
 22335 ;;		Nothing
 22336 ;; This function is called by:
 22337 ;;		_USBEnableEndpoint
 22338 ;; This function uses a non-reentrant model
 22339 ;;
 22340                           
 22341                           	psect	text107
 22342  003080                     __ptext107:
 22343                           	opt stack 0
 22344  003080                     _USBConfigureEndpoint:
 22345                           	opt stack 14
 22346                           
 22347                           ;incstack = 0
 22348                           ;USBConfigureEndpoint@EPNum stored from wreg
 22349  003080  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 22350                           
 22351                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 22352                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 22353  003082  6A34               	clrf	USBConfigureEndpoint@handle,c
 22354  003084  0E04               	movlw	4
 22355  003086  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 22356                           
 22357                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 22358  003088  502E               	movf	USBConfigureEndpoint@direction,w,c
 22359  00308A  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 22360  00308C  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 22361  00308E  90D8               	bcf	status,0,c
 22362  003090  362F               	rlcf	??_USBConfigureEndpoint,f,c
 22363  003092  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 22364  003094  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22365  003096  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 22366  003098  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 22367  00309A  90D8               	bcf	status,0,c
 22368  00309C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22369  00309E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22370  0030A0  90D8               	bcf	status,0,c
 22371  0030A2  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22372  0030A4  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22373  0030A6  502F               	movf	??_USBConfigureEndpoint,w,c
 22374  0030A8  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 22375  0030AA  5030               	movf	??_USBConfigureEndpoint+1,w,c
 22376  0030AC  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 22377  0030AE  90D8               	bcf	status,0,c
 22378  0030B0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22379  0030B2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22380  0030B4  90D8               	bcf	status,0,c
 22381  0030B6  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22382  0030B8  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22383  0030BA  5031               	movf	??_USBConfigureEndpoint+2,w,c
 22384  0030BC  2634               	addwf	USBConfigureEndpoint@handle,f,c
 22385  0030BE  5032               	movf	??_USBConfigureEndpoint+3,w,c
 22386  0030C0  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 22387                           
 22388                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 22389  0030C2  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22390  0030C6  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22391  0030CA  9EDF               	bcf	indf2,7,c
 22392                           
 22393                           ;usb_device.c: 1242: if(direction == 0)
 22394  0030CC  502E               	movf	USBConfigureEndpoint@direction,w,c
 22395  0030CE  E105               	bnz	i2l6204
 22396                           
 22397                           ;usb_device.c: 1243: {
 22398                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 22399  0030D0  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22400  0030D2  0D02               	mullw	2
 22401  0030D4  50F3               	movf	prodl,w,c
 22402  0030D6  0F60               	addlw	low _pBDTEntryOut
 22403  0030D8  D004               	goto	L65
 22404  0030DA                     i2l6204:
 22405                           
 22406                           ;usb_device.c: 1246: else
 22407                           ;usb_device.c: 1247: {
 22408                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 22409  0030DA  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22410  0030DC  0D02               	mullw	2
 22411  0030DE  50F3               	movf	prodl,w,c
 22412  0030E0  0F0F               	addlw	low _pBDTEntryIn
 22413  0030E2                     L65:
 22414  0030E2  6ED9               	movwf	fsr2l,c
 22415  0030E4  6ADA               	clrf	fsr2h,c
 22416  0030E6  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 22417  0030EA  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 22418                           
 22419                           ;usb_device.c: 1249: }
 22420                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 22421  0030EE  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22422  0030F2  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22423  0030F6  9CDF               	bcf	indf2,6,c
 22424                           
 22425                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 22426  0030F8  EE20 F004          	lfsr	2,4
 22427  0030FC  5034               	movf	USBConfigureEndpoint@handle,w,c
 22428  0030FE  26D9               	addwf	fsr2l,f,c
 22429  003100  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 22430  003102  22DA               	addwfc	fsr2h,f,c
 22431  003104  8CDF               	bsf	indf2,6,c
 22432  003106  0012               	return		;funcret
 22433  003108                     __end_of_USBConfigureEndpoint:
 22434                           	opt stack 0
 22435                           pclatu	equ	0xFFB
 22436                           pclath	equ	0xFFA
 22437                           tblptru	equ	0xFF8
 22438                           tblptrh	equ	0xFF7
 22439                           tblptrl	equ	0xFF6
 22440                           tablat	equ	0xFF5
 22441                           prodh	equ	0xFF4
 22442                           prodl	equ	0xFF3
 22443                           intcon	equ	0xFF2
 22444                           postinc0	equ	0xFEE
 22445                           wreg	equ	0xFE8
 22446                           indf1	equ	0xFE7
 22447                           postdec1	equ	0xFE5
 22448                           fsr1h	equ	0xFE2
 22449                           fsr1l	equ	0xFE1
 22450                           indf2	equ	0xFDF
 22451                           postinc2	equ	0xFDE
 22452                           postdec2	equ	0xFDD
 22453                           plusw2	equ	0xFDB
 22454                           fsr2h	equ	0xFDA
 22455                           fsr2l	equ	0xFD9
 22456                           status	equ	0xFD8
 22457                           
 22458 ;; *************** function _USBCheckCDCRequest *****************
 22459 ;; Defined at:
 22460 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 22461 ;; Parameters:    Size  Location     Type
 22462 ;;		None
 22463 ;; Auto vars:     Size  Location     Type
 22464 ;;		None
 22465 ;; Return value:  Size  Location     Type
 22466 ;;                  1    wreg      void 
 22467 ;; Registers used:
 22468 ;;		wreg, status,2, status,0
 22469 ;; Tracked objects:
 22470 ;;		On entry : 0/0
 22471 ;;		On exit  : F/4
 22472 ;;		Unchanged: 0/0
 22473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22474 ;;      Params:         0       0       0       0       0       0       0       0       0
 22475 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22477 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22478 ;;Total ram usage:        0 bytes
 22479 ;; Hardware stack levels used:    1
 22480 ;; This function calls:
 22481 ;;		Nothing
 22482 ;; This function is called by:
 22483 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22484 ;; This function uses a non-reentrant model
 22485 ;;
 22486                           
 22487                           	psect	text108
 22488  003108                     __ptext108:
 22489                           	opt stack 0
 22490  003108                     _USBCheckCDCRequest:
 22491                           	opt stack 17
 22492                           
 22493                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 22494                           
 22495                           ;incstack = 0
 22496  003108  0104               	movlb	4	; () banked
 22497  00310A  5130               	movf	48,w,b	;volatile
 22498  00310C  0B1F               	andlw	31
 22499  00310E  06E8               	decf	wreg,f,c
 22500  003110  E001               	bz	i2l6372
 22501  003112  0012               	return	
 22502  003114                     i2l6372:
 22503                           
 22504                           ; BSR set to: 4
 22505                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 22506  003114  3930               	swapf	48,w,b	;volatile
 22507  003116  32E8               	rrcf	wreg,f,c
 22508  003118  0B03               	andlw	3
 22509  00311A  06E8               	decf	wreg,f,c
 22510  00311C  E001               	bz	i2l6376
 22511  00311E  0012               	return	
 22512  003120                     i2l6376:
 22513                           
 22514                           ; BSR set to: 4
 22515                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 22516                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 22517  003120  5134               	movf	52,w,b	;volatile
 22518  003122  E02B               	bz	i2l6410
 22519                           
 22520                           ; BSR set to: 4
 22521  003124  0534               	decf	52,w,b	;volatile
 22522  003126  E029               	bz	i2l6410
 22523  003128  0012               	return	
 22524  00312A                     i2l6382:
 22525                           
 22526                           ; BSR set to: 4
 22527                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22528  00312A  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22529  00312C  6E09               	movwf	_inPipes,c	;volatile
 22530  00312E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22531  003130  6E0A               	movwf	_inPipes+1,c	;volatile
 22532                           
 22533                           ; BSR set to: 4
 22534                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 22535  003132  6A0E               	clrf	_inPipes+5,c	;volatile
 22536  003134  0E08               	movlw	8
 22537  003136  6E0D               	movwf	_inPipes+4,c	;volatile
 22538                           
 22539                           ; BSR set to: 4
 22540                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22541  003138  800C               	bsf	_inPipes+3,0,c	;volatile
 22542                           
 22543                           ; BSR set to: 4
 22544                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 22545  00313A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22546                           
 22547                           ;usb_device_cdc.c: 212: break;
 22548  00313C  0C08               	retlw	8
 22549  00313E                     i2l6390:
 22550                           
 22551                           ; BSR set to: 4
 22552                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22553  00313E  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22554  003140  6E09               	movwf	_inPipes,c	;volatile
 22555  003142  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22556  003144  6E0A               	movwf	_inPipes+1,c	;volatile
 22557                           
 22558                           ; BSR set to: 4
 22559                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 22560  003146  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22561                           
 22562                           ;usb_device_cdc.c: 217: break;
 22563  003148  0012               	return	
 22564  00314A                     i2l1870:
 22565                           
 22566                           ; BSR set to: 4
 22567                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 22568  00314A  C436 F005          	movff	1078,_outPipes+4	;volatile
 22569  00314E  C437 F006          	movff	1079,_outPipes+5	;volatile
 22570                           
 22571                           ; BSR set to: 4
 22572                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 22573  003152  0EAA               	movlw	low _cdc_notice
 22574  003154  6E01               	movwf	_outPipes,c	;volatile
 22575                           
 22576                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 22577  003156  0EAA               	movlw	low _USART_mySetLineCodingHandler
 22578  003158  6E07               	movwf	_outPipes+6,c	;volatile
 22579  00315A  0E38               	movlw	high _USART_mySetLineCodingHandler
 22580  00315C  6E08               	movwf	_outPipes+7,c	;volatile
 22581                           
 22582                           ; BSR set to: 4
 22583                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 22584  00315E  8E04               	bsf	_outPipes+3,7,c	;volatile
 22585                           
 22586                           ;usb_device_cdc.c: 224: break;
 22587  003160  0012               	return	
 22588  003162                     i2l6398:
 22589                           
 22590                           ; BSR set to: 4
 22591                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22592  003162  0EBC               	movlw	low _line_coding
 22593  003164  6E09               	movwf	_inPipes,c	;volatile
 22594  003166  6A0A               	clrf	_inPipes+1,c	;volatile
 22595                           
 22596                           ; BSR set to: 4
 22597  003168  6A0E               	clrf	_inPipes+5,c	;volatile
 22598  00316A  0E07               	movlw	7
 22599  00316C  6E0D               	movwf	_inPipes+4,c	;volatile
 22600                           
 22601                           ; BSR set to: 4
 22602  00316E  0EC1               	movlw	193
 22603  003170  6E0C               	movwf	_inPipes+3,c	;volatile
 22604                           
 22605                           ;usb_device_cdc.c: 231: break;
 22606  003172  0CC1               	retlw	193
 22607  003174                     i2l6404:
 22608                           
 22609                           ; BSR set to: 4
 22610                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22611  003174  5132               	movf	50,w,b	;volatile
 22612                           
 22613                           ; BSR set to: 4
 22614                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 22615  003176  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22616                           
 22617                           ;usb_device_cdc.c: 256: break;
 22618  003178  0012               	return	
 22619  00317A                     i2l6410:
 22620                           
 22621                           ; BSR set to: 4
 22622  00317A  5131               	movf	49,w,b	;volatile
 22623                           
 22624                           ; Switch size 1, requested type "speed"
 22625                           ; Number of cases is 5, Range of values is 0 to 34
 22626                           ; switch strategies available:
 22627                           ; Name         Instructions Cycles
 22628                           ; simple_byte           16     9 (average)
 22629                           ;	Chosen strategy is simple_byte
 22630  00317C  E0D6               	bz	i2l6382
 22631  00317E  0A01               	xorlw	1	; case 1
 22632  003180  E0DE               	bz	i2l6390
 22633  003182  0A21               	xorlw	33	; case 32
 22634  003184  E0E2               	bz	i2l1870
 22635  003186  0A01               	xorlw	1	; case 33
 22636  003188  E0EC               	bz	i2l6398
 22637  00318A  0A03               	xorlw	3	; case 34
 22638  00318C  E0F3               	bz	i2l6404
 22639                           
 22640                           ; BSR set to: 4
 22641  00318E  0012               	return		;funcret
 22642  003190                     __end_of_USBCheckCDCRequest:
 22643                           	opt stack 0
 22644                           pclatu	equ	0xFFB
 22645                           pclath	equ	0xFFA
 22646                           tblptru	equ	0xFF8
 22647                           tblptrh	equ	0xFF7
 22648                           tblptrl	equ	0xFF6
 22649                           tablat	equ	0xFF5
 22650                           prodh	equ	0xFF4
 22651                           prodl	equ	0xFF3
 22652                           intcon	equ	0xFF2
 22653                           postinc0	equ	0xFEE
 22654                           wreg	equ	0xFE8
 22655                           indf1	equ	0xFE7
 22656                           postdec1	equ	0xFE5
 22657                           fsr1h	equ	0xFE2
 22658                           fsr1l	equ	0xFE1
 22659                           indf2	equ	0xFDF
 22660                           postinc2	equ	0xFDE
 22661                           postdec2	equ	0xFDD
 22662                           plusw2	equ	0xFDB
 22663                           fsr2h	equ	0xFDA
 22664                           fsr2l	equ	0xFD9
 22665                           status	equ	0xFD8
 22666                           
 22667 ;; *************** function _USBCtrlTrfOutHandler *****************
 22668 ;; Defined at:
 22669 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 22670 ;; Parameters:    Size  Location     Type
 22671 ;;		None
 22672 ;; Auto vars:     Size  Location     Type
 22673 ;;		None
 22674 ;; Return value:  Size  Location     Type
 22675 ;;                  1    wreg      void 
 22676 ;; Registers used:
 22677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 22678 ;; Tracked objects:
 22679 ;;		On entry : F/0
 22680 ;;		On exit  : F/0
 22681 ;;		Unchanged: 0/0
 22682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22683 ;;      Params:         0       0       0       0       0       0       0       0       0
 22684 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22686 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22687 ;;Total ram usage:        0 bytes
 22688 ;; Hardware stack levels used:    1
 22689 ;; Hardware stack levels required when called:    3
 22690 ;; This function calls:
 22691 ;;		_USBCtrlTrfRxService
 22692 ;; This function is called by:
 22693 ;;		_USBCtrlEPService
 22694 ;; This function uses a non-reentrant model
 22695 ;;
 22696                           
 22697                           	psect	text109
 22698  003950                     __ptext109:
 22699                           	opt stack 0
 22700  003950                     _USBCtrlTrfOutHandler:
 22701                           	opt stack 14
 22702                           
 22703                           ; BSR set to: 0
 22704                           ;usb_device.c: 2171: if(controlTransferState == 2)
 22705                           
 22706                           ; BSR set to: 4
 22707                           ;incstack = 0
 22708  003950  0E02               	movlw	2
 22709  003952  1821               	xorwf	_controlTransferState,w,c	;volatile
 22710  003954  E102               	bnz	i2l1753
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;usb_device.c: 2172: {
 22714                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 22715  003956  EF88  F00D         	goto	_USBCtrlTrfRxService	;wreg free
 22716  00395A                     i2l1753:
 22717                           
 22718                           ; BSR set to: 0
 22719                           ;usb_device.c: 2175: else
 22720                           ;usb_device.c: 2176: {
 22721                           ;usb_device.c: 2179: controlTransferState = 0;
 22722  00395A  6A21               	clrf	_controlTransferState,c	;volatile
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 22726  00395C  5186               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 22727  00395E  E11F               	bnz	i2l1755
 22728                           
 22729                           ; BSR set to: 0
 22730                           ;usb_device.c: 2187: {
 22731                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 22732  003960  EE20 F001          	lfsr	2,1
 22733  003964  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22734  003966  26D9               	addwf	fsr2l,f,c
 22735  003968  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22736  00396A  22DA               	addwfc	fsr2h,f,c
 22737  00396C  0E08               	movlw	8
 22738  00396E  6EDF               	movwf	indf2,c
 22739                           
 22740                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22741  003970  EE20 F002          	lfsr	2,2
 22742  003974  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22743  003976  26D9               	addwf	fsr2l,f,c
 22744  003978  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22745  00397A  22DA               	addwfc	fsr2h,f,c
 22746  00397C  0E30               	movlw	48
 22747  00397E  6EDE               	movwf	postinc2,c
 22748  003980  0E04               	movlw	4
 22749  003982  6EDD               	movwf	postdec2,c
 22750                           
 22751                           ; BSR set to: 0
 22752                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22753  003984  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22754  003988  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22755  00398C  0E0C               	movlw	12
 22756  00398E  6EDF               	movwf	indf2,c
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22760  003990  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22761  003994  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22762  003998  0E00               	movlw	0
 22763  00399A  8EDB               	bsf	plusw2,7,c
 22764                           
 22765                           ;usb_device.c: 2192: }
 22766  00399C  0C00               	retlw	0
 22767  00399E                     i2l1755:
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;usb_device.c: 2193: else
 22771                           ;usb_device.c: 2194: {
 22772                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 22773  00399E  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22774                           
 22775                           ; BSR set to: 0
 22776  0039A0  0012               	return		;funcret
 22777  0039A2                     __end_of_USBCtrlTrfOutHandler:
 22778                           	opt stack 0
 22779                           pclatu	equ	0xFFB
 22780                           pclath	equ	0xFFA
 22781                           tblptru	equ	0xFF8
 22782                           tblptrh	equ	0xFF7
 22783                           tblptrl	equ	0xFF6
 22784                           tablat	equ	0xFF5
 22785                           prodh	equ	0xFF4
 22786                           prodl	equ	0xFF3
 22787                           intcon	equ	0xFF2
 22788                           postinc0	equ	0xFEE
 22789                           wreg	equ	0xFE8
 22790                           indf1	equ	0xFE7
 22791                           postdec1	equ	0xFE5
 22792                           fsr1h	equ	0xFE2
 22793                           fsr1l	equ	0xFE1
 22794                           indf2	equ	0xFDF
 22795                           postinc2	equ	0xFDE
 22796                           postdec2	equ	0xFDD
 22797                           plusw2	equ	0xFDB
 22798                           fsr2h	equ	0xFDA
 22799                           fsr2l	equ	0xFD9
 22800                           status	equ	0xFD8
 22801                           
 22802 ;; *************** function _USBCtrlTrfRxService *****************
 22803 ;; Defined at:
 22804 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 22805 ;; Parameters:    Size  Location     Type
 22806 ;;		None
 22807 ;; Auto vars:     Size  Location     Type
 22808 ;;  byteToRead      1   18[COMRAM] unsigned char 
 22809 ;;  i               1   17[COMRAM] unsigned char 
 22810 ;; Return value:  Size  Location     Type
 22811 ;;                  1    wreg      void 
 22812 ;; Registers used:
 22813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 22814 ;; Tracked objects:
 22815 ;;		On entry : F/0
 22816 ;;		On exit  : F/0
 22817 ;;		Unchanged: 0/0
 22818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22819 ;;      Params:         0       0       0       0       0       0       0       0       0
 22820 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22821 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22822 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22823 ;;Total ram usage:        2 bytes
 22824 ;; Hardware stack levels used:    1
 22825 ;; Hardware stack levels required when called:    2
 22826 ;; This function calls:
 22827 ;;		_USART_mySetLineCodingHandler
 22828 ;;		_USBCtrlEPAllowStatusStage
 22829 ;; This function is called by:
 22830 ;;		_USBCtrlTrfOutHandler
 22831 ;; This function uses a non-reentrant model
 22832 ;;
 22833                           
 22834                           	psect	text110
 22835  001B10                     __ptext110:
 22836                           	opt stack 0
 22837  001B10                     _USBCtrlTrfRxService:
 22838                           	opt stack 14
 22839                           
 22840                           ; BSR set to: 0
 22841                           ;usb_device.c: 1520: uint8_t byteToRead;
 22842                           ;usb_device.c: 1521: uint8_t i;
 22843                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 22844                           
 22845                           ; BSR set to: 0
 22846                           ;incstack = 0
 22847  001B10  EE20 F001          	lfsr	2,1
 22848  001B14  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 22849  001B16  26D9               	addwf	fsr2l,f,c
 22850  001B18  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22851  001B1A  22DA               	addwfc	fsr2h,f,c
 22852  001B1C  50DF               	movf	indf2,w,c
 22853  001B1E  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 22854                           
 22855                           ; BSR set to: 0
 22856                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 22857  001B20  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22858  001B22  5C05               	subwf	_outPipes+4,w,c	;volatile
 22859  001B24  0E00               	movlw	0
 22860  001B26  5806               	subwfb	_outPipes+5,w,c	;volatile
 22861  001B28  E202               	bc	i2l7092
 22862                           
 22863                           ; BSR set to: 0
 22864                           ;usb_device.c: 1532: {
 22865                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 22866  001B2A  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 22867  001B2E                     i2l7092:
 22868                           
 22869                           ; BSR set to: 0
 22870                           ;usb_device.c: 1534: }
 22871                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 22872  001B2E  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22873  001B30  5E05               	subwf	_outPipes+4,f,c	;volatile
 22874  001B32  0E00               	movlw	0
 22875  001B34  5A06               	subwfb	_outPipes+5,f,c	;volatile
 22876                           
 22877                           ; BSR set to: 0
 22878                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 22879  001B36  6A3F               	clrf	USBCtrlTrfRxService@i,c
 22880  001B38  D00D               	goto	i2l7102
 22881  001B3A                     i2l7096:
 22882                           
 22883                           ; BSR set to: 0
 22884                           ;usb_device.c: 1541: {
 22885                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 22886  001B3A  0E38               	movlw	56
 22887  001B3C  243F               	addwf	USBCtrlTrfRxService@i,w,c
 22888  001B3E  6ED9               	movwf	fsr2l,c
 22889  001B40  6ADA               	clrf	fsr2h,c
 22890  001B42  0E04               	movlw	4
 22891  001B44  22DA               	addwfc	fsr2h,f,c
 22892  001B46  5001               	movf	_outPipes,w,c	;volatile
 22893  001B48  6EE1               	movwf	fsr1l,c
 22894  001B4A  6AE2               	clrf	fsr1h,c
 22895  001B4C  CFDF FFE7          	movff	indf2,indf1
 22896                           
 22897                           ; BSR set to: 0
 22898  001B50  2A01               	incf	_outPipes,f,c	;volatile
 22899                           
 22900                           ; BSR set to: 0
 22901  001B52  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 22902  001B54                     i2l7102:
 22903                           
 22904                           ; BSR set to: 0
 22905  001B54  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22906  001B56  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 22907  001B58  E3F0               	bnc	i2l7096
 22908                           
 22909                           ; BSR set to: 0
 22910                           ;usb_device.c: 1543: }
 22911                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 22912  001B5A  5005               	movf	_outPipes+4,w,c	;volatile
 22913  001B5C  1006               	iorwf	_outPipes+5,w,c	;volatile
 22914  001B5E  E032               	bz	i2l7118
 22915                           
 22916                           ; BSR set to: 0
 22917                           ;usb_device.c: 1548: {
 22918                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 22919  001B60  EE20 F001          	lfsr	2,1
 22920  001B64  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22921  001B66  26D9               	addwf	fsr2l,f,c
 22922  001B68  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22923  001B6A  22DA               	addwfc	fsr2h,f,c
 22924  001B6C  0E08               	movlw	8
 22925  001B6E  6EDF               	movwf	indf2,c
 22926                           
 22927                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22928  001B70  EE20 F002          	lfsr	2,2
 22929  001B74  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22930  001B76  26D9               	addwf	fsr2l,f,c
 22931  001B78  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22932  001B7A  22DA               	addwfc	fsr2h,f,c
 22933  001B7C  0E38               	movlw	56
 22934  001B7E  6EDE               	movwf	postinc2,c
 22935  001B80  0E04               	movlw	4
 22936  001B82  6EDD               	movwf	postdec2,c
 22937                           
 22938                           ; BSR set to: 0
 22939                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 22940  001B84  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22941  001B88  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22942  001B8C  BCDF               	btfsc	indf2,6,c
 22943  001B8E  D00D               	goto	i2l7114
 22944                           
 22945                           ; BSR set to: 0
 22946                           ;usb_device.c: 1552: {
 22947                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 22948  001B90  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22949  001B94  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22950  001B98  0E48               	movlw	72
 22951  001B9A  6EDF               	movwf	indf2,c
 22952                           
 22953                           ; BSR set to: 0
 22954                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22955  001B9C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22956  001BA0  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22957  001BA4  0E00               	movlw	0
 22958  001BA6  8EDB               	bsf	plusw2,7,c
 22959                           
 22960                           ;usb_device.c: 1555: }
 22961  001BA8  0C00               	retlw	0
 22962  001BAA                     i2l7114:
 22963                           
 22964                           ; BSR set to: 0
 22965                           ;usb_device.c: 1556: else
 22966                           ;usb_device.c: 1557: {
 22967                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 22968  001BAA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22969  001BAE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22970  001BB2  0E08               	movlw	8
 22971  001BB4  6EDF               	movwf	indf2,c
 22972                           
 22973                           ; BSR set to: 0
 22974                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22975  001BB6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22976  001BBA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22977  001BBE  0E00               	movlw	0
 22978  001BC0  8EDB               	bsf	plusw2,7,c
 22979  001BC2  0C00               	retlw	0
 22980  001BC4                     i2l7118:
 22981                           
 22982                           ; BSR set to: 0
 22983                           ;usb_device.c: 1562: else
 22984                           ;usb_device.c: 1563: {
 22985                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 22986  001BC4  EE20 F001          	lfsr	2,1
 22987  001BC8  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22988  001BCA  26D9               	addwf	fsr2l,f,c
 22989  001BCC  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22990  001BCE  22DA               	addwfc	fsr2h,f,c
 22991  001BD0  0E08               	movlw	8
 22992  001BD2  6EDF               	movwf	indf2,c
 22993                           
 22994                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22995  001BD4  EE20 F002          	lfsr	2,2
 22996  001BD8  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22997  001BDA  26D9               	addwf	fsr2l,f,c
 22998  001BDC  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22999  001BDE  22DA               	addwfc	fsr2h,f,c
 23000  001BE0  0E30               	movlw	48
 23001  001BE2  6EDE               	movwf	postinc2,c
 23002  001BE4  0E04               	movlw	4
 23003  001BE6  6EDD               	movwf	postdec2,c
 23004                           
 23005                           ; BSR set to: 0
 23006                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23007  001BE8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23008  001BEC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23009  001BF0  6EDF               	movwf	indf2,c
 23010                           
 23011                           ; BSR set to: 0
 23012                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23013  001BF2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23014  001BF6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23015  001BFA  0E00               	movlw	0
 23016  001BFC  8EDB               	bsf	plusw2,7,c
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 23020  001BFE  5007               	movf	_outPipes+6,w,c	;volatile
 23021  001C00  1008               	iorwf	_outPipes+7,w,c	;volatile
 23022  001C02  E00E               	bz	i2l7128
 23023                           
 23024                           ; BSR set to: 0
 23025                           ;usb_device.c: 1581: {
 23026                           ;usb_device.c: 1586: outPipes[0].pFunc();
 23027  001C04  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23028  001C08  D801               	call	i2u500_48
 23029  001C0A  D00A               	goto	i2l7128
 23030  001C0C                     i2u500_48:
 23031  001C0C  0005               	push	
 23032  001C0E  6EFA               	movwf	pclath,c
 23033  001C10  50DE               	movf	postinc2,w,c
 23034  001C12  6EFD               	movwf	tosl,c
 23035  001C14  50DE               	movf	postinc2,w,c
 23036  001C16  6EFE               	movwf	tosh,c
 23037  001C18  50F8               	movf	tblptru,w,c
 23038  001C1A  6EFF               	movwf	tosu,c
 23039  001C1C  50FA               	movf	pclath,w,c
 23040  001C1E  0012               	return		;indir
 23041  001C20                     i2l7128:
 23042                           
 23043                           ; BSR set to: 0
 23044                           ;usb_device.c: 1588: }
 23045                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 23046  001C20  9E04               	bcf	_outPipes+3,7,c	;volatile
 23047                           
 23048                           ; BSR set to: 0
 23049                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 23050  001C22  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23051  001C24  B4D8               	btfsc	status,2,c
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;usb_device.c: 1604: {
 23055                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 23056  001C26  EC61  F014         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23057                           
 23058                           ; BSR set to: 0
 23059  001C2A  0012               	return		;funcret
 23060  001C2C                     __end_of_USBCtrlTrfRxService:
 23061                           	opt stack 0
 23062                           tosu	equ	0xFFF
 23063                           tosh	equ	0xFFE
 23064                           tosl	equ	0xFFD
 23065                           pclatu	equ	0xFFB
 23066                           pclath	equ	0xFFA
 23067                           tblptru	equ	0xFF8
 23068                           tblptrh	equ	0xFF7
 23069                           tblptrl	equ	0xFF6
 23070                           tablat	equ	0xFF5
 23071                           prodh	equ	0xFF4
 23072                           prodl	equ	0xFF3
 23073                           intcon	equ	0xFF2
 23074                           postinc0	equ	0xFEE
 23075                           wreg	equ	0xFE8
 23076                           indf1	equ	0xFE7
 23077                           postdec1	equ	0xFE5
 23078                           fsr1h	equ	0xFE2
 23079                           fsr1l	equ	0xFE1
 23080                           indf2	equ	0xFDF
 23081                           postinc2	equ	0xFDE
 23082                           postdec2	equ	0xFDD
 23083                           plusw2	equ	0xFDB
 23084                           fsr2h	equ	0xFDA
 23085                           fsr2l	equ	0xFD9
 23086                           status	equ	0xFD8
 23087                           
 23088 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23089 ;; Defined at:
 23090 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 23091 ;; Parameters:    Size  Location     Type
 23092 ;;		None
 23093 ;; Auto vars:     Size  Location     Type
 23094 ;;		None
 23095 ;; Return value:  Size  Location     Type
 23096 ;;                  1    wreg      void 
 23097 ;; Registers used:
 23098 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23099 ;; Tracked objects:
 23100 ;;		On entry : 0/0
 23101 ;;		On exit  : F/0
 23102 ;;		Unchanged: 0/0
 23103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23104 ;;      Params:         0       0       0       0       0       0       0       0       0
 23105 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23106 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23107 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23108 ;;Total ram usage:        0 bytes
 23109 ;; Hardware stack levels used:    1
 23110 ;; This function calls:
 23111 ;;		Nothing
 23112 ;; This function is called by:
 23113 ;;		_USBDeviceTasks
 23114 ;;		_USBCtrlEPServiceComplete
 23115 ;;		_USBCtrlTrfRxService
 23116 ;; This function uses a non-reentrant model
 23117 ;;
 23118                           
 23119                           	psect	text111
 23120  0028C2                     __ptext111:
 23121                           	opt stack 0
 23122  0028C2                     _USBCtrlEPAllowStatusStage:
 23123                           	opt stack 15
 23124                           
 23125                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 23126                           
 23127                           ; BSR set to: 0
 23128                           ;incstack = 0
 23129  0028C2  0100               	movlb	0	; () banked
 23130  0028C4  518B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23131  0028C6  A4D8               	btfss	status,2,c
 23132  0028C8  0012               	return	
 23133                           
 23134                           ; BSR set to: 0
 23135                           ;usb_device.c: 1112: {
 23136                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 23137  0028CA  0E01               	movlw	1
 23138  0028CC  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23139                           
 23140                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 23141  0028CE  518C               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23142  0028D0  A4D8               	btfss	status,2,c
 23143  0028D2  0012               	return	
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;usb_device.c: 1115: {
 23147                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 23148  0028D4  0E01               	movlw	1
 23149  0028D6  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;usb_device.c: 1120: if(controlTransferState == 2)
 23153  0028D8  0E02               	movlw	2
 23154  0028DA  1821               	xorwf	_controlTransferState,w,c	;volatile
 23155  0028DC  E114               	bnz	i2l6680
 23156                           
 23157                           ; BSR set to: 0
 23158                           ;usb_device.c: 1121: {
 23159                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 23160  0028DE  EE20 F001          	lfsr	2,1
 23161  0028E2  500F               	movf	_pBDTEntryIn,w,c
 23162  0028E4  26D9               	addwf	fsr2l,f,c
 23163  0028E6  5010               	movf	_pBDTEntryIn+1,w,c
 23164  0028E8  22DA               	addwfc	fsr2h,f,c
 23165  0028EA  6ADF               	clrf	indf2,c
 23166                           
 23167                           ; BSR set to: 0
 23168                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23169  0028EC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23170  0028F0  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23171  0028F4  0E48               	movlw	72
 23172  0028F6  6EDF               	movwf	indf2,c
 23173                           
 23174                           ; BSR set to: 0
 23175                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23176  0028F8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23177  0028FC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23178  002900  0E00               	movlw	0
 23179  002902  8EDB               	bsf	plusw2,7,c
 23180                           
 23181                           ;usb_device.c: 1125: }
 23182  002904  0C00               	retlw	0
 23183  002906                     i2l6680:
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 23187  002906  0421               	decf	_controlTransferState,w,c	;volatile
 23188  002908  A4D8               	btfss	status,2,c
 23189  00290A  0012               	return	
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;usb_device.c: 1127: {
 23193                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 23194  00290C  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23195                           
 23196                           ; BSR set to: 0
 23197                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 23198  00290E  EE20 F001          	lfsr	2,1
 23199  002912  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 23200  002914  26D9               	addwf	fsr2l,f,c
 23201  002916  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23202  002918  22DA               	addwfc	fsr2h,f,c
 23203  00291A  0E08               	movlw	8
 23204  00291C  6EDF               	movwf	indf2,c
 23205                           
 23206                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23207  00291E  EE20 F002          	lfsr	2,2
 23208  002922  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 23209  002924  26D9               	addwf	fsr2l,f,c
 23210  002926  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23211  002928  22DA               	addwfc	fsr2h,f,c
 23212  00292A  0E30               	movlw	48
 23213  00292C  6EDE               	movwf	postinc2,c
 23214  00292E  0E04               	movlw	4
 23215  002930  6EDD               	movwf	postdec2,c
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23219  002932  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23220  002936  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23221  00293A  6EDF               	movwf	indf2,c
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23225  00293C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23226  002940  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23227  002944  0E00               	movlw	0
 23228  002946  8EDB               	bsf	plusw2,7,c
 23229                           
 23230                           ; BSR set to: 0
 23231                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 23232  002948  0E01               	movlw	1
 23233  00294A  6F86               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23234                           
 23235                           ; BSR set to: 0
 23236                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 23237  00294C  EE20 F001          	lfsr	2,1
 23238  002950  5017               	movf	_pBDTEntryEP0OutNext,w,c
 23239  002952  26D9               	addwf	fsr2l,f,c
 23240  002954  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 23241  002956  22DA               	addwfc	fsr2h,f,c
 23242  002958  0E08               	movlw	8
 23243  00295A  6EDF               	movwf	indf2,c
 23244                           
 23245                           ; BSR set to: 0
 23246                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23247  00295C  EE20 F002          	lfsr	2,2
 23248  002960  5017               	movf	_pBDTEntryEP0OutNext,w,c
 23249  002962  26D9               	addwf	fsr2l,f,c
 23250  002964  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 23251  002966  22DA               	addwfc	fsr2h,f,c
 23252  002968  0E30               	movlw	48
 23253  00296A  6EDE               	movwf	postinc2,c
 23254  00296C  0E04               	movlw	4
 23255  00296E  6EDD               	movwf	postdec2,c
 23256                           
 23257                           ; BSR set to: 0
 23258                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23259  002970  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23260  002974  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23261  002978  0E80               	movlw	128
 23262  00297A  6EDF               	movwf	indf2,c
 23263  00297C  0C80               	retlw	128
 23264  00297E                     __end_of_USBCtrlEPAllowStatusStage:
 23265                           	opt stack 0
 23266                           tosu	equ	0xFFF
 23267                           tosh	equ	0xFFE
 23268                           tosl	equ	0xFFD
 23269                           pclatu	equ	0xFFB
 23270                           pclath	equ	0xFFA
 23271                           tblptru	equ	0xFF8
 23272                           tblptrh	equ	0xFF7
 23273                           tblptrl	equ	0xFF6
 23274                           tablat	equ	0xFF5
 23275                           prodh	equ	0xFF4
 23276                           prodl	equ	0xFF3
 23277                           intcon	equ	0xFF2
 23278                           postinc0	equ	0xFEE
 23279                           wreg	equ	0xFE8
 23280                           indf1	equ	0xFE7
 23281                           postdec1	equ	0xFE5
 23282                           fsr1h	equ	0xFE2
 23283                           fsr1l	equ	0xFE1
 23284                           indf2	equ	0xFDF
 23285                           postinc2	equ	0xFDE
 23286                           postdec2	equ	0xFDD
 23287                           plusw2	equ	0xFDB
 23288                           fsr2h	equ	0xFDA
 23289                           fsr2l	equ	0xFD9
 23290                           status	equ	0xFD8
 23291                           
 23292 ;; *************** function _USBCtrlTrfInHandler *****************
 23293 ;; Defined at:
 23294 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;		None
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;  lastDTS         1   17[COMRAM] unsigned char 
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1    wreg      void 
 23301 ;; Registers used:
 23302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 23303 ;; Tracked objects:
 23304 ;;		On entry : F/0
 23305 ;;		On exit  : F/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0
 23309 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23311 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23312 ;;Total ram usage:        1 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:    2
 23315 ;; This function calls:
 23316 ;;		_USART_mySetLineCodingHandler
 23317 ;;		_USBCtrlTrfTxService
 23318 ;; This function is called by:
 23319 ;;		_USBCtrlEPService
 23320 ;; This function uses a non-reentrant model
 23321 ;;
 23322                           
 23323                           	psect	text112
 23324  002732                     __ptext112:
 23325                           	opt stack 0
 23326  002732                     _USBCtrlTrfInHandler:
 23327                           	opt stack 15
 23328                           
 23329                           ; BSR set to: 0
 23330                           ;usb_device.c: 2225: uint8_t lastDTS;
 23331                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;incstack = 0
 23335  002732  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23336  002736  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23337  00273A  0E00               	movlw	0
 23338  00273C  BCDF               	btfsc	indf2,6,c
 23339  00273E  0E01               	movlw	1
 23340  002740  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23344  002742  0E04               	movlw	4
 23345  002744  1A0F               	xorwf	_pBDTEntryIn,f,c
 23346                           
 23347                           ; BSR set to: 0
 23348                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 23349  002746  0E08               	movlw	8
 23350  002748  198A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 23351  00274A  E10A               	bnz	i2l7764
 23352                           
 23353                           ; BSR set to: 0
 23354                           ;usb_device.c: 2236: {
 23355                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 23356  00274C  0104               	movlb	4	; () banked
 23357  00274E  5132               	movf	50,w,b	;volatile
 23358  002750  0B7F               	andlw	127
 23359  002752  6E63               	movwf	3939,c	;volatile
 23360                           
 23361                           ; BSR set to: 4
 23362                           ;usb_device.c: 2238: if(UADDR != 0u)
 23363  002754  5063               	movf	3939,w,c
 23364                           
 23365                           ; BSR set to: 4
 23366                           ;usb_device.c: 2239: {
 23367                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 23368  002756  0E10               	movlw	16
 23369  002758  B4D8               	btfsc	status,2,c
 23370                           
 23371                           ; BSR set to: 4
 23372                           ;usb_device.c: 2242: else
 23373                           ;usb_device.c: 2243: {
 23374                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 23375  00275A  0E04               	movlw	4
 23376                           
 23377                           ;usb_device.c: 2241: }
 23378  00275C  0100               	movlb	0	; () banked
 23379  00275E  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 23380  002760                     i2l7764:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;usb_device.c: 2245: }
 23384                           ;usb_device.c: 2246: }
 23385                           ;usb_device.c: 2249: if(controlTransferState == 1)
 23386  002760  0421               	decf	_controlTransferState,w,c	;volatile
 23387  002762  E138               	bnz	i2l1763
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;usb_device.c: 2250: {
 23391                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23392  002764  EE20 F002          	lfsr	2,2
 23393  002768  500F               	movf	_pBDTEntryIn,w,c
 23394  00276A  26D9               	addwf	fsr2l,f,c
 23395  00276C  5010               	movf	_pBDTEntryIn+1,w,c
 23396  00276E  22DA               	addwfc	fsr2h,f,c
 23397  002770  0E38               	movlw	56
 23398  002772  6EDE               	movwf	postinc2,c
 23399  002774  0E04               	movlw	4
 23400  002776  6EDD               	movwf	postdec2,c
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 23404  002778  EC00  F014         	call	_USBCtrlTrfTxService	;wreg free
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 23408  00277C  0E02               	movlw	2
 23409  00277E  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 23410  002780  E10D               	bnz	i2l7776
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;usb_device.c: 2259: {
 23414                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 23415  002782  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23416  002786  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23417  00278A  0E04               	movlw	4
 23418  00278C  6EDF               	movwf	indf2,c
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23422  00278E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23423  002792  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23424  002796  0E00               	movlw	0
 23425  002798  8EDB               	bsf	plusw2,7,c
 23426                           
 23427                           ;usb_device.c: 2264: }
 23428  00279A  0C00               	retlw	0
 23429  00279C                     i2l7776:
 23430                           
 23431                           ; BSR set to: 0
 23432                           ;usb_device.c: 2265: else
 23433                           ;usb_device.c: 2266: {
 23434                           ;usb_device.c: 2267: if(lastDTS == 0)
 23435  00279C  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 23436  00279E  E10D               	bnz	i2l7782
 23437                           
 23438                           ; BSR set to: 0
 23439                           ;usb_device.c: 2268: {
 23440                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23441  0027A0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23442  0027A4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23443  0027A8  0E48               	movlw	72
 23444  0027AA  6EDF               	movwf	indf2,c
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23448  0027AC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23449  0027B0  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23450  0027B4  0E00               	movlw	0
 23451  0027B6  8EDB               	bsf	plusw2,7,c
 23452                           
 23453                           ;usb_device.c: 2271: }
 23454  0027B8  0C00               	retlw	0
 23455  0027BA                     i2l7782:
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;usb_device.c: 2272: else
 23459                           ;usb_device.c: 2273: {
 23460                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 23461  0027BA  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23462  0027BE  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23463  0027C2  0E08               	movlw	8
 23464  0027C4  6EDF               	movwf	indf2,c
 23465                           
 23466                           ; BSR set to: 0
 23467                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23468  0027C6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23469  0027CA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23470  0027CE  0E00               	movlw	0
 23471  0027D0  8EDB               	bsf	plusw2,7,c
 23472  0027D2  0C00               	retlw	0
 23473  0027D4                     i2l1763:
 23474                           
 23475                           ; BSR set to: 0
 23476                           ;usb_device.c: 2279: else
 23477                           ;usb_device.c: 2280: {
 23478                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 23479  0027D4  AE04               	btfss	_outPipes+3,7,c	;volatile
 23480  0027D6  D012               	goto	i2l7792
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;usb_device.c: 2285: {
 23484                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 23485  0027D8  5007               	movf	_outPipes+6,w,c	;volatile
 23486  0027DA  1008               	iorwf	_outPipes+7,w,c	;volatile
 23487  0027DC  E00E               	bz	i2l7790
 23488                           
 23489                           ; BSR set to: 0
 23490                           ;usb_device.c: 2287: {
 23491                           ;usb_device.c: 2288: outPipes[0].pFunc();
 23492  0027DE  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23493  0027E2  D801               	call	i2u566_48
 23494  0027E4  D00A               	goto	i2l7790
 23495  0027E6                     i2u566_48:
 23496  0027E6  0005               	push	
 23497  0027E8  6EFA               	movwf	pclath,c
 23498  0027EA  50DE               	movf	postinc2,w,c
 23499  0027EC  6EFD               	movwf	tosl,c
 23500  0027EE  50DE               	movf	postinc2,w,c
 23501  0027F0  6EFE               	movwf	tosh,c
 23502  0027F2  50F8               	movf	tblptru,w,c
 23503  0027F4  6EFF               	movwf	tosu,c
 23504  0027F6  50FA               	movf	pclath,w,c
 23505  0027F8  0012               	return		;indir
 23506  0027FA                     i2l7790:
 23507                           
 23508                           ; BSR set to: 0
 23509                           ;usb_device.c: 2289: }
 23510                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 23511  0027FA  9E04               	bcf	_outPipes+3,7,c	;volatile
 23512  0027FC                     i2l7792:
 23513                           
 23514                           ; BSR set to: 0
 23515                           ;usb_device.c: 2291: }
 23516                           ;usb_device.c: 2293: controlTransferState = 0;
 23517  0027FC  6A21               	clrf	_controlTransferState,c	;volatile
 23518                           
 23519                           ; BSR set to: 0
 23520  0027FE  0012               	return		;funcret
 23521  002800                     __end_of_USBCtrlTrfInHandler:
 23522                           	opt stack 0
 23523                           tosu	equ	0xFFF
 23524                           tosh	equ	0xFFE
 23525                           tosl	equ	0xFFD
 23526                           pclatu	equ	0xFFB
 23527                           pclath	equ	0xFFA
 23528                           tblptru	equ	0xFF8
 23529                           tblptrh	equ	0xFF7
 23530                           tblptrl	equ	0xFF6
 23531                           tablat	equ	0xFF5
 23532                           prodh	equ	0xFF4
 23533                           prodl	equ	0xFF3
 23534                           intcon	equ	0xFF2
 23535                           postinc0	equ	0xFEE
 23536                           wreg	equ	0xFE8
 23537                           indf1	equ	0xFE7
 23538                           postdec1	equ	0xFE5
 23539                           fsr1h	equ	0xFE2
 23540                           fsr1l	equ	0xFE1
 23541                           indf2	equ	0xFDF
 23542                           postinc2	equ	0xFDE
 23543                           postdec2	equ	0xFDD
 23544                           plusw2	equ	0xFDB
 23545                           fsr2h	equ	0xFDA
 23546                           fsr2l	equ	0xFD9
 23547                           status	equ	0xFD8
 23548                           
 23549 ;; *************** function _USBCtrlTrfTxService *****************
 23550 ;; Defined at:
 23551 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 23552 ;; Parameters:    Size  Location     Type
 23553 ;;		None
 23554 ;; Auto vars:     Size  Location     Type
 23555 ;;  byteToSend      1    0[COMRAM] unsigned char 
 23556 ;; Return value:  Size  Location     Type
 23557 ;;                  1    wreg      void 
 23558 ;; Registers used:
 23559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23560 ;; Tracked objects:
 23561 ;;		On entry : B/4
 23562 ;;		On exit  : F/0
 23563 ;;		Unchanged: 0/0
 23564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23565 ;;      Params:         0       0       0       0       0       0       0       0       0
 23566 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23567 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23568 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23569 ;;Total ram usage:        1 bytes
 23570 ;; Hardware stack levels used:    1
 23571 ;; This function calls:
 23572 ;;		Nothing
 23573 ;; This function is called by:
 23574 ;;		_USBCtrlEPAllowDataStage
 23575 ;;		_USBCtrlTrfInHandler
 23576 ;; This function uses a non-reentrant model
 23577 ;;
 23578                           
 23579                           	psect	text113
 23580  002800                     __ptext113:
 23581                           	opt stack 0
 23582  002800                     _USBCtrlTrfTxService:
 23583                           	opt stack 14
 23584                           
 23585                           ;usb_device.c: 1439: uint8_t byteToSend;
 23586                           ;usb_device.c: 1443: byteToSend = 8;
 23587                           
 23588                           ; BSR set to: 0
 23589                           ;incstack = 0
 23590  002800  0E08               	movlw	8
 23591  002802  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 23592                           
 23593                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 23594  002804  500E               	movf	_inPipes+5,w,c	;volatile
 23595  002806  E10D               	bnz	i2l6478
 23596  002808  0E08               	movlw	8
 23597  00280A  5C0D               	subwf	_inPipes+4,w,c	;volatile
 23598  00280C  E20A               	bc	i2l6478
 23599                           
 23600                           ;usb_device.c: 1445: {
 23601                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 23602  00280E  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 23603                           
 23604                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 23605  002812  502B               	movf	_shortPacketStatus,w,c	;volatile
 23606  002814  E102               	bnz	i2l6474
 23607                           
 23608                           ;usb_device.c: 1454: {
 23609                           ;usb_device.c: 1455: shortPacketStatus = 1;
 23610  002816  0E01               	movlw	1
 23611  002818  D003               	goto	L67
 23612  00281A                     i2l6474:
 23613                           
 23614                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 23615  00281A  042B               	decf	_shortPacketStatus,w,c	;volatile
 23616  00281C  E102               	bnz	i2l6478
 23617                           
 23618                           ;usb_device.c: 1458: {
 23619                           ;usb_device.c: 1459: shortPacketStatus = 2;
 23620  00281E  0E02               	movlw	2
 23621  002820                     L67:
 23622  002820  6E2B               	movwf	_shortPacketStatus,c	;volatile
 23623  002822                     i2l6478:
 23624                           
 23625                           ;usb_device.c: 1460: }
 23626                           ;usb_device.c: 1461: }
 23627                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 23628  002822  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23629  002824  5E0D               	subwf	_inPipes+4,f,c	;volatile
 23630  002826  0E00               	movlw	0
 23631  002828  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 23632                           
 23633                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 23634  00282A  EE20 F001          	lfsr	2,1
 23635  00282E  500F               	movf	_pBDTEntryIn,w,c
 23636  002830  26D9               	addwf	fsr2l,f,c
 23637  002832  5010               	movf	_pBDTEntryIn+1,w,c
 23638  002834  22DA               	addwfc	fsr2h,f,c
 23639  002836  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 23640                           
 23641                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 23642  00283A  0E38               	movlw	56
 23643  00283C  0100               	movlb	0	; () banked
 23644  00283E  6F7C               	movwf	_pDst& (0+255),b
 23645  002840  0E04               	movlw	4
 23646  002842  6F7D               	movwf	(_pDst+1)& (0+255),b
 23647                           
 23648                           ; BSR set to: 0
 23649                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 23650  002844  B00C               	btfsc	_inPipes+3,0,c	;volatile
 23651  002846  D03A               	goto	i2l6506
 23652  002848  D01B               	goto	i2l6496
 23653  00284A                     i2l6488:
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;usb_device.c: 1478: {
 23657                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 23658  00284A  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 23659  00284E  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23660  002852  6AF8               	clrf	tblptru,c
 23661  002854  C07C  FFD9         	movff	_pDst,fsr2l
 23662  002858  C07D  FFDA         	movff	_pDst+1,fsr2h
 23663  00285C  0E07               	movlw	(high __ramtop+-1)
 23664  00285E  64F7               	cpfsgt	tblptrh,c
 23665  002860  D003               	bra	i2u420_47
 23666  002862  0008               	tblrd		*
 23667  002864  50F5               	movf	tablat,w,c
 23668  002866  D005               	bra	i2u420_40
 23669  002868                     i2u420_47:
 23670  002868  CFF6 FFE1          	movff	tblptrl,fsr1l
 23671  00286C  CFF7 FFE2          	movff	tblptrh,fsr1h
 23672  002870  50E7               	movf	indf1,w,c
 23673  002872                     i2u420_40:
 23674  002872  6EDF               	movwf	indf2,c
 23675  002874  4A09               	infsnz	_inPipes,f,c	;volatile
 23676  002876  2A0A               	incf	_inPipes+1,f,c	;volatile
 23677  002878  0100               	movlb	0	; () banked
 23678  00287A  4B7C               	infsnz	_pDst& (0+255),f,b
 23679  00287C  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;usb_device.c: 1480: byteToSend--;
 23683  00287E  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23684  002880                     i2l6496:
 23685                           
 23686                           ; BSR set to: 0
 23687  002880  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23688  002882  E1E3               	bnz	i2l6488
 23689  002884  0012               	return	
 23690  002886                     i2l6498:
 23691                           
 23692                           ; BSR set to: 0
 23693                           ;usb_device.c: 1486: {
 23694                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 23695  002886  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 23696  00288A  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23697  00288E  6AF8               	clrf	tblptru,c
 23698  002890  C07C  FFD9         	movff	_pDst,fsr2l
 23699  002894  C07D  FFDA         	movff	_pDst+1,fsr2h
 23700  002898  0E07               	movlw	(high __ramtop+-1)
 23701  00289A  64F7               	cpfsgt	tblptrh,c
 23702  00289C  D003               	bra	i2u422_47
 23703  00289E  0008               	tblrd		*
 23704  0028A0  50F5               	movf	tablat,w,c
 23705  0028A2  D005               	bra	i2u422_40
 23706  0028A4                     i2u422_47:
 23707  0028A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 23708  0028A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 23709  0028AC  50E7               	movf	indf1,w,c
 23710  0028AE                     i2u422_40:
 23711  0028AE  6EDF               	movwf	indf2,c
 23712  0028B0  4A09               	infsnz	_inPipes,f,c	;volatile
 23713  0028B2  2A0A               	incf	_inPipes+1,f,c	;volatile
 23714  0028B4  0100               	movlb	0	; () banked
 23715  0028B6  4B7C               	infsnz	_pDst& (0+255),f,b
 23716  0028B8  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;usb_device.c: 1488: byteToSend--;
 23720  0028BA  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23721  0028BC                     i2l6506:
 23722                           
 23723                           ; BSR set to: 0
 23724  0028BC  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23725  0028BE  E1E3               	bnz	i2l6498
 23726                           
 23727                           ; BSR set to: 0
 23728  0028C0  0012               	return		;funcret
 23729  0028C2                     __end_of_USBCtrlTrfTxService:
 23730                           	opt stack 0
 23731                           tosu	equ	0xFFF
 23732                           tosh	equ	0xFFE
 23733                           tosl	equ	0xFFD
 23734                           pclatu	equ	0xFFB
 23735                           pclath	equ	0xFFA
 23736                           tblptru	equ	0xFF8
 23737                           tblptrh	equ	0xFF7
 23738                           tblptrl	equ	0xFF6
 23739                           tablat	equ	0xFF5
 23740                           prodh	equ	0xFF4
 23741                           prodl	equ	0xFF3
 23742                           intcon	equ	0xFF2
 23743                           postinc0	equ	0xFEE
 23744                           wreg	equ	0xFE8
 23745                           indf1	equ	0xFE7
 23746                           postdec1	equ	0xFE5
 23747                           fsr1h	equ	0xFE2
 23748                           fsr1l	equ	0xFE1
 23749                           indf2	equ	0xFDF
 23750                           postinc2	equ	0xFDE
 23751                           postdec2	equ	0xFDD
 23752                           plusw2	equ	0xFDB
 23753                           fsr2h	equ	0xFDA
 23754                           fsr2l	equ	0xFD9
 23755                           status	equ	0xFD8
 23756                           
 23757 ;; *************** function _USART_mySetLineCodingHandler *****************
 23758 ;; Defined at:
 23759 ;;		line 236 in file "../Includes/Board/USBapp.c"
 23760 ;; Parameters:    Size  Location     Type
 23761 ;;		None
 23762 ;; Auto vars:     Size  Location     Type
 23763 ;;  dwBaud          4   13[COMRAM] unsigned long 
 23764 ;; Return value:  Size  Location     Type
 23765 ;;                  1    wreg      void 
 23766 ;; Registers used:
 23767 ;;		wreg, status,2, status,0, cstack
 23768 ;; Tracked objects:
 23769 ;;		On entry : F/0
 23770 ;;		On exit  : F/0
 23771 ;;		Unchanged: F/0
 23772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23773 ;;      Params:         0       0       0       0       0       0       0       0       0
 23774 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23776 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23777 ;;Total ram usage:        4 bytes
 23778 ;; Hardware stack levels used:    1
 23779 ;; Hardware stack levels required when called:    1
 23780 ;; This function calls:
 23781 ;;		___lldiv
 23782 ;;		i2_EUSART_Initialize
 23783 ;; This function is called by:
 23784 ;;		_USBCheckCDCRequest
 23785 ;;		_USBCtrlTrfRxService
 23786 ;;		_USBCtrlTrfInHandler
 23787 ;; This function uses a non-reentrant model
 23788 ;;
 23789                           
 23790                           	psect	text114
 23791  0038AA                     __ptext114:
 23792                           	opt stack 0
 23793  0038AA                     _USART_mySetLineCodingHandler:
 23794                           	opt stack 14
 23795                           
 23796                           ; BSR set to: 0
 23797                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 23798                           
 23799                           ; BSR set to: 0
 23800                           ;incstack = 0
 23801  0038AA  C0AA  F0BC         	movff	_cdc_notice,_line_coding
 23802  0038AE  C0AB  F0BD         	movff	_cdc_notice+1,_line_coding+1
 23803  0038B2  C0AC  F0BE         	movff	_cdc_notice+2,_line_coding+2
 23804  0038B6  C0AD  F0BF         	movff	_cdc_notice+3,_line_coding+3
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;USBapp.c: 241: uint32_t dwBaud;
 23808                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 23809  0038BA  6A2E               	clrf	___lldiv@dividend,c
 23810  0038BC  0E1B               	movlw	27
 23811  0038BE  6E2F               	movwf	___lldiv@dividend+1,c
 23812  0038C0  0EB7               	movlw	183
 23813  0038C2  6E30               	movwf	___lldiv@dividend+2,c
 23814  0038C4  6A31               	clrf	___lldiv@dividend+3,c
 23815  0038C6  C0BC  F032         	movff	_line_coding,___lldiv@divisor
 23816  0038CA  C0BD  F033         	movff	_line_coding+1,___lldiv@divisor+1
 23817  0038CE  C0BE  F034         	movff	_line_coding+2,___lldiv@divisor+2
 23818  0038D2  C0BF  F035         	movff	_line_coding+3,___lldiv@divisor+3
 23819  0038D6  EC3C  F01A         	call	___lldiv	;wreg free
 23820  0038DA  0EFF               	movlw	255
 23821  0038DC  242E               	addwf	?___lldiv,w,c
 23822  0038DE  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 23823  0038E0  0EFF               	movlw	255
 23824  0038E2  202F               	addwfc	?___lldiv+1,w,c
 23825  0038E4  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 23826  0038E6  0EFF               	movlw	255
 23827  0038E8  2030               	addwfc	?___lldiv+2,w,c
 23828  0038EA  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 23829  0038EC  0EFF               	movlw	255
 23830  0038EE  2031               	addwfc	?___lldiv+3,w,c
 23831  0038F0  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 23832                           
 23833                           ; BSR set to: 0
 23834                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 23835  0038F2  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 23836                           
 23837                           ; BSR set to: 0
 23838                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 23839  0038F6  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 23840                           
 23841                           ; BSR set to: 0
 23842                           ;USBapp.c: 246: EUSART_Initialize();
 23843  0038FA  EF1A  F01F         	goto	i2_EUSART_Initialize	;wreg free
 23844  0038FE                     __end_of_USART_mySetLineCodingHandler:
 23845                           	opt stack 0
 23846                           tosu	equ	0xFFF
 23847                           tosh	equ	0xFFE
 23848                           tosl	equ	0xFFD
 23849                           pclatu	equ	0xFFB
 23850                           pclath	equ	0xFFA
 23851                           tblptru	equ	0xFF8
 23852                           tblptrh	equ	0xFF7
 23853                           tblptrl	equ	0xFF6
 23854                           tablat	equ	0xFF5
 23855                           prodh	equ	0xFF4
 23856                           prodl	equ	0xFF3
 23857                           intcon	equ	0xFF2
 23858                           postinc0	equ	0xFEE
 23859                           wreg	equ	0xFE8
 23860                           indf1	equ	0xFE7
 23861                           postdec1	equ	0xFE5
 23862                           fsr1h	equ	0xFE2
 23863                           fsr1l	equ	0xFE1
 23864                           indf2	equ	0xFDF
 23865                           postinc2	equ	0xFDE
 23866                           postdec2	equ	0xFDD
 23867                           plusw2	equ	0xFDB
 23868                           fsr2h	equ	0xFDA
 23869                           fsr2l	equ	0xFD9
 23870                           status	equ	0xFD8
 23871                           
 23872 ;; *************** function i2_EUSART_Initialize *****************
 23873 ;; Defined at:
 23874 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23875 ;; Parameters:    Size  Location     Type
 23876 ;;		None
 23877 ;; Auto vars:     Size  Location     Type
 23878 ;;		None
 23879 ;; Return value:  Size  Location     Type
 23880 ;;                  1    wreg      void 
 23881 ;; Registers used:
 23882 ;;		wreg, status,2
 23883 ;; Tracked objects:
 23884 ;;		On entry : F/0
 23885 ;;		On exit  : F/0
 23886 ;;		Unchanged: F/0
 23887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23888 ;;      Params:         0       0       0       0       0       0       0       0       0
 23889 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23891 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23892 ;;Total ram usage:        0 bytes
 23893 ;; Hardware stack levels used:    1
 23894 ;; This function calls:
 23895 ;;		Nothing
 23896 ;; This function is called by:
 23897 ;;		_USBapp_CdcEmulatorInitialize
 23898 ;;		_USART_mySetLineCodingHandler
 23899 ;; This function uses a non-reentrant model
 23900 ;;
 23901                           
 23902                           	psect	text115
 23903  003E34                     __ptext115:
 23904                           	opt stack 0
 23905  003E34                     i2_EUSART_Initialize:
 23906                           	opt stack 16
 23907                           
 23908                           ; BSR set to: 0
 23909                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23910                           
 23911                           ; BSR set to: 0
 23912                           ;incstack = 0
 23913  003E34  9A9D               	bcf	3997,5,c	;volatile
 23914                           
 23915                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23916  003E36  989D               	bcf	3997,4,c	;volatile
 23917                           
 23918                           ; BSR set to: 0
 23919                           ;eusart.c: 85: BAUDCON = 0x48;
 23920  003E38  0E48               	movlw	72
 23921  003E3A  6EB8               	movwf	4024,c	;volatile
 23922                           
 23923                           ;eusart.c: 88: RCSTA = 0x90;
 23924  003E3C  0E90               	movlw	144
 23925  003E3E  6EAB               	movwf	4011,c	;volatile
 23926                           
 23927                           ;eusart.c: 91: TXSTA = 0x26;
 23928  003E40  0E26               	movlw	38
 23929  003E42  6EAC               	movwf	4012,c	;volatile
 23930                           
 23931                           ;eusart.c: 95: SPBRG = 0x71;
 23932  003E44  0E71               	movlw	113
 23933  003E46  6EAF               	movwf	4015,c	;volatile
 23934                           
 23935                           ;eusart.c: 100: SPBRGH = 0x02;
 23936  003E48  0E02               	movlw	2
 23937  003E4A  6EB0               	movwf	4016,c	;volatile
 23938                           
 23939                           ; BSR set to: 0
 23940                           ;eusart.c: 103: eusartTxHead = 0;
 23941  003E4C  6A27               	clrf	_eusartTxHead,c
 23942                           
 23943                           ; BSR set to: 0
 23944                           ;eusart.c: 104: eusartTxTail = 0;
 23945  003E4E  6A28               	clrf	_eusartTxTail,c
 23946                           
 23947                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23948  003E50  0E40               	movlw	64
 23949  003E52  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 23950                           
 23951                           ; BSR set to: 0
 23952                           ;eusart.c: 107: eusartRxHead = 0;
 23953  003E54  6A24               	clrf	_eusartRxHead,c
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;eusart.c: 108: eusartRxTail = 0;
 23957  003E56  6A25               	clrf	_eusartRxTail,c
 23958                           
 23959                           ; BSR set to: 0
 23960                           ;eusart.c: 109: eusartRxCount = 0;
 23961  003E58  6A23               	clrf	_eusartRxCount,c	;volatile
 23962                           
 23963                           ; BSR set to: 0
 23964                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23965  003E5A  8A9D               	bsf	3997,5,c	;volatile
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23969  003E5C  88AB               	bsf	4011,4,c	;volatile
 23970                           
 23971                           ; BSR set to: 0
 23972  003E5E  0012               	return		;funcret
 23973  003E60                     __end_ofi2_EUSART_Initialize:
 23974                           	opt stack 0
 23975                           tosu	equ	0xFFF
 23976                           tosh	equ	0xFFE
 23977                           tosl	equ	0xFFD
 23978                           pclatu	equ	0xFFB
 23979                           pclath	equ	0xFFA
 23980                           tblptru	equ	0xFF8
 23981                           tblptrh	equ	0xFF7
 23982                           tblptrl	equ	0xFF6
 23983                           tablat	equ	0xFF5
 23984                           prodh	equ	0xFF4
 23985                           prodl	equ	0xFF3
 23986                           intcon	equ	0xFF2
 23987                           postinc0	equ	0xFEE
 23988                           wreg	equ	0xFE8
 23989                           indf1	equ	0xFE7
 23990                           postdec1	equ	0xFE5
 23991                           fsr1h	equ	0xFE2
 23992                           fsr1l	equ	0xFE1
 23993                           indf2	equ	0xFDF
 23994                           postinc2	equ	0xFDE
 23995                           postdec2	equ	0xFDD
 23996                           plusw2	equ	0xFDB
 23997                           fsr2h	equ	0xFDA
 23998                           fsr2l	equ	0xFD9
 23999                           status	equ	0xFD8
 24000                           
 24001 ;; *************** function ___lldiv *****************
 24002 ;; Defined at:
 24003 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;  dividend        4    0[COMRAM] unsigned long 
 24006 ;;  divisor         4    4[COMRAM] unsigned long 
 24007 ;; Auto vars:     Size  Location     Type
 24008 ;;  quotient        4    8[COMRAM] unsigned long 
 24009 ;;  counter         1   12[COMRAM] unsigned char 
 24010 ;; Return value:  Size  Location     Type
 24011 ;;                  4    0[COMRAM] unsigned long 
 24012 ;; Registers used:
 24013 ;;		wreg, status,2, status,0
 24014 ;; Tracked objects:
 24015 ;;		On entry : F/0
 24016 ;;		On exit  : F/0
 24017 ;;		Unchanged: F/0
 24018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24019 ;;      Params:         8       0       0       0       0       0       0       0       0
 24020 ;;      Locals:         5       0       0       0       0       0       0       0       0
 24021 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24022 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24023 ;;Total ram usage:       13 bytes
 24024 ;; Hardware stack levels used:    1
 24025 ;; This function calls:
 24026 ;;		Nothing
 24027 ;; This function is called by:
 24028 ;;		_USART_mySetLineCodingHandler
 24029 ;; This function uses a non-reentrant model
 24030 ;;
 24031                           
 24032                           	psect	text116
 24033  003478                     __ptext116:
 24034                           	opt stack 0
 24035  003478                     ___lldiv:
 24036                           	opt stack 14
 24037                           
 24038                           ; BSR set to: 0
 24039                           
 24040                           ; BSR set to: 0
 24041                           ;incstack = 0
 24042  003478  6A36               	clrf	___lldiv@quotient,c
 24043  00347A  6A37               	clrf	___lldiv@quotient+1,c
 24044  00347C  6A38               	clrf	___lldiv@quotient+2,c
 24045  00347E  6A39               	clrf	___lldiv@quotient+3,c
 24046                           
 24047                           ; BSR set to: 0
 24048  003480  5032               	movf	___lldiv@divisor,w,c
 24049  003482  1033               	iorwf	___lldiv@divisor+1,w,c
 24050  003484  1034               	iorwf	___lldiv@divisor+2,w,c
 24051  003486  1035               	iorwf	___lldiv@divisor+3,w,c
 24052  003488  E029               	bz	i2l2299
 24053                           
 24054                           ; BSR set to: 0
 24055  00348A  0E01               	movlw	1
 24056  00348C  6E3A               	movwf	___lldiv@counter,c
 24057  00348E  D006               	goto	i2l6516
 24058  003490                     i2l6514:
 24059                           
 24060                           ; BSR set to: 0
 24061  003490  90D8               	bcf	status,0,c
 24062  003492  3632               	rlcf	___lldiv@divisor,f,c
 24063  003494  3633               	rlcf	___lldiv@divisor+1,f,c
 24064  003496  3634               	rlcf	___lldiv@divisor+2,f,c
 24065  003498  3635               	rlcf	___lldiv@divisor+3,f,c
 24066  00349A  2A3A               	incf	___lldiv@counter,f,c
 24067  00349C                     i2l6516:
 24068                           
 24069                           ; BSR set to: 0
 24070  00349C  AE35               	btfss	___lldiv@divisor+3,7,c
 24071  00349E  D7F8               	goto	i2l6514
 24072  0034A0                     i2l6518:
 24073                           
 24074                           ; BSR set to: 0
 24075  0034A0  90D8               	bcf	status,0,c
 24076  0034A2  3636               	rlcf	___lldiv@quotient,f,c
 24077  0034A4  3637               	rlcf	___lldiv@quotient+1,f,c
 24078  0034A6  3638               	rlcf	___lldiv@quotient+2,f,c
 24079  0034A8  3639               	rlcf	___lldiv@quotient+3,f,c
 24080                           
 24081                           ; BSR set to: 0
 24082  0034AA  5032               	movf	___lldiv@divisor,w,c
 24083  0034AC  5C2E               	subwf	___lldiv@dividend,w,c
 24084  0034AE  5033               	movf	___lldiv@divisor+1,w,c
 24085  0034B0  582F               	subwfb	___lldiv@dividend+1,w,c
 24086  0034B2  5034               	movf	___lldiv@divisor+2,w,c
 24087  0034B4  5830               	subwfb	___lldiv@dividend+2,w,c
 24088  0034B6  5035               	movf	___lldiv@divisor+3,w,c
 24089  0034B8  5831               	subwfb	___lldiv@dividend+3,w,c
 24090  0034BA  E309               	bnc	i2l6526
 24091                           
 24092                           ; BSR set to: 0
 24093  0034BC  5032               	movf	___lldiv@divisor,w,c
 24094  0034BE  5E2E               	subwf	___lldiv@dividend,f,c
 24095  0034C0  5033               	movf	___lldiv@divisor+1,w,c
 24096  0034C2  5A2F               	subwfb	___lldiv@dividend+1,f,c
 24097  0034C4  5034               	movf	___lldiv@divisor+2,w,c
 24098  0034C6  5A30               	subwfb	___lldiv@dividend+2,f,c
 24099  0034C8  5035               	movf	___lldiv@divisor+3,w,c
 24100  0034CA  5A31               	subwfb	___lldiv@dividend+3,f,c
 24101                           
 24102                           ; BSR set to: 0
 24103  0034CC  8036               	bsf	___lldiv@quotient,0,c
 24104  0034CE                     i2l6526:
 24105                           
 24106                           ; BSR set to: 0
 24107  0034CE  90D8               	bcf	status,0,c
 24108  0034D0  3235               	rrcf	___lldiv@divisor+3,f,c
 24109  0034D2  3234               	rrcf	___lldiv@divisor+2,f,c
 24110  0034D4  3233               	rrcf	___lldiv@divisor+1,f,c
 24111  0034D6  3232               	rrcf	___lldiv@divisor,f,c
 24112                           
 24113                           ; BSR set to: 0
 24114  0034D8  2E3A               	decfsz	___lldiv@counter,f,c
 24115  0034DA  D7E2               	goto	i2l6518
 24116  0034DC                     i2l2299:
 24117                           
 24118                           ; BSR set to: 0
 24119  0034DC  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 24120  0034E0  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 24121  0034E4  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 24122  0034E8  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 24123                           
 24124                           ; BSR set to: 0
 24125  0034EC  0012               	return		;funcret
 24126  0034EE                     __end_of___lldiv:
 24127                           	opt stack 0
 24128                           tosu	equ	0xFFF
 24129                           tosh	equ	0xFFE
 24130                           tosl	equ	0xFFD
 24131                           pclatu	equ	0xFFB
 24132                           pclath	equ	0xFFA
 24133                           tblptru	equ	0xFF8
 24134                           tblptrh	equ	0xFF7
 24135                           tblptrl	equ	0xFF6
 24136                           tablat	equ	0xFF5
 24137                           prodh	equ	0xFF4
 24138                           prodl	equ	0xFF3
 24139                           intcon	equ	0xFF2
 24140                           postinc0	equ	0xFEE
 24141                           wreg	equ	0xFE8
 24142                           indf1	equ	0xFE7
 24143                           postdec1	equ	0xFE5
 24144                           fsr1h	equ	0xFE2
 24145                           fsr1l	equ	0xFE1
 24146                           indf2	equ	0xFDF
 24147                           postinc2	equ	0xFDE
 24148                           postdec2	equ	0xFDD
 24149                           plusw2	equ	0xFDB
 24150                           fsr2h	equ	0xFDA
 24151                           fsr2l	equ	0xFD9
 24152                           status	equ	0xFD8
 24153                           
 24154 ;; *************** function _TMRapp_Tick *****************
 24155 ;; Defined at:
 24156 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 24157 ;; Parameters:    Size  Location     Type
 24158 ;;		None
 24159 ;; Auto vars:     Size  Location     Type
 24160 ;;		None
 24161 ;; Return value:  Size  Location     Type
 24162 ;;                  1    wreg      void 
 24163 ;; Registers used:
 24164 ;;		None
 24165 ;; Tracked objects:
 24166 ;;		On entry : 0/0
 24167 ;;		On exit  : F/0
 24168 ;;		Unchanged: 0/0
 24169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24170 ;;      Params:         0       0       0       0       0       0       0       0       0
 24171 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24173 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24174 ;;Total ram usage:        0 bytes
 24175 ;; Hardware stack levels used:    1
 24176 ;; This function calls:
 24177 ;;		Nothing
 24178 ;; This function is called by:
 24179 ;;		_INTERRUPT_InterruptManager
 24180 ;; This function uses a non-reentrant model
 24181 ;;
 24182                           
 24183                           	psect	text117
 24184  004234                     __ptext117:
 24185                           	opt stack 0
 24186  004234                     _TMRapp_Tick:
 24187                           	opt stack 19
 24188                           
 24189                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 24190                           
 24191                           ; BSR set to: 0
 24192                           ;incstack = 0
 24193  004234  0100               	movlb	0	; () banked
 24194  004236  818F               	bsf	_appTimer& (0+255),0,b
 24195                           
 24196                           ; BSR set to: 0
 24197  004238  0012               	return		;funcret
 24198  00423A                     __end_of_TMRapp_Tick:
 24199                           	opt stack 0
 24200                           tosu	equ	0xFFF
 24201                           tosh	equ	0xFFE
 24202                           tosl	equ	0xFFD
 24203                           pclatu	equ	0xFFB
 24204                           pclath	equ	0xFFA
 24205                           tblptru	equ	0xFF8
 24206                           tblptrh	equ	0xFF7
 24207                           tblptrl	equ	0xFF6
 24208                           tablat	equ	0xFF5
 24209                           prodh	equ	0xFF4
 24210                           prodl	equ	0xFF3
 24211                           intcon	equ	0xFF2
 24212                           postinc0	equ	0xFEE
 24213                           wreg	equ	0xFE8
 24214                           indf1	equ	0xFE7
 24215                           postdec1	equ	0xFE5
 24216                           fsr1h	equ	0xFE2
 24217                           fsr1l	equ	0xFE1
 24218                           indf2	equ	0xFDF
 24219                           postinc2	equ	0xFDE
 24220                           postdec2	equ	0xFDD
 24221                           plusw2	equ	0xFDB
 24222                           fsr2h	equ	0xFDA
 24223                           fsr2l	equ	0xFD9
 24224                           status	equ	0xFD8
 24225                           
 24226 ;; *************** function _TMR1_ISR *****************
 24227 ;; Defined at:
 24228 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 24229 ;; Parameters:    Size  Location     Type
 24230 ;;		None
 24231 ;; Auto vars:     Size  Location     Type
 24232 ;;		None
 24233 ;; Return value:  Size  Location     Type
 24234 ;;                  1    wreg      void 
 24235 ;; Registers used:
 24236 ;;		None
 24237 ;; Tracked objects:
 24238 ;;		On entry : 0/0
 24239 ;;		On exit  : 0/0
 24240 ;;		Unchanged: 0/0
 24241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24242 ;;      Params:         0       0       0       0       0       0       0       0       0
 24243 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24245 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24246 ;;Total ram usage:        0 bytes
 24247 ;; Hardware stack levels used:    1
 24248 ;; This function calls:
 24249 ;;		Nothing
 24250 ;; This function is called by:
 24251 ;;		_INTERRUPT_InterruptManager
 24252 ;; This function uses a non-reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text118
 24256  0041FA                     __ptext118:
 24257                           	opt stack 0
 24258  0041FA                     _TMR1_ISR:
 24259                           	opt stack 19
 24260                           
 24261                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 24262                           
 24263                           ; BSR set to: 0
 24264                           ;incstack = 0
 24265  0041FA  909E               	bcf	3998,0,c	;volatile
 24266                           
 24267                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 24268  0041FC  C081  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 24269                           
 24270                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 24271  004200  C080  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 24272  004204  0012               	return		;funcret
 24273  004206                     __end_of_TMR1_ISR:
 24274                           	opt stack 0
 24275                           tosu	equ	0xFFF
 24276                           tosh	equ	0xFFE
 24277                           tosl	equ	0xFFD
 24278                           pclatu	equ	0xFFB
 24279                           pclath	equ	0xFFA
 24280                           tblptru	equ	0xFF8
 24281                           tblptrh	equ	0xFF7
 24282                           tblptrl	equ	0xFF6
 24283                           tablat	equ	0xFF5
 24284                           prodh	equ	0xFF4
 24285                           prodl	equ	0xFF3
 24286                           intcon	equ	0xFF2
 24287                           postinc0	equ	0xFEE
 24288                           wreg	equ	0xFE8
 24289                           indf1	equ	0xFE7
 24290                           postdec1	equ	0xFE5
 24291                           fsr1h	equ	0xFE2
 24292                           fsr1l	equ	0xFE1
 24293                           indf2	equ	0xFDF
 24294                           postinc2	equ	0xFDE
 24295                           postdec2	equ	0xFDD
 24296                           plusw2	equ	0xFDB
 24297                           fsr2h	equ	0xFDA
 24298                           fsr2l	equ	0xFD9
 24299                           status	equ	0xFD8
 24300                           
 24301 ;; *************** function _EUSART_Transmit_ISR *****************
 24302 ;; Defined at:
 24303 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 24304 ;; Parameters:    Size  Location     Type
 24305 ;;		None
 24306 ;; Auto vars:     Size  Location     Type
 24307 ;;		None
 24308 ;; Return value:  Size  Location     Type
 24309 ;;                  1    wreg      void 
 24310 ;; Registers used:
 24311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24312 ;; Tracked objects:
 24313 ;;		On entry : 0/0
 24314 ;;		On exit  : 0/0
 24315 ;;		Unchanged: 0/0
 24316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24317 ;;      Params:         0       0       0       0       0       0       0       0       0
 24318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24320 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24321 ;;Total ram usage:        0 bytes
 24322 ;; Hardware stack levels used:    1
 24323 ;; This function calls:
 24324 ;;		Nothing
 24325 ;; This function is called by:
 24326 ;;		_INTERRUPT_InterruptManager
 24327 ;; This function uses a non-reentrant model
 24328 ;;
 24329                           
 24330                           	psect	text119
 24331  003F56                     __ptext119:
 24332                           	opt stack 0
 24333  003F56                     _EUSART_Transmit_ISR:
 24334                           	opt stack 19
 24335                           
 24336                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 24337                           
 24338                           ;incstack = 0
 24339  003F56  0E40               	movlw	64
 24340  003F58  6026               	cpfslt	_eusartTxBufferRemaining,c
 24341  003F5A  D00F               	goto	i2l1064
 24342                           
 24343                           ;eusart.c: 167: {
 24344                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 24345  003F5C  0E00               	movlw	low _eusartTxBuffer
 24346  003F5E  2428               	addwf	_eusartTxTail,w,c
 24347  003F60  6ED9               	movwf	fsr2l,c
 24348  003F62  6ADA               	clrf	fsr2h,c
 24349  003F64  0E02               	movlw	high _eusartTxBuffer
 24350  003F66  22DA               	addwfc	fsr2h,f,c
 24351  003F68  50DF               	movf	indf2,w,c
 24352  003F6A  6EAD               	movwf	4013,c	;volatile
 24353  003F6C  2A28               	incf	_eusartTxTail,f,c
 24354                           
 24355                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24356  003F6E  0E3F               	movlw	63
 24357  003F70  6428               	cpfsgt	_eusartTxTail,c
 24358  003F72  D001               	goto	i2l9538
 24359                           
 24360                           ;eusart.c: 170: {
 24361                           ;eusart.c: 171: eusartTxTail = 0;
 24362  003F74  6A28               	clrf	_eusartTxTail,c
 24363  003F76                     i2l9538:
 24364                           
 24365                           ;eusart.c: 172: }
 24366                           ;eusart.c: 173: eusartTxBufferRemaining++;
 24367  003F76  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 24368                           
 24369                           ;eusart.c: 174: }
 24370  003F78  0012               	return	
 24371  003F7A                     i2l1064:
 24372                           
 24373                           ;eusart.c: 175: else
 24374                           ;eusart.c: 176: {
 24375                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 24376  003F7A  989D               	bcf	3997,4,c	;volatile
 24377  003F7C  0012               	return		;funcret
 24378  003F7E                     __end_of_EUSART_Transmit_ISR:
 24379                           	opt stack 0
 24380                           tosu	equ	0xFFF
 24381                           tosh	equ	0xFFE
 24382                           tosl	equ	0xFFD
 24383                           pclatu	equ	0xFFB
 24384                           pclath	equ	0xFFA
 24385                           tblptru	equ	0xFF8
 24386                           tblptrh	equ	0xFF7
 24387                           tblptrl	equ	0xFF6
 24388                           tablat	equ	0xFF5
 24389                           prodh	equ	0xFF4
 24390                           prodl	equ	0xFF3
 24391                           intcon	equ	0xFF2
 24392                           postinc0	equ	0xFEE
 24393                           wreg	equ	0xFE8
 24394                           indf1	equ	0xFE7
 24395                           postdec1	equ	0xFE5
 24396                           fsr1h	equ	0xFE2
 24397                           fsr1l	equ	0xFE1
 24398                           indf2	equ	0xFDF
 24399                           postinc2	equ	0xFDE
 24400                           postdec2	equ	0xFDD
 24401                           plusw2	equ	0xFDB
 24402                           fsr2h	equ	0xFDA
 24403                           fsr2l	equ	0xFD9
 24404                           status	equ	0xFD8
 24405                           
 24406 ;; *************** function _EUSART_Receive_ISR *****************
 24407 ;; Defined at:
 24408 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 24409 ;; Parameters:    Size  Location     Type
 24410 ;;		None
 24411 ;; Auto vars:     Size  Location     Type
 24412 ;;		None
 24413 ;; Return value:  Size  Location     Type
 24414 ;;                  1    wreg      void 
 24415 ;; Registers used:
 24416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24417 ;; Tracked objects:
 24418 ;;		On entry : 0/0
 24419 ;;		On exit  : 0/0
 24420 ;;		Unchanged: 0/0
 24421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24422 ;;      Params:         0       0       0       0       0       0       0       0       0
 24423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24426 ;;Total ram usage:        0 bytes
 24427 ;; Hardware stack levels used:    1
 24428 ;; This function calls:
 24429 ;;		Nothing
 24430 ;; This function is called by:
 24431 ;;		_INTERRUPT_InterruptManager
 24432 ;; This function uses a non-reentrant model
 24433 ;;
 24434                           
 24435                           	psect	text120
 24436  003F7E                     __ptext120:
 24437                           	opt stack 0
 24438  003F7E                     _EUSART_Receive_ISR:
 24439                           	opt stack 19
 24440                           
 24441                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 24442                           
 24443                           ;incstack = 0
 24444  003F7E  A2AB               	btfss	4011,1,c	;volatile
 24445  003F80  D003               	goto	i2l9544
 24446                           
 24447                           ;eusart.c: 184: {
 24448                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 24449  003F82  98AB               	bcf	4011,4,c	;volatile
 24450                           
 24451                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 24452  003F84  88AB               	bsf	4011,4,c	;volatile
 24453                           
 24454                           ;eusart.c: 189: }
 24455  003F86  0012               	return	
 24456  003F88                     i2l9544:
 24457                           
 24458                           ;eusart.c: 190: else
 24459                           ;eusart.c: 191: {
 24460                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 24461  003F88  0E00               	movlw	low _eusartRxBuffer
 24462  003F8A  2424               	addwf	_eusartRxHead,w,c
 24463  003F8C  6ED9               	movwf	fsr2l,c
 24464  003F8E  6ADA               	clrf	fsr2h,c
 24465  003F90  0E01               	movlw	high _eusartRxBuffer
 24466  003F92  22DA               	addwfc	fsr2h,f,c
 24467  003F94  CFAE FFDF          	movff	4014,indf2	;volatile
 24468  003F98  2A24               	incf	_eusartRxHead,f,c
 24469                           
 24470                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 24471  003F9A  0E3F               	movlw	63
 24472  003F9C  6424               	cpfsgt	_eusartRxHead,c
 24473  003F9E  D001               	goto	i2l9552
 24474                           
 24475                           ;eusart.c: 195: {
 24476                           ;eusart.c: 196: eusartRxHead = 0;
 24477  003FA0  6A24               	clrf	_eusartRxHead,c
 24478  003FA2                     i2l9552:
 24479                           
 24480                           ;eusart.c: 197: }
 24481                           ;eusart.c: 198: eusartRxCount++;
 24482  003FA2  2A23               	incf	_eusartRxCount,f,c	;volatile
 24483  003FA4  0012               	return		;funcret
 24484  003FA6                     __end_of_EUSART_Receive_ISR:
 24485                           	opt stack 0
 24486                           tosu	equ	0xFFF
 24487                           tosh	equ	0xFFE
 24488                           tosl	equ	0xFFD
 24489                           pclatu	equ	0xFFB
 24490                           pclath	equ	0xFFA
 24491                           tblptru	equ	0xFF8
 24492                           tblptrh	equ	0xFF7
 24493                           tblptrl	equ	0xFF6
 24494                           tablat	equ	0xFF5
 24495                           prodh	equ	0xFF4
 24496                           prodl	equ	0xFF3
 24497                           intcon	equ	0xFF2
 24498                           postinc0	equ	0xFEE
 24499                           wreg	equ	0xFE8
 24500                           indf1	equ	0xFE7
 24501                           postdec1	equ	0xFE5
 24502                           fsr1h	equ	0xFE2
 24503                           fsr1l	equ	0xFE1
 24504                           indf2	equ	0xFDF
 24505                           postinc2	equ	0xFDE
 24506                           postdec2	equ	0xFDD
 24507                           plusw2	equ	0xFDB
 24508                           fsr2h	equ	0xFDA
 24509                           fsr2l	equ	0xFD9
 24510                           status	equ	0xFD8
 24511                           
 24512 ;; *************** function _CMP1_ISR *****************
 24513 ;; Defined at:
 24514 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 24515 ;; Parameters:    Size  Location     Type
 24516 ;;		None
 24517 ;; Auto vars:     Size  Location     Type
 24518 ;;		None
 24519 ;; Return value:  Size  Location     Type
 24520 ;;                  1    wreg      void 
 24521 ;; Registers used:
 24522 ;;		None
 24523 ;; Tracked objects:
 24524 ;;		On entry : 0/0
 24525 ;;		On exit  : 0/0
 24526 ;;		Unchanged: 0/0
 24527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24528 ;;      Params:         0       0       0       0       0       0       0       0       0
 24529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24532 ;;Total ram usage:        0 bytes
 24533 ;; Hardware stack levels used:    1
 24534 ;; This function calls:
 24535 ;;		Nothing
 24536 ;; This function is called by:
 24537 ;;		_INTERRUPT_InterruptManager
 24538 ;; This function uses a non-reentrant model
 24539 ;;
 24540                           
 24541                           	psect	text121
 24542  004250                     __ptext121:
 24543                           	opt stack 0
 24544  004250                     _CMP1_ISR:
 24545                           	opt stack 19
 24546                           
 24547                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 24548                           
 24549                           ;incstack = 0
 24550  004250  9CA1               	bcf	4001,6,c	;volatile
 24551  004252  0012               	return		;funcret
 24552  004254                     __end_of_CMP1_ISR:
 24553                           	opt stack 0
 24554                           tosu	equ	0xFFF
 24555                           tosh	equ	0xFFE
 24556                           tosl	equ	0xFFD
 24557                           pclatu	equ	0xFFB
 24558                           pclath	equ	0xFFA
 24559                           tblptru	equ	0xFF8
 24560                           tblptrh	equ	0xFF7
 24561                           tblptrl	equ	0xFF6
 24562                           tablat	equ	0xFF5
 24563                           prodh	equ	0xFF4
 24564                           prodl	equ	0xFF3
 24565                           intcon	equ	0xFF2
 24566                           postinc0	equ	0xFEE
 24567                           wreg	equ	0xFE8
 24568                           indf1	equ	0xFE7
 24569                           postdec1	equ	0xFE5
 24570                           fsr1h	equ	0xFE2
 24571                           fsr1l	equ	0xFE1
 24572                           indf2	equ	0xFDF
 24573                           postinc2	equ	0xFDE
 24574                           postdec2	equ	0xFDD
 24575                           plusw2	equ	0xFDB
 24576                           fsr2h	equ	0xFDA
 24577                           fsr2l	equ	0xFD9
 24578                           status	equ	0xFD8
 24579                           tosu	equ	0xFFF
 24580                           tosh	equ	0xFFE
 24581                           tosl	equ	0xFFD
 24582                           pclatu	equ	0xFFB
 24583                           pclath	equ	0xFFA
 24584                           tblptru	equ	0xFF8
 24585                           tblptrh	equ	0xFF7
 24586                           tblptrl	equ	0xFF6
 24587                           tablat	equ	0xFF5
 24588                           prodh	equ	0xFF4
 24589                           prodl	equ	0xFF3
 24590                           intcon	equ	0xFF2
 24591                           postinc0	equ	0xFEE
 24592                           wreg	equ	0xFE8
 24593                           indf1	equ	0xFE7
 24594                           postdec1	equ	0xFE5
 24595                           fsr1h	equ	0xFE2
 24596                           fsr1l	equ	0xFE1
 24597                           indf2	equ	0xFDF
 24598                           postinc2	equ	0xFDE
 24599                           postdec2	equ	0xFDD
 24600                           plusw2	equ	0xFDB
 24601                           fsr2h	equ	0xFDA
 24602                           fsr2l	equ	0xFD9
 24603                           status	equ	0xFD8
 24604                           
 24605                           	psect	text122
 24606  000000                     __ptext122:
 24607                           	opt stack 0
 24608                           tosu	equ	0xFFF
 24609                           tosh	equ	0xFFE
 24610                           tosl	equ	0xFFD
 24611                           pclatu	equ	0xFFB
 24612                           pclath	equ	0xFFA
 24613                           tblptru	equ	0xFF8
 24614                           tblptrh	equ	0xFF7
 24615                           tblptrl	equ	0xFF6
 24616                           tablat	equ	0xFF5
 24617                           prodh	equ	0xFF4
 24618                           prodl	equ	0xFF3
 24619                           intcon	equ	0xFF2
 24620                           postinc0	equ	0xFEE
 24621                           wreg	equ	0xFE8
 24622                           indf1	equ	0xFE7
 24623                           postdec1	equ	0xFE5
 24624                           fsr1h	equ	0xFE2
 24625                           fsr1l	equ	0xFE1
 24626                           indf2	equ	0xFDF
 24627                           postinc2	equ	0xFDE
 24628                           postdec2	equ	0xFDD
 24629                           plusw2	equ	0xFDB
 24630                           fsr2h	equ	0xFDA
 24631                           fsr2l	equ	0xFD9
 24632                           status	equ	0xFD8
 24633                           
 24634                           	psect	rparam
 24635  0000                     tosu	equ	0xFFF
 24636                           tosh	equ	0xFFE
 24637                           tosl	equ	0xFFD
 24638                           pclatu	equ	0xFFB
 24639                           pclath	equ	0xFFA
 24640                           tblptru	equ	0xFF8
 24641                           tblptrh	equ	0xFF7
 24642                           tblptrl	equ	0xFF6
 24643                           tablat	equ	0xFF5
 24644                           prodh	equ	0xFF4
 24645                           prodl	equ	0xFF3
 24646                           intcon	equ	0xFF2
 24647                           postinc0	equ	0xFEE
 24648                           wreg	equ	0xFE8
 24649                           indf1	equ	0xFE7
 24650                           postdec1	equ	0xFE5
 24651                           fsr1h	equ	0xFE2
 24652                           fsr1l	equ	0xFE1
 24653                           indf2	equ	0xFDF
 24654                           postinc2	equ	0xFDE
 24655                           postdec2	equ	0xFDD
 24656                           plusw2	equ	0xFDB
 24657                           fsr2h	equ	0xFDA
 24658                           fsr2l	equ	0xFD9
 24659                           status	equ	0xFD8
 24660                           
 24661                           	psect	temp
 24662  00005B                     btemp:
 24663                           	opt stack 0
 24664  00005B                     	ds	1
 24665  0000                     int$flags	set	btemp
 24666                           tosu	equ	0xFFF
 24667                           tosh	equ	0xFFE
 24668                           tosl	equ	0xFFD
 24669                           pclatu	equ	0xFFB
 24670                           pclath	equ	0xFFA
 24671                           tblptru	equ	0xFF8
 24672                           tblptrh	equ	0xFF7
 24673                           tblptrl	equ	0xFF6
 24674                           tablat	equ	0xFF5
 24675                           prodh	equ	0xFF4
 24676                           prodl	equ	0xFF3
 24677                           intcon	equ	0xFF2
 24678                           postinc0	equ	0xFEE
 24679                           wreg	equ	0xFE8
 24680                           indf1	equ	0xFE7
 24681                           postdec1	equ	0xFE5
 24682                           fsr1h	equ	0xFE2
 24683                           fsr1l	equ	0xFE1
 24684                           indf2	equ	0xFDF
 24685                           postinc2	equ	0xFDE
 24686                           postdec2	equ	0xFDD
 24687                           plusw2	equ	0xFDB
 24688                           fsr2h	equ	0xFDA
 24689                           fsr2l	equ	0xFD9
 24690                           status	equ	0xFD8


Data Sizes:
    Strings     1525
    Constant    969
    Data        5
    BSS         429
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     45     154
    BANK1           256      9     225
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_219(CODE[7]), STR_217(CODE[7]), STR_215(CODE[7]), STR_212(CODE[7]), 
		 -> STR_70(CODE[3]), STR_66(CODE[4]), STR_64(CODE[3]), STR_30(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_211(CODE[3]), STR_68(CODE[14]), STR_60(CODE[11]), STR_56(CODE[7]), 
		 -> STR_53(CODE[9]), STR_52(CODE[11]), STR_50(CODE[14]), STR_47(CODE[14]), 
		 -> STR_46(CODE[3]), STR_43(CODE[7]), STR_40(CODE[9]), STR_33(CODE[14]), 
		 -> STR_32(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5315_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5315_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5315_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5315_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4038$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4028$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4028$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4004$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4004$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4004$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4004$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 18
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_260(CODE[12]), STR_259(CODE[8]), 
		 -> STR_258(CODE[9]), STR_241(CODE[16]), STR_240(CODE[16]), STR_239(CODE[16]), 
		 -> STR_238(CODE[15]), STR_237(CODE[15]), STR_236(CODE[16]), STR_235(CODE[17]), 
		 -> STR_234(CODE[16]), STR_233(CODE[17]), STR_232(CODE[17]), STR_231(CODE[2]), 
		 -> STR_230(CODE[7]), STR_229(CODE[10]), STR_228(CODE[17]), STR_227(CODE[16]), 
		 -> STR_226(CODE[15]), STR_225(CODE[15]), STR_224(CODE[17]), STR_223(CODE[16]), 
		 -> STR_222(CODE[17]), STR_221(CODE[17]), STR_220(CODE[16]), STR_218(CODE[18]), 
		 -> STR_216(CODE[17]), STR_214(CODE[17]), STR_213(CODE[17]), responseData(BANK0[8]), 
		 -> responseId(BANK1[16]), responsePortNum(BANK0[3]), STR_210(CODE[12]), STR_209(CODE[13]), 
		 -> STR_208(CODE[12]), STR_205(CODE[18]), STR_204(CODE[13]), STR_203(CODE[17]), 
		 -> STR_202(CODE[16]), STR_201(CODE[17]), STR_200(CODE[17]), STR_199(CODE[2]), 
		 -> STR_198(CODE[2]), STR_197(CODE[2]), STR_196(CODE[2]), STR_195(CODE[2]), 
		 -> STR_194(CODE[2]), STR_193(CODE[16]), STR_192(CODE[17]), STR_191(CODE[17]), 
		 -> STR_190(CODE[2]), STR_189(CODE[2]), STR_188(CODE[2]), STR_187(CODE[15]), 
		 -> STR_186(CODE[15]), STR_185(CODE[15]), STR_184(CODE[15]), STR_183(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_180(CODE[2]), STR_179(CODE[15]), 
		 -> STR_178(CODE[15]), STR_177(CODE[15]), STR_176(CODE[15]), STR_175(CODE[2]), 
		 -> STR_174(CODE[2]), STR_173(CODE[2]), STR_172(CODE[2]), STR_171(CODE[15]), 
		 -> STR_170(CODE[15]), STR_169(CODE[15]), STR_168(CODE[15]), STR_167(CODE[2]), 
		 -> STR_166(CODE[2]), STR_165(CODE[2]), STR_164(CODE[2]), STR_163(CODE[15]), 
		 -> STR_162(CODE[15]), STR_161(CODE[15]), STR_160(CODE[15]), STR_159(CODE[2]), 
		 -> STR_158(CODE[2]), STR_157(CODE[2]), STR_156(CODE[2]), STR_155(CODE[2]), 
		 -> STR_154(CODE[15]), STR_153(CODE[15]), STR_152(CODE[15]), STR_151(CODE[15]), 
		 -> STR_150(CODE[2]), STR_149(CODE[2]), STR_148(CODE[2]), STR_147(CODE[2]), 
		 -> STR_146(CODE[2]), STR_145(CODE[15]), STR_144(CODE[15]), STR_143(CODE[15]), 
		 -> STR_142(CODE[15]), STR_141(CODE[2]), STR_140(CODE[2]), STR_139(CODE[2]), 
		 -> STR_138(CODE[2]), STR_137(CODE[2]), STR_136(CODE[15]), STR_135(CODE[15]), 
		 -> STR_134(CODE[15]), STR_133(CODE[15]), STR_132(CODE[2]), STR_131(CODE[2]), 
		 -> STR_130(CODE[2]), STR_129(CODE[2]), STR_128(CODE[2]), STR_127(CODE[15]), 
		 -> STR_126(CODE[15]), STR_125(CODE[15]), STR_124(CODE[15]), STR_123(CODE[2]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_120(CODE[2]), STR_119(CODE[2]), 
		 -> STR_118(CODE[15]), STR_117(CODE[15]), STR_116(CODE[15]), STR_115(CODE[15]), 
		 -> STR_114(CODE[2]), STR_113(CODE[2]), STR_112(CODE[2]), STR_111(CODE[2]), 
		 -> STR_110(CODE[2]), STR_109(CODE[15]), STR_108(CODE[15]), STR_107(CODE[15]), 
		 -> STR_106(CODE[15]), STR_105(CODE[2]), STR_104(CODE[2]), STR_103(CODE[2]), 
		 -> STR_102(CODE[2]), STR_101(CODE[2]), STR_100(CODE[15]), STR_99(CODE[15]), 
		 -> STR_98(CODE[15]), STR_97(CODE[15]), STR_96(CODE[2]), STR_95(CODE[16]), 
		 -> STR_94(CODE[17]), STR_93(CODE[17]), STR_92(CODE[16]), STR_91(CODE[16]), 
		 -> STR_90(CODE[16]), STR_89(CODE[2]), STR_88(CODE[7]), STR_87(CODE[7]), 
		 -> STR_86(CODE[16]), STR_85(CODE[16]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[16]), STR_81(CODE[16]), STR_80(CODE[16]), STR_78(CODE[2]), 
		 -> STR_76(CODE[2]), STR_75(CODE[16]), STR_74(CODE[13]), STR_73(CODE[12]), 
		 -> STR_72(CODE[17]), STR_62(CODE[8]), STR_61(CODE[8]), STR_58(CODE[7]), 
		 -> STR_57(CODE[10]), STR_55(CODE[11]), STR_54(CODE[11]), STR_49(CODE[9]), 
		 -> STR_48(CODE[11]), STR_42(CODE[11]), STR_41(CODE[10]), STR_37(CODE[5]), 
		 -> STR_36(CODE[12]), STR_35(CODE[8]), STR_34(CODE[9]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), 
		 -> STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_207(CODE[12]), STR_206(CODE[14]), STR_79(CODE[14]), STR_77(CODE[12]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_257(CODE[26]), STR_256(CODE[26]), STR_255(CODE[26]), STR_254(CODE[26]), 
		 -> STR_253(CODE[1]), STR_252(CODE[9]), STR_251(CODE[13]), STR_250(CODE[13]), 
		 -> STR_249(CODE[13]), STR_248(CODE[13]), STR_247(CODE[13]), STR_246(CODE[13]), 
		 -> STR_245(CODE[13]), STR_244(CODE[13]), STR_243(CODE[16]), STR_242(CODE[15]), 
		 -> STR_71(CODE[11]), STR_69(CODE[11]), STR_67(CODE[11]), STR_65(CODE[11]), 
		 -> STR_63(CODE[12]), STR_59(CODE[14]), STR_51(CODE[14]), STR_45(CODE[10]), 
		 -> STR_44(CODE[13]), STR_39(CODE[13]), STR_38(CODE[14]), STR_31(CODE[13]), 
		 -> STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_test_adc
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_moteApp_delayms
    _test_adc->_oled_putUint16
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _MOTEapp_WriteDataRate->_moteApp_delayms
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _TMRapp_Handler->___lwmod
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1112051
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  520025
                    _moteApp_delayms
                         _oled_clear
                           _test_adc
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          3     3      0   72898
                                             18 BANK0      3     3      0
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   68012
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   71596
                    _moteApp_delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   79832
                    _moteApp_delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   1     1      0    8236
                                              5 BANK0      1     1      0
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _test_adc                                             8     8      0  221647
                                             28 BANK0      6     6      0
                  _ADC_GetConversion
                 _ADC_TempConversion
                    _moteApp_delayms
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  434839
                                             43 BANK0      2     2      0
                                              0 BANK1      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  16    13      3  265151
                                             28 BANK0     15    12      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
                              _unhex
 ---------------------------------------------------------------------------------
 (3) _unhex                                                1     1      0     186
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1948
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   69919
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   75427
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    2183
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    6743
                                              7 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   18481
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1552
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8483
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2178
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2113
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   4     3      1   89935
                                             18 BANK0      4     3      1
                   _DATAEE_WriteByte
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6    2200
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2459
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_WriteDataRate                                0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3393
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    4812
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRate                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetADR                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3768
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3768
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   72570
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   66784
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1228
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1228
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1098
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
       _unhex
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit
   _test_powerup
     _moteApp_delayms
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_adc
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
     _test_comms
       _moteApp_delayms
       _moteApp_toggleLeds
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_leds
       _moteApp_delayms
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_switch
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      E1       7       87.9%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      9A       5       96.2%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     215      14        0.0%
DATA                 0      0     215       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 27 22:08:46 2016

                            _SPI_Initialize 41C8                                  _USB_SD_Ptr 7641  
               ?_moteApp_add16bToDataBuffer 00CF                                test_adc@Traw 00E6  
                                        l55 2704                           ??_CMP1_Initialize 00C8  
                                _USB_Buffer 0140                         moteRunningProcess@i 00EB  
                             _USBDeviceInit 258A                     EUSART_FlushBuffer@index 00C8  
                    __end_of_oled_writeData 41EE                        ??_moteApp_toggleLeds 00CD  
                        __size_of_CDCInitEP 0052                    USBapp_handlerState@state 00C8  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l120 2BEE                                         l301 3682  
                                       l310 40B8                                         l412 16D6  
                                       l324 198E                 __end_of_USBStdGetDscHandler 1E38  
                                       l351 1232                                         l610 1188  
                                       l338 1A42                                         l363 129A  
                                       l356 1238                                         l560 0B6A  
                                       l448 0286                                         l298 3648  
                                       l812 338E                                         l709 354A  
                                       l583 0E9A                                         l728 3F4A  
                                       l834 2A5E                                         l819 33FA  
                                       l596 0FFC                                         _BDT 000400  
                                       _CKE 007E3E                                         l696 3214  
                                       l699 3246                                         l896 39CE  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 1222  
                                       _UIE 000F64                                         _UIR 000F65  
                             test_adc@count 00E9                             _timer1ReloadVal 0080  
                                _USBSuspend 408E                       ??_MOTEapp_SetDataRate 00C8  
              __end_of_moteApp_clearBuffers 3B56                        USBStdSetCfgHandler@i 0043  
                           _TMR2_Initialize 41AA                                         prod 000FF3  
                                       tosl 000FFD                                         wreg 000FE8  
                            _USBDeviceTasks 1F38                         MOTEapp_SetADR@state 00C8  
                            _USBDeviceState 008A                       moteApp_delayms@length 00C8  
                     ??_USBCtrlTrfRxService 003F                    __size_ofi2_USBDeviceInit 00D8  
                            ??_getsUSBUSART 00D2                                ?_EUSART_Read 002E  
                  USBEnableEndpoint@options 0036                                __CFG_LVP$OFF 000000  
                       ?_moteJoiningProcess 00DA                                        l1207 41A2  
                                      l1145 4108                                        l1049 3D58  
                                      l1058 3D34                                        l1351 3C32  
                                      l1179 3BF2                                        l2352 3A78  
                                      l1625 3DD2                                        l1626 3DD0  
                                      l2362 3B8A                  USBConfigureEndpoint@handle 0034  
                                      l1920 1E54                                        l1929 1EA6  
                                      l1890 2F7C                                        l9810 341E  
                                      l9830 3D50                                        l9902 3A18  
                                      l9910 3A34                                        l9832 3D52  
                                      l9818 3D26                                        l9836 3D5A  
                                      l9846 3D7C                                        l9862 4058  
                                      l9870 3F34                                        STR_1 7D2D  
                                      STR_2 7D1E                                        STR_3 7D0F  
                                      l9882 3E78                                        STR_4 7F63  
                                      STR_5 7C86                                        STR_6 7C95  
                                      STR_7 7C3C                                        l9878 3E62  
                                      STR_8 7E97                                        STR_9 7F6C  
           __size_of_MOTEapp_TimerBasedTask 000E                                        _PEIE 007F96  
                                      u8130 35EA                                        u8150 3618  
                     ??_USBCtrlTrfTxService 002E                                        u8137 35E0  
                                      u8157 360E                                        _UCFG 000F62  
                                      u8355 3C42                                        u8356 3C44  
                                      _UEP0 000F6A                                        _UEP1 000F6B  
                                      _UEIE 000F66                                        _UEIR 000F67  
                                      _UCON 000F60                                        _TMR2 000FBC  
                   __size_of_MOTEapp_SetADR 0008                             _CDCDataInHandle 0076  
    USBStdFeatureReqHandler@current_ep_data 0047                                        _pDst 007C  
                                      _main 2660                    ??i2_USBTransferOnePacket 0032  
         __end_of_moteApp_add8bToDataBuffer 36E8                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                             _USBDeviceAttach 3DB0  
                                      btemp 005B                               __CFG_BORV$190 000000  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                        _USBapp_setrxByteFlag 422E  
                                      start 00AA                             ?_oled_putUint16 00DA  
                             __CFG_IESO$OFF 000000                             __end_of_EndLine 41E2  
                    __end_of_SPI_Initialize 41D6                            __end_of_CMP1_ISR 4254  
                           ?_oled_putString 00D5                  __end_of_USBCheckStdRequest 2E30  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 1174  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0029                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 4234  
                      ??_moteJoiningProcess 00DB                      moteApp_delayms@counter 00CB  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 00CB  
                         sendCommand@string 00C9                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 4248                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 00DA              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 4112  
                                     l10010 366E                                       l10012 3674  
                                     l10102 2D04                                       l10022 35CA  
                                     l10120 2D78                                       l10200 3B6E  
                                     l11000 15B0                                       l10008 3666  
                                     l10018 35C2                                       l10108 2D24  
                                     l10204 3B80                                       l10132 3CC6  
                                     l10044 3FBA                                       l10310 31F6  
                                     l11014 1606                                       l11006 15CC  
                                     l10070 3D88                                       l11016 160A  
                                     l10144 3CE0                                       l10136 3CCC  
                                     l12010 25B6                                       l10306 31E8  
                                     l11050 16BA                                       l11034 166E  
                                     l11026 1642                                       l10138 3CD0  
                                     l11106 0130                                       l10340 2170  
                                     l10332 2146                                       l11060 16DE  
                                     l11044 1690                                       l10180 3A54  
                                     l10148 3CE8                                       l10164 3F26  
                                     l10156 3F10                                       l11220 03E6  
                                     l11212 03A8                                       l10350 21B6  
                                     l10342 217E                                       l10334 2154  
                                     l10318 3206                                       l11054 16C8  
                                     l11038 1682                                       l10430 2EE6  
                                     l11310 05D8                                       l11302 05CC  
                                     l11230 0424                                       l11214 03B0  
                                     l11134 01D6                                       l10238 3526  
                                     l12040 25FC                                       l12016 25E0  
                                     l12024 25EA                                       l10352 21C4  
                                     l10344 218C                                       l10280 357E  
                                     l11056 16CE                                       l11064 16EE  
                                     l10176 3A48                                       l11240 0464  
                                     l11160 026A                                       l10346 219A  
                                     l10338 2162                                       l11066 1736  
                                     l10178 3A50                                       l10370 3B16  
                                     l10450 2F58                                       l10426 2ED0  
                                     l11410 07EE                                       l11330 064C  
                                     l11306 05D4                                       l11242 046C  
                                     l11170 0288                                       l11138 01E0  
                                     l11082 00DA                                       l10612 1E72  
                                     l10604 1E62                                       l12132 33DE  
                                     l10196 3B62                                       l10348 21A8  
                                     l10356 21D2                                       l10284 35A2  
                                     l10276 3558                                       l10188 3A6E  
                                     l10380 3B2A                                       l10436 2EF6  
                                     l11260 04F0                                       l11156 0240  
                                     l11092 00FE                                       l11164 0278  
                                     l12204 19F4                                       l12134 33E4  
                                     l12118 3390                                       l10198 3B6A  
                                     l10358 21F2                                       l10286 35AA  
                                     l10534 3278                                       l10390 3B42  
                                     l10446 2F26                                       l10462 3EF4  
                                     l11422 0808                                       l11414 07F6  
                                     l11334 0654                                       l11326 0644  
                                     l11182 02CE                                       l11174 0292  
                                     l12222 1A44                                       l12214 1A2C  
                                     l12150 1942                                       l10702 2C0A  
                                     l12302 2716                                       l12310 2726  
                                     l10632 1EC0                                       l10640 1EDE  
                                     l10624 1EAA                                       l10608 1E6A  
                                     l12128 33D6                                       l10288 3190  
                                     l11600 0C0E                                       l11512 09EE  
                                     l11264 050A                                       l11272 0540  
                                     l11184 02D6                                       l11096 010C  
                                     l10712 2C2E                                       l10642 1EE4  
                                     l10650 1F02                                       l10618 1E98  
                                     l10562 2FA8                                       l12138 33EA  
                                     l10538 3280                                       l11522 0A0A  
                                     l11514 0A00                                       l11450 088E  
                                     l11442 087E                                       l11418 0804  
                                     l11362 06D6                                       l11354 06C6  
                                     l11338 0658                                       l11282 055A  
                                     l11274 0548                                       l11194 0316  
                                     l12234 1A8C                                       l12170 197E  
                                     l10714 2C38                                       l10660 1F16  
                                     l10652 1F06                                       l10564 2FAC  
                                     l10572 2FEE                                       l11700 0DFC  
                                     l11620 0C66                                       l11268 0526  
                                     l11196 031E                                       l12252 1AF8  
                                     l12164 196E                                       l10708 2C26  
                                     l10662 1F34                                       l11542 0A7C  
                                     l11518 0A06                                       l11470 0904  
                                     l11446 0886                                       l11438 0876  
                                     l11390 0776                                       l11382 074A  
                                     l11366 06DC                                       l11358 06CE  
                                     l11550 0ACE                                       l12254 1B0A  
                                     l12190 19BE                                       l12174 1992  
                                     l12158 1956                                       l10568 2FCA  
                                     l10592 40E0                                       l10912 136E  
                                     l11720 0E50                                       l11704 0E04  
                                     l11624 0C70                                       l11384 0750  
                                     l10840 39AA                                       l12248 1AE2  
                                     l10906 135C                                       l11810 10D4  
                                     l11650 0CEE                                       l11642 0CC8  
                                     l11538 0A76                                       l11490 097A  
                                     l11474 090C                                       l11466 08FC  
                                     l11394 0780                                       l11386 0762  
                                     l11298 05C6                                       l12178 19A0  
                                     l12282 26AE                                       l10932 13EE  
                                     l10924 13C2                                       l10908 1360  
                                     l11820 1112                                       l11724 0E58  
                                     l11716 0E4A                                       l11388 0768  
                                     l11548 0A90                                       l10852 39E4  
                                     l10942 1420                                       l10926 13C6  
                                     l10870 1252                                       l11830 1146  
                                     l11806 10CA                                       l11646 0CE2  
                                     l11638 0CB0                                       l11574 0B3E  
                                     l11566 0B1C                                       l11494 0980  
                                     l10854 39E6                                       l10846 39CA  
                                     l10774 29CC                                       l10694 2BC2  
                                     l11904 2ABE                                       l10952 1466  
                                     l10936 13FC                                       l10880 1294  
                                     l10872 1256                                       l11744 0EFC  
                                     l11752 0F62                                       l10856 39EA  
                                     l10848 39D2                                       l10696 2BD8  
                                     l12296 2706                                       l10962 14AC  
                                     l10882 12A0                                       l10866 123A  
                                     l11842 1172                                       l11738 0EC6  
                                     l11754 0F6E                                       l11578 0B58  
                                     l11498 0984                                       l11748 0F30  
                                     l11676 0D90                                       l11668 0D6A  
                                     l11588 0BC6                                       l10990 1566  
                                     l10958 148E                                       l11838 1160  
                                     l11782 1018                                       l11758 0F78  
                                     l11598 0C06                                       l11862 11CE  
                                     l10976 1504                                       l10888 12C4  
                                     l11848 1184                                       l11768 0FB8  
                                     l11778 0FEA                                       l11698 0DFA  
                                     l11972 3E94                                       l11976 3EA4  
                                     l11888 2A82                                       ?_main 002E  
                           __end_of___lbdiv 3CEC                                       _EEADR 000FA9  
                                     STR_10 7E03                                       STR_11 7EA3  
                                     STR_20 7F75                                       STR_12 7E2A  
                                     STR_21 7FFD                                       STR_13 7E10  
                                     STR_30 7FEF                                       STR_14 7E1D  
                                     STR_22 7A72                                       STR_23 7F05  
                                     STR_15 7EE6                                       STR_31 7DF6  
                                     STR_32 7FF2                                       STR_24 7F51  
                                     STR_40 7F3F                                       STR_16 7F23  
                                     STR_17 7F7E                                       STR_41 7EFB  
                                     STR_33 7D66                                       STR_25 7B54  
                                     STR_18 7FA7                                       STR_34 7F5A  
                                     STR_42 7EC5                                       STR_50 7D58  
                                     STR_26 7BA9                                       STR_51 7D4A  
                                     STR_43 7FCC                                       STR_19 7FAF  
                                     STR_35 7F9F                                       STR_27 7BBA  
                                     STR_60 7EBA                                       STR_44 7DF6  
                                     STR_52 7EBA                                       STR_36 7E73  
                                     STR_28 7B10                                       STR_53 7F3F  
                                     STR_37 7F14                                       STR_61 7F8F  
                                     STR_45 7F19                                       STR_29 7E8B  
                                     STR_70 7FF2                                       STR_46 7FF2  
                                     STR_62 7F97                                       STR_54 7EAF  
                                     STR_38 7D4A                                       STR_55 7EC5  
                                     STR_39 7DF6                                       STR_71 7ED0  
                                     STR_47 7D66                                       STR_63 7E7F  
                                     STR_56 7FCC                                       STR_64 7D0C  
                                     STR_48 7EDB                                       STR_80 7BEC  
                                     STR_72 7B65                                       STR_49 7F36  
                                     STR_57 7F0F                                       STR_65 7ED0  
                                     STR_73 7E43                                       STR_81 7BDC  
                                     STR_90 7BEC                                       STR_82 7BFC  
                                     STR_66 7C28                                       STR_58 7FC5  
                                     STR_74 7D81                                       STR_91 7BDC  
                                     STR_59 7D4A                                       STR_67 7ED0  
                                     STR_75 7BFC                                       STR_83 7ACC  
                                     STR_92 7BFC                                       STR_68 7D58  
                                     STR_76 7FF9                                       STR_84 7ABB  
                           __end_of___lbmod 3F2E                                       STR_85 7BFC  
                                     STR_69 7ED0                                       STR_77 7E67  
                                     STR_93 7AFF                                       STR_86 7BEC  
                                     STR_78 7FFB                                       STR_94 7B32  
                                     STR_95 7BFC                                       STR_87 7FBE  
                                     STR_79 7D3C                                       STR_96 7FF7  
                                     STR_88 7FB7                                       STR_89 7FF9  
                                     STR_97 7C79                                       STR_98 7C88  
                                     STR_99 7C97           __size_of_USBCtrlEPServiceComplete 00E4  
                           _TMR1_StartTimer 424C                             __end_of___lldiv 34EE  
         __size_of_MOTEapp_setResponseReady 0002                                       u10607 2406  
                                     _T1CON 000FCD                                       u10617 241A  
                    __end_of_USBDeviceTasks 2036                                       u10627 3BEC  
                                     u10637 3F3A                                       _T2CON 000FBA  
                                     u10587 23E2                                       u10597 23F0  
                   __end_of_sendDataCommand 2F62                   ?_USBCtrlEPServiceComplete 002E  
                           __end_of___lwdiv 3A82                             __end_of___lwmod 3B94  
                 ?_MOTEapp_setResponseReady 002E                         oled_putUint8@number 00DC  
                                     _UADDR 000F63                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
  moteApp_add16bToDataBuffer@bufferLocation 00D1     moteApp_add8bToDataBuffer@bufferLocation 00CC  
                                     _USTAT 000F61                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                               __CFG_WRT0$OFF 000000  
        __size_of_USBCtrlEPAllowStatusStage 00BC                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                           moteHandler@i_1311 01DF  
                             __CFG_WRT3$OFF 000000                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
           __end_of_USBCtrlEPAllowDataStage 3080                           oled_putChar@index 00D4  
                          __end_of_TMR1_ISR 4206                                       _sd000 7A06  
                                     _sd001 798C             service_pushbutton@Release_Timer 009D  
                                     _sd002 79C0                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 00E9                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 4150  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                                     _light 007A                                       _unhex 3EDE  
                   __end_of_TMR1_Initialize 3E08                                _runningState 0098  
                                     pclath 000FFA                                       tablat 000FF5  
               MOTEapp_SetDataRate@dataRate 00C8                                       plusw2 000FDB  
                         __end_of_CDCInitEP 3950                  oled_setDisplay@displayType 00CA  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             _TMR2_StartTimer 4248  
                           __end_of_strncmp 35BE                             ___lbdiv@divisor 00C8  
                            __CFG_ICPRT$OFF 000000                       ?_USBapp_setrxByteFlag 002E  
                          __end_ofi2_memset 3EDE                             ___lbdiv@counter 00CA  
                              _m10SecTicker 0094                             ?_SPI_Initialize 002E  
                           putUSBUSART@data 00C8          USART_mySetLineCodingHandler@dwBaud 003B  
              __size_of_USBStdSetCfgHandler 00A8                             __initialization 36E8  
                     TMR2_ReadTimer@readVal 00C8               __size_of_TMRapp_ClearBitFlags 0004  
                              __end_of_main 2732               __size_of_MOTEapp_handlerState 0008  
                    _MOTEapp_TimerBasedTask 41BA                              ??_EUSART_Write 00C8  
                   __end_of_TMR2_Initialize 41BA                                ?_sendCommand 00C9  
               ?_INTERRUPT_InterruptManager 002E                   __size_of_USBCtrlEPService 00B2  
                                    ??_main 00F5                                ?_moteHandler 002E  
                             __activetblptr 000002                          _modemResonseBuffer 0180  
                           ?_USBDeviceTasks 002E                         i2_EUSART_Initialize 3E34  
                     oled_putUint16@numData 00DE                   sendDataCommand@dataLength 00CC  
                               ?_USBSuspend 002E                                  _NextUSBOut 001A  
                            __CFG_SDOMX$RB3 000000                             __CFG_CCP2MX$RC1 000000  
                              _cdc_mem_type 0090                    __end_of_SPI_Exchange8bit 41AA  
                   __end_of_USBDeviceAttach 3DDC                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                          _CDCDataOutHandle 0078                           _getsUSBUSART$5683 00D3  
                                    _ACTCON 000FB5                                      STR_100 7CA6  
                                    STR_101 7FF5                                      STR_110 7FF5  
                                    STR_102 7FF5                                      STR_111 7FF5  
                                    STR_103 7FF5                                      STR_120 7FF5  
                                    STR_112 7FF5                                      STR_104 7FF5  
                                    STR_200 7AEE                                      STR_121 7FF5  
                                    STR_113 7FF5                                      STR_105 7FF7  
                                    STR_201 7ADD                                      STR_202 7BFC  
                                    STR_130 7FF5                                      STR_122 7FF5  
                                    STR_106 7C79                                      STR_114 7FF7  
                                    STR_210 7E4F                                      _ADRESH 000FC4  
                                    STR_131 7FF5                                      STR_115 7C88  
                                    STR_107 7C88                                      STR_123 7FF7  
                                    STR_211 7FF2                                      STR_203 7B98  
                                    STR_140 7FF5                                      STR_124 7C97  
                                    STR_116 7C97                                      STR_108 7C97  
                                    STR_132 7FF7                                      STR_212 7FE1  
                                    STR_204 7D74                                      STR_220 7C2C  
                                    STR_221 7AFF                                      STR_133 7CA6  
                                    STR_125 7CA6                                      STR_117 7CA6  
                                    STR_109 7CA6                                      STR_141 7FF7  
                                    STR_213 7B21                                      STR_205 7A86  
                                    STR_230 7E60                                      STR_206 7D3C  
                                    STR_222 7B32                                      STR_142 7CB5  
                                    STR_134 7CB5                                      STR_126 7CB5  
                                    STR_150 7FF7                                      STR_118 7CB5  
                                    STR_214 7AAA                                      _ADRESL 000FC3  
                                    STR_231 7C59                                      STR_223 7BFC  
                                    STR_207 7E67                                      STR_119 7FF5  
                                    STR_151 7CC4                                      STR_143 7CC4  
                                    STR_135 7CC4                                      STR_215 7FE8  
                                    STR_127 7CC4                                      STR_240 7BDC  
                                    STR_232 7AEE                                      STR_128 7FF5  
                                    STR_160 7CD3                                      STR_152 7CD3  
                                    STR_144 7CD3                                      STR_208 7E5B  
                                    STR_136 7CD3                                      STR_216 7B76  
                                    STR_224 7B43                                      STR_233 7ADD  
                                    STR_241 7BFC                                      STR_209 7D81  
                                    STR_137 7FF5                                      STR_129 7FF5  
                                    STR_161 7CE2                                      STR_153 7CE2  
                                    STR_217 7FDA                                      STR_145 7CE2  
                                    STR_225 7C5B                                      STR_170 7C4C  
                                    STR_234 7BFC                                      STR_146 7FF5  
                                    STR_138 7FF5                                      STR_162 7CF1  
                                    STR_250 7DDC                                      STR_242 7D00  
                                    STR_154 7CF1                                      STR_226 7C6A  
                                    STR_218 7A98                                      STR_227 7BFC  
                                    STR_155 7FF5                                      STR_147 7FF5  
                                    STR_139 7FF5                                      STR_171 7C79  
                                    STR_219 7FD3                                      STR_251 7DE9  
                                    STR_163 7C4C                                      STR_243 7C1C  
                                    STR_235 7B87                                      STR_180 7FF5  
                                    STR_172 7FF5                                      STR_164 7FF5  
                                    STR_156 7FF5                                      STR_148 7FF5  
                                    STR_252 7F48                                      STR_260 7E37  
                                    STR_244 7D8E                                      STR_236 7C0C  
                                    STR_228 7BCB                                      STR_237 7C6A  
                                    STR_181 7FF5                                      STR_173 7FF5  
                                    STR_165 7FF5                                      STR_157 7FF5  
                                    STR_149 7FF5                                      STR_229 7EF1  
                                    STR_245 7D9B                                      _EEDATA 000FA8  
                                    STR_238 7C5B                                      STR_190 7FF5  
                                    STR_182 7FF5                                      STR_174 7FF5  
                                    STR_166 7FF5                                      STR_158 7FF5  
                                    STR_246 7DA8                                      STR_254 7A3E  
                                    STR_191 7ACC                                      STR_239 7BEC  
                                    STR_183 7FF7                                      STR_175 7FF7  
                                    STR_167 7FF7                                      STR_159 7FF7  
                                    STR_247 7DB5                                      STR_255 7A58  
                                    STR_184 7C4C                                      STR_192 7ABB  
                                    STR_168 7CE2                                      STR_176 7CF1  
                                    STR_248 7DC2                                      STR_256 7A0A  
                                    STR_177 7C4C                                      STR_193 7BFC  
                                    STR_185 7C79                                      STR_169 7CF1  
                                    STR_249 7DCF                                      STR_257 7A24  
                                    STR_194 7C59                                      STR_178 7C79  
                                    STR_186 7C88                                      STR_258 7F2D  
                                    STR_195 7FF5                                      STR_179 7C88  
                                    STR_187 7C97                                      STR_259 7F87  
                                    STR_196 7FF5                                      STR_188 7FF5  
                                    STR_197 7C59                                      STR_189 7FF5  
                                    STR_198 7C59                                      STR_199 7C59  
                                    _EECON2 000FA7                                      ?_unhex 002E  
         __size_of_MOTEapp_getModemResponse 004A                             getsUSBUSART@len 00D1  
                                    _T1GCON 000FCC                        oled_putUint8@numData 00DD  
                 ?_MOTEapp_getModemResponse 002E                       __size_of_CDCTxService 0100  
                                    i2l1113 0076                                      i2l1105 004A  
                                    i2l1107 005A                                      i2l1109 0066  
                                    i2l1064 3F7A                                      i2l1703 1DD4  
                                    i2l1713 329E                                      i2l1706 1E20  
                                    i2l1650 228C                                      i2l1811 18B6  
                                    i2l1803 183C                                      i2l1708 1E24  
                                    i2l1716 3300                                      i2l1717 32A8  
                                    i2l1718 32AC                                      i2l1726 3BCE  
                                    i2l1576 1F60                                      i2l1753 395A  
                                    i2l1586 1FDC                                      i2l2299 34DC  
                                    i2l1763 27D4                                      i2l1755 399E  
                                    i2l1587 2032                                      i2l1588 1FE2  
                                    i2l1870 314A                                      i2l1793 1756  
                                    i2l1777 2D9E                                      i2l1786 2DCE  
                                    i2l6204 30DA                                      i2l7102 1B54  
                                    i2l6222 3D08                                      i2l6230 2E40  
                                    i2l7114 1BAA                                      i2l6410 317A  
                                    i2l6218 3CFA                                      i2l6404 3174  
                                    i2l6236 2E60                                      i2l7060 22A0  
                                    i2l7044 2230                                      i2l7118 1BC4  
                                    i2l7128 1C20                                      i2l6248 2EB4  
                                    i2l7144 2DA8                                      i2l7048 2236  
                                    i2l6514 3490                                      i2l6506 28BC  
                                    i2l6362 3C9A                                      i2l7170 2DF0  
                                    i2l6516 349C                                      i2l7092 1B2E  
                                    i2l6372 3114                                      i2l6532 3EBE  
                                    i2l7156 2DB8                                      i2l7068 22AE  
                                    i2l6526 34CE                                      i2l6518 34A0  
                                    i2l6390 313E                                      i2l6382 312A  
                                    i2l7166 2DDE                                      i2l7096 1B3A  
                                    i2l6376 3120                                      i2l6536 3ECE  
                                    i2l6712 304E                                      i2l9112 402A  
                                    i2l6474 281A                                      i2l9114 402C  
                                    i2l6804 32F2                                      i2l6732 2C7A  
                                    i2l6708 303A                                      i2l9220 2526  
                                    i2l9204 2512                                      i2l6478 2822  
                                    i2l6398 3162                                      i2l6822 1758  
                                    i2l6488 284A                                      i2l6496 2880  
                                    i2l6680 2906                                      i2l9136 3BCC  
                                    i2l6498 2886                                      i2l6762 1D46  
                                    i2l6754 2CD4                                      i2l9170 2B8E  
                                    i2l6852 17F2                                      i2l9156 2B30  
                                    i2l6862 182A                                      i2l6846 17E0  
                                    i2l6838 17B0                                      i2l6774 1DD8  
                                    i2l6766 1D56                                      i2l6782 1E28  
                                    i2l9190 24DE                                      i2l6864 1854  
                                    i2l6848 17E2                                      i2l9600 1F9A  
                                    i2l6890 1900                                      i2l6874 1896  
                                    i2l6794 32BE                                      i2l9610 1FAA  
                                    i2l7764 2760                                      i2l6892 190C  
                                    i2l6884 18C8                                      i2l6876 18A2  
                                    i2l9196 2508                                      i2l7790 27FA  
                                    i2l7782 27BA                                      i2l9606 1FA2  
                                    i2l9552 3FA2                                      i2l9544 3F88  
                                    i2l7792 27FC                                      i2l7776 279C  
                                    i2l9624 1FD0                                      i2l9616 1FB4  
                                    i2l9538 3F76                                      i2l9650 2016  
                                    i2l9730 0072                                      i2l9652 202A  
                                    i2l9644 2000                                      i2l9572 1F58  
                                    i2l9564 1F4C                                      i2l9594 1F7E  
                                    i2l9586 1F72                                   ??_EndLine 00C9  
                                    _OSCCON 000FD3                               CDCTxService@i 00D1  
                                    _SPBRGH 000FB0                                      _SSPBUF 000FC9  
                  i2USBTransferOnePacket@ep 0032                           ??i2_USBDeviceInit 0036  
           __size_ofi2_USBTransferOnePacket 009E                        ?i2_EUSART_Initialize 002E  
                      oled_displayOff@state 00CA                               oled_putChar@k 00D3  
                         _shortPacketStatus 002B              moteRunningProcess@changeStates 00F2  
                            __CFG_XINST$OFF 000000                        _moteApp_clearBuffers 3B12  
                           USBDeviceTasks@i 004E                  __end_of_Set_Column_Address 408E  
               USBStdFeatureReqHandler@pUEP 0045                            __end_of_hexToStr 3FCC  
                  USBTransferOnePacket@data 00C9                  USBCtrlTrfInHandler@lastDTS 003F  
                           ??_USBDeviceInit 00D0                   __size_of_Set_Page_Address 0014  
                   __end_of_TMR1_StartTimer 4250                                ?_putUSBUSART 00C8  
                                 ??___lbdiv 00C9                              __CFG_STVREN$ON 000000  
                    modemResync@escapeEvent 00CF                                   ??___lbmod 00C9  
                                 ??___lldiv 0036                        __end_of_getsUSBUSART 2FF2  
                                 ??___lwdiv 00CC                                   ??___lwmod 00CC  
                         _USBEnableEndpoint 3CEC             __size_of_USBStdGetStatusHandler 007E  
                       _EUSART_Transmit_ISR 3F56                                      _memset 3E8A  
                                    clear_0 36EE                                      clear_1 36FA  
                                    clear_2 3706                                      clear_3 3712  
                        ?_USBEnableEndpoint 0036              ??_USART_mySetLineCodingHandler 003B  
                   __end_of_DATAEE_ReadByte 4164                                      _strcmp 3190  
                __end_of_ADC_TempConversion 4010               __size_of_USBTransferOnePacket 00A0  
                          ?_sendDataCommand 00C9                             _moteApp_delayms 3F2E  
               __size_of_service_pushbutton 004C                                _CDCTxService 1E38  
                              __mediumconst 7640                            __end_of_test_adc 2A34  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                         ??_USBEnableEndpoint 0037  
                  ADC_GetConversion@channel 00CC                                      unhex@c 00C8  
                                 ?_CMP1_ISR 002E                     __end_of_TMR2_StartTimer 424C  
                               _CtrlTrfData 000438              __size_of_MOTEapp_WriteDataRate 00EE  
                                 ??_strncmp 00CE                            ___lbdiv@dividend 00C9  
                             ?_oled_devInit 002E                        ?_EUSART_Transmit_ISR 002E  
             __end_of_MOTEapp_WriteDataRate 2218                        _controlTransferState 0021  
                            _MOTEapp_SetADR 4216                        _USBapp_getrxByteFlag 4244  
                          ?_TMR1_Initialize 002E                        __CFG_LS48MHZ$SYS48X8 000000  
                      __size_of_EUSART_Read 002E                           _SYSTEM_Initialize 4032  
              __size_of_USBapp_handlerState 0008                             ___lbmod@divisor 00C8  
                                __accesstop 0060                     __end_of__initialization 3738  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 00CA  
                           __CFG_PBADEN$OFF 000000                                ?_test_switch 002E  
                     ??i2_EUSART_Initialize 002E                             _CMP1_Initialize 4188  
                        ?_SYSTEM_Initialize 002E                          oled_writeData@data 00C9  
                             ___rparam_used 000001                               ?_oled_setFont 00C8  
                  __size_of_USBStallHandler 003E                               ?_oled_putChar 00CB  
                     ?_moteApp_clearBuffers 002E                         __size_of_USBSuspend 001E  
               __size_of_EUSART_FlushBuffer 002C                              __pcstackCOMRAM 002E  
                 __end_of_USBEnableEndpoint 3D22                            __CFG_nPWRTEN$OFF 000000  
                             __end_of_sd000 7A0A                               __end_of_sd001 79C0  
                             __end_of_sd002 79F4                                __pidataBANK0 423A  
                       ??_SYSTEM_Initialize 00CA                   oled_putUint16@station_dot 00DC  
                                 ?_TMR1_ISR 002E            __size_of_USBCtrlEPAllowDataStage 008E  
                          _DATAEE_WriteByte 3C0C               __size_of_USBConfigureEndpoint 0088  
                             __end_of_unhex 3F06                 __end_of_USBCtrlTrfInHandler 2800  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 00CB  
                    i2_USBTransferOnePacket 2E30                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7949  
                         _CDCTxService$5731 00CF                                  _cdc_notice 00AA  
                                 ?i2_memset 002E                                  _cdc_rx_len 0091  
                                _cdc_tx_len 0092                                  ??_CMP1_ISR 002E  
                           _responsePortNum 00C3                    ??_USBCtrlTrfSetupHandler 004B  
                    __end_of_MOTEapp_SetADR 421E                                  _dataBuffer 009E  
                            ??_oled_devInit 00CA                            ?_USBDeviceAttach 002E  
                 __end_of_SYSTEM_Initialize 4052                       ??_EUSART_Transmit_ISR 002E  
                    _USBStdGetStatusHandler 3296                                     ??_unhex 00C8  
                     ?_USBapp_getrxByteFlag 002E                        service_pushbutton@bs 00C8  
                          ??_oled_putUint16 00DE                                  __pbssBANK0 0060  
                                __pbssBANK1 0100                                  __pbssBANK2 0200  
                      __end_of_EUSART_Write 3D56                     __size_of_TMR2_ReadTimer 0008  
                          ??_oled_putString 00D9                              ??_oled_setFont 00CA  
               __size_of_EUSART_Receive_ISR 0028                         oled_putString@index 00D9  
                            ??_oled_putChar 00CD                 __size_of_USBWakeFromSuspend 0022  
                               _pBDTEntryIn 000F                      __size_of_oled_clearRow 001E  
                      __size_of_modemResync 0064                    sendDataCommand@byteCount 00CE  
          __end_of_USBCtrlEPServiceComplete 22FC            __end_of_MOTEapp_setResponseReady 4256  
                    oled_putChar@start_page 00CC                 __size_of_USBCheckCDCRequest 0088  
                         __CFG_PLLSEL$PLL3X 000000                          __size_of_oled_init 0022  
                          ??_oled_writeData 00C9                        USBCtrlTrfRxService@i 003F  
                              ?_TMRapp_Tick 002E                            ?_TMR1_StartTimer 002E  
                                ??_TMR1_ISR 002E                    oled_putUint16@start_page 00DD  
                   __end_of_moteApp_delayms 3F56                                     _CM1CON0 000F98  
        MOTEapp_getModemResponse@bufferByte 00CA                 __end_of_MOTEapp_SetDataRate 4216  
                   __size_of_USBapp_Handler 0076                     __size_of_TMRapp_Handler 00DE  
              moteRunningProcess@dummyRead1 00ED                moteRunningProcess@dummyRead2 00EE  
                                   _BAUDCON 000FB8                                     ?_memset 00C8  
                                _device_dsc 79F4                   Set_Column_Address@address 00CA  
                  __size_of_oled_displayOff 0012                            _USBCtrlEPService 2AEA  
               __size_of_moteApp_toggleLeds 0068                                  _ep_data_in 006A  
                   __size_of_ADC_Initialize 0016                                     ?_strcmp 00C8  
                          ?_DATAEE_ReadByte 002E                 __end_of_USBCtrlTrfRxService 1C2C  
                      __size_of_sendCommand 002A                          _USBCheckStdRequest 2D92  
                             _eusartRxCount 0023                           _configDescriptor1 7949  
                                   i2l12352 3A96                                     i2l12354 3AC8  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                        __size_of_test_leds 0054                                  ??i2_memset 0034  
                        __size_of_test_oled 0078                 __end_of_USBCtrlTrfTxService 28C2  
                      __size_of_moteHandler 01E0                         _USBStdSetCfgHandler 2C4A  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                           ?_MOTEapp_SetADR 002E                     __end_of_CMP1_Initialize 419A  
                       ?_USBCheckStdRequest 002E                            ?_TMR2_StartTimer 002E  
              __size_of_USBStdGetDscHandler 0102                                     _UIEbits 000F64  
                                 ?_hexToStr 002E                                     _UIRbits 000F65  
                    test_switch@buttonCheck 00DC             moteRunningProcess@bufferReadPos 00F1  
                          ??_SPI_Initialize 00C8                                     _EndLine 41D6  
                             _cdc_trf_state 0020                        DATAEE_WriteByte@bAdd 00C9  
                __end_of_moteRunningProcess 1222                      ??_moteApp_clearBuffers 00C8  
                ?_moteApp_add8bToDataBuffer 00CC                                     _pCDCDst 0070  
                                   _pCDCSrc 0073                       __size_of_getsUSBUSART 0090  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 002E  
                                 _CDCInitEP 38FE                     ?_MOTEapp_TimerBasedTask 002E  
                                   __Lparam 0000                    moteRunningProcess@i_1381 00EC  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 01DC  
                          _Set_Page_Address 413C                                   ?_test_adc 002E  
                      ??_USBCheckStdRequest 004A                moteRunningProcess@sleepEvent 00E6  
                         _timerMinTickCount 0082               __size_of_USBCtrlTrfOutHandler 0052  
               __size_of_moteJoiningProcess 051A                                     ___lbdiv 3CB6  
                                   ___lbmod 3F06                                     ___lldiv 3478  
                          ??_USBDeviceTasks 004E                                     ___lwdiv 3A38  
                         ??_USBStallHandler 002E                                     ___lwmod 3B56  
                      __size_of_putUSBUSART 001C                                     __pcinit 36E8  
                        getsUSBUSART@buffer 00CF                             __size_of_memset 002A  
                 __end_of_configDescriptor1 798C                                     __ramtop 0800  
                         hexToStr@character 00C8            __end_of_MOTEapp_getModemResponse 3A38  
                                   __ptext0 2660                                     __ptext1 3C46  
                                   __ptext2 2B9C                                     __ptext3 3314  
                                   __ptext4 3856                                     __ptext5 37FE  
                                   __ptext6 34EE                                     __ptext7 297E  
                                   __ptext8 1930                                     __ptext9 39A2  
                  __size_of_oled_setDisplay 0014                                     _inPipes 0009  
               _USBDeferOUTDataStagePackets 0089                             __size_of_strcmp 0084  
                 moteRunningProcess@counter 00EF                            oled_setFont@font 00C8  
                                 _T1CONbits 000FCD                       _OSCILLATOR_Initialize 40FC  
                              ??_USBSuspend 0043                               _oled_clearRow 4052  
                                 _T2CONbits 000FBA                                  _modemSleep 40AC  
           moteApp_add8bToDataBuffer@number 00CD                                  _oled_clear 40E4  
                  ??_PIN_MANAGER_Initialize 00C8                __end_of_TMRapp_ClearBitFlags 4244  
                              _LastRS232Out 0019                             i2_USBDeviceInit 24B2  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 3FEE  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 422E  
                    ??_USBapp_getrxByteFlag 00C8                          __end_of_USB_CD_Ptr 7649  
                __size_of_SYSTEM_Initialize 0020             __size_of_USBCtrlTrfSetupHandler 005E  
                                ??_hexToStr 00C8                                     _strncmp 3556  
                      end_of_initialization 3738                                _getsUSBUSART 2F62  
             sendDataCommand@byteCount_1608 00CF                          ??_SPI_Exchange8bit 00C8  
                      SPI_Exchange8bit@data 00C8                          __end_of_USB_SD_Ptr 7647  
                       _pBDTEntryEP0OutNext 0017                                     memset@c 00CA  
                                   memset@n 00CC                                     memset@p 00CE  
                             __Lmediumconst 7640             _dummy_encapsulated_cmd_response 01D0  
                  ?_USBStdFeatureReqHandler 002E              __end_of_MOTEapp_TimerBasedTask 41C8  
                         _EUSART_Initialize 3E08                                  _rxByteFlag 002A  
                     ??_USBStdSetCfgHandler 0043                             ___lldiv@divisor 0032  
                      __size_of_test_switch 00AE                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                           __end_of_test_leds 38AA  
                         __end_of_test_oled 338C                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 37A4                          __end_of_USBSuspend 40AC  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 2FF2  
                                 _RCSTAbits 000FAB                                  ??_test_adc 00E4  
                        test_switch@timeout 00DA                                     postdec1 000FE5  
                                   postdec2 000FDD                                     postinc0 000FEE  
                                   postinc2 000FDE                        __end_of_oled_devInit 24B2  
                  _USBCtrlEPServiceComplete 2218                     moteApp_toggleLeds@state 00CD  
                                _responseId 01C0                            ?_moteApp_delayms 00C8  
                             _randomPortNum 0097                    _MOTEapp_setResponseReady 4254  
                _USBStatusStageEnabledFlag1 008B                  _USBStatusStageEnabledFlag2 008C  
                       _USBapp_handlerState 421E                         ??_EUSART_Initialize 00C8  
                        USBEnableEndpoint@p 0037                                   _PORTAbits 000F80  
                                 _PORTCbits 000F82                     oled_putUint8@start_page 00DB  
                            ?_oled_clearRow 002E                                  _test_comms 37FE  
                      __end_of_oled_setFont 4176                          _Set_Column_Address 4070  
                      __end_of_oled_putChar 3478                            ___lbmod@dividend 00C9  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                           ??_oled_displayOff 00CA  
                     __size_of_EUSART_Write 0034                          _BothEP0OutUOWNsSet 0086  
                             ?_test_powerup 002E                            ?_CMP1_Initialize 002E  
                 USBConfigureEndpoint@EPNum 0033                  ?_USBCtrlEPAllowStatusStage 002E  
                  __end_of_DATAEE_WriteByte 3C46                         ?_Set_Column_Address 002E  
            moteRunningProcess@counter_1527 00F0         USER_USB_CALLBACK_EVENT_HANDLER@size 003F  
                            _TMR2_ReadTimer 4206                                   _USTATcopy 002D  
                         __size_of_CMP1_ISR 0004                        ?_USBapp_handlerState 002E  
                        _ADC_TempConversion 3FEE                    oled_putString@start_page 00D8  
                               ___lbmod@rem 00CB                   __end_of_EUSART_Initialize 3E34  
              __end_of_USBTransferOnePacket 2D92                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 01DA  
                            ?_oled_putUint8 00DA                           putUSBUSART@length 00CA  
                       ?_ADC_TempConversion 002E                      _USBCtrlTrfSetupHandler 3746  
                      ??_Set_Column_Address 00CA                     ?i2_USBTransferOnePacket 002E  
                     __end_of_USBDeviceInit 2660                              _TMRapp_Handler 22FC  
                            _USBapp_Handler 338C                        __size_of_TMRapp_Tick 0006  
              ??_moteApp_add16bToDataBuffer 00D2                                _EUSART_Write 3D22  
                     sendDataCommand@string 00C9                     __end_ofi2_USBDeviceInit 258A  
                         __size_of_TMR1_ISR 000C                  __end_of_service_pushbutton 39EE  
                            _ADC_Initialize 4112                 moteApp_clearBuffers@counter 00C8  
                   moteApp_GoToSleep@status 00D7                                   i2memset@c 0030  
                                 i2memset@n 0032                                   i2memset@p 0034  
                    ?_OSCILLATOR_Initialize 002E                              __end_of_memset 3EB4  
                         _USBBusIsSuspended 0087                    oled_writeCommand@command 00C9  
                               ?_modemSleep 002E                              __end_of_strcmp 3214  
                               ?_oled_clear 002E                         start_initialization 36E8  
                      ??_ADC_TempConversion 00CF                     ?_USBStdGetStatusHandler 002E  
             USBCtrlTrfRxService@byteToRead 0040                              ??_test_powerup 00EA  
                  _MOTEapp_getModemResponse 39EE             __size_of_PIN_MANAGER_Initialize 0046  
                         ??_oled_setDisplay 00CA                               ??_EUSART_Read 00C8  
                    __end_of_TMR2_ReadTimer 420E                                 _cdc_data_rx 000540  
                               _cdc_data_tx 000500                 __end_ofi2_EUSART_Initialize 3E60  
                         __size_ofi2_memset 002A                                   _OledFont0 7649  
              __end_of_USBConfigureEndpoint 3108             __end_of_USBStdFeatureReqHandler 1930  
                  __size_of_sendDataCommand 0094                       ??_USBapp_handlerState 00C8  
         __end_of_USBCtrlEPAllowStatusStage 297E                               _periodicState 00F9  
                  __end_of_USBCtrlEPService 2B9C                       _MOTEapp_WriteDataRate 212A  
      __end_of_USART_mySetLineCodingHandler 38FE       __size_of_USART_mySetLineCodingHandler 0054  
              _USART_mySetLineCodingHandler 38AA                  __end_of_EUSART_FlushBuffer 3DB0  
                       DATAEE_ReadByte@bAdd 00C8               __size_of_USBapp_setrxByteFlag 0006  
       __size_of_moteApp_add16bToDataBuffer 010A                   ??_USBCtrlEPAllowDataStage 002F  
                               ??_CDCInitEP 003A                              USBDeviceInit@i 00D0  
                    _pBDTEntryEP0OutCurrent 0015                    __size_of_TMR1_Initialize 002C  
                   USBTransferOnePacket@dir 00C8                     USBTransferOnePacket@len 00CB  
                    __end_of_USBapp_Handler 3402                      __end_of_TMRapp_Handler 23DA  
            __end_ofi2_USBTransferOnePacket 2ECE                        _TMRapp_ClearBitFlags 4240  
                       _USBStdGetDscHandler 1D36                        _MOTEapp_handlerState 4226  
                    __end_of_ADC_Initialize 4128                                 __pdataBANK0 00F5  
                                  ??_memset 00CE                             ??_oled_clearRow 00D5  
MOTEapp_getModemResponse@terminatorReceived 00C9             MOTEapp_TimerBasedTask@timerTask 00C8  
                                  ??_strcmp 00CC                                 ?_test_comms 002E  
                 oled_putString@station_dot 00D7                      _USBActiveConfiguration 002C  
            __end_of_USBStdGetStatusHandler 3314                            ??_MOTEapp_SetADR 00C8  
               __end_of_EUSART_Transmit_ISR 3F7E                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 0066                               __pcstackBANK0 00C8  
                             __pcstackBANK1 01D8                __size_of_USBCtrlTrfInHandler 00CE  
                  __size_of_TMR2_Initialize 0010                    __end_of_Set_Page_Address 4150  
                           ?_TMR2_ReadTimer 002E                                 _activeState 008D  
                      ?_USBStdGetDscHandler 002E                   ADC_TempConversion@tempRaw 00CF  
                __end_of_EUSART_Receive_ISR 3FA6              moteRunningProcess@messageReady 00E5  
                                  ?_EndLine 002E                                   _adrStatus 008E  
                __end_of_USBWakeFromSuspend 4032                               ??_modemResync 00CD  
                __size_of_EUSART_Initialize 002C                           __size_of_hexToStr 0026  
                           _USBStallHandler 3B94                                _pBDTEntryOut 0060  
                       __end_of_EUSART_Read 3D84                  __end_of_USBCheckCDCRequest 3190  
                           ??_oled_putUint8 00DC                        oled_putString@string 00D5  
                  __size_of_USBDeviceAttach 002C                 ??_moteApp_add8bToDataBuffer 00CD  
                         _oled_writeCommand 41EE                       __size_of_oled_devInit 00D8  
                   oled_putChar@station_dot 00CB                         __size_of_modemSleep 001C  
                          ___lwdiv@dividend 00C8                      _PIN_MANAGER_Initialize 3ACC  
                       __size_of_oled_clear 0018                       ?_TMRapp_ClearBitFlags 002E  
                      EUSART_Read@readValue 00C8                             ?_TMRapp_Handler 002E  
                           ?_USBapp_Handler 002E                                   __pintcode 0008  
                        ?_oled_writeCommand 002E                               __pmediumconst 7640  
             moteJoiningProcess@switchEvent 00DA                       ?_MOTEapp_handlerState 002E  
                                 __ptext100 1D36                                   __ptext101 173C  
                                  ?___lbdiv 00C8                                   __ptext110 1B10  
                                 __ptext102 3A82                                   __ptext111 28C2  
                                 __ptext103 3C7E                                   __ptext120 3F7E  
                                 __ptext112 2732                                   __ptext104 38FE  
                                 __ptext121 4250                                   __ptext113 2800  
                                 __ptext105 2E30                                   __ptext122 0000  
                                 __ptext114 38AA                                   __ptext106 3CEC  
                                 __ptext115 3E34                                   __ptext107 3080  
                                 __ptext116 3478                                   __ptext108 3108  
                                 __ptext117 4234                                   __ptext109 3950  
                                 __ptext118 41FA                                   __ptext119 3F56  
                                  ?___lbmod 00C8                  __end_of_moteApp_toggleLeds 3556  
                                  ?___lldiv 002E                                    ?___lwdiv 00C8  
                                  ?___lwmod 00C8                             ?_ADC_Initialize 002E  
                     __size_of_oled_setFont 0012                                _eusartRxHead 0024  
                             ??_sendCommand 00CB                                _eusartTxHead 0027  
                              _eusartRxTail 0025                                _eusartTxTail 0028  
                         __size_of_test_adc 00B6                       __size_of_oled_putChar 0076  
                        _moteRunningProcess 00AE                ??_INTERRUPT_InterruptManager 004F  
                          ?i2_USBDeviceInit 002E                      moteHandler@readMessage 01E0  
                       ??_oled_writeCommand 00C9                               ??_moteHandler 00F3  
                   _eusartTxBufferRemaining 0026                        _USBTransferOnePacket 2CF2  
                              moteHandler@i 01DE            moteApp_add16bToDataBuffer@number 00CF  
                  __size_of_TMR1_StartTimer 0004                      moteHandler@buttonPress 01DD  
              __size_of_MOTEapp_SetDataRate 0008                         ?_moteRunningProcess 00E4  
              __end_of_USBCtrlTrfOutHandler 39A2                       ??_USBStdGetDscHandler 002E  
                                  _CMP1_ISR 4250                                 _ep_data_out 006D  
                          ___lwdiv@quotient 00CD                __size_of_USBCtrlTrfRxService 011C  
                                 _secTicker 0099               USBConfigureEndpoint@direction 002E  
                  __size_of_DATAEE_ReadByte 0014                                    ?_strncmp 00C8  
                            __size_of_unhex 0028                                _oled_devInit 23DA  
                    ?_MOTEapp_WriteDataRate 002E                              _eusartRxBuffer 0100  
                         _dataRateSelection 00F7                            _timerMsTickCount 0084  
                                 _oled_init 3FCC                __size_of_USBCtrlTrfTxService 00C2  
                            _eusartTxBuffer 0200                                    _LATAbits 000F89  
                                  _IOCCbits 000F87                   __end_of_oled_writeCommand 41FA  
                                  _LATBbits 000F8A                                    _LATCbits 000F8B  
                ??_USBCtrlEPServiceComplete 002F                  ??_MOTEapp_setResponseReady 00C8  
                                  _PIE1bits 000F9D                                    _IPR3bits 000FA5  
                                  _PIE2bits 000FA0                                    _PIE3bits 000FA3  
                       __size_of_test_comms 0058                    __size_of_TMR2_StartTimer 0004  
                              _oled_setFont 4164                                   _moteState 00F8  
                         ??_sendDataCommand 00CD                               _operationType 0095  
                      ??_moteRunningProcess 00E7                  __end_of_moteJoiningProcess 173C  
       __size_of_INTERRUPT_InterruptManager 00A2                                _oled_putChar 3402  
                                  i2u420_40 2872                                    i2u420_47 2868  
                                  i2u500_48 1C0C                                    i2u422_40 28AE  
                                  i2u422_47 28A4                                    _PIR1bits 000F9E  
                                  _PIR2bits 000FA1               __size_of_moteApp_clearBuffers 0044  
                                  i2u445_40 1DA2                                    _PIR3bits 000FA4  
                                  i2u445_47 1D98                                    i2u446_40 1DD0  
                                  i2u446_47 1DC6                                    i2u448_40 1E1A  
                                  i2u448_47 1E10                                    i2u566_48 27E6  
                 USBCtrlEPService@setup_cnt 004D                   __size_of_SPI_Exchange8bit 0010  
                       __end_of_modemResync 3688                                    _RCONbits 000FD0  
                      __end_of_test_powerup 3C7E                     __size_of_oled_putUint16 00F4  
                             ??_putUSBUSART 00CB                            __CFG_WDTPS$32768 000000  
                                  _UEP0bits 000F6A                  _USBDeferINDataStagePackets 0088  
                                  _SSP1CON1 000FC6          __end_of_moteApp_add16bToDataBuffer 1D36  
                _moteApp_add16bToDataBuffer 1C2C                 __size_of_USBCheckStdRequest 009E  
                                  _TMR1_ISR 41FA                     __size_of_oled_putString 0066  
                                  _SSP1STAT 000FC7                                    _UCONbits 000F60  
                           _oled_displayOff 4176                                   _test_leds 3856  
                                  _VREFCON0 000F7D              moteRunningProcess@selectButton 00E4  
                      _USBConfigureEndpoint 3080                                   _test_oled 3314  
          __size_of_USBStdFeatureReqHandler 01F4                           ??_TMR1_Initialize 00C8  
                                _ADCON0bits 000FC2                     Set_Page_Address@address 00CA  
                     ?_USBTransferOnePacket 00C8                      ADC_TempConversion@temp 00D0  
                 _moteApp_add8bToDataBuffer 3688                     __size_of_oled_writeData 000C  
                             ?_CDCTxService 002E                    moteHandler@gotoNextState 01D9  
                              _RemoteWakeup 001D                         __end_of_sendCommand 3E8A  
                                  i2_memset 3EB4                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 00C8                          _RS232_Out_Data_Rdy 001B  
                   __end_of_USBStallHandler 3BD2                         __end_of_moteHandler 1B10  
                               _EUSART_Read 3D56                           _moteApp_GoToSleep 3214  
                                 copy_data0 372C                 ??_USBCtrlEPAllowStatusStage 002E  
               __end_of_USBStdSetCfgHandler 2CF2                           ?_DATAEE_WriteByte 00C8  
             __size_of_USBapp_getrxByteFlag 0004                          ?_moteApp_GoToSleep 002E  
                                ?_oled_init 002E                           ??_TMR2_Initialize 00C8  
                             ??_test_switch 00DA                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 00C9                          __end_of_device_dsc 7A06  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 002E  
             USBapp_CdcEmulatorInitialize@i 003A                      ??_TMRapp_ClearBitFlags 00C8  
                   USBStdGetStatusHandler@p 002E                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 00D7                                    __Lrparam 0000  
                    USBTransferOnePacket@ep 00CC                      ??_MOTEapp_handlerState 00C8  
                         _ADC_GetConversion 3BD2                          __CFG_BOREN$SBORDIS 000000  
                                  _SetupPkt 000430                     __size_of_SPI_Initialize 000E  
                   ??_OSCILLATOR_Initialize 00C8                       ?_USBConfigureEndpoint 002E  
                        ?_ADC_GetConversion 00C8                           ??_USBDeviceAttach 00C8  
                                ?_test_leds 002E                            __size_of___lbdiv 0036  
                                ?_test_oled 002E                            __size_of___lbmod 0028  
                ??_MOTEapp_getModemResponse 00C9              moteJoiningProcess@readDataRate 00DC  
                              _selectedFont 00F5                            __size_of___lldiv 0076  
                           _oled_setDisplay 4128            moteApp_clearBuffers@counter_1676 00C9  
          moteApp_clearBuffers@counter_1677 00CA                            __size_of___lwdiv 004A  
                          __size_of___lwmod 003E                   MOTEapp_handlerState@state 00C8  
                                _ANSELAbits 000F5B                         __end_of_putUSBUSART 40E4  
                               _line_coding 00BC                                  _ANSELCbits 000F5D  
                            ??_CDCTxService 00CF                                ??_modemSleep 00CD  
                       ??_ADC_GetConversion 00CA                                ??_oled_clear 00D7  
                  modemResync@escapeCounter 00CD                    __size_of_moteApp_delayms 0028  
                 __end_of_moteApp_GoToSleep 3296                     __size_of_USBDeviceTasks 00FE  
                           ___lwdiv@divisor 00CA                                    _appTimer 008F  
                           ___lwdiv@counter 00CC                                    __ptext10 00AE  
                                  __ptext11 3EDE                                    __ptext20 1C2C  
                                  __ptext12 2ECE                                    __ptext21 3214  
                                  __ptext13 3FA6                                    __ptext30 3D84  
                                  __ptext22 3FCC                                    __ptext14 37A4  
                                  __ptext31 4206                                    __ptext23 4164  
                                  __ptext15 2036                                    __ptext40 41D6  
                                  __ptext32 3FEE                                    __ptext24 4128  
                                  __ptext16 3B12                                    __ptext41 3F2E  
                                  __ptext33 3A38                                    __ptext25 23DA  
                                  __ptext17 3688                                    __ptext50 338C  
                                  __ptext42 420E                                    __ptext34 3BD2  
                                  __ptext26 4176                                    __ptext18 3F06  
                                  __ptext51 35BE                                    __ptext43 4216  
                                  __ptext35 1222                                    __ptext27 40AC  
                                  __ptext19 3CB6                                    __ptext60 2A34  
                                  __ptext52 40E4                                    __ptext44 3C0C  
                                  __ptext36 3556                                    __ptext28 3624  
                                  __ptext61 40C8                                    __ptext53 4052  
                                  __ptext45 22FC                                    __ptext37 3190  
                                  __ptext29 39EE                                    __ptext70 3E8A  
                                  __ptext62 2F62                                    __ptext54 3402  
                                  __ptext46 3B56                                    __ptext38 212A  
                                  __ptext71 3DB0                                    __ptext63 4244  
                                  __ptext55 41E2                                    __ptext47 4240  
                                  __ptext39 3E60                                    __ptext80 3E08  
                                  __ptext72 4032                                    __ptext64 4254  
                                  __ptext56 413C                                    __ptext48 41BA  
                                  __ptext81 4188                                    __ptext73 41AA  
                                  __ptext65 3D22                                    __ptext57 4070  
                                  __ptext49 421E                                    __ptext90 408E  
                                  __ptext82 4112                                    __ptext74 4248  
                                  __ptext66 3D56                                    __ptext58 41EE  
                                  __ptext91 3B94                                    __ptext83 4226  
                                  __ptext75 3DDC                                    __ptext67 1E38  
                                  __ptext59 419A                                    __ptext92 2AEA  
                                  __ptext84 4150                                    __ptext76 424C  
                                  __ptext68 2CF2                                    __ptext93 3746  
                                  __ptext77 41C8                                    __ptext69 258A  
                                  __ptext94 2218                                    __ptext86 422E  
                                  __ptext78 3ACC                                    __ptext95 2FF2  
                                  __ptext87 1F38                                    __ptext79 40FC  
                                  __ptext96 2D92                                    __ptext88 24B2  
                                  __ptext97 2C4A                                    __ptext89 4010  
                                  __ptext98 3EB4                                    __ptext99 3296  
      __end_of_USBapp_CdcEmulatorInitialize 3CB6       __size_of_USBapp_CdcEmulatorInitialize 0038  
              _USBapp_CdcEmulatorInitialize 3C7E                                _SSP1CON1bits 000FC6  
                                  _hexToStr 3FA6                          _service_pushbutton 39A2  
                         ??_TMR1_StartTimer 00C8                 DATAEE_WriteByte@GIEBitValue 00CA  
                               _OSCCON2bits 000FD2                            __size_of_strncmp 0068  
                               _modemResync 3624              __end_of_USBCtrlTrfSetupHandler 37A4  
                             __size_of_main 00D2                           ?_USBCtrlEPService 002E  
                __size_of_oled_writeCommand 000C                                  strncmp@len 00CC  
                       ?_service_pushbutton 002E                           ??_DATAEE_ReadByte 00C8  
                 __end_of_ADC_GetConversion 3C0C                    __size_of_CMP1_Initialize 0012  
                   __end_of_oled_displayOff 4188                          ??_USBCtrlEPService 004B  
                       _USBCtrlTrfInHandler 2732                               ??_TMRapp_Tick 002E  
                        __end_of_modemSleep 40C8                            _dataRatePosition 0093  
                        __end_of_oled_clear 40FC                         __end_of_test_switch 2C4A  
                                  _outPipes 0001                                    _test_adc 297E  
                      _USBCtrlTrfOutHandler 3950                                    int$flags 005B  
                                  _usbState 009C                   _USBCtrlEPAllowStatusStage 28C2  
                                 test_adc@L 00E4                                   test_adc@T 00E8  
               __size_of_Set_Column_Address 001E                           ??_TMR2_StartTimer 00C8  
        __end_of_INTERRUPT_InterruptManager 00AA                  _INTERRUPT_InterruptManager 0008  
                              _SSP1STATbits 000FC7                                 _sendCommand 3E60  
                    ??_USBTransferOnePacket 00CC                          oled_clearRow@index 00D6  
                        _EUSART_FlushBuffer 3D84                                ??_test_comms 00DA  
              __end_of_USBapp_setrxByteFlag 4234                                 _moteHandler 1930  
                          ??_TMR2_ReadTimer 00C8                        ??_service_pushbutton 00C8  
                 _USBDeferStatusStagePacket 001E                    CDCTxService@byte_to_send 00D2  
                                _INTCONbits 000FF2                 __end_of_USBapp_handlerState 4226  
                      ?_USBCtrlTrfInHandler 002E                         ?_EUSART_FlushBuffer 002E  
               __size_of_ADC_TempConversion 0022               USBCtrlTrfTxService@byteToSend 002E  
                                  memset@p1 00C8                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 00C8                                _responseData 00B4  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                               ??_oled_init 00D7                          ??_Set_Page_Address 00CA  
                    __size_of_USBDeviceInit 00D6     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3ACC  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0041  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003B             _USER_USB_CALLBACK_EVENT_HANDLER 3A82  
            moteJoiningProcess@messageReady 00DD                            ___lwmod@dividend 00C8  
              i2USBTransferOnePacket@handle 0033                            ___lldiv@dividend 002E  
                   ?_PIN_MANAGER_Initialize 002E                            ??_USBapp_Handler 00DA  
                          ??_TMRapp_Handler 00CD                       __size_of_test_powerup 0038  
                      moteHandler@gotoSleep 01D8                __size_ofi2_EUSART_Initialize 002C  
                                 strncmp@s1 00C8                                   strncmp@s2 00CA  
                          ??_ADC_Initialize 00C8                          __end_of_test_comms 3856  
                      ??_EUSART_FlushBuffer 00C8                     __end_of_oled_setDisplay 413C  
                       _MOTEapp_SetDataRate 420E                              _oled_putUint16 2036  
                          _SPI_Exchange8bit 419A                  i2USBTransferOnePacket@data 002F  
                               _sleepTicker 009A                      ??_USBConfigureEndpoint 002F  
                     ?_USBCtrlTrfOutHandler 002E                              _oled_putString 35BE  
                               _putUSBUSART 40C8                          _EUSART_Receive_ISR 3F7E  
                         oled_clearRow@page 00D5                        __CFG_CPUDIV$NOCLKDIV 000000  
                       _USBCtrlTrfRxService 1B10                          _USBWakeFromSuspend 4010  
                               ??_test_leds 00DA                               _powerOnStatus 0096  
                               ??_test_oled 00DA                     _USBStdFeatureReqHandler 173C  
   __end_of_USBapp_DeviceCdcEmulatorHandler 2AEA    __size_of_USBapp_DeviceCdcEmulatorHandler 00B6  
          ?_USBapp_DeviceCdcEmulatorHandler 002E           ??_USBapp_DeviceCdcEmulatorHandler 00D5  
           _USBapp_DeviceCdcEmulatorHandler 2A34                          _USBCheckCDCRequest 3108  
                       _USBCtrlTrfTxService 2800                         __end_of_TMRapp_Tick 423A  
                         _sleepTxOccurances 009B                       __end_of_oled_clearRow 4070  
                               _temperature 007E                         ?_EUSART_Receive_ISR 002E  
                            _oled_writeData 41E2                         ?_USBWakeFromSuspend 002E  
                                  strcmp@s1 00C8                                    strcmp@t0 00CE  
                                  strcmp@s2 00CA                                    strcmp@t1 00D0  
                                  strcmp@t2 00CF                            ___lldiv@quotient 0036  
                           ___lwmod@divisor 00CA                       ??_USBCtrlTrfInHandler 003F  
                     _USBAlternateInterface 00C6                             ___lwmod@counter 00CC  
                      ?_MOTEapp_SetDataRate 002E                         ?_USBCheckCDCRequest 002E  
                __size_of_moteApp_GoToSleep 0082                   i2USBTransferOnePacket@dir 002E  
                        _moteApp_toggleLeds 34EE                   i2USBTransferOnePacket@len 0031  
                   ??_MOTEapp_WriteDataRate 00CD                         USBEnableEndpoint@ep 0039  
                           _endpoint_number 0022                                  _WDTCONbits 000FD1  
                              _test_powerup 3C46                             _sendDataCommand 2ECE  
                      ?_USBCtrlTrfRxService 002E                               ?_getsUSBUSART 00CF  
                  oled_putUint8@station_dot 00DA                          __CFG_FOSC$INTOSCIO 000000  
                        EUSART_Write@txData 00C8                __size_of_EUSART_Transmit_ISR 0028  
            __end_of_PIN_MANAGER_Initialize 3B12                    ?_USBCtrlEPAllowDataStage 002E  
        __size_of_moteApp_add8bToDataBuffer 0060                        ?_USBCtrlTrfTxService 002E  
                         ??_moteApp_delayms 00CA                         ?_moteApp_toggleLeds 002E  
              _USBStatusStageTimeoutCounter 001F                                 _test_switch 2B9C  
                      ??_EUSART_Receive_ISR 002E                        ??_USBWakeFromSuspend 0043  
                    __end_of_oled_putUint16 212A                  USBTransferOnePacket@handle 00CD  
                __size_of_ADC_GetConversion 003A                        __end_of_CDCTxService 1F38  
                           _TMR1_Initialize 3DDC           moteJoiningProcess@joiningComplete 00DB  
                          ?_oled_displayOff 002E                       __end_of_oled_putUint8 37FE  
                    __end_of_oled_putString 3624                        ??_USBCheckCDCRequest 002E  
                                _USB_CD_Ptr 7647  
